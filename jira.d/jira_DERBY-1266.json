{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12332847","self":"https://issues.apache.org/jira/rest/api/latest/issue/12332847","key":"DERBY-1266","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-05-04 02:14:47.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22407","customfield_12310222":"1_*:*_1_*:*_885842000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_874706000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-05-09T05:39:09.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1266/watchers","watchCount":0,"isWatching":false},"created":"2006-04-28T23:35:07.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2006-05-19T08:37:35.000+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11690","id":"11690","name":"Network Client"}],"timeoriginalestimate":null,"description":"This fragment from deleteRowX shows the problem:\n\n> if (isOnInsertRow_) {\n>       throw new SqlException(agent_.logWriter_, \n>           new MessageId(SQLState.CURSOR_NOT_POSITIONED_ON_INSERT_ROW));\n> }\n\nIt should be the opposite: the problem is that the cursor *is* on the\ninsert row, not that it isn't.\n\nThese is a similar error in updateRowX.\n\nThe client master files for updatableResultSet show the problem, so\nthe masters are wrong, too.\n\n> Negative Test 39.a - run updateRow on insertRow\n> SQL State: XJ086\n> Got expected exception: This method cannot be invoked while the\n  cursor is not on the insert row or if the concurrency of this \n  ResultSet object is CONCUR_READ_ONLY. \n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"40688","summary":"Client: Attempted deleteRow or updateRow while on insert row gives wrong error message","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"any","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":9,"total":9,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12377613","id":"12377613","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"body":"Hi, Dag.  There is an existing message\r\n\r\n\"XJ120.S=This method cannot be invoked while the cursor is on the insert row, if the cursor is not on a valid row, or if this ResultSet object has a concurrency of CONCUR_READ_ONLY.\"\r\n\r\nI don't know if this can be used in this instance or not.  I can alternately add a new message\r\n\r\n\"This method cannot be invoked while the cursor is on the insert row.\"\r\n\r\nPlease let me know which you would prefer.\r\n\r\nThanks,\r\n\r\nDavid","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"created":"2006-05-04T02:14:47.000+0000","updated":"2006-05-04T02:14:47.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12377779","id":"12377779","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"David> \"XJ120.S=This method cannot be invoked while the cursor is on\r\nDavid> the insert row, if the cursor is not on a valid row, or if this\r\nDavid> ResultSet object has a concurrency of CONCUR_READ_ONLY.\"\r\n\r\nI checked the *embedded* client: its method\r\nEmbedResultSet#checkNotOnInsertRow is called from\r\n\r\n    deleteRow,\r\n    updateRow and \r\n    cancelRowUpdates (I forgot to mention that this method has the\r\n                      same issue as well) \r\n\r\nIn the embedded client, checkNotOnInsertRow gives\r\nSQLState.NO_CURRENT_ROW (24000), whose wording in English is \"Invalid\r\ncursor state - no current row.\".\r\n\r\nThat's not very precise, but shouldn't we strive to keep the clients in\r\nsynch?  I guess I would prefer to use the same state for both clients...\r\n\r\nI notice XJ120 which you mention is only ever used as a catch-all for\r\nchecks in the client's refreshRowX method, which currently does\r\nnothing for the result sets we implement.. But it does employ XJ120\r\n(CURSOR_CANNOT_INVOKE_ON_INSROW_OR_INVALIDROW_OR_READONLY).\r\n\r\nI think the checking in refreshRow should be split: If position is on\r\ninsertRow, we should throw same message as elsewhere in client (and\r\nsame as embedded); if one of the other error conditions is hit, you\r\ncould throw XJ120, but simplify its name and wording to invalid row,\r\nwhich seems to be what's left of it (position is before first or after\r\nlast). Updatability is now is checked by the preceding test (call to\r\ncheckForUpdatableResultSet).  But then again, if invalid position is\r\nthe only condition remaining, I guess we can do away with XJ120\r\nalltogether... and just use 24000.\r\n\r\nBTW, I notice that embedded throws an exception for refreshRow, it\r\nseems the client does not....","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-04T19:15:09.000+0000","updated":"2006-05-04T19:15:09.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12377917","id":"12377917","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"body":"Dag says:\r\n\r\n<quote>\r\nI checked the *embedded* client: its method\r\nEmbedResultSet#checkNotOnInsertRow is called from\r\n\r\n    deleteRow,\r\n    updateRow and\r\n    cancelRowUpdates (I forgot to mention that this method has the\r\n                      same issue as well)\r\n\r\nIn the embedded client, checkNotOnInsertRow gives\r\nSQLState.NO_CURRENT_ROW (24000), whose wording in English is \"Invalid\r\ncursor state - no current row.\".\r\n\r\nThat's not very precise, but shouldn't we strive to keep the clients in\r\nsynch? I guess I would prefer to use the same state for both clients...\r\n</quote>\r\n\r\nI agree.  I'll change it to use 24000\r\n\r\nDag says\r\n\r\n<quote>\r\n notice XJ120 which you mention is only ever used as a catch-all for\r\nchecks in the client's refreshRowX method, which currently does\r\nnothing for the result sets we implement.. But it does employ XJ120\r\n(CURSOR_CANNOT_INVOKE_ON_INSROW_OR_INVALIDROW_OR_READONLY).\r\n\r\nI think the checking in refreshRow should be split: If position is on\r\ninsertRow, we should throw same message as elsewhere in client (and\r\nsame as embedded); if one of the other error conditions is hit, you\r\ncould throw XJ120, but simplify its name and wording to invalid row,\r\nwhich seems to be what's left of it (position is before first or after\r\nlast). Updatability is now is checked by the preceding test (call to\r\ncheckForUpdatableResultSet). But then again, if invalid position is\r\nthe only condition remaining, I guess we can do away with XJ120\r\nalltogether... and just use 24000. \r\n</quote>\r\n\r\nHm.  I'll look at this.  If it gets a little too hairy, I may delay this for another patch.\r\n\r\n<quote>\r\nBTW, I notice that embedded throws an exception for refreshRow, it\r\nseems the client does not....\r\n</quote>\r\n\r\nOK, I'll look at that.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"created":"2006-05-05T06:58:18.000+0000","updated":"2006-05-05T06:58:18.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12377935","id":"12377935","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"body":"Hi, Dag.  This is not tested, but it builds and I'm running tests to adjust output files.  Does this look right to you?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"created":"2006-05-05T09:13:14.000+0000","updated":"2006-05-05T09:13:14.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12378040","id":"12378040","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"This looks good to me, David! \r\n\r\nI verified that embedded also gives 24000 \r\nNO_CURRENT_ROW when beforeFirst and afterLast (so \r\nthe checks in refreshRowX mirrors embedded as well).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-05T21:06:18.000+0000","updated":"2006-05-05T21:06:18.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12378365","id":"12378365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"body":"This attachment is with derbynetclientmats passing.  Take a look, Dag, and let me know if this is good to go.  Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"created":"2006-05-08T11:13:25.000+0000","updated":"2006-05-08T11:13:25.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12378423","id":"12378423","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"It looks good to me, except I think you should update the 1.6 version of the canon, as well.\r\nWhen that's done it is ready to go, I'd say.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-08T20:42:42.000+0000","updated":"2006-05-08T20:42:42.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12378530","id":"12378530","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"body":"Committed revision 405205","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidvc","name":"davidvc","emailAddress":"david at vancouvering dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Van Couvering","active":true},"created":"2006-05-09T05:39:09.000+0000","updated":"2006-05-09T05:39:09.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12332847/comment/12412464","id":"12412464","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Fixed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-19T08:37:35.000+0000","updated":"2006-05-19T08:37:35.000+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1266/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i07bv3:"}}