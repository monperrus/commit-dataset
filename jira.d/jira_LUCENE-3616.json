{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12533672","self":"https://issues.apache.org/jira/rest/api/latest/issue/12533672","key":"LUCENE-3616","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2011-12-02 19:01:20.277","customfield_12312323":null,"customfield_12310420":"219399","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3616/watchers","watchCount":3,"isWatching":false},"created":"2011-12-02T18:57:11.922+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314025","id":"12314025","description":"Alpha release of the 4.x series","name":"4.0-ALPHA","archived":false,"released":true,"releaseDate":"2012-07-03"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-08-06T02:50:45.713+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"components":[],"timeoriginalestimate":null,"description":"When working on LUCENE-3615, I came across:\r\n{quote}\r\n\r\njava.lang.IllegalArgumentException: field field is stored but does not have binaryValue, stringValue nor numericValue\r\n\tat org.apache.lucene.index.codecs.DefaultStoredFieldsWriter.writeField(DefaultStoredFieldsWriter.java:177)\r\n\tat org.apache.lucene.index.StoredFieldsConsumer.finishDocument(StoredFieldsConsumer.java:119)\r\n\tat org.apache.lucene.index.DocFieldProcessor.finishDocument(DocFieldProcessor.java:295)\r\n\tat org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:255)\r\n\tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:380)\r\n\tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1480)\r\n\tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1242)\r\n\tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1223)\r\n\tat org.apache.lucene.index.Test2BTerms.test2BTerms(Test2BTerms.java:194)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n\tat org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\r\n\tat org.apache.lucene.util.LuceneTestCase$3$1.evaluate(LuceneTestCase.java:525)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\r\n\tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:168)\r\n\tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:236)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:71)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:199)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:62)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\r\n{quote}\r\n\r\nwhich is due to the using Textfield.TYPE_STORED when using a TokenStream.  Since this is an illegal combination, we should throw an exception upon construction of the Field, not later when actually trying to do the indexing.","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"24400","summary":"Illegal Field Configurations should throw exceptions","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":12,"total":12,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13161790","id":"13161790","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"+1, we shouldn't rely upon codec assertions/extra safety, they should get IAE immediately.\r\n\r\nif you had run Test2BTerms with SimpleText you would have gotten NPE (it did not even have \r\nthis low-level check until now, i just added it).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-02T19:01:20.277+0000","updated":"2011-12-02T19:01:20.277+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13185038","id":"13185038","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"I have a tentative fix for this on the LUCENE-3453 branch...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-01-12T16:21:40.163+0000","updated":"2012-01-12T16:21:40.163+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428317","id":"13428317","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"heres some tests and 2 improvements for the pre-supplied types (I didnt mess with custom Field/FieldType, thats more complicated)\r\n* TextField(Reader, Field.Store) is silly because superclass (Field) will only throw exception if Store = true for a Reader. so I removed the store argument\r\n* throw exception if boost is set for unindexed or omitNorms fields.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-08-03T19:38:04.971+0000","updated":"2012-08-03T19:38:04.971+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428339","id":"13428339","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"+1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-08-03T20:13:12.415+0000","updated":"2012-08-03T20:13:12.415+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428358","id":"13428358","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I committed this patch. But we should still look at Field+FieldType, it \r\nlooks like its possible for all kinds of wierd things to happen.\r\n\r\nThe fact that Field allows this ctor:\r\n{noformat}\r\n  protected Field(String name, FieldType type)\r\n{noformat}\r\nmeans it really cannot check against anything.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-08-03T20:42:40.329+0000","updated":"2012-08-03T20:42:40.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428583","id":"13428583","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"With all the various typed XYZField implementations we have now, what do we see as the role of Field? Is it just serving as a parent class to the implementations or do we expect users will be using it too?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-08-04T08:41:11.648+0000","updated":"2012-08-04T08:41:11.648+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428591","id":"13428591","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Chris: that's a good point.\r\n\r\nThe current design seems to be that Field can do \"everything\" and the others are simply sugar on top.\r\n\r\nPersonally I think this is confusing and error-prone.\r\nthats why i wrote such a huge test, but its silly.\r\n\r\nIn my opinion if i have a ShortDocValuesField, it shouldnt have a setReader method :)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-08-04T09:24:23.599+0000","updated":"2012-08-04T09:24:23.599+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428594","id":"13428594","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"bq. In my opinion if i have a ShortDocValuesField, it shouldnt have a setReader method\r\n\r\nAgreed.  The setABC() methods are extremely confusing and add another level of validation (using your example, we have to validate that you're not setting a Reader on a NumericField).\r\n\r\nPerhaps we can re-arrange this a little.  If we genuinely feel there there are use cases out there that we haven't covered with the typed impls and that we don't want to cover, then why not make a GenericField or something, which is abstract and accepts just name, FieldType and maybe an Object value.  We can then emphasis in documentation that it is expert only, should only be subclassed in the extremely rare situations that our typed impls are insufficient, and won't be validated so buyer-beware kind of thing.  \r\n\r\nWe can then gut Field down to a very simple abstract class / interface, and promote our typed impls to being 1st class and the recommended entry points for users.\r\n\r\nOf course if we feel we have provided adequate support through the typed impls, then we can skip straight to the gutting.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-08-04T09:59:30.079+0000","updated":"2012-08-04T09:59:30.079+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428681","id":"13428681","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=janhoy","name":"janhoy","emailAddress":"jh at cominvent dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=janhoy&avatarId=10130","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=janhoy&avatarId=10130","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=janhoy&avatarId=10130","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=janhoy&avatarId=10130"},"displayName":"Jan Høydahl","active":true},"body":"The commit yesterday (1369196) causes the \"Group By\" tab of Solritas to stop working, where we try to group-by a string field.:\r\n\r\n{noformat}\r\nINFO: [collection1] webapp=/solr path=/browse params={group=true&group.field=manu_exact&queryOpts=group} status=500 QTime=44 \r\nAug 4, 2012 11:25:40 PM org.apache.solr.common.SolrException log\r\nSEVERE: null:java.lang.IllegalArgumentException: You cannot set an index-time boost on an unindexed field, or one that omits norms\r\n\tat org.apache.lucene.document.Field.setBoost(Field.java:382)\r\n\tat org.apache.solr.schema.FieldType.createField(FieldType.java:277)\r\n\tat org.apache.solr.schema.FieldType.createField(FieldType.java:263)\r\n\tat org.apache.solr.schema.SchemaField.createField(SchemaField.java:101)\r\n\tat org.apache.solr.search.Grouping$CommandField.finish(Grouping.java:790)\r\n{noformat}\r\n\r\nPerhaps the setBoost() in Solr's FieldType should be conditional depending on field type:\r\n{code:title=FieldType.java line 275}\r\n  protected IndexableField createField(String name, String val, org.apache.lucene.document.FieldType type, float boost){\r\n    Field f = new Field(name, val, type);\r\n    f.setBoost(boost);\r\n    return f;\r\n  }\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=janhoy","name":"janhoy","emailAddress":"jh at cominvent dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=janhoy&avatarId=10130","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=janhoy&avatarId=10130","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=janhoy&avatarId=10130","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=janhoy&avatarId=10130"},"displayName":"Jan Høydahl","active":true},"created":"2012-08-04T21:32:31.546+0000","updated":"2012-08-04T21:45:24.861+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428691","id":"13428691","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"The bug is in grouping, apply a 0.0f boost.\r\n\r\n{quote}\r\nPerhaps the setBoost() in Solr's FieldType should be conditional depending on field type:\r\n{quote}\r\n\r\nNo, we should throw exception. Thats the whole point, to not silently discard users boosts when they will have no effect.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-08-04T22:27:56.382+0000","updated":"2012-08-04T22:27:56.382+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428705","id":"13428705","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=janhoy","name":"janhoy","emailAddress":"jh at cominvent dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=janhoy&avatarId=10130","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=janhoy&avatarId=10130","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=janhoy&avatarId=10130","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=janhoy&avatarId=10130"},"displayName":"Jan Høydahl","active":true},"body":"Thanks for fixing that one. Think there may be a few more, untested ones, only did a code search, no testing:\r\nSearchGroupsResultTransformer # 113,115\r\nTopGroupsResultTransformer # 255,257\r\nGroupedEndResultTransformer # 72","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=janhoy","name":"janhoy","emailAddress":"jh at cominvent dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=janhoy&avatarId=10130","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=janhoy&avatarId=10130","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=janhoy&avatarId=10130","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=janhoy&avatarId=10130"},"displayName":"Jan Høydahl","active":true},"created":"2012-08-05T00:09:53.320+0000","updated":"2012-08-05T00:09:53.320+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12533672/comment/13428960","id":"13428960","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Thanks Jan: i fixed these.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-08-06T02:50:45.565+0000","updated":"2012-08-06T02:50:45.565+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3616/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04jcn:"}}