{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12372921","self":"https://issues.apache.org/jira/rest/api/latest/issue/12372921","key":"DERBY-2892","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-07-06 00:01:37.15","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23304","customfield_12310222":"3_*:*_1_*:*_11308445859_*|*_1_*:*_1_*:*_12204428954_*|*_5_*:*_2_*:*_747277677_*|*_4_*:*_1_*:*_1402339792","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-04-25T15:46:51.561+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2892/watchers","watchCount":2,"isWatching":false},"created":"2007-07-03T15:18:39.279+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"11.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12316786","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12316786","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12373682","key":"DERBY-2933","self":"https://issues.apache.org/jira/rest/api/2/issue/12373682","fields":{"summary":"When  network server disconnects due to an I/O Exception it does not always log the exception that caused the error","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12320277","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12320277","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12394964","key":"DERBY-3650","self":"https://issues.apache.org/jira/rest/api/2/issue/12394964","fields":{"summary":"internal multiple references from different rows to a single BLOB/CLOB stream leads to various errors when second reference used.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12319782","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319782","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12392732","key":"DERBY-3583","self":"https://issues.apache.org/jira/rest/api/2/issue/12392732","fields":{"summary":"Derby should throw a better error message if a BLOB/CLOB column is accessed more than once","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12316712","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12316712","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"32162","key":"DERBY-255","self":"https://issues.apache.org/jira/rest/api/2/issue/32162","fields":{"summary":"Closing a resultset after retrieving a large > 32K value with Network Server does not release locks","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12317010","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12317010","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12375265","key":"DERBY-2990","self":"https://issues.apache.org/jira/rest/api/2/issue/12375265","fields":{"summary":"ResultSet.getBlob holds locks even with READ_UNCOMMITTED isolation level","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12319737","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319737","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12392355","key":"DERBY-3571","self":"https://issues.apache.org/jira/rest/api/2/issue/12392355","fields":{"summary":"LOB locators are not released if the LOB columns are not accessed by the client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12316999","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12316999","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"31583","key":"DERBY-208","self":"https://issues.apache.org/jira/rest/api/2/issue/31583","fields":{"summary":"Add support to retrieve lobs for Network Server by locator rather than matierializing the LOB","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12316713","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12316713","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"32988","key":"DERBY-326","self":"https://issues.apache.org/jira/rest/api/2/issue/32988","fields":{"summary":"Improve streaming of large objects for network server and client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12317805","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12317805","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"outwardIssue":{"id":"12379542","key":"DERBY-3098","self":"https://issues.apache.org/jira/rest/api/2/issue/12379542","fields":{"summary":"LOB locks are not released after free().","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-02T02:29:09.592+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"This is the same issue as DERBY-255 (https://issues.apache.org/jira/browse/DERBY-255). The test attached to DERBY-255 shows the locks being not released. Everything is fine when using Derby 10.1.3.1 .\n\nI would think it's a regression bug.\n\n\nOutput from sysinfo:\n\n------------------ Java-Informationen ------------------\nJava-Version: 1.6.0_01\nJava-Anbieter: Sun Microsystems Inc.\nJava-Home: C:\\work\\applications\\development\\java\\jdk1.6u1-SE\\jre\nJava-Klassenpfad: C:\\work\\applications\\development\\derby-10.2.2.0/lib/derby.jar;C:\\work\\applications\\development\\derby-\n0.2.2.0/lib/derbynet.jar;C:\\work\\applications\\development\\derby-10.2.2.0/lib/derbyclient.jar;C:\\work\\applications\\devel\npment\\derby-10.2.2.0/lib/derbytools.jar\nName des Betriebssystems: Windows XP\nArchitektur des Betriebssystems: x86\nBetriebssystemversion: 5.1\nJava-Benutzername: thomas.niessen\nJava-Benutzerausgangsverzeichnis: C:\\Dokumente und Einstellungen\\thomas.niessen\nJava-Benutzerverzeichnis: C:\\work\\applications\\development\\derby-10.2.2.0\njava.specification.name: Java Platform API Specification\njava.specification.version: 1.6\n--------- Derby-Informationen --------\nJRE - JDBC: Java SE 6 - JDBC 4.0\n[C:\\work\\applications\\development\\derby-10.2.2.0\\lib\\derby.jar] 10.2.2.0 - (485682)\n[C:\\work\\applications\\development\\derby-10.2.2.0\\lib\\derbytools.jar] 10.2.2.0 - (485682)\n[C:\\work\\applications\\development\\derby-10.2.2.0\\lib\\derbynet.jar] 10.2.2.0 - (485682)\n[C:\\work\\applications\\development\\derby-10.2.2.0\\lib\\derbyclient.jar] 10.2.2.0 - (485682)\n------------------------------------------------------\n----------------- Informationen zur Lõndereinstellung -----------------\nAktuelle Lõndereinstellung:  [Deutsch/Deutschland [de_DE]]\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [cs]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [de_DE]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [es]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [fr]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [hu]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [it]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [ja_JP]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [ko_KR]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [pl]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [pt_BR]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [ru]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [zh_CN]\n         Version: 10.2.2.0 - (485682)\nEs wurde Unterst³tzung f³r die folgende Lõndereinstellung gefunden: [zh_TW]\n         Version: 10.2.2.0 - (485682)","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37419","summary":"Closing a resultset after retrieving a large > 32665 bytes value with Network Server does not release locks","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tomes","name":"tomes","emailAddress":"thomas dot niessen at scopevisio dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Niessen","active":true},"subtasks":[{"id":"12373904","key":"DERBY-2941","self":"https://issues.apache.org/jira/rest/api/2/issue/12373904","fields":{"summary":"With 10.2, Closing a resultset after retrieving a large > 32665 bytes value with Network Server does not release locks","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png","name":"Sub-task","subtask":true}}}],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tomes","name":"tomes","emailAddress":"thomas dot niessen at scopevisio dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Niessen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"JDK: build 1.6.0_01-b06 (WinXP & Gentoo/SuSE)\nHardware: Intel x86\nClient/Server environment","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":90,"total":90,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12510530","id":"12510530","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I verified that this is a regression in 10.2 and still exists in the trunk.\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-06T00:01:37.150+0000","updated":"2007-07-06T00:01:37.150+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12510716","id":"12510716","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Linking to DERBY-255 since this is a regression of that fix.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-06T15:59:40.076+0000","updated":"2007-07-06T15:59:40.076+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12510721","id":"12510721","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"It looks like this regressed with the checkin of DERBY-326 (svn 405037).  This is when the lock timeout was reintroduced to the client canon for blobclob4blob\r\n179014   kmarsden START: clobTest92\r\n405037       tmnk FAIL -- unexpected exception ****************\r\n405037       tmnk SQLSTATE(40XL1): A lock could not be obtained within the time requested\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-06T16:13:33.772+0000","updated":"2007-07-06T16:13:33.772+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12510722","id":"12510722","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Changing to critical since this is a regression that is likely to be hit by users.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-06T16:15:17.176+0000","updated":"2007-07-06T16:15:17.176+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12510761","id":"12510761","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thomas, what JDBC API call are you using? I see the test clobTest92 is doing a getClob() which legitimately holds locks.  It is ResultSet.getCharacterStream(), ResultSet.getString(), ResultSet.getBinaryStream() and ResultSet.getBytes() that should not hold locks after the ResultSet is closed.  For some reason today when I run the repro for DERBY-255,  I'm not seeing the locks being held although I was sure I saw it yesterday so I am getting a bit confused.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-06T18:57:57.801+0000","updated":"2007-07-06T18:57:57.801+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12510812","id":"12510812","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I checked in a test jdbcapi/LargeDataLocksTest.java \r\nDate: Fri Jul  6 15:11:12 2007\r\nNew Revision: 554073\r\n\r\nURL: http://svn.apache.org/viewvc?view=rev&rev=554073\r\n\r\nto add test coverage for ResultSet.getCharacterStream(), ResultSet.getString(), ResultSet.getBinaryStream() and ResultSet.getBytes()  with large values to make sure locks are not being held.  I am beginning to think that I may have panicked when seeing this regression filed. I can't seem to reproduce now.  Anyway I will leave this open until we hear from Thomas. Perhaps we can get a change to the new test that shows a regression or perhaps he is just using getBlob()/getClob() and locks are expected to stick around until the end of the transaction.\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-06T22:17:53.718+0000","updated":"2007-07-06T22:17:53.718+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12510820","id":"12510820","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Apparently I had an older server running on my machine.  I am now able to reproduce and the DERBY-255 repro on 10.3 and the  LargeDataLocksTest fails on trunk.  I disabled this test for client until this bug is fixed.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-06T22:55:58.537+0000","updated":"2007-07-06T22:55:58.537+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511086","id":"12511086","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"Kathey's comment seems to imply that getClob should cause the CLOB data to be locked while getCharacterStream should not.  Is this behavior defined by the JDBC or SQL standards?  It does not seem obvious to me that a Clob object representing a CLOB in the database should have different stability requirements from an InputStream object on the same CLOB. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-07-09T11:16:39.807+0000","updated":"2007-07-09T11:16:39.807+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511211","id":"12511211","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Clob and Blob explicitly state that they are valid for the duration of the transaction in which they are created.\r\n\r\ngetBinaryStream says:\r\n\"Note: All the data in the returned stream must be read prior to getting the value of any other column. The next call to a getter method implicitly closes the stream\",  implying that the stream is much shorter lived.\r\n\r\ngetCharacterStream does not say one way or another, but I assume it is parallel with  getBinaryStream().\r\n\r\nNetwork server does not know the difference between what was called in JDBC, getBlob() vs getBinaryStream() vs getBytes()  for example.  Prior to the fix for DERBY-326, Network Server would always call getBinaryStream() instead of getBlob and getCharacterStream() rather than getClob().  Since the lobs were materialized on the client we could still preserve the Blobs and Clobs until the end of the transaction.  I am not sure how this might be different now with the locator work and how changing back to getBinaryStream() getCharacterStream() calls would impact that.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-09T18:11:00.620+0000","updated":"2007-07-09T18:11:00.620+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511246","id":"12511246","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"There seem to be additional complications in 10.3 vs 10.2.  In 10.3 the getString and getCharacterStream calls request a lob locator which does a getObject (getBlob/getClob())  \r\n\r\nAs for a 10.2 fix I played with changing the Blob.getBinaryStream and Clob.getCharacterStream calls to ResultSet.getBinaryStream and ResultSet.getCharacterStream.  The trouble is that the current implementation makes these calls twice, which is not allowed. Once to see if the stream is empty and then again with this code in \r\nEXTDTAInputStream:\r\n\r\n\r\n\t    boolean exist = is.read() > -1;\r\n\t    \r\n\t    is.close();\r\n\t    is = null;\r\n\t    \r\n\t    if(exist){\r\n\t\topenInputStreamAgain(rs,column,ndrdaType);\r\n\t    }\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-09T20:21:02.148+0000","updated":"2007-07-09T20:21:02.148+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511451","id":"12511451","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"Kathey Marsden (JIRA) wrote:\r\n> \r\n> Clob and Blob explicitly state that they are valid for the duration\r\n> of the transaction in which they are created.\r\n\r\nWhile I have been aware of this, I have not interpreted this to mean\r\nthat the value could not change, just that it should be possible to\r\nuse it to access the underlying LOB column.  However, I think you\r\nright that in the context of result sets one would expect the LOB\r\nobject to represent a LOB value, not a LOB column.\r\n\r\n> \r\n> getBinaryStream says:\r\n> \"Note: All the data in the returned stream must be read prior to\r\n> getting the value of any other column. The next call to a getter\r\n> method implicitly closes the stream\", implying that the stream is\r\n> much shorter lived.\r\n\r\nThank you for making you aware of this.  I guess I should have studied\r\nthe API doc better.  Is the \"implicitly closes\" part implemented by\r\nDerby?  I can not remember to have seen any code for this.  \r\n\r\n> \r\n> getCharacterStream does not say one way or another, but I assume it\r\n> is parallel with getBinaryStream().\r\n\r\ngetAsciiStream says the same as getBinaryStream(). \r\n\r\n> \r\n> Network server does not know the difference between what was called\r\n> in JDBC, getBlob() vs getBinaryStream() vs getBytes() for example.\r\n> Prior to the fix for DERBY-326, Network Server would always call\r\n> getBinaryStream() instead of getBlob and getCharacterStream() rather\r\n> than getClob().  Since the lobs were materialized on the client we\r\n> could still preserve the Blobs and Clobs until the end of the\r\n> transaction.  I am not sure how this might be different now with the\r\n> locator work and how changing back to getBinaryStream()\r\n> getCharacterStream() calls would impact that.\r\n\r\nWith locators all operations in the network server are performed on\r\nBlob/Clob objects.  For example, InputStream.read will map to\r\nBlob.getBytes on the server.  Hence, I would assume that locks will be\r\nheld.  I have not checked, but this may now be true even for the\r\nembedded driver.  I see two possible solutions to this problem:\r\n\r\n  1. Change how the locking is done.  Maybe one could provide away to\r\n     release locks when they are no longer needed.\r\n  2. Make a copy of the LOB value and allow concurrent updates.  In\r\n     10.3 this is now possible since there is a mechanism for making\r\n     temporary copies of LOBs.  In order for this to be efficient, we\r\n     should only make a copy when necessary. Hence, a copy-on-write\r\n     mechanism would be useful.\r\n\r\nAnother thing: \r\n\r\nI noticed that in Ole's LOB compatibility testing for 10.3 that the\r\n10.3 version of the BlobClob4BlobTest, a locking test failed when\r\nrunning a 10.3 client with a 10.1 server (10.3 client with 10.2 server\r\nwent OK).  Does this mean that the test has been updated to accept\r\nthis faulty behavior?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-07-10T14:00:56.523+0000","updated":"2007-07-10T14:00:56.523+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511562","id":"12511562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"rev 405037 updated the blobclob4BLOB test to accept the timeout. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-10T20:17:14.142+0000","updated":"2007-07-10T20:17:14.142+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511637","id":"12511637","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I just thought I would give an update on my 10.2 work on this issue.  I tried switching EXTDTAInputStream to use ResultSet.getCharacterStream() and ResultSet.getBinaryStream.  Then instead of opening the stream again as was done with the Clob/Blob, I wrapped the binaryinputstream in a BufferedInputStream() so I could use mark() , read the first byte and then reset().  All of this worked for the repro for DERBY-255 but has caused protocol errors in the blobclob4BLOB test.  Those I am still debugging. If anyone is interested in looking at the patch so far, I can attach it, otherwise I will just continue to work on it.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-11T03:15:10.351+0000","updated":"2007-07-11T03:15:10.351+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511916","id":"12511916","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I am attaching a patch C:/kmarsden/patches/DERBY-2892_07_10_07_try1_diff.txt. THIS PATCH IS NOT FOR COMMIT.  It is my attempt so far to fix this issue in 10.2.  It does indeed resolve the problem with the locks, The new test jdbcapi/LargeDataLocks.java verifies the new locking behaviour, but causes a serious protocol error in some instances retrieving LOB values.    I have been staring at it for a long time and can't figure out what is wrong, so am hoping Bryan or other protocol expert can take a quick look and see perhaps something I have not thus far.\r\n\r\n\r\nI will attach the repro for the protocol error. Simply reversing the column order in the repro eliminates the error and comparing the old and new traces I don't see what could be causing the client to think it has hit the end of stream.  See the repro for more details and my previous comment for information on how the change was implemented.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-12T00:47:54.779+0000","updated":"2007-07-12T00:47:54.779+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511918","id":"12511918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"here is the java program and database to reproduce the protocol error. It is an exception from the client that it has reached eof, but debugging the server, I see that the server is queueing up the EXTDTA to send, but does not send it because the client disconnects.  Why the client disconnects and thinks it is at the end of data stream I cannot figure out.\r\n\r\nNote: If you run this twice in a row the second time you will get a protocol error on the connection.\r\n\r\n\r\n[C:/kmarsden/repro/derby-2892] java TestDERBY2892\r\njava.sql.SQLException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received onl\r\ny -1 bytes.  The connection has been terminated.\r\n        at org.apache.derby.client.am.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:46)\r\n        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:346)\r\n        at org.apache.derby.client.am.ResultSet.next(ResultSet.java:278)\r\n        at TestDERBY2892.clobTest0(TestDERBY2892.java:37)\r\n        at TestDERBY2892.main(TestDERBY2892.java:17)\r\nCaused by: org.apache.derby.client.am.DisconnectException: Insufficient data while reading from the network - expected a\r\n minimum of 6 bytes and received only -1 bytes.  The connection has been terminated.\r\n        at org.apache.derby.client.net.Reply.fill(Reply.java:195)\r\n        at org.apache.derby.client.net.Reply.ensureALayerDataInBuffer(Reply.java:215)\r\n        at org.apache.derby.client.net.Reply.readDssHeader(Reply.java:317)\r\n        at org.apache.derby.client.net.Reply.peekCodePoint(Reply.java:1008)\r\n        at org.apache.derby.client.net.NetResultSetReply.parseCNTQRYreply(NetResultSetReply.java:133)\r\n        at org.apache.derby.client.net.NetResultSetReply.readFetch(NetResultSetReply.java:42)\r\n        at org.apache.derby.client.net.ResultSetReply.readFetch(ResultSetReply.java:41)\r\n        at org.apache.derby.client.net.NetResultSet.readFetch_(NetResultSet.java:206)\r\n        at org.apache.derby.client.am.ResultSet.flowFetch(ResultSet.java:4138)\r\n        at org.apache.derby.client.net.NetCursor.getMoreData_(NetCursor.java:1183)\r\n        at org.apache.derby.client.am.Cursor.stepNext(Cursor.java:176)\r\n        at org.apache.derby.client.am.Cursor.next(Cursor.java:195)\r\n        at org.apache.derby.client.am.ResultSet.nextX(ResultSet.java:299)\r\n        at org.apache.derby.client.am.ResultSet.next(ResultSet.java:269)\r\n        ... 2 more","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-12T00:56:05.857+0000","updated":"2007-07-12T00:56:05.857+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511923","id":"12511923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Kathey, nothing immediately comes to mind, unfortunately.\r\n\r\nDid you run the program with the DRDA protocol tracing (http://wiki.apache.org/db-derby/ProtocolDebuggingTips), and if so can you post the client and server traces?\r\n\r\nAlso, can you briefly outline what the test program does? Does it read the entire LOB data from the first row before advancing to the next row? Or does it advance to the next row while there still remains unread LOB data from the previous row?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-12T01:37:45.059+0000","updated":"2007-07-12T01:37:45.059+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511929","id":"12511929","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"> Simply reversing the column order in the repro eliminates the error\r\n\r\nThis is eerily familiar; it seems to me that we hit this same behavior in 10.3 during the locator development, but I don't remember anything more than that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-12T02:00:40.107+0000","updated":"2007-07-12T02:00:40.107+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12511945","id":"12511945","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I see that there are two server DRDA trace files in the zip archive.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-12T02:42:45.800+0000","updated":"2007-07-12T02:42:45.800+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512111","id":"12512111","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Is there any evidence that you might be getting an exception on the server side just before the unexpected connection close? I've seen code paths where a thrown exception causes the connection to be closed, and the symptoms are sometimes not so clear, pointing more at the closed connection than at the underlying exception which caused the close.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-12T14:39:00.347+0000","updated":"2007-07-12T14:39:00.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512174","id":"12512174","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":">Is there any evidence that you might be getting an exception on the server side just before the unexpected connection close? \r\n\r\nNo, the server does not throw an exception until it detects that the client is disconnected, when it is getting ready to flush the lob data.\r\n\r\n>I see that there are two server DRDA trace files in the zip archive.\r\nServer1.trace.old is the trace with the unchanged server.\r\nServer1.trace.new is the trace with my changes.\r\nThere is no difference in the traces that I can detect up until the point the client disconnects.\r\n\r\n>can you briefly outline what the test program does? Does it read the entire LOB data from the first row before advancing to the next row? Or does it advance to the next row while there still remains unread LOB data from the previous row?\r\n\r\nIt reads the entire lob. for each row before advancing.  You can also reproduce with ij even by just retrieving the one offensive row.\r\nij>  connect 'jdbc:derby://localhost:1527/wombat';\r\nij(CONNECTION1)> select a, b from testCLOB_MAIN where b = 10000;\r\nA\r\n        |B\r\n------------------------------------------------------------------------------------------------------------------------\r\n--------------------\r\nERROR 58009: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only -1 bytes\r\n.  The connection has been terminated.\r\nij(CONNECTION1)>\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-12T16:50:53.037+0000","updated":"2007-07-12T16:50:53.037+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512215","id":"12512215","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Kathey! Just to be clear, to reproduce your results, I should:\r\n - build a 10.2 server which contains your patch to the DRDA code\r\n - start up this 10.2 server against the database that's in your zip file\r\n - use a 10.2 client to run the test Java program that's in your zip file\r\n - run the test Java program a second time\r\nIs that the right instructions?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-12T18:55:26.523+0000","updated":"2007-07-12T18:55:26.523+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512217","id":"12512217","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"\r\nThat is right Bryan except  running the test java program one time will reproduce the problem.  Running it a second time will produce a different error on connection which is a residual issue I think because there is risidual data in the buffer.  I don't think that we need to worry about that error if we fix the first one.  Running the java program a third time will reproduce the \r\ninsufficient data message again.\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-12T19:01:30.058+0000","updated":"2007-07-12T19:01:30.058+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512261","id":"12512261","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Kathey. I can definitely reproduce the problem you're seeing.\r\n\r\nGiven that the problem occurs with the patched EXTDTAInputStream, and does not occur with the stock 10.2 EXTDTAInputStream, it seems like it's worth studying those EXTDTAInputStream changes in depth to see how they might relate to this problem.\r\n\r\nI've been trying to understand this by building the code with and without the EXTDTAInputStream changes, and running the test case, trying to understand how the server's behavior changes with those changes.\r\n\r\nSo far, nothing of significance to report, though :(","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-12T21:12:25.638+0000","updated":"2007-07-12T21:12:25.638+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512285","id":"12512285","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Bryan asked:\r\n>Is there any evidence that you might be getting an exception on the server side just before the unexpected connection close?\r\n\r\nStepping through this more carefully, I am seeing an IOException occurring in writeScalarStream() which is causing the disconnection.  Not sure why it is occurring, but it seems that we could benefit from better logging when such an exception occurs.\r\n\r\nBelow is the trace of the server side I/O Exception.  There is no message.\r\nnull\r\njava.io.IOException\r\n\tat org.apache.derby.impl.jdbc.UTF8Reader.read(UTF8Reader.java:97)\r\n\tat org.apache.derby.impl.drda.ReEncodedInputStream.reEncode(ReEncodedInputStream.java:78)\r\n\tat org.apache.derby.impl.drda.ReEncodedInputStream.read(ReEncodedInputStream.java:143)\r\n\tat java.io.InputStream.read(InputStream.java:187)\r\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:229)\r\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:246)\r\n\tat org.apache.derby.impl.drda.EXTDTAInputStream.read(EXTDTAInputStream.java:118)\r\n\tat org.apache.derby.impl.drda.DDMWriter.peekStream(DDMWriter.java:1969)\r\n\tat org.apache.derby.impl.drda.DDMWriter.writeScalarStream(DDMWriter.java:719)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.writeEXTDTA(DRDAConnThread.java:7806)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.writeQRYDTA(DRDAConnThread.java:6351)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:677)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:273)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-12T22:18:46.092+0000","updated":"2007-07-12T23:07:17.746+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512305","id":"12512305","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Line 97 of UTF8Reader.java is this:\r\n\r\n        public int read(char[] cbuf, int off, int len) throws IOException\r\n        {\r\n                synchronized (lock) {\r\n                        // check if closed..\r\n                        if (noMoreReads)\r\n                                throw new IOException();                   <============ This is line 97\r\n\r\nSo it would seem that it is complaining about an attempt to read a stream which is already closed?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-12T23:15:49.029+0000","updated":"2007-07-12T23:15:49.029+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512329","id":"12512329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"My first attempt to set a breakpoint on line 97 of UTF8Reader was not successful. I'll keep trying.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-13T01:20:07.917+0000","updated":"2007-07-13T01:20:07.917+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512331","id":"12512331","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"By \"not successful\", I mean that I didn't hit the breakpoint.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-13T01:23:37.188+0000","updated":"2007-07-13T01:23:37.188+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512334","id":"12512334","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Putting aside this specific test case for a minute, if you apply your patch to EXTDTAInputStream, do all the rest of the 10.2 regression tests pass successfully?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-13T01:33:54.884+0000","updated":"2007-07-13T01:33:54.884+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512336","id":"12512336","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks so much Bryan for your help.\r\nWell, I think I know what the problem is.  It comes straight from the getBinaryStream javadoc and I assume getCharacterStream works the same way.\r\n\r\nNote: All the data in the returned stream must be read prior to getting the value of any other column. The next call to a getter method implicitly closes the stream. Also, a stream may return 0 when the method InputStream.available  is called whether there is data available or not.\r\n\r\nSince we are doing the getInt() after the getCharacterStream(),  it closes the stream.  So, my patch is no good.  In order to use ResultSet.getCharacterStream, ResultSet.getBinaryStream() I am going to have to defer opening the stream until it is ready to send.  I'll see if that is possible.  I think it should be because we don't need to know if the stream is empty until that time. \r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-13T01:56:41.630+0000","updated":"2007-07-13T01:56:41.630+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512339","id":"12512339","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":">Since we are doing the getInt() after the getCharacterStream(), it closes the stream.\r\n\r\nThanks Kathey, that makes perfect sense. Good work on figuring this out!\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-07-13T02:11:22.285+0000","updated":"2007-07-13T02:11:22.285+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512479","id":"12512479","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Well deferring the opening of the stream until it is time to write the EXTDTA will not work because we need to know whether the value is null when we send the QRYDTA.  So I guess its back to the drawing board.  I don't have any good ideas for a fix at this point.  The 10.1 solution was to read the whole lob into memory.  I don't think we want to return to that for 10.2. Oystein had mentioned the possibility of changing the locking behavior as a solution, but I am way out of my league in that area so won't pursue that for 10.2.  Hopefully if it is changed for 10.3, we can backport the fix.\r\n\r\nOystein mentioned two possibilities for 10.3\r\n\r\n  1. Change how the locking is done. Maybe one could provide away to\r\n     release locks when they are no longer needed.\r\n\r\nBy this do you mean to release the locks when the LOB is no longer referenced?  That sounds  good, but may still cause issues if the garbage collector has not kicked in, but perhaps would be suitable for backport to 10.2\r\n\r\n\r\n  2. Make a copy of the LOB value and allow concurrent updates. In\r\n     10.3 this is now possible since there is a mechanism for making\r\n     temporary copies of LOBs. In order for this to be efficient, we\r\n     should only make a copy when necessary. Hence, a copy-on-write\r\n     mechanism would be useful.\r\n\r\nThis sounds ok too but does not offer any solution for 10.2, so I guess I would prefer 1.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-13T13:29:55.840+0000","updated":"2007-07-13T13:29:55.840+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512532","id":"12512532","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I checked in the test case jdbcapi/LargeDataLocks to 10.2. It should be uncommented in the jdbcapi suite once this bug is fixed in 10.2.  The test on the trunk is the junit test jdbcapi/LargeDataLocksTest, also disabled.\r\n\r\nKathey\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-13T16:38:48.320+0000","updated":"2007-07-13T16:38:48.320+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512607","id":"12512607","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is a new 10.2 patch for this issue.  \r\nI figured out how to determine if the value is null or empty before retrieving the stream.  What I did was enhance the EngineResultSet interface to have a isNull(int columnIndex) and a getLength(int columnIndex) method that can be called before getBinaryStream() or getCharacterStream() is called. This eliminates the need to read a byte of the stream to see if it is empty or not.\r\n\r\nI would like to know if this is a reasonable approach and would appreciate review of the patch.   I ran derbynetclientmats and the LargeDataLocks test with the patch and am running derbyall now.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-13T20:21:49.929+0000","updated":"2007-07-13T20:21:49.929+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512673","id":"12512673","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=naka","name":"naka","emailAddress":"tomonaka at basil dot ocn dot ne dot jp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomohito Nakayama","active":true},"body":"Thank you for working this issue ....\r\n\r\nI remember information about blobclob4blob in DERBY-326 which may be a support.\r\n\r\nBefore the DERBY-326, the result of clobTest92 was different between Embedded and NetworkServer/NetworkCient.\r\nAfter DERBY-326, the results of clobTest92  are same between Embedded and NetworkServer/NetworkCient.\r\n\r\nRelated file for 10.2 branch is below.\r\n\r\nEmbedded :\r\nhttps://svn.apache.org/repos/asf/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/functionTests/master/blobclob4BLOB.out\r\n\r\nNetworkServer/NetworkClient  :\r\nhttps://svn.apache.org/repos/asf/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/blobclob4BLOB.out\r\nhttps://svn.apache.org/repos/asf/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/blobclob4BLOB.out\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=naka","name":"naka","emailAddress":"tomonaka at basil dot ocn dot ne dot jp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomohito Nakayama","active":true},"created":"2007-07-14T03:54:36.777+0000","updated":"2007-07-14T03:54:36.777+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12512964","id":"12512964","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Tomohito for looking at this issue. I think that with the fix for DERBY-255 I did not submit sufficient testing for the getString(), getCharacterStream(), getBytes(), getBinaryStream() cases where locks should not be held.  This has hopefully been rectified with the addition of the LargeDataLocks test.  I attached a patch to DERBY-2941 to fix the issue and enable that test.\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-16T15:31:49.682+0000","updated":"2007-07-16T15:31:49.682+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12513340","id":"12513340","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Now that DERBY-2941 is resolved, this regression only affects 10.3 and 10.4  which use lob  locators.  Oystein mentioned two possibilities for approaching this issue in 10.3.  I previously stated that I would prefer  changing how the locking is done so we could backport to 10.2, but that is no longer a consideration.  \r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-17T19:37:33.734+0000","updated":"2007-07-17T19:37:33.734+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12513885","id":"12513885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"I think I would prefer that one did not use database locks to\r\nachieving stability for LOB objects.  Locks are intended for\r\ntransaction isolation, not result set isolation.  I guess the main\r\nmotivation for using locking is to avoid reading the entire LOB before\r\nit is accessed.  That is, when ResultSet.getBlob is called the Blob\r\nvalue is not read; the reading is delayed until one performs\r\noperations on that Blob. Pre-10.3, one major problem with making a\r\ncopy of LOB would be that the entire LOB would have to be stored in\r\nmain-memory.  In 10.3, we have a mechanism for storing LOB values\r\ntemporarily on disk.\r\n\r\nOne alternative would be to always make a copy when getBlob/getClob is\r\ncalled.  That could significantly affect the performance of such an\r\noperation, but users can use ResultSet.getBinaryStream if they want\r\nto read a Blob with less overhead.\r\n\r\nA more performant solution would be to delay copying until it is\r\nneeded.  That is, when someone else tries to update the LOB, a copy is\r\nmade.  I think such conflicts are not very typically for databases\r\nwith LOBs, so copying will normally not be done very often.  However,\r\none need some mechanism for detecting that the LOB to be updated are\r\ncurrently read by others.\r\n\r\nI am trying to get my mind around what is required here.  I do not\r\nhave a full undestanding yet, but here are some aspects that need to\r\nbe considered:\r\n\r\n - When locators are used, a locator will map to an Blob/Clob object\r\n   on the server.  Client operations will be mapped to operations on\r\n   the Blob/Clob objects.  This makes the current locking mechanism\r\n   not work as intended since you will get Blob/Clob objects without\r\n   doing explicit getBlob/getClob calls.\r\n\r\n - The server is not able to distinguish whether an operation is\r\n   performed on a Blob/Clob or directly on the ResultSet.  E.g.,\r\n   Blob.getBinaryStream and ResultSet.getBinaryStream are local\r\n   operations on the client.  Read operations on the streams will map\r\n   to Blob.getBytes on the server.\r\n\r\n - Locators are not used for all types of client operations. E.g.,\r\n   ResultSet.updateBinaryStream or PreparedStatement.setBinaryStream\r\n   will set up a stream that maps to a stream on the server.\r\n\r\n - Updates to Blob/Clob objects will cause the object to be copied to\r\n   temporary storage.  The updates will be applied to the database\r\n   when the Blob/Clob object is used to update a row.  E.g., If\r\n   ResultSet.updateBlob is used, the update will happen when\r\n   ResultSet.updateRow is called.  If PrepareStatement.setBlob is used,\r\n   it will happen when the prepared statement is executeed.\r\n\r\n - We will still need a mechanism to protect LOB values of the current\r\n   row of a ResultSet from being updated.  I am not familiar with the\r\n   current mechanism here.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-07-19T11:57:24.729+0000","updated":"2007-07-19T11:57:24.729+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12514024","id":"12514024","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thank you Oystein for sorting out the complexities of this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-19T22:14:20.464+0000","updated":"2007-07-19T22:14:20.464+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12514249","id":"12514249","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"> - We will still need a mechanism to protect LOB values of the current\r\n>   row of a ResultSet from being updated. I am not familiar with the\r\n>   current mechanism here. \r\n\r\nAs long as you are positioned on a row in the result set, a lock is\r\nset for that row (R or U if you have an updatable result set), which\r\nshould protect the lob as long as you are positioned on it.\r\n\r\nIn a scrollable result set, a copy is takes of the row, so after\r\npositioning away from the row, the underlying lob would not be\r\naccessed via this result set again until the row is possibly updated\r\n(if the result set is updatable). The U-lock on the row is reset when\r\nrepositioning back in that case.\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2007-07-20T17:10:03.061+0000","updated":"2007-07-20T17:10:03.061+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12516454","id":"12516454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"This is a critial issue and a regresssion that has been hit by users in the past moving to 10.2.  It is now fixed in 10.2 and regresses again going to 10.3.  I am marking it   Blocker because it seems like such a likely user hit.  I realize nobody is working on it and it is likely to get moved back down to urgent, but it just seems wrong to re-regress the product with 10.3.\r\n\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-30T17:48:48.936+0000","updated":"2007-07-30T17:48:48.936+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12516467","id":"12516467","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Reverting the Urgency to normal. This issue occurs in 10.2. I do not believe that this old issue should block the release of other quality improvements.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2007-07-30T18:28:05.793+0000","updated":"2007-07-30T18:28:05.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12516552","id":"12516552","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Note: This issue has been resolved in 10.2 with DERBY-2941\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-07-30T21:50:08.294+0000","updated":"2007-07-30T21:50:08.294+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12516715","id":"12516715","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=naka","name":"naka","emailAddress":"tomonaka at basil dot ocn dot ne dot jp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomohito Nakayama","active":true},"body":"I executed LargeDataLocksTest in the both cases of embedded and client. \r\nThe result was that test passes in the embedded case but fails in the client case.\r\n\r\nIn both cases of embedded and client, the only test code closes the resultset.....\r\nI wonder what is the exact difference which causes this result ....","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=naka","name":"naka","emailAddress":"tomonaka at basil dot ocn dot ne dot jp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomohito Nakayama","active":true},"created":"2007-07-31T15:37:18.834+0000","updated":"2007-07-31T15:37:18.834+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12516969","id":"12516969","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=naka","name":"naka","emailAddress":"tomonaka at basil dot ocn dot ne dot jp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomohito Nakayama","active":true},"body":"I added the test code as next to LargeDataLocksTest and \r\nfound that the behavior was same between embedded and client if explicitly getBlob.\r\n\r\n+    public void testGetBlob() thr ows SQLException, IOException {\r\n+        int numBytes = 0;\r\n+        getConnection().setAutoCommit(false);\r\n+        Statement stmt = createStatement();\r\n+        String sql = \"SELECT bincol from t1\";\r\n+        ResultSet rs = stmt.executeQuery(sql);\r\n+        rs.next();\r\n+        Blob blob = rs.getBlob(1);\r\n+        InputStream stream = blob.getBinaryStream();\r\n+        int read = stream.read();\r\n+        while (read != -1) {\r\n+            read = stream.read();\r\n+            numBytes++;\r\n+        }\r\n+        assertEquals(38000, numBytes);\r\n+        rs.close();\r\n+        assertEquals(0, countLocks());\r\n+        commit();\r\n+    }\r\n+\r\n+\r\n\r\nThe result for embedded:\r\n1) testGetBlob(org.apache.derbyTesting.functionTests.tests.jdbcapi.LargeDataLocksTest)junit.framework.AssertionFailedError: expected:<0> but was:<2>\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.LargeDataLocksTest.testGetBlob(LargeDataLocksTest.java:142)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\r\n\r\n\r\nThe result for client :\r\n2) testGetBlob(org.apache.derbyTesting.functionTests.tests.jdbcapi.LargeDataLocksTest)junit.framework.AssertionFailedError: expected:<0> but was:<2>\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.LargeDataLocksTest.testGetBlob(LargeDataLocksTest.java:142)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\r\nReading comments, I understood background of this result is locking for LOB.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=naka","name":"naka","emailAddress":"tomonaka at basil dot ocn dot ne dot jp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomohito Nakayama","active":true},"created":"2007-08-01T13:57:14.257+0000","updated":"2007-08-01T13:57:14.257+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12516981","id":"12516981","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=naka","name":"naka","emailAddress":"tomonaka at basil dot ocn dot ne dot jp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomohito Nakayama","active":true},"body":"Now, I came to think that the current implementation of client / server of derby have problem around\r\nResultSet#getBinaryStream method (and might be other getXXXXStream also).\r\n\r\nMy intuitive thinking is that features of locater may be not needed for this kind of method, \r\nwhich are getXXXXStream and not getXlob.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=naka","name":"naka","emailAddress":"tomonaka at basil dot ocn dot ne dot jp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomohito Nakayama","active":true},"created":"2007-08-01T14:20:22.362+0000","updated":"2007-08-01T14:20:22.362+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12517149","id":"12517149","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":">Now, I came to think that the current implementation \r\n>of client / server of derby have problem around\r\n>ResultSet#getBinaryStream method (and might be \r\n>other getXXXXStream also). \r\n\r\nFeatures of locator are not present for the ResultSet \r\nand the PreparedStatement methods.\r\n\r\nRelevant comments from Derby-2604\r\n\r\n>As already discussed in the JIRA issue that was raised for \r\n>PreparedStatements and CallableStatements\r\n>(https://issues.apache.org/jira/browse/DERBY-2529) there \r\n>are no changes needed here related to Clob also.\r\n\r\n>A similar case would exist for ResultSets also since \r\n>the LOB in this case is also B-Layer streamed and \r\n>there would be no significant improvement with using locators. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2007-08-02T06:01:28.357+0000","updated":"2007-08-02T06:01:28.357+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12517553","id":"12517553","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"V. Narayanan said\r\n>Features of locator are not present for the ResultSet\r\n>and the PreparedStatement methods. \r\n\r\nI am a little confused by this. Are you saying that a ResultSet.getBinaryStream() on the client should not be translating into a getBlob() on the server.  That does not seem to be the case in the trunk/10.3.  Can you try running jdbcapi/LargeDataLocks.java and see if perhaps this can be resolved easily.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-08-03T14:59:27.367+0000","updated":"2007-08-03T15:03:43.107+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12518403","id":"12518403","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":">I am a little confused by this. Are you saying that a ResultSet.getBinaryStream()\r\n>on the client should not be translating into a getBlob() on the server. That does \r\n>not seem to be the case in the trunk/10.3. Can you try running jdbcapi/LargeDataLocks.java \r\n>and see if perhaps this can be resolved easily.\r\n\r\nWhile working on locators, the ResultSet nor the PreparedStatement methods were\r\ntranslated to stored procedure calls to embedded methodssince this would be inefficient \r\nwhen compared to the Layer B Streaming and no materialization of LOB's was \r\nhappening that needed to be avoided. Hence it was OK to retain the current way it is done.\r\n\r\nInternally I am not sure if the translation of the getBlob is happening at present.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2007-08-08T10:12:28.984+0000","updated":"2007-08-08T10:12:28.984+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12518409","id":"12518409","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":"Sorry I meant \"Neither the ResultSet nor the PreparedStatement methods were\r\ntranslated to stored procedure calls to embedded methods\"  (i.e.) They were not\r\ntranslated to stored procedure calls.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2007-08-08T10:25:42.057+0000","updated":"2007-08-08T10:25:42.057+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12519073","id":"12519073","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I am not sure how stored procedures come into it, but what I have been seeing is that with a 10.2 client or lower the DRDAType for getBinaryStream is  DRDAConstants.DRDA_TYPE_NLOBBYTES, so we instantiate a EXTDTAInputStream and with the fix for DERBY-2941 all is ok, BUT if we use a 10.3 client the DRDAType is DRDAConstants.DRDA_TYPE_NLOBLOC   so we do a getObject()(aka getBlob) on the column and it holds locks.\r\n\r\nAlso I want to clarify that this issue is fixed with 10.2.2.1 clients and above with the fix for DERBY-2941.  It regresses with 10.3 clients and higher.   So users affected by this issue, should not upgrade to 10.3.\r\n\r\nNarayanan, do you have time to look and see if the change to use DRDA_TYPE_NLOBLOC for this case was necessary.  This is a serious regression in 10.3 that is likely to affect users. It would be good to get it addressed as soon as possible and I am not familiar enough with the Locator code to say how it should/ should not be.\r\n\r\nYou can run the test jdbcapi/LargeDataLocks which is checked into the trunk but is not running at this time on the trunk due to this issue.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-08-10T18:11:05.312+0000","updated":"2007-08-10T18:11:05.312+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12523174","id":"12523174","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"To answer Kathey's question: On the server, a stable mapping is needed\r\nbetween the locator ID and the Blob value is needed.  Earlier, you\r\ncopy the entire Blob value to the client in one round-trip.  Now, you\r\ncopy as much data as requested by the client.  It seems natural to use\r\na Blob object to represent the Blob value between round-trips.  Hence,\r\nI think getting a Blob object is necessary.\r\n\r\nAs I said earlier, I would prefer to fix this by using another\r\nmechanism than locking to guarantee the stability of a Blob value.  I\r\nplan to look closer into how to fix this in a week or two.\r\n \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-08-28T07:11:47.702+0000","updated":"2007-08-28T07:11:47.702+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12523854","id":"12523854","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Oysten said:\r\n>I plan to look closer into how to fix this in a week or two.\r\n\r\nThanks Oysten!\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-08-30T14:07:08.467+0000","updated":"2007-08-30T14:07:08.467+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12529512","id":"12529512","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Hello Oystein. I just wanted to check in on this issue.   Have you been able to look closer at solution options?\r\n\r\nThanks\r\n\r\nKathey\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-21T17:41:20.233+0000","updated":"2007-09-21T17:41:20.233+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12530424","id":"12530424","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"I have started to look a bit more at this issue.  I have not got very\r\nfar yet, but I have identified that the locking of the record\r\ncontaining the Blob occurs in OverflowInputStream#initStream.  Here an\r\nintent-shared lock on the table and a record lock for the record\r\ncontain the Blob is obtained.  As far as I can tell, the table lock is\r\nfor the duration of the transaction while the record lock follows the\r\ntransaction's isolation level.  Does this mean that it is the table\r\nintent lock that is the problem here?  \r\n\r\nIf I run the LargeDataLocks program attached to DERBY-255 it shows\r\nthat a IS table lock remains.  There is some discussion in\r\nOverflowInputStream#initStream on whether on should use the\r\ncontain's isolation level also for the intent lock, and not always use\r\nREPEATABLE READ, but it says:\r\n\r\n        To do this, need to consider:\r\n        Sometimes the container's locking policy may NOT reflect the\r\n        correct locking policy. For example, if the container is a\r\n        table (not an index) and Access handles the locking of the\r\n        table via an index, the container's locking policy would be\r\n        set to do no locking.  Moreover, if the container is an index,\r\n        the locking policy would always be set to do no locking.\r\n\r\nI guess I have to read up on the use of intent locks and the\r\ndifference between locking policies of transactions and containers\r\nbefore I can understand what this means.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-09-26T12:03:59.355+0000","updated":"2007-09-26T12:03:59.355+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12530443","id":"12530443","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"My previous comment is mistaken.  The LargeDataLocks program show that\r\nboth a table intent lock and a row lock remains:\r\n\r\nSelect * from new org.apache.derby.diag.LockTable() as LT\r\nXID,TYPE,MODE,TABLENAME,LOCKNAME,STATE,TABLETYPE,LOCKCOUNT,INDEXNAME\r\n203,TABLE,IS,T1,Tablelock,GRANT,T,1,null\r\n203,ROW,S,T1,(2,6),GRANT,T,1,null\r\n\r\nSorry for the confusion.\r\n\r\nWhile copy-on-write seems like a good idea, I am afraid it will be\r\nquite some work to implement a new mechanism like that, and I think I\r\nwill try a simpler approach first.\r\n\r\nMy first attempt will try to see if there is some way to make the\r\nengine release locks when locators are freed.  Then, the client could\r\nrelease locators associated with streams when next()/close() is called\r\non the result set.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-09-26T13:34:30.479+0000","updated":"2007-09-26T13:34:30.479+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12530752","id":"12530752","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"So my plan to fix this has two parts:\r\n\r\n1. Change the locking so that the lock for a LOB is released when the\r\n   LOB object is closed.  My studies so far indicates that this can be\r\n   achieved as follows:\r\n\r\n   a) Use read committed instead of repeatable read for the locking\r\n      policy in OverflowInputStream#initStream.  This will associate\r\n      the lock with the BaseContainerHandle that owns the\r\n      OverflowInputStream instead of the transaction.\r\n\r\n   b) Release the locks for the BaseContainerHandle that owns the\r\n      OverflowInputStream when it is closed. (Debugging shows that\r\n      OverflowInputStream#close is called when a Blob/Clob object is\r\n      freed.)\r\n\r\n2. Make sure a client releases locators when they are not to be used\r\n   anymore.  That is, the procedure to release a locator obtained by\r\n   getBinaryStream etc. will be called when next() or close() is\r\n   called on the result set.\r\n\r\n   Since, according to the JDBC spec, such streams are only valid\r\n   until the next getXXX call, there should only be necessary to keep\r\n   track of one such locator at a time.  So when a new stream is\r\n   opened, the previous locator can be released.  Hence, it should not\r\n   be necessary to maintain a set of locators for the current row, one\r\n   single \"current\" locator per result set is sufficient.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-09-27T15:07:11.613+0000","updated":"2007-09-27T15:07:11.613+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12530772","id":"12530772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Oystein said ..\r\n\r\n>2. Make sure a client releases locators when they are not to be used\r\n>   anymore. That is, the procedure to release a locator obtained by\r\n>  getBinaryStream etc. will be called when next() or close() is\r\n>.   called on the result set. \r\n\r\nThis makes sense for getBinaryStream, but for Blobs the spec says\r\n\"A Blob object is valid for the duration of the transaction in which is was created.\"\r\n\r\nWill that still be the case with your propsed change?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-27T16:27:48.932+0000","updated":"2007-09-27T16:27:48.932+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12530921","id":"12530921","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"Kathey Marsden (JIRA) wrote:\r\n> Oystein said ..\r\n> \r\n>> 2. Make sure a client releases locators when they are not to be used\r\n>>   anymore. That is, the procedure to release a locator obtained by\r\n>>  getBinaryStream etc. will be called when next() or close() is\r\n>> .   called on the result set. \r\n> \r\n> This makes sense for getBinaryStream, but for Blobs the spec says\r\n> \"A Blob object is valid for the duration of the transaction in which is was created.\"\r\n> \r\n> Will that still be the case with your propsed change?\r\n\r\nYes, locators obtained when doing ResultSet.get[BC]lob will not be released, only locators obtained by other ResultSet.getXXX methods (e.g., getBinaryStream). \r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-09-28T06:35:13.961+0000","updated":"2007-09-28T06:35:13.961+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12532028","id":"12532028","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"DERBY-3098 will handle part 1 as described above.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-10-03T07:44:32.477+0000","updated":"2007-10-03T07:44:32.477+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12543885","id":"12543885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"Attached patch derby-2892firstshot.diff makes LargeDataLocksTest also work for client/server.  The approach is to make sure that closing a stream will free the underlying Blob, and in addition when closing a result set, the open stream needs to be closed.\r\n\r\nHowever, this fix will also have affect when closing streams that was obtained from a Blob object instead of directly from the result set.  This is not correct since such Blob objects should live until end of transaction unless explicitly closed.  This causes a few test cases in BlobClob4BlobTest to be broken.\r\n\r\nHence, the attached patch needs to be modified to distinguish between streams that were obtained from a result set, and streams that were obtained from a Blob object.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-11-20T12:53:41.317+0000","updated":"2007-11-20T12:53:41.317+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12544605","id":"12544605","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"Fixing this issue will create backward-compatibility issues.  For a Blob/Clob column of  a result set, only one get method can be called and only once.  For example, after executing ResultSet.getBinaryStream on a column, all following get methods (e.g., getBlob, getBinaryStream, getBytes) on this column wil fail.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-11-21T21:32:11.121+0000","updated":"2007-11-21T21:32:11.121+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12545816","id":"12545816","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"Attached is a patch that solves the reported problem, and runs without\r\nerrors in the current test suites (suites.All and derbyall).  However,\r\nI do not feel confident that there is sufficient testing in this area\r\nto verify the fix.  I do not have time to add more tests right now,\r\nbut I hope to get back to this later.\r\n\r\nNote also that this fix may affect existing applications since from\r\nnow only one get method per Blob/Clob column may now be called per\r\nrow of the result set.\r\n\r\nThe following describes the fixes in more detail:\r\n\r\nM      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LargeDataLocksTest.java\r\n    Activate test also for client server to test the bug fix.\r\n\r\nM      java/client/org/apache/derby/client/am/Cursor.java\r\n    Access on Blob/Clob columns of result set is no longer forwarded\r\n    to the relevant method on the Blob/Clob object.  Instead, it is\r\n    made sure that the underlying Blob/Clob objects are freed when the\r\n    access is completed.\r\n\r\nM      java/client/org/apache/derby/client/am/Blob.java\r\n    Make getBinaryStreamX() package private so that it can be used by\r\n    Cursor.  This way, conversions between SqlException and\r\n    SQLException are avoided.  \r\n\r\nM      java/client/org/apache/derby/client/am/Clob.java\r\n    Make get...StreamX methods package private so that it can be used\r\n    by Cursor.  This way, conversions between SqlException and\r\n    SQLException are avoided.\r\n\r\nM      java/client/org/apache/derby/client/am/BlobLocatorInputStream.java\r\n    Add method setFreeBlobOnClose() which can be called in order to\r\n    make the stream free the underlying Blob object when it is closed.\r\n\r\nM      java/client/org/apache/derby/client/am/ResultSet.java\r\n    Closing the result set should close streams that have been opened\r\n    on columns of the result set.\r\n\r\nM      java/client/org/apache/derby/client/am/UpdateSensitiveLOBLocatorInputStream.java\r\n    Closing the stream should also close the wrapped stream.\r\n\r\nM      java/client/org/apache/derby/client/am/ClobLocatorInputStream.java\r\n    Add method setFreeClobOnClose() which can be called in order to\r\n    make the stream free the underlying Clob object when it is closed.\r\n\r\nM      java/client/org/apache/derby/client/am/ClobLocatorReader.java\r\n    Add method setFreeClobOnClose() which can be called in order to\r\n    make the stream free the underlying Clob object when it is closed.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-11-27T13:10:38.615+0000","updated":"2007-11-27T13:10:38.615+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12551859","id":"12551859","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Øystein said.\r\n>Fixing this issue will create backward-compatibility issues. For a Blob/Clob column of a result set, only one get method >can be called and only once. For example, after executing ResultSet.getBinaryStream on a column, all following get >methods (e.g., getBlob, getBinaryStream, getBytes) on this column wil fail.\r\n\r\nI thought this was the case since DERBY-721 was fixed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-12-14T17:07:47.853+0000","updated":"2007-12-14T17:07:47.853+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12552372","id":"12552372","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"> Kathey Marsden commented on DERBY-2892:\r\n> ---------------------------------------\r\n> \r\n> Øystein said.\r\n>> Fixing this issue will create backward-compatibility issues. For a\r\n>> Blob/Clob column of a result set, only one get method can be\r\n>> called and only once. For example, after executing\r\n>> ResultSet.getBinaryStream on a column, all following get methods\r\n>> (e.g., getBlob, getBinaryStream, getBytes) on this column wil fail.\r\n> \r\n> I thought this was the case since DERBY-721 was fixed.\r\n\r\nI am afraid that some of these restrictions may have been relaxed by\r\naccident when we introduced locators for 10.3.  Anyway, this patch will\r\nrestrict usage even further than Derby-721.  With a 10.2.1 server, I\r\nam able to do getBytes() followed by getBinaryStream().  With my patch\r\nthis will not be possible since getBytes will release the underlying\r\nBlob.  I will investigate the behavior of previous releases a bit\r\nfurther and report back.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-12-17T11:14:48.703+0000","updated":"2007-12-17T11:14:48.703+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12568520","id":"12568520","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"I have tested the patch with the repro attached here: http://www.nabble.com/Re%3A-Iterating-through-large-result-set-in-network-mode-causes-OutOfMemoryException-p15364393.html\r\nThis repro does not access the blob columns that are selected, and it turns out that with the current patch, the blob objects are not released, and OOM error occurs.  If I add a  call to ResultSet#getBytes for each row, the OOM error does not occur.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2008-02-13T11:58:28.967+0000","updated":"2008-02-13T11:58:28.967+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12578446","id":"12578446","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Do you think this change will make it in for 10.4?\r\nIf we are going to change behavior we probably best do it on \r\nminor release boundaries.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-13T18:58:41.907+0000","updated":"2008-03-13T18:58:41.907+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12578474","id":"12578474","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"\r\nI agree, and I hope to get back to this within a week or so, but if \r\nothers have the time to look at, please do so.  As mentioned in my \r\ncomment, I have discovered that my proposed fix will not work for the \r\ncase where the select blob objects are never accessed by JDBC.  That \r\nshould be fixed, but the current patch will at least fix the more common \r\nscenarios.  In addition, some more tests should be added.\r\n\r\n-- \r\nØystein\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2008-03-13T20:08:25.236+0000","updated":"2008-03-13T20:08:25.236+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12581727","id":"12581727","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I have a few cycles to help out with this issue.  As I see it, what needs \r\nto be done is \r\n1) Apply patch to latest and make sure tests pass.\r\n2) Add release note that you cannot access a column twice with JDBC.\r\n3) Add more tests.\r\n   - Add test to attempt to retrieve column twice and ensure reasonable error.\r\n   - What other tests should be added?\r\n4) After checkin, file issue for lock timeout if column is not accessed by JDBC.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-24T23:40:41.146+0000","updated":"2008-03-24T23:40:41.146+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12581888","id":"12581888","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Kathey, I'm interested in looking at point 4. At least I believe it is the same problem. I used the repro Øystein mentioned above, where I got an OOME instead of a timeout.\r\nI coded a prototype that solved the problem on the client side, but I'm wondering if it can be better solved on the server side.\r\nI will look into this and report my findings.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-03-25T12:18:02.557+0000","updated":"2008-03-25T12:18:02.557+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12582342","id":"12582342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I filed DERBY-3571 for the case where locators are not freed if the LOB columns are not accessed.\r\nReview and comments are welcome.\r\n\r\nI haven't tested it, but I think Øysteins patch and mine should go along fine together. They do however affect each other with respect to timing of the locator release and round trips to the server. We might want to investigate this with regards to performance.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-03-26T16:51:33.301+0000","updated":"2008-03-26T16:51:33.301+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12582390","id":"12582390","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Kristian for looking at the issue of the lock timeout when the column is not accessed via JDBC.\r\n\r\nFor the DERBY-2892 patch, I think we probably need to work on the error message if a column is retrieved twice.\r\nWhat happens now  if I do getString twice on a Clob column  is I get the message:\r\n\r\nXJ217 - You cannot invoke other java.sql.Clob/java.sql.Blob methods after calling the free() method or after the Blob/Clob's transaction has been committed or rolled back.\r\n\r\nI don't know that that makes sense given the user called getString()\r\n\r\n\r\nFor getCharacterStream()/getBinaryStream() there is no error on the call, just an IOException on the read.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-26T18:28:45.614+0000","updated":"2008-03-26T18:54:51.901+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12582763","id":"12582763","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I was looking at improving the error messages when a column is accessed\r\nmore than once, and I realized that doing so will be much easier once the\r\npatch for DERBY-3571 is in, which records whether lob columns have \r\nbeen accessed.\r\n\r\nI would like to propose that we go ahead and commit the derby-2892 patch to \r\ntrunk and then attack the improved error messages after DERBY-3571 goes\r\nin as a separate issue.\r\n\r\nThoughts?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-27T18:42:19.527+0000","updated":"2008-03-27T18:42:19.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12582942","id":"12582942","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Note that DERBY-3571 will only track LOB locators in its current state.\r\nI think it can be extended to track all LOBs, but it is not clear to me at this point if that is the right way to proceed.\r\nAnswering these questions would help determine that:\r\n a) Shall an exception be thrown for any type of column if accessed twice?\r\n b) If not, which columns types does the restriction apply to?\r\n\r\nI think a more general solution would be needed if an exception shall be raised for all column types.\r\nIf a solution is needed only for LOBs, I believe LOBStateTracker can be extended and used for the purpose.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-03-28T08:31:17.823+0000","updated":"2008-03-28T08:31:17.823+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12583123","id":"12583123","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"From what I understand,  the restriction is only for lob columns. \r\nIf no one objects I will commit Oystein's patch to trunk on \r\nMonday and file an issue for the improved error messages.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-28T18:13:34.912+0000","updated":"2008-03-28T18:13:34.912+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12583487","id":"12583487","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is a first shot at a release note for this issue. Please let me know if you have comments.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-30T21:01:54.856+0000","updated":"2008-03-30T21:01:54.856+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12583656","id":"12583656","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"committed this to trunk with revision  642974.  I will backport to 10.4\r\nafter tinderbox runs cleanly. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-31T12:23:23.823+0000","updated":"2008-03-31T12:23:23.823+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12583792","id":"12583792","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"committed to trunk and 10.4\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-31T18:39:54.080+0000","updated":"2008-03-31T18:39:54.080+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12584895","id":"12584895","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"'derby-2892-1a-alternative_fix_partial.diff' demonstrates how the mechanism added by DERBY-3571 can be used to release the locators.\r\nIt does not implement the required code cleanup, which would basically be to remove parts of the already committed patch. It allows multiple calls to all getter methods, but only a single call is allowed for the getXStream methods. This restriction is enforced independently of this patch. A solution disallowing multiple calls can easily be implemented on top of patch 1a.\r\n\r\nThe advantage of the alternative implementation, is that it requires less code and that it might make the locator release a lot more efficient when the piggy-backing scheme is implemented.\r\n\r\nsuites.All ran without failures (except for the constantly failing management test).\r\nPatch ready for comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-02T23:02:11.878+0000","updated":"2008-04-02T23:02:11.878+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12586611","id":"12586611","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I think the approach in 'derby-2892-1a-alternative_fix_partial.diff' is preferable to the current approach because it does not introduce incompatibilities and can be backported to 10.3 where the bug still exists.  I  don't think we should disallow multiple calls unless we have to.\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-04-08T00:32:13.357+0000","updated":"2008-04-08T00:32:13.357+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12587001","id":"12587001","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"FYI, some of our streams, for instance BlobLocatorInputStream, don't have a notion of being closed. It is therefore important that such streams are wrapped in a CloseFilterInputStream (and they are).\r\nI do not know why some streams ignore the close action, and I haven't verified if they are wrapped in each and every place they are used (outside the ResultSet class).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-08T23:17:55.995+0000","updated":"2008-04-08T23:17:55.995+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12587125","id":"12587125","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Reopening to commit alternative fix.\r\nI expect there will be two patches, one is ready. The next one will remove some of the new functionality added in the original patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-09T10:14:31.751+0000","updated":"2008-04-09T10:14:31.751+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12587128","id":"12587128","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"'derby-2892-1b-alternative_fix_partial.diff' is slightly changed from 1a; reordered keywords (abstract public -> public abstract) and removed an added blank line.\r\n\r\nCommitted to trunk with revsion 646255.\r\nI plan to backport the fix to 10.4 when the last patch has been committed, and also investigate the possibility of backporting to 10.3.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-09T10:21:01.833+0000","updated":"2008-04-09T10:21:01.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12587134","id":"12587134","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Forgot to say, but I ran the repro Øystein mentioned with patch 1b applied and Xmx set to 48m without getting OOMEs.\r\n\r\n'derby-2892-2a-alternative_fix_cleanup.diff' removes code that was added to support the first solution.\r\nNeed to verify if I have forgotten something.\r\n\r\nPatch ready for review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-09T10:29:50.876+0000","updated":"2008-04-09T10:29:50.876+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12588272","id":"12588272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Patch derby-2892-1b-alternative_fix_partial.diff merged to 10.4.\r\nCommitted revision 647465.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-04-12T16:24:06.819+0000","updated":"2008-04-12T16:24:06.819+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12588502","id":"12588502","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks for backporting the fix Dyre.\r\n\r\nI committed the last cleanup patch (2a) to trunk with revision 647680 and merged it into 10.4 with revision 647682.\r\nI'm not planning on any more fixes under this issue.\r\n\r\nCan the release note needed flag be unset now?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-14T07:40:22.964+0000","updated":"2008-04-14T07:40:22.964+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12592151","id":"12592151","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Unsetting the release note needed and existing application impact  flags as this issue's fix no longer impacts existing applications.\r\n\r\nI am leaving this issue open to port to 10.3\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-04-24T18:56:11.053+0000","updated":"2008-04-24T18:56:11.053+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12592165","id":"12592165","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I attempted to merge this fix to 10.3 Attached is the patch for my first try (derby-2892_10.3_try1_diff.txt not for commit).  I ported 643091,646255, and 647680 from trunk, but something is not quite right, because I still am getting locks held. LargeDataLocksTest fails with \r\n\r\n1) testGetBinaryStream(org.apache.derbyTesting.functionTests.tests.jdbcapi.LargeDataLocksTest)junit.framework.AssertionF\r\nailedError: expected:<0> but was:<2>\r\n        at org.apache.derbyTesting.functionTests.tests.jdbcapi.LargeDataLocksTest.testGetBinaryStream(LargeDataLocksTest\r\n.java:114)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:88)\r\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n        at junit.extensions.TestSetup.run(TestSetup.java:23)\r\n        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n        at junit.extensions.TestSetup.run(TestSetup.java:23)\r\n        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n        at junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\r\nOddly testCharacterStream seems to be ok. Investigating what could be the matter.\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-04-24T20:36:54.913+0000","updated":"2008-04-24T20:36:54.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12592172","id":"12592172","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I found my problem. My client was way out of date because I had reverted to a very old version to track down a regression.  I think I was missing the fix for DERBY-3098. Sorry for the noise.   I'll run the full set of tests  and commit if all goes well.\r\n\r\nKathey\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-04-24T21:14:05.573+0000","updated":"2008-04-24T21:14:05.573+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12592367","id":"12592367","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Good to hear.\r\nI'm open to look into any issues you might find in this area after your latest test cycle has completed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-25T13:01:01.039+0000","updated":"2008-04-25T13:01:01.039+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12372921/comment/12592413","id":"12592413","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Resolving for 10.3.2.2. Assigning to Kristian since we went with his fix in the end.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-04-25T15:46:51.556+0000","updated":"2008-04-25T15:46:51.556+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2892/votes","votes":4,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06ron:"}}