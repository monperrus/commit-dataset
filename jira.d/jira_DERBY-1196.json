{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12331833","self":"https://issues.apache.org/jira/rest/api/latest/issue/12331833","key":"DERBY-1196","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-04-12 08:18:40.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22364","customfield_12310222":"1_*:*_1_*:*_2130000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_27000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-04-10T01:10:21.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1196/watchers","watchCount":0,"isWatching":false},"created":"2006-04-10T00:34:51.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2006-04-13T00:32:09.000+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11410","id":"11410","name":"Network Server"}],"timeoriginalestimate":null,"description":"There is a bug in  Network Server that it closes prepared statements if\nan error occurs during execution on OPNQRY (usually PreparedStatement.execute())\nBasically the problem is this code in DRDAConnThread.java\nprocessCommands() which catches any exception that occurs during  OPNQRY\nand closes the prepared statement .  OPNQRY is just the statement execution and any statement level exceptions should not cause the statement to be closed.\n\ncatch (SQLException e)\n                    {\n                        writer.clearDSSesBackToMark(writerMark);\n                        try {\n                            // Try to cleanup if we hit an error.\n                            if (ps != null)\n                                ps.close();\n                            writeOPNQFLRM(e);\n                        }\n                        catch (SQLException pse) {}\n                        errorInChain(e);\n                    }\n\n\nThere are cases in jdbcapi/setTransactionIsolation when run with JCC that trigger this case and yield a \n'Statement' already closed message. \n\nThis was the core issue with DERBY-1047 but there were problems with the DERBY-1047 Jira entry in that the description of the problem was wrong and also the issue itself no longer occurs with the fix for DERBY-1158.\nDERBY-1047 will be closed invalid and this issue will be used to  track  the fix.\n\n\n\n\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"40752","summary":"Network server closes  prepared statements  prematurely if  exception occurs during OPNQRY  and can cause \"'Statement' already closed\" exception on reexecution","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":7,"total":7,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12331833/comment/12373781","id":"12373781","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Checked this fix into the trunk:\r\n\r\nDate: Sun Apr  9 10:05:51 2006\r\nNew Revision: 392781\r\n\r\nURL: http://svn.apache.org/viewcvs?rev=392781&view=rev\r\nLog:\r\nDERBY-1196 Network server closes prepared statements prematurely if exception occurs during OPNQRY \r\n\r\n- Takes out close of prepared statement on exception in OPNQRY in DRDAConnThread processCommands\r\n- Updates the JCC master for derbnet/setTransactionIsolation.  \r\n  This test was getting Statement already closed errors for valid statements with JCC that are no longer in the master.\r\n- Enables test for DERBY-1047 in checkDataSource ( Note this case actually passes withtout the fix because of the fix for DERBY-1158)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-04-10T01:10:21.000+0000","updated":"2006-04-10T01:10:21.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12331833/comment/12374119","id":"12374119","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"The checkin for this issue is causing a new failure in the ODBC tests that I've been running--but I'm not sure if it's a \"regression\" or not.  Please keep reading for more details.\r\n\r\nThe ODBC test that is seeing the failure is attempting to execute a SELECT query with 5 sets of parameters in a batch-like fashion, where the middle set fails with an execution-time error.  Prior to the fix for this issue the ODBC client could retrieve the 1st and 2nd result sets, would see an \"invalid cursor state\" for the 3rd result set, and then attempts to retrieve the 4th and 5th result sets would result in a \"statement is already closed\" error.  After the fix, though, that same situation leads to an ASSERT failure in the Derby engine:\r\n\r\norg.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED ProjectRestrictResultSet already open\r\n\tat org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java(Compiled Code))\r\n\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:154)\r\n\tat org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:251)\r\n...\r\n\r\nI wrote code to try to do the same thing using the PreparedStatement.addBatch() functionality with the Java clients, but both the Derby Client and the JCC client  throw client-side errors saying: \"Batching of queries not allowed by J2EE compliance.\"  Derby embedded fails as well, but with an error saying \"Statement.executeUpdate() cannot be called with a statement that returns a ResultSet.\"\r\n\r\nIt appears that, somehow, the ODBC client is able to get this batch-like behavior to work with the Network Server, even though there doesn't appear to be a way to do it from Java.  Or at least that's true based on my own little experiments: namely, if I remove the execution-time error from the above scenario, the server will correctly execute all five queries and return 5 result sets, which the ODBC client can then retrieve and process as normal using the ODBC equivalent to \"getMoreResults()\" and \"getResultSet()\".\r\n\r\nSo I'm wondering if this constitutes a regression or not?  The apparent regressed behavior is not visible from Java because both clients (and Derby embedded) disallow the operation.  But the behavior does appear to have \"regressed\" for ODBC clients that allow batch-like execution of SELECT queries.  Of course, I'm not sure what the ODBC behavior is supposed to be in the case of a failed query--with DB2, the failed query simply won't return a result set, so only 4 result sets will be returned to the client.  Derby Network Server has never matched that behavior--before the fix for this issue we returned 2 result sets and then closed the prepared statement; after the fix we return 2 result sets and then fail with an assert.\r\n\r\nSo in short: is this a case of regressed behavior, or a case of functionality that has never technically worked (at least not correctly) failing in a different way?  If it's not a regression, then what's the best way to address this?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-04-12T08:18:40.000+0000","updated":"2006-04-12T08:18:40.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12331833/comment/12374120","id":"12374120","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"As a follow-up comment, for what it's worth, I commented out two places where we have ASSERT checks (one in ProjectRestrictResultSet and one in TableScanResultSet) and when I did, things actually worked quite well.  Namely, the ODBC client was able to fetch the 1st and 2nd result sets, then it received an \"invalid cursor state\" for the 3rd result set, and finally was able to retrieve the 4th and 5th result sets without a problem.\r\n\r\nThis means that if I was to run the ODBC tests against an insane build, the queries would actually \"work\" in a manner of speaking.\r\n\r\nThe comments for the ASSERT check in ProjectRestrictNode say the following:\r\n\r\n\t\t// REVISIT: through the direct DB API, this needs to be an\r\n\t\t// error, not an ASSERT; users can open twice. Only through JDBC\r\n\t\t// is access to open controlled and ensured valid.\r\n\t\tif (SanityManager.DEBUG)\r\n\t\t    SanityManager.ASSERT( ! isOpen, \"ProjectRestrictResultSet already open\");\r\n\r\nPerhaps this part of the code has to be \"revisited\", as the comment says...?\r\n\r\nI don't know if that's helpful or not; I'm just posting I've observed...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-04-12T08:42:05.000+0000","updated":"2006-04-12T08:42:05.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12331833/comment/12374121","id":"12374121","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Since really network server is a DRDA to JDBC converter,  it translates the DRDA into embedded calls.  \r\nSince DRDA does not have the protocol for  batched statements,  The clients generally  just flow repeated executions which the server executes one by one.   OPNQRY  converts to the embedded call PreparedStatement.execute().   I don't think it uses any internal API's for this code path.\r\nDo you know what direct DB API means?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-04-12T08:58:57.000+0000","updated":"2006-04-12T08:58:57.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12331833/comment/12374193","id":"12374193","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"It seems like there must be an embedded reproduction for the ASSERTION.  From the description it seems like:\r\n\r\n1) The statement was executed (PreparedStatement.execute() )once and got some exception.\r\n    This exception used result in the statement getting closed, but no longer is that the case.\r\n2) The statement gets executed a second time and gets this ASSERTION because the result set is open\r\n\r\nI am curious what the original exception was.     It seems like the best course of action is to get an embedded repro for the ASSERTION and then fix that bug.  It seems like either the embedded driver should have closed the result set with the original exception or  as  the comment says, the exception that the result set is still open should be a real error.  We'd have to see what the original exception was  to know which is the case.\r\n\r\nKathey\r\n\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-04-12T22:26:29.000+0000","updated":"2006-04-12T22:26:29.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12331833/comment/12374197","id":"12374197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Do you know what direct DB API means? \r\n\r\nNo, I do not...\r\n\r\n> I am curious what the original exception was.\r\n\r\nIt was a divide-by-zero exception.\r\n\r\n> It seems like the best course of action is to get an embedded repro for the ASSERTION. \r\n\r\nOkay, I will see if I can do that based on your 2-step scenario (thanks for breaking it down).\r\n\r\n> It seems like either the embedded driver should have closed the result set with the\r\n> original exception or as the comment says, the exception that the result set is still\r\n> open should be a real error.\r\n\r\nSo given that the exception is a divide-by-zero error, which behavior would seem like the correct one?  For the record, the behavior I see when I remove the ASSERTs matches at least one version of DB2 server--that doesn't necessarily mean it's right, but it does suggest that just closing the result set is a viable option, as opposed to throwing the error.\r\n\r\nI'll try to get an embedded reproduction and will post the results.  Thanks for the feedback.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-04-12T22:43:34.000+0000","updated":"2006-04-12T22:43:34.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12331833/comment/12374211","id":"12374211","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"With Kathey's suggestion I was able to write a simple reproduction for the ASSERT failure.  I created a new issue, DERBY-1208, and attached the repro to that issue.  Since the problem reproduces against embedded mode, I think it's safe to say that it is not a regression caused by changes for this issue (1196).  So sorry for the miscue--and thanks again to Kathey for the input.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-04-13T00:32:09.000+0000","updated":"2006-04-13T00:32:09.000+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1196/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i07c9b:"}}