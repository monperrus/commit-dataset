{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12438441","self":"https://issues.apache.org/jira/rest/api/latest/issue/12438441","key":"DERBY-4413","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314182","id":"12314182","description":"Old head of 10.5 branch","name":"10.5.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-10-23 06:07:37.907","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24241","customfield_12310222":"1_*:*_1_*:*_448317777_*|*_6_*:*_1_*:*_18385949207_*|*_5_*:*_2_*:*_3232048709_*|*_4_*:*_2_*:*_420744235","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-07-06T18:51:14.630+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4413/watchers","watchCount":0,"isWatching":false},"created":"2009-10-19T12:26:54.702+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314116","id":"12314116","description":"10.5.2 Release July 30 2009 (794445) Now deprecated","name":"10.5.2.0","archived":false,"released":true,"releaseDate":"2009-07-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314117","id":"12314117","description":"Next release after 10.5.2.0 release candidate #1","name":"10.5.3.0","archived":false,"released":true,"releaseDate":"2009-08-21"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12327813","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12327813","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12440634","key":"DERBY-4442","self":"https://issues.apache.org/jira/rest/api/2/issue/12440634","fields":{"summary":"Evaluation of default value and identity in an INSERT result set evaluated too early.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12332791","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12332791","type":{"id":"12310040","name":"Required","inward":"is required by","outward":"requires","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310040"},"inwardIssue":{"id":"12468384","key":"DERBY-4728","self":"https://issues.apache.org/jira/rest/api/2/issue/12468384","fields":{"summary":"10.5 backport effort tracking issue ","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/task.png","name":"Task","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-13T17:23:26.841+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"When a generated column is present in a table, an INSERT DISTINCT fail:\r\nRepro:\r\n\r\ncreate table t(i integer, \r\n               j integer not null generated always as (i*66));\r\ninsert into t(i) values 1,2;\r\ninsert into t(i) select distinct i from t;\r\n\r\nIn an insane build we see this assertFailure:\r\n\r\nij version 10.5\r\nij> connect 'jdbc:derby:wombat2;create=true';\r\nij> create table t(i integer, \r\n               j integer not null generated always as (i*66));\r\n0 rows inserted/updated/deleted\r\nij> insert into t(i) values 1,2;\r\n2 rows inserted/updated/deleted\r\nij> insert into t(i) select distinct i from t;\r\nERROR XJ001: Java exception: 'ASSERT FAILED col[1]  is null: org.apache.derby.shared.common.sanity.AssertFailure'.\r\njava.sql.SQLException: Java exception: 'ASSERT FAILED col[1]  is null: org.apache.derby.shared.common.sanity.AssertFailure'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)\r\n\tat org.apache.derby.impl.jdbc.Util.javaException(Util.java:244)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2201)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1323)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)\r\n\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:505)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:347)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)\r\n\tat org.apache.derby.impl.tools.ij.Main.go(Main.java:217)\r\n\tat org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)\r\n\tat org.apache.derby.impl.tools.ij.Main.main(Main.java:75)\r\n\tat org.apache.derby.tools.ij.main(ij.java:59)\r\n\tat org.apache.derby.iapi.tools.run.main(run.java:53)\r\nCaused by: java.sql.SQLException: Java exception: 'ASSERT FAILED col[1]  is null: org.apache.derby.shared.common.sanity.AssertFailure'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)\r\n\t... 18 more\r\nCaused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED col[1]  is null\r\n\tat org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)\r\n\tat org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)\r\n\tat org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(MergeSort.java:458)\r\n\tat org.apache.derby.impl.store.access.sort.MergeInserter.insert(MergeInserter.java:98)\r\n\tat org.apache.derby.impl.sql.execute.SortResultSet.loadSorter(SortResultSet.java:317)\r\n\tat org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:268)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.openCore(NormalizeResultSet.java:139)\r\n\tat org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:415)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:297)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)\r\n\t... 11 more","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37661","summary":"INSERT from SELECT DISTINCT gives assertFailure (sane), or  NPE (insane) in presence of generated columns","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":22,"total":22,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12767311","id":"12767311","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"If I use a default value rather than a GENERATED ALWAYS AS, it works\r\nas expected.\r\n\r\nIt seems the generated values are computed deferredly,\r\ni.e. when row is to be inserted (InsertResultSet), whereas default\r\nvalues are generated along with the rest of the columns. This causes a\r\nproblem for the sorter in the former case.\r\n\r\nDefault values are handled via this logic:\r\n\r\nCf. InsertNode#bindStatement -> InsertNode#enhanceAndCheckForAutoincrement ->\r\n    ResultSetNode#enhanceRCLForInsert -> genNewRCForInsert (ca line 1149)\r\n\r\nwhereas generated columns are explicitly deferred in that code\r\nand handled here:\r\n    InsertNode#bindStatement -> parseAndBindGenerationClauses\r\n\r\nSince generated columns are not bound down through the \"enhanced\"\r\nresult set's RCL, code is not generated for the \"null\" constants left\r\nby enhanceRCLForInsert, and the sorter crashes.\r\n\r\nNote that the RC has an expression containing an untyped NULL,\r\nso it seems the column is not well-formed when the sorter sees it.\r\n\r\n   org.apache.derby.impl.sql.compile.ResultColumn@9dca26\r\n   exposedName: null\r\n   name: J\r\n   tableName: null\r\n   isDefaultColumn: false\r\n   wasDefaultColumn: false\r\n   isNameGenerated: false\r\n   sourceTableName: null\r\n   type: INTEGER NOT NULL\r\n   columnDescriptor: columnName: J\r\n   columnPosition: 2\r\n   columnType: INTEGER NOT NULL\r\n   columnDefault: null\r\n   uuid: eb0f4097-0124-6cc9-1ba1-000003db0968\r\n   defaultUUID: c3350098-0124-6cc9-1ba1-000003db0968\r\n   \r\n   isGenerated: false\r\n   isGeneratedForUnmatchedColumnInInsert: true\r\n   isGroupingColumn: false\r\n   isReferenced: true\r\n   isRedundant: false\r\n   virtualColumnId: 2\r\n   resultSetNumber: -1\r\n   dataTypeServices: INTEGER NOT NULL\r\n   expression:             \r\n      org.apache.derby.impl.sql.compile.UntypedNullConstantNode@1429cb2\r\n      value: null\r\n      dataTypeServices: null\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-19T12:36:35.519+0000","updated":"2009-10-19T12:39:23.840+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12768969","id":"12768969","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Attaching a patch which makes DISTINCT work.  It turns out that\r\nuntyped nulls (as used in the query tree for generated columns), do\r\nnot generate any code, so the column will be empty while the result\r\nset to be INSERTed is being constructed (at execution time). This is\r\nOK since the value will be filled in later (by InsertResultSet's call\r\nevaluateGenerationClauses).\r\n\r\nThis small patch makes sorted result sets accept (ignore, really)\r\nempty columns, which is OK I think, since they are not part of the\r\nsort key anyway. Added a new test case to GeneratedColumnsTest.\r\n\r\nRunning regressions.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-22T23:27:26.516+0000","updated":"2009-10-22T23:36:57.966+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12768971","id":"12768971","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"For the record, I found this issue when trying to warm up Bryan's patch for DERBY-4 to allow\r\nINSERT with ORDER BY on the result set as part of investigating DERBY-4397 (ORDER BY in subqueries).\r\nSince DISTINCT in this issue requires a sort, the cases hit the same problem.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-22T23:34:48.717+0000","updated":"2009-10-22T23:34:48.717+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769100","id":"12769100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for the fix, Dag. Perhaps it would be worth adding one-line comments in BasicSortObserver and MergeSort that state when the column is expected to be null, and perhaps also that the column cannot be part of the sort key. Instead of removing the assert in MergeSort when the column is null, we may want to replace it with a check for whether the column is part of the sort key, and fail if it is.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-23T06:07:37.907+0000","updated":"2009-10-23T06:07:37.907+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769120","id":"12769120","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"You have probably already considered this, but do you think it would work to make enhanceAndCheckForAutoIncrement() insert a node between the InsertNode and its child, and modify the RCL of the inserted node instead of the RCL of the child? I was thinking that it might make the code more robust against bugs such as this one, DERBY-4419 and DERBY-4420. And it also sounds (slightly) cheaper to add the stubs for the generated columns after the result has been sorted, as there will be less data to process for the sorter.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-23T07:17:42.837+0000","updated":"2009-10-23T07:17:42.837+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769223","id":"12769223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks for the tidy patch, Dag. I agree with Knut that it might be good to assert that the null value is not part of the sort key. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-10-23T13:39:55.673+0000","updated":"2009-10-23T13:39:55.673+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769279","id":"12769279","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks for the comments, guys. Yes, I will add the assert that the\r\ncolumn is not part of the key; good improvement, and some more\r\ncomments.\r\n\r\nCurrently, columns that are auto generated (BY IDENTITY) are\r\nconstructed early (general generated columns have only the stubs) and\r\nwill be along in the sort. That early approach also led to the the\r\neffect that Bryan saw in DERBY-4. I think it would better (and more\r\ncorrect if I read the standard correctly) to compute those values when\r\nthe row is being inserted (as is currently done for the (general)\r\ngenerated columns (\"late\"). I'd like to look at that, but I think this\r\npatch could go in an an incremental improvement first.\r\n\r\nInteresting about the similarity with DERBY-4419 and DERBY-4420,\r\nKnut. As for adding an intermediary node, I guess that could work for\r\nSELECT, but would it work for a VALUES clause that specified\r\n\"DEFAULT\"? It seems we would have to remove explicit DEFAULT column\r\nvalues from the RCL to get uniform treatment then? (I.e. a result set\r\ntree devoid of any generated columns, and maybe of plain DEFAULT\r\ncolumns as well?) However, if we managed to do this, it might solve\r\n4419/4420 too. As for cheaper, sorting the stubs for (general)\r\ngenerated columns is probably cheaper than sorting the BY IDENTITY\r\nvalues, since those columns are not empty. Instantiating By IDENTITY\r\n(and possible plain DEFAULT) late rather than early would save (more)\r\ncycles, too.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-23T16:19:53.676+0000","updated":"2009-10-23T16:19:53.676+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769307","id":"12769307","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Good point about the VALUES (DEFAULT), Dag. I didn't think about that case. I wonder what that would mean if we have an ORDER BY on a generated column, like in the query below (the syntax not allowed yet - DERBY-4):\r\n\r\n  INSERT INTO T(X) VALUES (DEFAULT), (DEFAULT) ORDER BY 1\r\n\r\nI'd assume that the columns that we sort on must be generated before the rows are sent through the sorter. But then it would break the rule that the value must be computed when the row is being inserted.\r\n\r\nI agree that the current patch is a good incremental improvement, and my question about adding an intermediary node was out of curiosity and not a request for a different approach.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-23T17:16:48.949+0000","updated":"2009-10-23T17:16:48.949+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769373","id":"12769373","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks, Knut. Interesting corner case; I'll see if I can get any help from the standard on that one :) ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-23T19:15:26.325+0000","updated":"2009-10-23T19:15:26.325+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769454","id":"12769454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Just for the record... Before DERBY-1644, enhanceRCLForInsert() did insert a ProjectRestrictNode on top of the existing node in order to add the generated columns, but only for set operations.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-23T21:12:52.397+0000","updated":"2009-10-23T21:12:52.397+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769492","id":"12769492","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Looking at the syntax for insert statement in SQL 2008, I conclude that\r\nan ORDER BY can not be attached to the INSERT INTO .. VALUES.\r\n\r\nSection 14.11 <insert statement>:\r\n    \r\n    <insert statement> ::=\r\n        INSERT INTO <insertion target> <insert columns and source>\r\n    \r\n    <insert columns and source> ::=\r\n        <from subquery>\r\n      | <from constructor>\r\n      | <from default>\r\n    \r\n    <from constructor> ::=\r\n      [ <left paren> <insert column list> <right paren> ]\r\n      [ <override clause> ]\r\n      <contextually typed table value constructor>\r\n    \r\n    \r\n    <contextually typed table value constructor> ::=\r\n      VALUES <contextually typed row value expression list>\r\n\r\nThis would not allow and ORDER BY.  However, looking at the <from\r\nsubquery> alternative:\r\n    \r\n    <from subquery> ::=\r\n      [ <left paren> <insert column list> <right paren> ]\r\n      [ <override clause> ]\r\n      <query expression>\r\n    \r\n    <query expression> ::=\r\n      [ <with clause> ] <query expression body>\r\n      [ <order by clause> ] [ <result offset clause> ] [ <fetch first clause> ]\r\n\r\nwe see that here we could supply an ORDER BY clause if we the VALUES\r\nclause can be derived from <query expression body>, and indeed it can:\r\n    \r\n    <query expression body> ::=\r\n        <query term>\r\n      | <query expression body> UNION [ ALL | DISTINCT ]\r\n          [ <corresponding spec> ] <query term>\r\n      | <query expression body> EXCEPT [ ALL | DISTINCT ]\r\n          [ <corresponding spec> ] <query term>\r\n    \r\n    <query term> ::=\r\n        <query primary>\r\n      | <query term> INTERSECT [ ALL | DISTINCT ]\r\n          [ <corresponding spec> ] <query primary>\r\n    \r\n    <query primary> ::=\r\n        <simple table>\r\n      | <left paren> <query expression body>\r\n          [ <order by clause> ] [ <result offset clause> ] [ <fetch first clause> ] <right paren>\r\n    \r\n    <simple table> ::=\r\n        <query specification>\r\n      | <table value constructor>\r\n      | <explicit table>\r\n    \r\n    <table value constructor> ::=\r\n      VALUES <row value expression list>\r\n\r\nSo how to resolve this?\r\nFinally, looking closely, I found this (14.11, Syntactic Rule 17):\r\n\r\n    17) A <query expression> simply contained in a <from subquery> shall\r\n        not be a <table value constructor>.\r\n    \r\n    NOTE 391 - This rule removes a syntactic ambiguity; otherwise, \"VALUES (1)\" \r\n           could be parsed either as\r\n    \r\n    <insert columns and source> ::=\r\n        <from subquery> ::=\r\n        <query expression> ::=\r\n        <table value constructor> ::=\r\n        VALUES (1)\r\n    \r\n    or\r\n    \r\n    <insert columns and source> ::=\r\n        <from constructor> ::=\r\n        <contextually typed table value constructor> ::=\r\n        VALUES (1)\r\n\r\nSo, in conclusion, the <contextually typed table value constructor>\r\nderivation will prevail, and ORDER BY can not be attached to VALUES here. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-23T22:35:23.894+0000","updated":"2009-10-23T22:35:23.894+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769532","id":"12769532","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Dag said above: \"I think it would better (and more\r\ncorrect if I read the standard correctly) to compute those values when\r\nthe row is being inserted (as is currently done for the (general)\r\ngenerated columns (\"late\").\"\r\n\r\nI checked the standard again on this point, and the upshot is that\r\ndefaults and default generated valued for columns not supplied should\r\nbe constructed when the row is inserted:\r\n\r\nSection 14.11 (SQL 2008, part 2), General rules 5,6 and 7:\r\n\r\n\r\n5) QT is effectively evaluated before insertion of any rows into T.\r\n6) Let Q be the result of evaluating QT.\r\n7) For each row R of Q:\r\n\r\n   a) A candidate row of T is effectively created in which the value\r\n      of each column is its default value, as specified in the General\r\n      Rules of Subclause 11.5, \"default clause>\". The\r\n      candidate row consists of every column of T.\r\n      :\r\n\r\n   c) For each object column in the candidate row, let Ci be the\r\n      object column identified by the i-th <column name> in the\r\n      <insert column list> and let SVi be the i-th value of R.\r\n\r\n   d) For every Ci for which one of the following conditions is true:\r\n\r\n      i) Ci is not marked as unassigned and no underlying column of Ci\r\n      is a self-referencing column.\r\n      :\r\n\r\n      the General Rules of Subclause 9.2, \"Store assignment\", are applied\r\n      with Ci and SVi as TARGET and SOURCE, respectively. Ci is no longer\r\n      marked as unassigned.\r\n\r\nMy takeaway from this is that the defaults should be constructed as\r\neach row is picked form the fully evaluated result set (QA). With SQL\r\n2008, that result set may be sorted before insertion, e.g. as\r\n\r\n  CREATE TABLE t (i int generated always as identity, j int)\r\n  INSERT INTO t (j) SELECT j from sometab ORDER BY j\r\n\r\nWith the present implementation, the auto-increment happens \"early\"\r\n(before the sort) and would not be monotonically increasing in the\r\nresult set to be inserted, cf. Bryan's issue in DERBY-4.  For general\r\ngenerated columns, it happens at the right time (\"late\").  So, for\r\n\"DERBY-4397 Allow ORDER BY in subqueries\", we would need to move the\r\nauto-increment to \"late\" phase also to make it correct (not just a\r\nperformance issue).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-23T23:32:23.498+0000","updated":"2009-10-23T23:32:23.498+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769559","id":"12769559","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Uploading derby-4413-2, which checks that's we accept a null in the sanity check only if the column is not part of the sort key. It also adds comments as suggested. Re-running regressions with insane and sane modes (since code path varies).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-24T01:08:50.441+0000","updated":"2009-10-24T01:08:50.441+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769676","id":"12769676","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Regressions ran ok with both sane and insane jars.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-24T16:37:23.092+0000","updated":"2009-10-24T16:37:23.092+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12769677","id":"12769677","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Committed as svn 829410, resolving. We may want to backport this fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-24T16:58:52.385+0000","updated":"2009-10-24T16:58:52.385+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12783902","id":"12783902","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"After DERBY-4442 went in, the exception to the ASSERT check we made in the fix for this issue, could be rolled back, so as to provide a better internal consistency check. Attaching\r\nderby-4413-rollback to that end. I keep the extras test cases, though. Running regressions.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-11-30T22:33:35.690+0000","updated":"2009-11-30T22:33:35.690+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12784022","id":"12784022","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Regressions passed, committed the rollback patch as svn 885659, closing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-12-01T02:51:48.747+0000","updated":"2009-12-01T02:51:48.747+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12884453","id":"12884453","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"body":"Reopen to 10.5 back port","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"created":"2010-07-01T22:04:17.996+0000","updated":"2010-07-01T22:04:17.996+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12884933","id":"12884933","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"working on backporting this issue to 10.5.  DERBY-4419, DERBY-4413, DERBY-4425, and DERBY-4442 all seem related.  I am going to apply and checkin the backported changes to these issues in order.  I think the changes necessary are:\r\nDERBY-4413 #829410\r\nDERBY-4419 #831304\r\nDERBY-4425 #831319\r\nDERBY-4442 #885421\r\nDERBY-4413 #885659\r\nDERBY-4442 #888311","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2010-07-03T15:38:02.091+0000","updated":"2010-07-03T15:38:02.091+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12884978","id":"12884978","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"committed backport of #829410 from trunk to 10.5 branch.\r\n\r\nm105_jdk16:33>svn commit\r\nSending        .\r\nSending        java/engine/org/apache/derby/impl/sql/GenericColumnDescriptor.java\r\nSending        java/engine/org/apache/derby/impl/sql/execute/BasicSortObserver.java\r\nSending        java/engine/org/apache/derby/impl/store/access/sort/MergeSort.java\r\nSending        java/testing/org/apache/derbyTesting/functionTests/tests/lang/GeneratedColumnsTest.java\r\nTransmitting file data ....\r\nCommitted revision 960285.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2010-07-03T23:50:19.303+0000","updated":"2010-07-03T23:50:19.303+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12885423","id":"12885423","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"merged change #885659 from trunk to 10.5.\r\n\r\nm105_jdk16:99>svn commit\r\nSending        .\r\nSending        java/engine/org/apache/derby/impl/sql/execute/BasicSortObserver.java\r\nSending        java/engine/org/apache/derby/impl/store/access/sort/MergeSort.java\r\nTransmitting file data ..\r\nCommitted revision 960783.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2010-07-06T04:58:07.379+0000","updated":"2010-07-06T04:58:07.379+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12438441/comment/12885634","id":"12885634","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"backported all changes for this fix from trunk to 10.5, resolving as fixed and reassigning the orignal owner.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2010-07-06T18:51:14.594+0000","updated":"2010-07-06T18:51:14.594+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4413/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06t6f:"}}