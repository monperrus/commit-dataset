{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12509318","self":"https://issues.apache.org/jira/rest/api/latest/issue/12509318","key":"ARIES-669","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310981","id":"12310981","key":"ARIES","name":"Aries","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310981&avatarId=10065","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310981&avatarId=10065","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310981&avatarId=10065","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310981&avatarId=10065"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10520","id":"10520","description":"Apache Aries","name":"Aries"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12318855","id":"12318855","name":"proxy uber bundle 0.4","archived":true,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12318857","id":"12318857","name":"proxy.impl-0.4","archived":true,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2011-06-06 12:28:07.577","customfield_12312323":null,"customfield_12310420":"71345","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_673038419_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-06-13T12:43:51.892+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ARIES-669/watchers","watchCount":0,"isWatching":false},"created":"2011-06-05T17:46:33.499+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316139","id":"12316139","description":"","name":"0.4","archived":true,"released":false}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-10-26T16:18:30.121+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12314266","id":"12314266","name":"Proxy"}],"timeoriginalestimate":null,"description":"In order to make it easier for OWB to ignore the additional goo added by the proxy/weaving stuff, it should all be marked synthetic.  So far I've identified the added SerialVersionUID field and static_init_* methods as causing problems with the jcdi tck.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"166303","summary":"Proxy or weaving code should mark all its changes synthetic","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":9,"total":9,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13044586","id":"13044586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"body":"rev 1132463 fixes SerialVersionUID and static_init.  This commit copies asm code into aries, and we need to review how to attribute this properly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"created":"2011-06-05T17:48:39.414+0000","updated":"2011-06-05T17:48:39.414+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13044815","id":"13044815","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ricellis","name":"ricellis","emailAddress":"ricellis at uk dot ibm dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Richard Ellis","active":true},"body":"David,\r\nFirstly, I think it would be helpful to know what problems have been caused by the SerialVersionUUID and static_init_* methods. I'd like to know what it is about these additions that cause issues so we can avoid similar problems in future and so we can potentially identify other places in the proxy code that may cause similar issues. If you wouldn't mind, please could you add that information to this JIRA?\r\n\r\nSecondly, the static_init_* methods are generated by the ASM StaticInitMerger class to merge multiple static inits (<clinit>)into a single one. So in the case where a class already has a <clinit> then the <clinit> should not be marked as synthetic, but the static_init_* methods probably should. However, the code from the original <clinit> is not really synthetic in this case. I think a danger here is that the debugger could get very confused if the class contains a <clinit>, but then the compiled class contains a synthetic <clinit>. Could you elaborate about if you have considered these cases in your patch?\r\n\r\nI don't want to look at your patch if it contains ASM code, because I'd like to be able to produce a clean implementation if necessary. Maybe the right thing to do here is remove the ASM StaticInitMerger wrapper and instead create our own code to do the following:\r\n1. If a class does not have a <clinit> add a synthetic <clinit>\r\n2. If a class already has a <clinit> then:\r\n -add a synthetic generated static_init_* method\r\n -add a call to the generated method from the existing <clinit>\r\n\r\nThanks\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ricellis","name":"ricellis","emailAddress":"ricellis at uk dot ibm dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Richard Ellis","active":true},"created":"2011-06-06T12:28:07.577+0000","updated":"2011-06-06T12:28:07.577+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13045066","id":"13045066","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"body":"\r\nCDI and the CDI tck pretty much assume that the class that goes into the testsuite is the one that is available to the tck.  There are a lot of requirements about whats allowed in classes and a lot of checks that what is in the tck source code is what is exposed through the cdi implementation class analysis.  I think its reasonable to have the CDI implementation ignore anything marked synthetic (or, for methods, bridge).  I think it's pretty unreasonable to make the cdi implementation have a configurable list of stuff to ignore that you have to configure for the particular byte code mangling frameworks present in your environment.\r\n\r\nThe SerialVersionUID field shows up in a search for fields detected by the CDI framework compared with the fields present in the original class.\r\nThe static_init method shows up in a list of methods compared to the methods present in the original class.\r\n\r\nI believe that a <clinit> method is ignored in any case, or possibly already present in the original class.  I didn't see a tck problem from this.\r\n\r\nIf you want any hope of this proxy code being generally usable in real life I'd suggest that you set up an environment with it and the jcdi RI and make sure that passes the jcdi tck.\r\n\r\nI haven't found a need to mark any <clinit> method synthetic, whether or not it was added by the proxy weaving code.  I think all I changed here was to mark the added static_init* method synthetic which seems fairly reasonable to me since it's added by asm and was not present in the original class. \r\n\r\n I don't know how the debugger deals with synthetic methods but I think that it already doesn't deal with the changes to every other method that has been modified.  When I step into a method in the debugger the first line is now always an error.  Is this covered in the documentation of this feature?\r\n\r\nI think your proposal is what the current code does, but I'm not enough of a byte-code expert to say for sure.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"created":"2011-06-06T20:19:09.070+0000","updated":"2011-06-06T20:19:09.070+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13045130","id":"13045130","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=timothyjward","name":"timothyjward","emailAddress":"timothyjward at hotmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Timothy Ward","active":true},"body":"Hi,\r\n\r\nThere is a slight difference between Richard's suggestion and the current code (based on what the ASM static init merger does). In the case that a class already has a static init block both the original static init and the aries proxy code will be added as static methods (not clinit), with a new static init added that calls both. With the new modifications both the Aries code and the original code will be marked synthetic, which is probably the wrong thing.to do\r\n\r\nI do agree with the aim of this JIRA though so I think it might be worth reverting the static init part to add in Richard's proposed fix asap.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=timothyjward","name":"timothyjward","emailAddress":"timothyjward at hotmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Timothy Ward","active":true},"created":"2011-06-06T21:30:01.778+0000","updated":"2011-06-06T21:30:01.778+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13045164","id":"13045164","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"body":"Your comment doesn't make sense to me.  How would you add an existing static init method?  Isn't it already there?\r\n\r\nHaving looked at the class file and jvm specs a little bit and guessed quite a bit I think that:\r\n\r\neach static code in the original source gets turned into a static_init_* method of some kind\r\n\r\neach class gets a <clinit> method that calls the static_init* methods in the order they appear in the original source code.  This is not supposed to be marked synthetic.\r\n\r\nI don't understand where the code from \r\n\r\nstatic int foo = 1;\r\n\r\ngoes.\r\n\r\nI think that you want aries to add another static_init_foo method to do something, and at this point I think you agree that it should be marked synthetic.\r\n\r\nI don't understand what the asm StaticInitMerger does.  From the name I would guess that it combines all the static_init methods into one.  I would expect this to possibly cause initialization order problems in some cases, but obviously I'm  not an expert.  In any case if it generates a new method that should be marked synthetic.  If it removes static_init methods I'd expect that to cause problems in some circumstances.\r\n\r\nI think what is least likely to cause problems would be if aries left the existing static init methods alone, added a new one for its own purposes, marked synthetic, and modified the <clinit> method to call the new static init method either before or after all the existing static init methods, as appropriate.  I'd hope this wouldn't use the StaticInitMerger class so we wouldn't need to modify or reimplement it.\r\n\r\nI'm also not clear whether you want to reimplement the asm serialVersionUID adder so you can have a clean-room one that marks the field synthetic.  I subclassed it and copied and modified the relevant method.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"created":"2011-06-06T22:11:53.360+0000","updated":"2011-06-06T22:11:53.360+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13045196","id":"13045196","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=timothyjward","name":"timothyjward","emailAddress":"timothyjward at hotmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Timothy Ward","active":true},"body":"I would probably also subclass the Serial version UID adder but then expose the has SVUID flag. I would then use this to make the SVUID synthetic as necessary and avoid copying any ASM source. The principle is more or less identical though.\r\n\r\nI can work through these changes in the morning assuming you don't mind a temporary reversion? It would be nice to get the clinit behaviour right (I think your previous comment hits the nail on the head for that one) and to avoid having any ASM licensed source if we don't really need it.\r\n\r\nTim","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=timothyjward","name":"timothyjward","emailAddress":"timothyjward at hotmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Timothy Ward","active":true},"created":"2011-06-06T23:05:04.536+0000","updated":"2011-06-06T23:05:04.536+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13045285","id":"13045285","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"body":"I hope you can figure out how to avoid copying the asm code.... I couldn't.  \r\n\r\nA short reversion should be fine, I'll try to let everyone working on this in geronimo know to expect this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djencks","name":"djencks","emailAddress":"djencks at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jencks","active":true},"created":"2011-06-07T05:47:02.894+0000","updated":"2011-06-07T05:47:02.894+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13045429","id":"13045429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ricellis","name":"ricellis","emailAddress":"ricellis at uk dot ibm dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Richard Ellis","active":true},"body":"A patch to avoid using the StaticInitMerger code, allowing us to mark our added init code as synthetic","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ricellis","name":"ricellis","emailAddress":"ricellis at uk dot ibm dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Richard Ellis","active":true},"created":"2011-06-07T13:55:12.115+0000","updated":"2011-06-07T13:55:12.115+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509318/comment/13046095","id":"13046095","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ricellis","name":"ricellis","emailAddress":"ricellis at uk dot ibm dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Richard Ellis","active":true},"body":"I've attached another patch SyntheticModifier.txt which is a class that gets run during the process-classes phase to add a synthetic modifier to the WovenProxy interface.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ricellis","name":"ricellis","emailAddress":"ricellis at uk dot ibm dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Richard Ellis","active":true},"created":"2011-06-08T17:26:07.489+0000","updated":"2011-06-08T17:26:07.489+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ARIES-669/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0stsf:"}}