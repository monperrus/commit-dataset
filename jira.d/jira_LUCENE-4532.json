{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12614689","self":"https://issues.apache.org/jira/rest/api/latest/issue/12614689","key":"LUCENE-4532","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12321140","id":"12321140","description":"Major release after 4.0","name":"4.1","archived":false,"released":true,"releaseDate":"2013-01-22"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321663","id":"12321663","description":"Current trunk","name":"Trunk","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-11-04 09:36:22.762","customfield_12312323":null,"customfield_12310420":"255111","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_268907818_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-11-07T11:33:25.235+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4532/watchers","watchCount":4,"isWatching":false},"created":"2012-11-04T08:51:37.431+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-03-22T16:19:28.707+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12314601","id":"12314601","name":"modules/facet","description":"Faceted Indexing & Search module"}],"timeoriginalestimate":null,"description":"The following failure on Jenkins:\r\n\r\n{noformat}\r\n> Build: http://jenkins.sd-datasolutions.de/job/Lucene-Solr-4.x-Windows/1404/\r\n> Java: 32bit/jdk1.6.0_37 -client -XX:+UseConcMarkSweepGC\r\n>\r\n> 1 tests failed.\r\n> REGRESSION:  org.apache.lucene.facet.taxonomy.directory.TestDirectoryTaxonomyReader.testRefreshReadRecreatedTaxonomy\r\n>\r\n> Error Message:\r\n>\r\n>\r\n> Stack Trace:\r\n> java.lang.ArrayIndexOutOfBoundsException\r\n>         at __randomizedtesting.SeedInfo.seed([6AB10D3E4E956CFA:BFB2863DB7E077E0]:0)\r\n>         at java.lang.System.arraycopy(Native Method)\r\n>         at org.apache.lucene.facet.taxonomy.directory.ParentArray.refresh(ParentArray.java:99)\r\n>         at org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.refresh(DirectoryTaxonomyReader.java:407)\r\n>         at org.apache.lucene.facet.taxonomy.directory.TestDirectoryTaxonomyReader.doTestReadRecreatedTaxono(TestDirectoryTaxonomyReader.java:167)\r\n>         at org.apache.lucene.facet.taxonomy.directory.TestDirectoryTaxonomyReader.testRefreshReadRecreatedTaxonomy(TestDirectoryTaxonomyReader.java:130)\r\n>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n>         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n>         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n>         at java.lang.reflect.Method.invoke(Method.java:597)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:79)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:737)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:773)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:787)\r\n>         at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\r\n>         at org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:51)\r\n>         at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n>         at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n>         at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n>         at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n>         at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n>         at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\r\n>         at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:782)\r\n>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:442)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:746)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:648)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:682)\r\n>         at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:693)\r\n>         at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n>         at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\r\n>         at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n>         at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\r\n>         at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\r\n>         at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n>         at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)\r\n>         at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n>         at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n>         at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\r\n>         at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\r\n>         at java.lang.Thread.run(Thread.java:662)\r\n>\r\n>\r\n>\r\n>\r\n> Build Log:\r\n> [...truncated 5664 lines...]\r\n> [junit4:junit4] Suite: org.apache.lucene.facet.taxonomy.directory.TestDirectoryTaxonomyReader\r\n> [junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestDirectoryTaxonomyReader -Dtests.method=testRefreshReadRecreatedTaxonomy -Dtests.seed=6AB10D3E4E956CFA -Dtests.slow=true -Dtests.locale=fr_CA -Dtests.timezone=Atlantic/Jan_Mayen -Dtests.file.encoding=US-ASCII\r\n> [junit4:junit4] ERROR   0.06s | TestDirectoryTaxonomyReader.testRefreshReadRecreatedTaxonomy <<<\r\n> [junit4:junit4]    > Throwable #1: java.lang.ArrayIndexOutOfBoundsException\r\n> [junit4:junit4]    >    at __randomizedtesting.SeedInfo.seed([6AB10D3E4E956CFA:BFB2863DB7E077E0]:0)\r\n> [junit4:junit4]    >    at java.lang.System.arraycopy(Native Method)\r\n> [junit4:junit4]    >    at org.apache.lucene.facet.taxonomy.directory.ParentArray.refresh(ParentArray.java:99)\r\n> [junit4:junit4]    >    at org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.refresh(DirectoryTaxonomyReader.java:407)\r\n> [junit4:junit4]    >    at org.apache.lucene.facet.taxonomy.directory.TestDirectoryTaxonomyReader.doTestReadRecreatedTaxono(TestDirectoryTaxonomyReader.java:167)\r\n> [junit4:junit4]    >    at org.apache.lucene.facet.taxonomy.directory.TestDirectoryTaxonomyReader.testRefreshReadRecreatedTaxonomy(TestDirectoryTaxonomyReader.java:130)\r\n> [junit4:junit4]    >    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n> [junit4:junit4]    >    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n> [junit4:junit4]    >    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n> [junit4:junit4]    >    at java.lang.reflect.Method.invoke(Method.java:597)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:79)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:737)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:773)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:787)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:51)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:782)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:442)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:746)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:648)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:682)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:693)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n> [junit4:junit4]    >    at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n> [junit4:junit4]    >    at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\r\n> [junit4:junit4]    >    at java.lang.Thread.run(Thread.java:662)\r\n> [junit4:junit4]   2> NOTE: test params are: codec=SimpleText, sim=RandomSimilarityProvider(queryNorm=true,coord=crazy): {}, locale=fr_CA, timezone=Atlantic/Jan_Mayen\r\n> [junit4:junit4]   2> NOTE: Windows 7 6.1 x86/Sun Microsystems Inc. 1.6.0_37 (32-bit)/cpus=2,threads=1,free=59103720,total=93417472\r\n> [junit4:junit4]   2> NOTE: All tests run in this JVM: [ObjectToIntMapTest, UnsafeByteArrayInputStreamTest, IntArrayTest, EncodingTest, CustomAssociationPropertyTest, TestDirectoryTaxonomyWriter, FacetSearchParamsTest, DefaultEnhancementsIndexingParamsTest, TestCategoryListCache, TestTopKInEachNodeResultHandler, AdaptiveAccumulatorTest, Vint8Test, TestScoredDocIdCollector, IntToIntMapTest, AssociationPropertyTest, TestMultiCLExample, ArrayHashMapTest, CategoryListIteratorTest, TestTopKResultsHandlerRandom, TestTotalFacetCounts, SamplingWrapperTest, TestCharBlockArray, IntToDoubleMapTest, TestFacetsCollector, TestFacetsAccumulatorWithComplement, SamplingAccumulatorTest, TestTopKResultsHandler, CategoryAttributesIterableTest, CategoryAttributesStreamTest, TestFacetArrays, TestCompactLabelToOrdinal, CategoryListPayloadStreamTest, CategoryTokenizerTest, TestAddTaxonomy, TestTotalFacetCountsCache, TestTaxonomyCombined, FacetsPayloadProcessorProviderTest, OrdinalPolicyTest, PathPolicyTest, TestScoredDocIDsUtils, TestDirectoryTaxonomyReader]\r\n> [junit4:junit4] Completed in 0.11s, 7 tests, 1 error <<< FAILURES!\r\n>\r\n> [...truncated 81 lines...]\r\n> BUILD FAILED\r\n> C:\\Users\\JenkinsSlave\\workspace\\Lucene-Solr-4.x-Windows\\build.xml:335: The following error occurred while executing this line:\r\n> C:\\Users\\JenkinsSlave\\workspace\\Lucene-Solr-4.x-Windows\\build.xml:39: The following error occurred while executing this line:\r\n> C:\\Users\\JenkinsSlave\\workspace\\Lucene-Solr-4.x-Windows\\lucene\\build.xml:519: The following error occurred while executing this line:\r\n> C:\\Users\\JenkinsSlave\\workspace\\Lucene-Solr-4.x-Windows\\lucene\\common-build.xml:1691: The following error occurred while executing this line:\r\n> C:\\Users\\JenkinsSlave\\workspace\\Lucene-Solr-4.x-Windows\\lucene\\module-build.xml:61: The following error occurred while executing this line:\r\n> C:\\Users\\JenkinsSlave\\workspace\\Lucene-Solr-4.x-Windows\\lucene\\common-build.xml:1163: The following error occurred while executing this line:\r\n> C:\\Users\\JenkinsSlave\\workspace\\Lucene-Solr-4.x-Windows\\lucene\\common-build.xml:827: There were test failures: 65 suites, 264 tests, 1 error, 2 ignored (1 assumption)\r\n>\r\n> Total time: 18 minutes 43 seconds\r\n> Build step 'Invoke Ant' marked build as failure\r\n> Archiving artifacts\r\n> Recording test results\r\n> Description set: Java: 32bit/jdk1.6.0_37 -client -XX:+UseConcMarkSweepGC\r\n> Email was triggered for: Failure\r\n> Sending email for trigger: Failure\r\n{noformat}","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10120","value":"Patch Available","id":"10120"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"83832","summary":"TestDirectoryTaxonomyReader.testRefreshReadRecreatedTaxonomy failure","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":14,"total":14,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13490147","id":"13490147","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Doesn't reproduce on my machine. I tried with -Dtests.iters=100 and still not reproducing. Will dig in the code ...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-04T09:03:17.737+0000","updated":"2012-11-04T09:03:17.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13490148","id":"13490148","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"The test isn't even concurrent (!), so why can't I reproduce !? Anyway, continue digging ...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-04T09:11:34.707+0000","updated":"2012-11-04T09:11:34.707+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13490151","id":"13490151","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"This looks like some sort of race condition -- I can't reproduce either but I can't get the code to even enter the block which caused this failure; in ParentArray:\r\n{code}\r\n    int num = indexReader.maxDoc();\r\n    if (prefetchParentOrdinal==null) {\r\n        ...\r\n    } else {\r\n        HERE?!\r\n    }\r\n{code}\r\n\r\nPerhaps if you try to make it enter that block it'll be more repeatable.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-11-04T09:36:22.762+0000","updated":"2012-11-04T09:36:22.762+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13490156","id":"13490156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Hmmm ... perhaps this explains the bug and why I cannot reproduce it. Here's a code snippet from DirTaxoReader.refresh():\r\n\r\n{code}\r\n    String t1 = indexReader.getIndexCommit().getUserData().get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME);\r\n    String t2 = r2.getIndexCommit().getUserData().get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME);\r\n    if (t1==null) {\r\n      if (t2!=null) {\r\n        r2.close();\r\n        throw new InconsistentTaxonomyException(\"Taxonomy was recreated at: \"+t2);\r\n      }\r\n    } else if (!t1.equals(t2)) {\r\n      r2.close();\r\n      throw new InconsistentTaxonomyException(\"Taxonomy was recreated at: \"+t2+\"  !=  \"+t1);\r\n    }\r\n{code}\r\n\r\nThe code compares the commit data that is known to the indexReader instance at hand, and the reopened one. If they do not match, it throws an exception, as this TaxoReader cannot be refreshed.\r\n\r\nThe commit data relies on timestamp, which is a bad thing in general, even if the timestamp is in nano-second granularity. So what happens if a machine is able to add a category and commit DirTW in the same nano-second? Or maybe just open DirTW with OpenMode.CREATE and close it? Or the clocks somehow get messed up? The two timestamps in the commit data may accidentally be the same, leading to the exception exposed by the stacktrace above.\r\n\r\nI tried to modify the test to always use RAMDirectory() and not add any categories, just recreate+close, but I couldn't reproduce it either. However, I tried that on my laptop, and the timestamp is nano-second, so it may not be fast enough.\r\n\r\nStill, I think that that is a potential bug and may explain the errors that we see. The test is single threaded, the seed ensures we reproduce everything right, so all is left to blame is the machine's clock :).\r\n\r\nI'll try to verify that a bit more, and on other machines, but I think that we should move to store an increment version number instead of timestamp.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-04T09:50:59.119+0000","updated":"2012-11-04T09:50:59.119+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13490535","id":"13490535","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"bq. This looks like some sort of race condition\r\n\r\nAs I wrote, the test is single-threaded and very simple, so there's no race condition here. Also, the method (DTR.refresh()) is synchronized.\r\n\r\nbq. I can't get the code to even enter the block which caused this failure\r\n\r\nThat's why you and I cannot reproduce it. If the problem is indeed as I described (related to the time measurement), then we won't be able to reproduce it (most likely) b/c the code will always (that's what the test counts on) fail fast by throwing the exception.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-05T09:40:58.948+0000","updated":"2012-11-05T09:40:58.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13490669","id":"13490669","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Patch contains the following fixes:\r\n\r\n* Addresses the current presumed test failure by moving to track taxonomy 'epoch' rather than creation time. The epoch is very similar to an index generation, only it is incremented whenever the taxonomy is re-created or replaced with another.\r\n\r\n* Addresses a possible race-condition in the constructor -- now the code first opens the IndexWriter to obtain the lock on the index directory, and only then reads the commitData.\r\n\r\nFacet tests pass. Patch is against 4x.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-05T14:53:06.981+0000","updated":"2012-11-05T14:53:06.981+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13490674","id":"13490674","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"+1\r\n\r\nVery nice to remove relying on timestamps ...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-11-05T15:02:10.553+0000","updated":"2012-11-05T15:02:10.553+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13490676","id":"13490676","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Patch applies against trunk as-is. Only CHANGES entry need to be moved to the 4.1.0 section, which I'll do before I commit. If there are no objections, I'd like to commit it tomorrow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-05T15:05:54.781+0000","updated":"2012-11-05T15:05:54.781+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13491466","id":"13491466","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"body":"Reviewed the patch - and it looks very good.\r\n\r\nA few comments:\r\n1. in TestDirectoryTaxonomyWriter.java, the error string _\"index.create.time not found in commitData\"_ should be updated.\r\n2. if the index creation time is in the commit data, it will not be removed - as the epoch is added to whatever commit data was read from the index. I think perhaps it should be removed?\r\n3. since the members related to the old 'timestamp' method are removed - no test could check the migration from old to new methods. Might be a good idea to add one with a comment to remove it when backward compatibility is no longer required (Lucene 6?).\r\n4. 'Epoch' is usually in the context of time, or in relation of a period. Perhaps the name 'version' is more closely related to the implementation?\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"created":"2012-11-06T14:04:57.731+0000","updated":"2012-11-06T14:04:57.731+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13491511","id":"13491511","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Thanks for the review.\r\n\r\nbq. in TestDirectoryTaxonomyWriter.java, the error string \"index.create.time not found in commitData\" should be updated.\r\n\r\ndone (will upload an updated patch soon)\r\n\r\nbq. if the index creation time is in the commit data, it will not be removed - as the epoch is added to whatever commit data was read from the index. I think perhaps it should be removed?\r\n\r\nNo quite. Every commit, DirTaxoWriter writes a new commitData, combining whatever commitData that is passed from the caller. But it does not merge it with the existing commitData. That's how IndexWriter works too, and it's the responsible of the caller to pass the commitData in every commit(), if he'd like to persist it.\r\nBut, DirTaxoReader does let you read the commitData and so it is possible that someone will obtain the commitData from DirTaxoReader (with the old property), add his stuff to it and pass that to DirTaxoWriter. I don't think that it's critical though, and I doubt if anyone does that.\r\n\r\nbq. ...no test could check the migration from old to new methods...\r\n\r\nRight, I'll add a test case.\r\n\r\nbq. 'Epoch' is usually in the context of time\r\n\r\nI don't think that it's critical. Version is problematic since Lucene already uses 'version' and 'generation'. I think that 'epoch' is fine, but if anyone has a better suggestion, I don't mind changing it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-06T15:11:43.676+0000","updated":"2012-11-06T15:11:43.676+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13491517","id":"13491517","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"bq. ...no test could check the migration from old to new methods...\r\n\r\nActually there was such test !. TestDirTaxoWriter.testUndefinedCreateTime. I'll rename it to testBackwardsComptability though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-06T15:15:50.908+0000","updated":"2012-11-06T15:15:50.908+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13491560","id":"13491560","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Patch addresses the comments. For now, I kept the 'epoch' wording, unless there's another suggestion.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-06T15:56:05.109+0000","updated":"2012-11-06T15:56:05.109+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13492281","id":"13492281","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Committed to trunk and 4.x. I didn't commit to 4.0.x because it seems we're not going to have a 4.0.1, but rather focus on 4.1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2012-11-07T11:33:25.244+0000","updated":"2012-11-07T11:33:25.244+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12614689/comment/13610586","id":"13610586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=commit-tag-bot","name":"commit-tag-bot","emailAddress":"root-jira-commit_tag_bot at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=commit-tag-bot&avatarId=16176","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=commit-tag-bot&avatarId=16176","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=commit-tag-bot&avatarId=16176","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=commit-tag-bot&avatarId=16176"},"displayName":"Commit Tag Bot","active":true},"body":"[branch_4x commit] Shai Erera\r\nhttp://svn.apache.org/viewvc?view=revision&revision=1406565\r\n\r\nLUCENE-4532: port from trunk\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=commit-tag-bot","name":"commit-tag-bot","emailAddress":"root-jira-commit_tag_bot at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=commit-tag-bot&avatarId=16176","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=commit-tag-bot&avatarId=16176","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=commit-tag-bot&avatarId=16176","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=commit-tag-bot&avatarId=16176"},"displayName":"Commit Tag Bot","active":true},"created":"2013-03-22T16:19:28.707+0000","updated":"2013-03-22T16:19:28.707+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4532/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0ep4f:"}}