{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12370876","self":"https://issues.apache.org/jira/rest/api/latest/issue/12370876","key":"DERBY-2758","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-06-05 07:40:25.128","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23225","customfield_12310222":"1_*:*_1_*:*_483367849_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_128080774","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-06-10T11:29:01.631+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2758/watchers","watchCount":0,"isWatching":false},"created":"2007-06-04T21:12:53.782+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12316315","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12316315","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12368656","key":"DERBY-2610","self":"https://issues.apache.org/jira/rest/api/2/issue/12368656","fields":{"summary":"Queries in metadata.properties allow tablepattern for JDBC methods that do not allow patterns","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.png","name":"Trivial","id":"5"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-06-30T15:55:46.518+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"},{"self":"https://issues.apache.org/jira/rest/api/2/component/11400","id":"11400","name":"Miscellaneous"}],"timeoriginalestimate":null,"description":"In Derby 10.2 and earlier an ODBC application which called the SQLForeignKeys function would return a set of \"imported\" and/or \"exported\" keys depending on the arguments passed in.  For more on that function and its arguments, see:\n\n  http://msdn.microsoft.com/library/default.asp?url=/library/en-us/odbc/htm/odbcsqlforeignkeys.asp\n\nIn particular we have the following (pasted from the above link):\n\n<begin paste>\n\nIf *PKTableName contains a table name, SQLForeignKeys returns a result set containing the primary key of the specified table and all of the foreign keys that refer to it. The list of foreign keys in other tables does not include foreign keys that point to unique constraints in the specified table.\n\nIf *FKTableName contains a table name, SQLForeignKeys returns a result set containing all of the foreign keys in the specified table that point to primary keys in others tables, and the primary keys in the other tables to which they refer. The list of foreign keys in the specified table does not contain foreign keys that refer to unique constraints in other tables.\n\nIf both *PKTableName and *FKTableName contain table names, SQLForeignKeys returns the foreign keys in the table specified in *FKTableName that refer to the primary key of the table specified in *PKTableName. This should be one key at most.\n\n<end paste>\n\nNote that either PKTableName or FKTableName could be missing, i.e. could be null.\n\nNow, in org/apache/derby/catalog/SystemProcedures.java, there is a static method called \"SQLFOREIGNKEYS\" which, to quote the javadoc, \"map[s] SQLForeignKeys to EmbedDatabaseMetaData.getImportedKeys, getExportedKeys, and getCrossReference\".\n\nThat method looks at some \"options\" that it receives from the client and makes a call to the corresponding method on EmbedDatabaseMetaData:\n\n        String exportedKeyProp = getOption(\"EXPORTEDKEY\", options);\n        String importedKeyProp = getOption(\"IMPORTEDKEY\", options);\n\n        if (importedKeyProp != null && importedKeyProp.trim().equals(\"1\"))\n            rs[0] = getDMD().getImportedKeys(fkCatalogName,\n                                        fkSchemaName,fkTableName);\n        else if (exportedKeyProp != null && exportedKeyProp.trim().equals(\"1\"))\n            rs[0] = getDMD().getExportedKeys(pkCatalogName,\n                                        pkSchemaName,pkTableName);\n        else\n            rs[0] = getDMD().getCrossReference (pkCatalogName,\n                                           pkSchemaName,\n                                           pkTableName,\n                                           fkCatalogName,\n                                           fkSchemaName,\n                                           fkTableName);\n\nThat said, when running with the DB2 Runtime Client the \"options\" argument only contains \"ODBC\"; it does not (appear to) contain \"IMPORTEDKEY\" nor \"EXPORTEDKEY\".  So with that client we ultimately end up calling \"getCrossReference()\" every time.  And in EmbedDatabaseMetaData.getCrossReference(), we see:\n\n    PreparedStatement s = getPreparedQuery(\"getCrossReference\");\n    s.setString(1, swapNull(primaryCatalog));\n    s.setString(2, swapNull(primarySchema));\n    s.setString(3, swapNull(primaryTable));\n    s.setString(4, swapNull(foreignCatalog));\n    s.setString(5, swapNull(foreignSchema));\n    s.setString(6, swapNull(foreignTable));\n    return s.executeQuery();\n\nThat is to say, if either primaryTable or foreignTable is null, we swap it with a \"%\" to be used for pattern matching.  Prior to the 10.3, that worked fine.  With DERBY-2610, though, the getCrossReference query in metadata.properties was changed to disallow pattern matching for the primary key:\n\n@@ -532,11 +532,15 @@\n #\n #param1 = pattern for the PRIMARY CATALOG name \n #param2 = pattern for the PRIMARY SCHEMA name \n-#param3 = pattern for the PRIMARY TABLE name \n+#param3 = PRIMARY TABLE name \n #\n #param4 = pattern for the FOREIGN CATALOG name ('%' for getExportedKeys())\n #param5 = pattern for the FOREIGN SCHEMA name ('%' for getExportedKeys())\n #param6 = pattern for the FOREIGN TABLE name ('%' for getExportedKeys())\n+#  DERBY-2610: did not change from pattern matching to \"T2.TABLENAME=?\" \n+#          because getExportedKeys uses this query with '%' for foreign table\n+#  Future: may want to add a new query for getExportedKeys to remove the\n+#          \"T2.TABLENAME LIKE ?\" pattern\n getCrossReference=\\\n SELECT CAST ('' AS VARCHAR(128)) AS PKTABLE_CAT, \\\n         PKTABLE_SCHEM, \\\n@@ -587,7 +591,7 @@\n                          WHERE \\\n                             ((1=1) OR ? IS NOT NULL) \\\n                             AND S.SCHEMANAME LIKE ? \\\n                             AND T.TABLENAME LIKE ? \\     <-- removed w/ DERBY-2610\n                             AND T.TABLENAME=? \\  <-- added with DERBY-2610\n                             AND S.SCHEMAID = T.SCHEMAID \\\n\nAs a result, the ODBC \"SQLForeignKeys\" function now returns zero rows because there is no table whose name equals the \"%\" that we swapped in for the null.\n\nI'm not sure what the best fix for this should be.  The JDBC API for getCrossReference() indicates that both primaryTable and foreignTable \"must match the table name as it is stored in the database\", so perhaps the bug is in SystemProcedures.java, where the SQLForeignKeys function is mapped to a getCrossReference() call that passes nulls.  But one could argue that, given the lack of information in the \"options\" string received from the client (esp. the missing \"IMPORTEDKEY\" or \"EXPORTEDKEY\" keywords), SystemProcedures.java is actually doing the right thing.  Either way, it's not immediately clear to me how this should best be resolved...\n\nI'm marking this as a 10.3 regression (with 10.3 fixin) since the behavior in the 10.3 trunk is different than what it was in previous releases.  If anyone disagrees with this, please feel free to say so and/or update accordingly.\n\nNote: I don't think this behavior is technically covered by the release note for DERBY-2610 because a) the release note does not mention getCrossReference() (should it??), and b) the call to \"getCrossReference()\" is made internally; a user's ODBC app would be calling SQLForeignKeys, for which a null primary/foreign table name are in fact perfectly legal.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38823","summary":"ODBC metadata function \"SQLForeignKeys\" returns different results in 10.3.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"DB2 Runtime Client running against Derby network server.","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10050","value":"Blocker","id":"10050"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":14,"total":14,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12501476","id":"12501476","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"Army, thanks for posting a very clear description of the problem.\r\n\r\nSince some of the methods that end up using the metadata.properties#getCrossReference query allow null values for table name while others don't, I think we should split the query into (at least) two queries. That way we can return correct results for both ?DBC, and possibly also fix the 2610-comment for the getCrossReference query at the same time (see metadata.properties).\r\n\r\nOf course, this comes with the cost of having to maintain an additional query.\r\n\r\nI also think the EmbedDatabaseMetaData#getCrossReference() method should be changed to not swap 'null' with '?' since the metadata query ignores it anyway.\r\n\r\nThus, as I see it, what needs to be done to get this right for all methods is to change SystemProcedures, EmbedDatabaseMetaData and metadata.properties so that calls to SystemProcedures#getCrossReference are mapped as follows:\r\n\r\nodbc sqlforeignkeys (and possibly other methods): \r\nEmbedDBMD#getCrossReferenceTablePattern() (incl swapNull) -> metadata#getCrossReferenceTablePattern (allows tablenamepatterns like before 2610)\r\n\r\njdbc methods (and possibly some odbc?):\r\nEmbedDBMD#getCrossReference() (without swapNull) -> metadata#getCrossReference (does not allow patterns)\r\n\r\nFinally, the aforementioned release note for 2610 should be changed as described by Army.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2007-06-05T07:40:25.128+0000","updated":"2007-06-05T07:40:25.128+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12501506","id":"12501506","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"If it is agreed upon that having one getCrossReference() method that allows table name values 'null' and one that does not in EmbedDatabaseMetaData, the one that does not allow null should throw an SQLException if a null value is found.  This is what happens in other similar methods in EmbedDatabaseMetaData. For details, see DERBY-1484.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2007-06-05T09:58:31.325+0000","updated":"2007-06-05T09:58:31.325+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12501599","id":"12501599","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thanks for your comments on this, Jørgen.  I think the addition of a new method \"getCrossReferenceTablePattern()\" is an acceptable approach for resolving this issue.  As you said, though, this is not ideal since it means we have to maintain another query that is almost identical to the existing getCrossReference query.  But that's probably better than breaking existing ODBC applications which may rely on the SQLForeignKeys function.\r\n\r\nA more ideal solution--but also more difficult--would be to somehow add logic to the existing java/build/org/apache/derbyBuild/ODBCMetadataGenerator class to internally create an ODBC \"version\" of getCrossReference() that accepts patterns.  That class contains several other cases where ODBC-specific queries are generated, so it'd be nice if code for this issue could go there, too.\r\n\r\nBut that may be asking too much given the current release plans for 10.3, so a new metadata query (as you suggested) seems like a viable short-term solution...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-06-05T15:55:59.757+0000","updated":"2007-06-05T15:55:59.757+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12502324","id":"12502324","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"Army, I like your solution of using ODBCMetadataGenerator to create the odbc version of the query better. I see no reason to not make this right in the first place, so I'm currently writing a patch using that technique.\r\n\r\nHowever, as I was working with ODBCMetadataGenerator, I stumbled across something that I think is a bug. Simply put, ODBCMetadataGenerator#generateODBCQuery removes \"order by\" from the original (jdbc) query and reattaches it in the  end, i.e. outside the subquery (because order by is not allowed inside a subquery). However, if the odbc query is created without a subquery, the stripped \"order by\" is never reattached. Compare getProcedures and odbc_getProcedures in classes/org/apache/derby/impl/jdbc/metadata.properties for an example.\r\n\r\nUnless my assumption is wrong, I'll attach the orderby String to the odbc queries (that do not use subqueries) as part of this patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2007-06-07T12:47:51.222+0000","updated":"2007-06-07T12:47:51.222+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12502360","id":"12502360","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"The patch (1) uses ODBCMetadataGenerator to create an odbc version of the getCrossReference metadata query.\r\n\r\nM      java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java\r\n\r\nAdded new method \"changeWhereClause\" that handles the \"T.TABLENAME=?\" to \"T.TABLENAME LIKE ?\" substitution. Also reattached \"order by\" to odbc queries that do not use subqueries, hence odbc queries are now ordered equally as their jdbc counterparts. See previous comment for details. \r\n\r\nM      java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java\r\n\r\ngetCrossReference (used by JDBC) now throws SQLException if any of the table names == null. Added new method getCrossReferenceForODBC that uses the new generated odbc version of the query.\r\n\r\nM      java/engine/org/apache/derby/catalog/SystemProcedures.java\r\n\r\nModified SQLFOREIGNKEYS. Now sends ODBC queries to EmbedDatabaseMetaData#getCrossReferenceForODBC, thus allowing table name values of null.\r\n\r\nsuites.all and derbyall completed without errors.\r\n\r\nP.S: Remember to run this patch against a new DB if you want to test it manually. I spent quite some time figuring out why it didn't work when I used an old DB. DataDictionaryImpl does not find the SPS (stored procedure statement) for odbc_getCrossReference since these are added at creation or upgrade time. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2007-06-07T14:34:09.405+0000","updated":"2007-06-07T14:34:09.405+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12502457","id":"12502457","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you very much for the patch, Jørgen.  And thanks especially for tackling the ODBCMetadataGenerator approach, as I think that's a better way to go.\r\n\r\nI reviewed the patch and it looks good to me.  Thanks for finding/fixing the ORDER BY bug, as well.  I applied the patch cleanly and then re-ran the ODBC test that first showed this regression; it now runs cleanly again.  So the patch looks good and it solves the problem as far as I can see.\r\n\r\nDo you have any plans/inclination to add an appropropriate test case to the current regression tests?  It's possible to \"fake\" an ODBC metadata call by passing in \"DATATYPE=ODBC\" as the last argument to some system procedures that already exist in Derby.  See in particular jdbcapi/odbc_metadata.java and jdbcapi/DatabaseMetaDataTest.java.  I think it should be possible to come up with a test case that mimics the actions in DatabaseMetaDataTest.checkGetTablesODBC(...) method, except that it would call SYSIBM.SQLFOREIGNKEYS instead of SYSIBM.SQLTABLES.  Is that something you'd be willing to look at?\r\n\r\nAs it is, I'm willing to commit the patch that you've posted as it looks correct and it solves the reported problem.  Unless I hear objections I'll try to do that later today.  But I think it'd be good get a test case, as well, so perhaps we can leave this issue Open until an appropriate test can be written.  Does that sound okay?\r\n\r\nThanks again for your quick work with this!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-06-07T18:17:04.311+0000","updated":"2007-06-07T18:17:04.311+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12502491","id":"12502491","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"Thank you for reviewing the patch, Army. \r\n\r\nI was rather surprised that all tests passed without modifications, which, as you say, indicates that new test cases are required.\r\nI'll look into the tests tomorrow or early next week. It would be great if the current patch was committed, though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2007-06-07T19:38:46.670+0000","updated":"2007-06-07T19:38:46.670+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12502540","id":"12502540","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"I ran derbyall and suites.All on SUSE Linux with ibm142 and there were no failures.  So I committed DERBY-2758-1.diff with svn # 545321:\r\n\r\n  URL: http://svn.apache.org/viewvc?view=rev&rev=545321\r\n\r\nLeaving the Jira open until an appropriate test case can be contributed.\r\n\r\nThanks again for addressing this issue, Jørgen.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-06-07T21:39:37.207+0000","updated":"2007-06-07T21:39:37.207+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12502810","id":"12502810","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"Army, because I am a little short of cycles I added the test to jdbcapi/metadata_test.java. I verified that jdbcapi, derbynetmats and derbynetclientmats run cleanly when run standalone. \r\n\r\nI am currently running the complete derbyall test, but expect it to complete without errors since the standalone tests work fine. The results will not be posted until monday, however. suites.all results in the same errors reported in tinderbox.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2007-06-08T14:12:21.381+0000","updated":"2007-06-08T14:12:21.381+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12503161","id":"12503161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The test patch looks good and metadata/odbc_metadata ran cleanly under embedded, network client and JCC. Committed revision 545865.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-06-10T11:29:01.603+0000","updated":"2007-06-10T11:29:01.603+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12503163","id":"12503163","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"Thank you for reviewing and committing the patch, Knut.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2007-06-10T11:51:32.607+0000","updated":"2007-06-10T11:51:32.607+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12503298","id":"12503298","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"Just to confirm; derbyall runs the testpatch cleanly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2007-06-11T06:33:28.356+0000","updated":"2007-06-11T06:33:28.356+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12503665","id":"12503665","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"I started looking at the JUnit aspect of this test case last Friday so even though the odbc_metadata changes have gone in (thanks Jørgen for the patch, and Knut Anders for the commit)), I decided to commit another test case for JUnit, as well.  The patch d2758_junit_test.patch has the new test fixture, which is in DatabaseMetaDataTest.java.\r\n\r\nI verified that the new test fixture runs cleanly in the current trunk and fails if the fix for this issue is backed out.  So committed with svn # 546312:\r\n\r\n  URL: http://svn.apache.org/viewvc?view=rev&rev=546312\r\n\r\nThanks again for resolving this issue, Jørgen.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-06-11T23:01:33.659+0000","updated":"2007-06-11T23:01:33.659+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12370876/comment/12503668","id":"12503668","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Issue fixed and test cases committed, so marking as closed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-06-11T23:03:42.398+0000","updated":"2007-06-11T23:03:42.398+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2758/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i070cn:"}}