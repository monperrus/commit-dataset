{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12506629","self":"https://issues.apache.org/jira/rest/api/latest/issue/12506629","key":"DERBY-5223","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317968","id":"12317968","description":"second release on the 10.8 branch","name":"10.8.2.2","archived":false,"released":true,"releaseDate":"2011-10-24"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12316344","id":"12316344","description":"First release on the 10.9 branch","name":"10.9.1.0","archived":false,"released":true,"releaseDate":"2012-06-25"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2011-05-10 13:33:19.25","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24719","customfield_12310222":"1_*:*_1_*:*_6841993682_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-07-27T20:59:12.467+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-5223/watchers","watchCount":0,"isWatching":false},"created":"2011-05-09T16:25:58.797+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316362","id":"12316362","description":"First release on the 10.8 branch","name":"10.8.1.2","archived":false,"released":true,"releaseDate":"2011-04-29"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12341290","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12341290","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"inwardIssue":{"id":"12469090","key":"DERBY-4741","self":"https://issues.apache.org/jira/rest/api/2/issue/12469090","fields":{"summary":"Make embedded Derby work reliably in the presence of thread interrupts","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-10-25T17:09:43.124+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"}],"timeoriginalestimate":null,"description":"Sometimes we have this this stack trace on the log from SuitesAll:\r\n\r\n.Exception in thread \"WorkerThread. Thread#5\" junit.framework.AssertionFailedError\r\n        at junit.framework.Assert.fail(Assert.java:47)\r\n        at junit.framework.Assert.assertTrue(Assert.java:20)\r\n        at junit.framework.Assert.assertTrue(Assert.java:27)\r\n        at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest$WorkerThread.run(InterruptResilienceTest.java:430) \r\n\r\nThis happens sometimes when the application thread's interrupt flag is set before we enter a Derby API call, but the flag is cleared on return contrary to our specified behavior.\r\n\r\nCf mention on https://issues.apache.org/jira/browse/DERBY-5081?focusedCommentId=13030155&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13030155\r\n\r\nI can reproduce this every 20 runs or so on Linux with JDK7, but it has been seen also on Windows, so it is not VM specific.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"36218","summary":"Thread's interrupted flag not always preserved after Derby returns from JDBC API call","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":7,"total":7,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12506629/comment/13030803","id":"13030803","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"I instrumented this and retrieved the following stack trace which shows where Derby detected the interrupt, but failed to preserve the flag.\r\nNotice that on the stack we have the frame:\r\n\r\n    GenericLanguageConnectionContext.initialize(GenericLanguageConnectionContext.java:401)\r\n\r\nThe variable interruptedException is set to null just *after* that call, which is clearly wrong: the null initialization happens too late since, in this case, the connection has seen an interrupt in the line above, i.e. \"setDefaultSchema(initDefaultSchemaDescriptor());\".\r\n\r\nHence, we lose the information that Derby has seen an interrupt and temporarily proceeded with the flag cleared (so that NIO can complete ok). On return from \r\nthe connect call, the flag is thus never set back on again.\r\n\r\n..java.lang.Exception: Stack trace\r\n        at java.lang.Thread.dumpStack(Thread.java:1342)\r\n        at org.apache.derby.iapi.util.InterruptStatus.setInterrupted(InterruptStatus.java:83)\r\n        at org.apache.derby.impl.store.raw.data.BasePage.setExclusive(BasePage.java:1689)\r\n\tat org.apache.derby.impl.store.raw.data.BaseContainer.latchPage(BaseContainer.java:527)\r\n\tat org.apache.derby.impl.store.raw.data.FileContainer.latchPage(FileContainer.java:3530)\r\n\tat org.apache.derby.impl.store.raw.data.FileContainer.getUserPage(FileContainer.java:2549)\r\n\tat org.apache.derby.impl.store.raw.data.FileContainer.getPage(FileContainer.java:2591)\r\n\tat org.apache.derby.impl.store.raw.data.BaseContainerHandle.getPage(BaseContainerHandle.java:319)\r\n\tat org.apache.derby.impl.store.access.btree.ControlRow.get(ControlRow.java:833)\r\n\tat org.apache.derby.impl.store.access.btree.ControlRow.get(ControlRow.java:820)\r\n\tat org.apache.derby.impl.store.access.btree.BTreeScan.positionAtStartForForwardScan(BTreeScan.java:361)\r\n\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.positionAtStartPosition(BTreeForwardScan.java:70)\r\n\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(BTreeForwardScan.java:122)\r\n\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(BTreeScan.java:1599)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(DataDictionaryImpl.java:9288)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(DataDictionaryImpl.java:9212)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(DataDictionaryImpl.java:1722)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(DataDictionaryImpl.java:1589)\r\n\tat org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initDefaultSchemaDescriptor(GenericLanguageConnectionContext.java:426)\r\n\tat org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initialize(GenericLanguageConnectionContext.java:401)\r\n\tat org.apache.derby.impl.db.BasicDatabase.setupConnection(BasicDatabase.java:295)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.startTransaction(TransactionResourceImpl.java:189)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:441)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection30.<init>(EmbedConnection30.java:73)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection40.<init>(EmbedConnection40.java:51)\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:70)\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:248)\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:146)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:579)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:190)\r\n\tat org.apache.derbyTesting.junit.DriverManagerConnector.openConnection(DriverManagerConnector.java:81)\r\n\tat org.apache.derbyTesting.junit.DriverManagerConnector.openConnection(DriverManagerConnector.java:43)\r\n\tat org.apache.derbyTesting.junit.TestConfiguration.openDefaultConnection(TestConfiguration.java:1574)\r\n\tat org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest$WorkerThread.run(InterruptResilienceTest.java:432)\r\nException in thread \"WorkerThread. Thread#4\" junit.framework.AssertionFailedError\r\n\tat junit.framework.Assert.fail(Assert.java:47)\r\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\r\n\tat junit.framework.Assert.assertTrue(Assert.java:27)\r\n\tat org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest$WorkerThread.run(InterruptResilienceTest.java:435)\r\n........\r\nTime: 175.745\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-05-09T16:47:23.573+0000","updated":"2011-05-09T16:47:23.573+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12506629/comment/13030957","id":"13030957","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Attaching patch derby-5223. This fix moves the initialization of the variable \"interruptedException\" earlier in GenerciLanguageConnectionContext#initialize and also changes the asserts in the minion threads in InterruptResilienceTest into explicit exception \"throw\"s instead, so any future errors in these invariants do not get overlooked \r\n\r\nRunning regressions.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-05-09T23:32:56.568+0000","updated":"2011-05-09T23:32:56.568+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12506629/comment/13031184","id":"13031184","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"That's a good catch! :) The fix looks fine to me. Resetting the flag in resetFromPool() sounds like a good precaution, but just to verify that I haven't misunderstood: If the flag is non-null when resetFromPool() is called, the (physical) connection has been interrupted and closed, so it's not likely that it's possible to reuse it? In any case, resetting it sounds like the right thing to do.\r\n\r\nAs to the changes in InterruptResilienceTest, would it be better to make WorkerThread preserve all Throwables? It sounds useful to be allowed to use asserts there, and I could easily imagine that someone later adds an assert call there without realizing that it won't be detected. Just to prove my point: There's still an assertEquals() call left in WorkerThread after the patch... ;)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2011-05-10T13:33:19.250+0000","updated":"2011-05-10T13:33:19.250+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12506629/comment/13031409","id":"13031409","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks for looking at this, Knut. Yes, you are right, I just added it to resetFromPool as a precaution, I'll add a comment to prevent wrong conclusions being drawn, though.\r\n\r\nThanks for catching that remaining assert in the thread. Catching and passing back to the main thread any Throwable (which would include the JUnit exception from an assert) may be a better approach, though. I'll try that out.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-05-10T22:02:46.097+0000","updated":"2011-05-10T22:02:46.097+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12506629/comment/13031818","id":"13031818","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Uploading verssion \"b\" of this patch, which implements the catching of Throwable (not just Exception) inside the worker thread's run method, idea as suggested by Knut. This lets us keep/revert to the JUnit asserts inside threads. This makes the code more readable. Regressions ran ok with this change.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-05-11T16:16:29.976+0000","updated":"2011-05-11T16:16:29.976+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12506629/comment/13033150","id":"13033150","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Committed patch version \"b\" to trunk as svn 1102826.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-05-13T17:42:09.442+0000","updated":"2011-05-13T17:42:09.442+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12506629/comment/13033164","id":"13033164","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Backported to 10.8 branch as svn 1102836, closing.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-05-13T18:05:12.373+0000","updated":"2011-05-13T18:05:12.373+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-5223/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06k9r:"}}