{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12363077","self":"https://issues.apache.org/jira/rest/api/latest/issue/12363077","key":"DERBY-2352","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-10-02 14:51:35.826","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23014","customfield_12310222":"1_*:*_1_*:*_24072623279_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-11-23T00:16:26.441+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2352/watchers","watchCount":0,"isWatching":false},"created":"2007-02-17T09:26:03.162+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:49:47.275+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"Assertion failure with order by expression:\n\nij> select substr('abc', 1) from t1 order by substr('abc', 1);\nERROR XJ001: Java exception: 'ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLVarchar) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.SQLChar): org.apache.derby.shared.common.sanity.AssertFailure'.\n\nStacktrace:\norg.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLVarchar) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.SQLChar)\n\tat org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:149)\n\tat org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(MergeSort.java:472)\n\tat org.apache.derby.impl.store.access.sort.MergeInserter.insert(MergeInserter.java:106)\n\tat org.apache.derby.impl.sql.execute.SortResultSet.loadSorter(SortResultSet.java:318)\n\tat org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:269)\n\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:169)\n\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:260)\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:358)\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1182)\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:585)\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:517)\n\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:321)\n\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:517)\n\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:370)\n\tat org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:268)\n\tat org.apache.derby.impl.tools.ij.Main.go(Main.java:204)\n\tat org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:170)\n\tat org.apache.derby.impl.tools.ij.Main14.main(Main14.java:56)\n\tat org.apache.derby.tools.ij.main(ij.java:71)\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37488","summary":"Assertion Failure with order by and group by expression","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Any","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":23,"total":23,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12473904","id":"12473904","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"body":"Also fails with group by expression.\r\n\r\nij> select substr('abc', 1) from t1 group by substr('abc', 1);\r\nERROR XJ001: Java exception: 'ASSERT FAILED col1.getClass() (class org.apache.de\r\nrby.iapi.types.SQLVarchar) expected to be the same as col2.getClass() (class org\r\n.apache.derby.iapi.types.SQLChar): org.apache.derby.shared.common.sanity.AssertF\r\nailure'.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"created":"2007-02-17T09:29:27.411+0000","updated":"2007-02-17T09:29:27.411+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12531818","id":"12531818","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Is DERBY-3094 related?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-02T14:51:35.826+0000","updated":"2007-10-02T14:51:35.826+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12533932","id":"12533932","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"My first attempt to reproduce this failed:\r\n\r\nij version 10.4\r\nij> connect 'jdbc:derby:brydb;create=true';\r\nij> run 'd2352.sql';\r\nij> drop table d2352;\r\nERROR 42Y55: 'DROP TABLE' cannot be performed on 'D2352' because it does not exi\r\nst.\r\nij> create table d2352 (c int);\r\n0 rows inserted/updated/deleted\r\nij> select substr('abc', 1) from d2352 order by substr('abc', 1);\r\n1\r\n----\r\n\r\n0 rows selected","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-11T02:01:47.477+0000","updated":"2007-10-11T02:01:47.477+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12533933","id":"12533933","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The group by variant did not easily reproduce, either:\r\n\r\nij> select substr('abc', 1) from d2352 group by substr('abc', 1);\r\n1\r\n----\r\n\r\n0 rows selected\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-11T02:04:47.171+0000","updated":"2007-10-11T02:04:47.171+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12533945","id":"12533945","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Ah. For this to reproduce, table \"t\" must contain at least one row:\r\n\r\nij> insert into d2352 values (1), (2), (3);\r\n3 rows inserted/updated/deleted\r\nij> select substr('abc', 1) from d2352 order by substr('abc', 1);\r\nERROR XJ001: Java exception: 'ASSERT FAILED col1.getClass() (class org.apache.de\r\nrby.iapi.types.SQLVarchar) expected to be the same as col2.getClass() (class org\r\n.apache.derby.iapi.types.SQLChar): org.apache.derby.shared.common.sanity.AssertF\r\nailure'.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-11T03:16:36.202+0000","updated":"2007-10-11T03:16:36.202+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12534436","id":"12534436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Here is the generated code for the \"projection\" method (e1) and the \"rowAllocator\" method (e3)\r\nfor the \"order by\" variant of the select statement:\r\n\r\n    public Object e1()\r\n        throws StandardException, Exception\r\n    {\r\n        ConcatableDataValue concatabledatavalue = \r\n         getDataValueFactory().getCharDataValue(\"abc\", null).\r\n                  substring(getDataValueFactory().getDataValue(1, null), null, e3, 3);\r\n        e3 = concatabledatavalue;\r\n        e2.setColumn(1, (DataValueDescriptor)concatabledatavalue);\r\n        ConcatableDataValue concatabledatavalue1 = \r\n             getDataValueFactory().getCharDataValue(\"abc\", null).\r\n                 substring(getDataValueFactory().getDataValue(1, null), null, e4, 3);\r\n        e4 = concatabledatavalue1;\r\n        e2.setColumn(2, (DataValueDescriptor)concatabledatavalue1);\r\n        return e2;\r\n    }\r\n\r\n    public Object e2()\r\n        throws StandardException\r\n    {\r\n        e5.setColumn(1, getDataValueFactory().getNullChar(null));\r\n        e5.setColumn(2, getDataValueFactory().getNullChar(null));\r\n        return e5;\r\n    }\r\n\r\nThe projection method's call to getCharDataValue() constructs a SQLChar,\r\nand SQLChar.substring() then returns a SQLVarchar.\r\n\r\nBut the rowAllocator's getNullChar() method constructs a SQLChar.\r\n\r\nIt is the mismatch between the SQLVarchar that is returned by substring,\r\nand the SQLChar that is created by the rowAllocator's getNullChar, that\r\nis causing the assertion to trip in the sorter.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-12T23:03:45.010+0000","updated":"2007-10-12T23:03:45.010+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12534932","id":"12534932","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Seems like there are 3 alternatives worth pursuing:\r\n1) Turn the SQLVarchar into a SQLChar\r\n2) Turn the SQLChar into a SQLVarchar\r\n3) Teach the sorter that it should tolerate a mixture of SQLVarchar/SQLChar\r\n\r\nThe first alternative involves modifying SQLChar.substring() so that \r\ninstead of returning a Varchar, it returns a Char. Perhaps the algorithm\r\ncould be something like: substring of a Char returns a Char; substring\r\nof a Varchar returns a Varchar.\r\n\r\nThe second alternative involves modifying the code that generates the\r\nprojection and rowAllocator methods so that the code can more accurately\r\ntrack the datatype of the ResultColumn in the presence of expression such\r\nas substring, and ensure that the proper actual data type (Varchar in this case)\r\nis used when generating the template row in the rowAllocator method. It\r\nlooks like TernaryNode.substrBind() makes some attempts to compute the\r\nresulting data type; perhaps this data type computation just isn't making it\r\nproperly into the REsultColumn's data type ID.\r\n\r\nThe third alternative involves figuring out why MergeSort is complaining when\r\nSQLVarchar != SQLChar, and whether MergeSort could be enhanced to\r\nbe more tolerant of mismatching types. As a start, I could try removing the\r\nsanity assertion and see what problems occur farther down the road.\r\n\r\nI don't immediately see any reason to prefer one of these solutions over any other;\r\nif anybody has any suggestions about which course of action seems best, please\r\nlet me know. Otherwise I'll probably try them each and see how much progress I make.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-15T18:43:50.634+0000","updated":"2007-10-15T18:43:50.634+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12535394","id":"12535394","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is substringReturnsChar.diff, which modifies the substring, trim, and similar functions in SQLChar so that they no longer always return a value of type SQLVarchar, but instead return either SQLChar or SQLVarchar, depending on what type of object they are called on.\r\n\r\nThat is, SQLChar.substring returns SQLChar, but SQLVarchar.substring returns SQLVarchar.\r\n\r\nWith this change, the reproduction code passes.\r\n\r\nAlso, with this change, derbyall and suites.All are 100% pass.\r\n\r\nI intend to follow this up with a more complete patch proposal, including various new regression tests, to allow for a more complete review. In the meantime, any feedback about the attached code change is most welcome.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-17T02:02:25.006+0000","updated":"2007-10-17T02:02:25.006+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12536345","id":"12536345","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Modifying SQLChar.getNewVarchar() will affect SQLChar.substring(),\r\nSQLChar.trim(), and SQLChar.ansiTrim().\r\n\r\nI'm not clear on the difference between trim() and ansiTrim(). May have to set\r\nbreakpoints to try to figure out which one is called by what SQL. I think that\r\nthe difference may involve LTRIM vs TRIM LEADING and RTRIM vs\r\nTRIM TRAILING\r\n\r\nI see that in our docs, we state explicitly that TRIM and SUBSTR return\r\na value of type VARCHAR. For example,\r\nhttp://db.apache.org/derby/docs/10.3/ref/rreftrimfunc.html\r\nSo if we change this we'll need to change some docs.\r\n\r\nThe docs also talk about how these functions work with CLOB types, which\r\nindicates that any complete patch built on substringReturnsChar.diff would\r\nneed to have tests that include CLOB.\r\n\r\nSo, to turn substringReturnsChar.diff into a complete patch, I need to:\r\n - figure out exactly what SQL functions cause us to arrive at the\r\n   SQLChar methods 'substring', 'trim', and 'ansiTrim'.\r\n - write tests which use those SQL functions in both ORDER BY and\r\n   GROUP BY expressions\r\n - ensure that those tests cover CHAR, VARCHAR, LONG VARCHAR,\r\n   CHAR FOR BIT DATA, VARCHAR FOR BIT DATA, \r\n   LONG VARCHAR FOR BIT DATA, BLOB, and CLOB data types.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-19T21:05:30.792+0000","updated":"2007-10-19T21:05:30.792+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12536899","id":"12536899","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"A naive attempt to use other data types in the repro script via CAST expressions is not so successful:\r\n\r\nij> select substr( cast ('abc' as long varchar), 1) from d2352 order by substr(cast ('abc' as long varchar), 1);\r\nERROR X0X67: Columns of type 'LONG VARCHAR' may not be used in CREATE INDEX, ORDER BY, GROUP BY, UNION, INTERSECT, EXCEPT or DISTINCT statements because comparisons are not supported for that type.\r\nij> select substr( cast ('abc' as char for bit data), 1) from d2352 order by substr( cast ('abc' as char for bit data), 1);\r\nERROR 42846: Cannot convert types 'CHAR' to 'CHAR () FOR BIT DATA'.\r\nij> select substr( cast ('abc' as clob), 1) from d2352 order by substr( cast ('abc' as clob), 1);\r\nERROR X0X67: Columns of type 'CLOB' may not be used in CREATE INDEX, ORDER BY, GROUP BY, UNION, INTERSECT, EXCEPT or DISTINCT statements because comparisons are not supported for that type.\r\n\r\nPerhaps I can still invoke substring, trim, and ansiTrim on these other data types, just not in the ORDER BY or GROUP BY clauses.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-23T03:53:26.605+0000","updated":"2007-10-23T03:53:26.605+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12536900","id":"12536900","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"LTRIM and TRIM (TRAILING) don't obviously suffer from the same problem as SUBSTR:\r\n\r\nij> connect 'jdbc:derby:brydb';\r\nij(CONNECTION1)> select ltrim('abc') from d2352 order by ltrim('abc');\r\n1\r\n----\r\nabc\r\n\r\n1 row selected\r\nij(CONNECTION1)> select trim(trailing ' ' from 'abc') from d2352 order by trim(trailing ' ' from 'abc');\r\n1\r\n----\r\nabc\r\n\r\n1 row selected","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-23T04:07:51.507+0000","updated":"2007-10-23T04:07:51.507+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543301","id":"12543301","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Here is the generated projection (e1) and rowAllocator (e2) code for\r\n\r\n    select ltrim('abcd') from d2352 order by trim('abcd');\r\n\r\n\r\n    public Object e1()\r\n        throws StandardException, Exception\r\n    {\r\n        StringDataValue stringdatavalue = getDataValueFactory().getCharDataValue(\"abcd\", null).\r\n                         ansiTrim(2, getDataValueFactory().getCharDataValue(\" \", null), e3);\r\n        e3 = stringdatavalue;\r\n        e2.setColumn(1, (DataValueDescriptor)stringdatavalue);\r\n        StringDataValue stringdatavalue1 = getDataValueFactory().getCharDataValue(\"abcd\", null).\r\n                         ansiTrim(2, getDataValueFactory().getCharDataValue(\" \", null), e4);\r\n        e4 = stringdatavalue1;\r\n        e2.setColumn(2, (DataValueDescriptor)stringdatavalue1);\r\n        return e2;\r\n    }\r\n\r\n   public Object e2()\r\n     throws StandardException\r\n {\r\n     e5.setColumn(1, getDataValueFactory().getNullVarchar(null));\r\n     e5.setColumn(2, getDataValueFactory().getNullVarchar(null));\r\n     return e5;\r\n }\r\n\r\nNote that the generated projection code calls SQLChar.ansiTrim, and also note\r\nthat the rowAllocator allocates columns of Varchar type, not of Char type.\r\n\r\nI believe this explains why the CHAR vs VARCHAR assertion does not arise\r\nin the cases of LTRIM and TRIM(TRAILING), but only for SUBSTR.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-17T19:08:10.169+0000","updated":"2007-11-17T19:08:10.169+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543307","id":"12543307","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Perhaps there are no longer any code paths which lead to SQLChar.trim,\r\nbut instead the code always goes to SQLChar.ansiTrim.\r\n\r\nI'll try looking at code coverage results to see if they indicate that trim() is ever called.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-17T19:53:09.047+0000","updated":"2007-11-17T19:53:09.047+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543312","id":"12543312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"According to fairly recent code coverage results, trim() is not called at all:\r\nhttp://people.apache.org/~fuzzylogic/codecoverage/579033/_files/181.html#69\r\n\r\nAlso, I commented out the trim() method in SQLChar and in StringDataValue and\r\nI got no compilation errors in the rest of the system, so perhaps SQLChar.trim\r\ncan be entirely removed. I'll log that as a separate JIRA for some future consideration.\r\n\r\nIn the meantime, I think I can proceed with putting together some test cases and\r\nmaking a complete patch proposal out of the already-proposed code change.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-17T21:14:25.833+0000","updated":"2007-11-17T21:14:25.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543386","id":"12543386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is substrBind.diff, an alternate idea for a patch.\r\n\r\nI found myself interested in why the rowAllocator method for\r\n\r\n   select substr('abc', 1) from d2352 order by substr('abc', 1); \r\n\r\nis different from the rowAllocator method that is generated for\r\n\r\n   select ltrim('abc') from d2352 order by ltrim('abc'); \r\n\r\nThe SUBSTR version generates \r\n\r\n     e5.setColumn(1, getDataValueFactory().getNullChar(null)); \r\n\r\nwhile the LTRIM version generates\r\n\r\n     e5.setColumn(1, getDataValueFactory().getNullVarchar(null)); \r\n\r\nThe generation activity happens in ResultColumnList.generateHolderMethod,\r\nso I stepped through that code to see what was different in the two cases.\r\nResultColumnList.generateHolderMethod() calls ResultColumn.generateHolder()\r\nfor each result column, and that code in turn generates a null of the\r\nappropriate type, where the type is given by the DataTypeDescriptor in\r\nthe ResultColumn, and controls the behavior of CharTypeCompiler.nullMethodName.\r\n\r\nDuring bind processing, ResultColumn.bindResultColumnToExpression() sets\r\nthe ResultColumn type to the type of its expression, which in both cases\r\nis a TernaryOperatorNode.\r\n\r\nThe TernaryOperatorNode's type is determined during bind processing. For\r\nthe TRIM expression, TernaryOperatorNode.trimBind() is called, and it\r\nchooses a VARCHAR type except in some cases involving BLOBs.\r\n\r\n   TypeId\tresultType = TypeId.getBuiltInTypeId(Types.VARCHAR);\r\n\r\nFor the SUBSTR expression, TernaryOperatorNode.substrBind() is called, and\r\nit has a completely different set of logic for choosing the result type,\r\nwhich is driven by the type of the value on which we're calling SUBSTR:\r\n\r\n   resultType = receiverType = receiver.getTypeId();\r\n\r\nIn the case of SUBSTR('abc', 1), \"receiver\" is a CharConstantNode, and its\r\ntypeId is a CHAR type, so the resultType is set to CHAR, not VARCHAR.\r\n\r\nThe technique of substrBind() -- using the receiver's type -- also handles\r\nCLOB/BLOB types, but it has the result of choosing CHAR in cases where\r\ntrimBind() chooses VARCHAR instead.\r\n\r\nSo it seems that an alternate solution for DERBY-2352 could be to modify\r\nTernaryOperatorNode.substrBind() so that it chooses the result type using\r\na set of rules more like those used by TernaryOperatorNode.trimBind().\r\nThe attached 'substrBind.diff' implements those alternate rules, and the\r\nresulting code successfully processes the repro script, and the generated\r\nrow allocator method now matches the code generated in the TRIM cases.\r\n\r\nI think this is a cleaner approach than 'substringReturnsChar.diff', because\r\nI think that the intent of the system is for SUBSTR to return a VARCHAR\r\ntype. Feedback about whether one change seems better or worse, or any other\r\nfeedback on these topics, would be most welcome.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-18T18:10:47.379+0000","updated":"2007-11-18T18:10:47.379+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543463","id":"12543463","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is 'substrBindWithTests.diff', which includes some simple\r\ntests that verify that substrBind now works correctly.\r\n\r\nI believe this patch is ready for review. Please let me know what you think.\r\n\r\nderbyall and suites.All were clean.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-19T05:23:02.913+0000","updated":"2007-11-19T05:23:02.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543495","id":"12543495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"I'm giving the the latest patch a spin with the tests now.\r\n\r\nAre the \"missing\" spaces in the \r\n   ... trim(trailing' ' ...\r\nof the last two select statements in 'orderby.out.original' intentional? Seems you have mixed using and not using a space - just curious.\r\n\r\nTo be really picky, there's an extra blank line (@839) introduced in TernaryOperatorNode.java by substrBindWithTests.diff.\r\n\r\nOtherwise the patch looks sane to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-11-19T08:50:57.867+0000","updated":"2007-11-19T08:50:57.867+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543540","id":"12543540","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Since you will touch TernaryOperatorNode.java anyway, there's\r\n- an unused import of 'org.apache.derby.iapi.sql.dictionary.DataDictionary'\r\n- an unused import of 'org.apache.derby.iapi.types.NumberDataValue'\r\n- an unused import of 'org.apache.derby.iapi.store.access.Qualifier'\r\n- an import from the same package of 'org.apache.derby.impl.sql.compile.ExpressionClassBuilder' \r\nThese could possibly be cleaned up?\r\n\r\nBoth suites.All and derbyAll ran successfully for me as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-11-19T12:28:19.449+0000","updated":"2007-11-19T12:28:19.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543610","id":"12543610","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Thomas for the feedback and testing and suggestions! I'll try to clean these\r\nup when I commit the change.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-19T16:41:36.710+0000","updated":"2007-11-19T16:41:36.710+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543718","id":"12543718","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached 'substrBindWithTestsUpdated.diff' incorporates the feedback \r\nfrom Thomas. Re-testing was uneventful.\r\n\r\nI intend to commit this change to the trunk fairly soon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-19T22:49:35.741+0000","updated":"2007-11-19T22:49:35.741+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12543805","id":"12543805","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"'substrBindWithTestsUpdated.diff' looks good. \r\n\r\n+1 to commit","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-11-20T07:57:24.488+0000","updated":"2007-11-20T07:57:24.488+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12544062","id":"12544062","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Thomas! I committed substrBindWithTestsUpdated.diff to the\r\ntrunk as revision 596824. I will investigate merging this patch to 10.3,\r\nhopefully by Nov 25 so that it can make the 10.3.2 release.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-20T20:55:55.557+0000","updated":"2007-11-20T20:55:55.557+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12363077/comment/12544902","id":"12544902","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Merged the change to the 10.3 branch and submitted as revision 597516.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-23T00:16:26.359+0000","updated":"2007-11-23T00:16:26.359+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2352/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06s3z:"}}