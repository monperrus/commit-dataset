{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12328223","self":"https://issues.apache.org/jira/rest/api/latest/issue/12328223","key":"DERBY-889","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-03-06 09:54:24.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22189","customfield_12310222":"1_*:*_1_*:*_40365442078_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_172580","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-05-11T18:08:34.078+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-889/watchers","watchCount":0,"isWatching":false},"created":"2006-01-29T13:31:12.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12310615","id":"12310615","description":"","name":"10.1.2.1","archived":false,"released":true,"releaseDate":"2005-11-18"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12314016","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12314016","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"inwardIssue":{"id":"12354628","key":"DERBY-2034","self":"https://issues.apache.org/jira/rest/api/2/issue/12354628","fields":{"summary":"Tracking of bugs that lead to incorrect results being stored or returned to the client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.png","name":"Trivial","id":"5"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/task.png","name":"Task","subtask":false}}}},{"id":"12313268","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12313268","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12349136","key":"DERBY-1811","self":"https://issues.apache.org/jira/rest/api/2/issue/12349136","fields":{"summary":"Embedded ResultSet.getTimestamp on a TIME column returns a java.sql.Timestamp with a date portion that can be incorrect.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12366745","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12366745","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12390676","key":"DERBY-3519","self":"https://issues.apache.org/jira/rest/api/2/issue/12390676","fields":{"summary":"junit regression test failure in testInertTime(org.apache.derbyTesting.functionTests.tests.lang.TimeHandlingTest)junit.framework.AssertionFailedError: expected:<2> but was:<3>","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.png","name":"Trivial","id":"5"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12313288","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12313288","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12349305","key":"DERBY-1816","self":"https://issues.apache.org/jira/rest/api/2/issue/12349305","fields":{"summary":"Client's ResultSet.getTime() on a SQL TIMESTAMP column loses the sub-second resolution and always has a milli-second value of zero.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-04-03T08:56:32.766+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11690","id":"11690","name":"Network Client"}],"timeoriginalestimate":null,"description":"On client getTimestamp on a TIME column will print date   1900-01-01 instead of the current date like the embedded driver.\nTo repro run the DERBY-877 repro without specifying a file.encoding\n\njava TestEnc derbynetclient\n[snip]\nCOLUMN 2:TM TIME\n        getString:      16:27:35\n        getTimeStamp:   1900-01-01 16:27:35.0\n        getTime:        16:27:35\n        getDate         Exception SQLSTATE:null  (EXPECTED)\n\n\nWith Embedded  it prints the current date for getTimestamp\njava TestEnc  derby\n\nCOLUMN 2:TM TIME\n        getString:      16:27:35\n        getTimeStamp:   2006-01-28 16:27:35.0\n        getTime:        16:27:35\n        getDate         Exception SQLSTATE:22005  (EXPECTED)\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37081","summary":"with client getTimestamp on a TIME column will print the date  1900-01-01 instead of the current date","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":20,"total":20,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12368965","id":"12368965","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I'm not quite sure I understand what reason there is to believe that the client code is wrong here. Why is 1900-01-01 incorrect? In some ways, I think that the client code is more correct. There is no value for the date portion of the data, so providing a value of 1900-01-01 has certain advantages compared to providing \"today's\" date. I hunted around in the JDBC specs for a while but couldn't find a clear statement about which behavior is correct.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-06T09:54:24.000+0000","updated":"2006-03-06T09:54:24.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12369150","id":"12369150","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"The current date comes from the SQL standard where the conversion of a TIME to a TIMESTAMP takes the date information from CURRENT_DATE","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-03-07T11:49:11.000+0000","updated":"2006-03-07T11:49:11.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12369162","id":"12369162","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Returning the current date makes sense, and it seems like a simple change to DateTime.timeBytesToTimestamp() should be able to accomplish that. I'll pursue that path.\r\n\r\nMeanwhile, however, when I run \"java TestEnc derby\", which runs the test program with the embedded driver, I *don't* get the current date! Instead, the value that is printed by the program is \r\n\r\nCOLUMN 2:TM TIME\r\n        getString:      16:27:35\r\n        getTimeStamp:   2006-01-28 16:27:35.0\r\n        getTime:        16:27:35\r\n        getDate         Exception SQLSTATE:22005  (EXPECTED)\r\n\r\nwhich seems to indicate that Embedded is preserving the date information in the TIME column itself.\r\n\r\nThat is, embedded seems to be printing 2006-01-28, which is the value that the program originally stores in the table:\r\n\r\n       // Insert same timestamp string into all columns\r\n       String tsString = \"2006-01-28 16:27:35.801\";\r\n       ps.setString(1,tsString);\r\n       ps.setString(2,tsString);\r\n       ps.setString(3,tsString);\r\n       ps.executeUpdate();\r\n\r\nI'll study this some more; maybe I'm making a simple mistake here because it's late at night.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-07T13:34:20.000+0000","updated":"2006-03-07T13:34:20.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12369352","id":"12369352","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"EmbedResultSet extends ConnectionChild. ConnectionChild has a private field \"cal\" of type Calendar which it re-uses from call to call (see ConnectionChild.getCal() ). This looks like a performance optimization of some sort, but it has the effect that when we call getTimestamp() on a TIME column in the embedded driver, the date portion of the returned timestamp will come back with whatever date information happened to be lying around in ConnectionChild's \"cal\" object.\r\n\r\nThus if getTimestamp(TIME) is the very first time that we make a calendar-related call on this embedded result set, everything is fine, but if the getTimestamp(TIME) call is made after some other call which has populated the cached calendar object, we get the data value of that other call back in our result.\r\n\r\nSo I think there is definitely an Embedded bug here, in addition to the Network Client bug discussed in earlier comments.\r\n\r\nOne simple way to fix this is to have EmbedResultSet.getTimestamp() always initialize the calendar with today's date and time:\r\n\r\nIndex: java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java\r\n===================================================================\r\n--- java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java  (revision 383160)\r\n+++ java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java  (working copy)\r\n@@ -1032,6 +1032,7 @@\r\n\r\n             if( cal == null)\r\n                 cal = getCal();\r\n+                       cal.setTime(new java.util.Date());\r\n                        return dvd.getTimestamp( cal);\r\n\r\n                } catch (StandardException t) {\r\n\r\nAnother possibility, since the underlying SqlTime.java code is prepared to receive a NULL calendar object, is for EmbedResultSet.getTimestamp to skip the optimization of trying to re-use the calendar object, and just allow SqlTime.getTimestamp to allocate a new one:\r\n\r\nIndex: java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java\r\n===================================================================\r\n--- java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java  (revision 383160)\r\n+++ java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java  (working copy)\r\n@@ -1030,8 +1030,6 @@\r\n                        if (wasNull = dvd.isNull())\r\n                                return null;\r\n\r\n-            if( cal == null)\r\n-                cal = getCal();\r\n                        return dvd.getTimestamp( cal);\r\n\r\n                } catch (StandardException t) {\r\n\r\nSince I'm not really sure about the purpose of the cached Calendar object in\r\nConnectionChild.java, I'm not quite sure whether one or the other of the above proposals\r\nis better, or maybe there are other alternatives I should consider instead.\r\n\r\nComments, anyone?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-08T09:46:28.000+0000","updated":"2006-03-08T09:46:28.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12369591","id":"12369591","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The JCC driver has the same behavior as the Network Client driver: it prints 1900-01-01 for the date portion.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-09T12:08:42.000+0000","updated":"2006-03-09T12:08:42.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12369593","id":"12369593","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Here is a proposed patch, including changes to both the embedded driver and the network client driver, and a regression test.\r\n\r\nFor the embedded driver, the patch causes the driver to skip using the cached calendar, and instead allow the time conversion code to allocate a fresh new calendar initialized with today's date.\r\n\r\nFor the network client driver, the patch explicitly allocates a java.util.Date object and uses it to set the date portion of the returned timestamp to contain today's date.\r\n\r\nThe regression test is added to jdbcapi/resultset.java, and simply calls getTimestamp() on a field of type TIME and verifies that the date portion of the timestamp that is returned contains today's date. For good measure, the regression test also calls getTimestamp() on fields of type DATE and type TIMESTAMP and verifies that the expected results are returned there, too. That is possibly overkill, except in the case of the embedded driver it is important for the purposes of reproducing the bug that we force the ConnectionChild cached calendar object to have an \"interesting\" calendar value, so that is why we call getTimestamp on the other two fields first.\r\n\r\nPlease have a look and tell me what you think.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-09T12:13:12.000+0000","updated":"2006-03-09T12:13:12.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12369602","id":"12369602","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"The cached calendar is a performance optimization.  Ideally we would re-use it as I think we found out that Calendar objects are expensive to create.\r\nI don't understand your change to EmbedResultSet, the cal field can be set by other calls so what exactly is removing the lines doing here?\r\n\r\nThere is a slight difference between what the SQL standard says and what you have implemented.\r\nThe SQL standard says the DATE fields are taken from CURRENT_DATE which is not exactly the same as today's date.\r\n\r\nThe difference is the CURRENT_DATE remains fixed for the lifetime of a SQL statement, thus if a query crosses midnight\r\nthe value CURRENT_DATE does not change. (and similar for CURRENT_TIMESTAMP)\r\n\r\nNow I have not looked into this to see if the engine performs this correctly for a cast of a TIME to a TIMESTAMP. \r\n\r\nThe other question would then be, should the JDBC operation getTimestamp() on a TIME column be the same as cast?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-03-09T13:17:03.000+0000","updated":"2006-03-09T13:17:03.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12369883","id":"12369883","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"> the cal field can be set by other calls \r\n\r\nI am continuing to struggle with the requirements for this issue, I'm afraid.\r\n\r\nThe ResultSet javadoc defines 4 overloads of getTimestamp():\r\n - getTimestamp(int columnIndex)\r\n - getTimestamp(int columnIndex, Calendar cal)\r\n - getTimestamp(String columnName)\r\n - getTimestamp(String columnName, Calendar cal)\r\n\r\nThe javadoc for the methods which take Calendar arguments say:\r\n         This method uses the given calendar to construct an appropriate millisecond value for the \r\n         timestamp if the underlying database does not store timezone information.\r\nWhich is pretty darn terse, unfortunately, and doesn't give us much guidance.\r\n\r\nWith the current unpatched code, I believe, the embedded driver was already not using the\r\ncached connection from the ConnectionChild if the caller passed in their own Calendar\r\nobject (I will do more testing to confirm this). So I wasn't  changing that flow. The only\r\ncase where we use the cached Calendar object is when we don't already have a Calendar object.\r\n\r\nWhat EmbedResultSet..getTimestamp() does is to call the underlying DataValueDescriptor's\r\ngetTimestamp() call, passing\r\n - the Calendar object that the application gave us, if it gave us one, or\r\n - the Calendar object that was cached in ConnectionChild, otherwise\r\n\r\nNow, the SqlTime DataValueDescriptor already knows how to handle the case of a NULL\r\nCalendar object; in that case it allocates a fresh new Calendar object and initializes it\r\nwith today's date and time, then fills in the time information from the database column value.\r\nThis is the desired behavior, as I understand it, so all I was doing in the patch was to\r\nremove the cached Calendar object which was getting in the way of this behavior (and\r\nwhich wasn't providing any other useful behavior that I could see other than the performance\r\noptimization of not needing to allocate a new Calendar object).\r\n\r\nHowever, I realize as a result of your comments that there are a number of other issues here:\r\n - how do DataValue objects other than SqlTime handle the Calendar object which is passed\r\n   into the getTimestamp() method. I will need to research this some more.\r\n - what is the intended semantic of the JDBC API when the client application passes in a\r\n   Calendar object to getTimestamp() while fetching a value from a TIME field. Is the\r\n   intended behavior:\r\n   - that we should preserve the date information in the client's Calendar object?\r\n   - that we should overwrite the date information in the client's Calendar object with\r\n     the current date and time?\r\n\r\nSigh. I've got a lot more things to study and learn about. That's a good thing :) But if you can\r\nprovide any additional guidance in here, either from the SQL standard, or from other areas,\r\nthat would be most helpful.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-11T00:47:59.000+0000","updated":"2006-03-11T00:47:59.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12369967","id":"12369967","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"I said:\r\n\r\n>The cached calendar is a performance optimization. Ideally we would re-use it as I think we found out that Calendar objects are expensive to create.\r\n>I don't understand your change to EmbedResultSet, the cal field can be set by other calls so what exactly is removing the lines doing here?\r\n\r\nThis is the piece of your patch:\r\n\r\n-            if( cal == null)\r\n-                cal = getCal();\r\n \t\t\treturn dvd.getTimestamp( cal);\r\n\r\nI now see I was confused, I thought from the diff that 'cal' was referring to the instance field cal,\r\nbut it''s referring to the method parameter cal. Sorry.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-03-11T14:11:10.000+0000","updated":"2006-03-11T14:11:10.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12427766","id":"12427766","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is derby-889-updated-Aug-2006.diff. The previous patch \r\nwas getting quite hard to apply, so I updated to the head of trunk \r\nand regenerated the patch. \r\n\r\nI will mark this issue Patch Available. Please have a look.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-08-13T16:56:00.000+0000","updated":"2006-08-13T16:56:00.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12432299","id":"12432299","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"I will look at this patch since I think I might need it before I can write a test for changes in DERBY-1700","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-09-02T18:06:44.000+0000","updated":"2006-09-02T18:06:44.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12432311","id":"12432311","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Regardless of any Derby implementation details, it's not clear that we have agreement on the expected behaviour for getTimestamp() on a TIME column.\r\n\r\nJDBC spec says it is allowed (conversion table B6)\r\n\r\nHowever this similar conversion are not allowed\r\n    setObject() with a java.sql.Time value into a TIMESTAMP column (table B5)\r\n\r\nThe ResultSet.getTimestamp javadoc as Bryan pointed out is not much help.\r\n\r\nThe question is what should be the date portion be for the java.sql.Timestamp value.\r\n\r\nFirst case is the getTimestamp() methods that do *not* pass a Calendar object.\r\n\r\nThere seem to be four options:\r\n\r\nA) 1900-01-01 (which client does)\r\nB) 1970-01-01 \r\nC) the current date at the time the getTimestamp() is called (which embedded tries to do, though has with bugs in the handling)\r\nD) the value of the SQL function CURRENT_DATE\r\nE) 0000-01-01 (earliest date supported by Derby)\r\n\r\n\r\nThe 1970 date in B) comes from the requirement for the java.sql.Time value to have date components of 1970-01-01, see javadoc for java.sql.Time.\r\n\r\nC) is what Bryan implemented/fixed (I think) - Can you confirm?\r\n\r\nD) Would map to the behaviour defined by CAST (<TIME expression> TO TIMESTAMP)\r\n\r\nNote that the dates in C) and D) can be different, basically when a query crosses midnight or takes multiple days to run.\r\n\r\nThinking about it  D) seems to be not an option, this would be impossible for a client driver to implement unless it added an extra column into every query that had a returned TIME column. That extra column would be the CURRENT_DATE. Thus the logic for the conversion has to be isolated to the driver.\r\n\r\nOption A) seems invalid to me, why 1900-01-01, that's not the start of the Derby DATE range or the java.sql.Timestamp DATE range, why is that date better than any other?\r\n\r\nOption B) has some merit it's the epoch date for Java time values, doesn't seem that useful though.\r\n\r\nNote that the same issue exists for DATE to TIMESTAMP, comments in the embedded code indicate the intended behaviour is to generate\r\na TIMSTAMP with a time portion of 00:00:00 (midnight). That would correspond to E) in the TIME to TIMESTAMP conversion.\r\n\r\nSo the intended embedded behaviour is\r\n\r\nTIME->java.sql.Timestamp - date component set to current date\r\nDATE -> java.sql.Timestamp - time component set to 00:00:00 (midnight)\r\n\r\nThese both seem reasonable, even though they are not symmetric.\r\n\r\nI would then assert for the getTimestamp() methods with a passed in Calendar, that the behaviour\r\nis exactly the same. The only difference is that the long milliseconds value (since 1970)  in the java.sql.Timestamp\r\nis different to account for the time zone of the passed in Calendar, which I think matches the javadoc for these methods.\r\n\r\nSeems good?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-09-03T00:08:55.000+0000","updated":"2006-09-03T00:08:55.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12432312","id":"12432312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"I think this is in-line with the current documented handling of the DATE->java.sql.Date, TIME->java.sql.Time and TIMESTAMP->java.sql.Timestamp in\r\n\r\nhttp://db.apache.org/derby/papers/JDBCImplementation.html#Date+Handling\r\n\r\nThat document could be updated with for conversions of DATE to java.sql.Timestamp and TIME to java.sql.Timestamp","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-09-03T00:13:27.000+0000","updated":"2006-09-03T00:13:27.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12432323","id":"12432323","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"I entered DERBY-1811 for the problem with the embedded driver, the code in the patch is incorrect for the embedded driver for two reasons:\r\n\r\n1) It removes the optimization of using a re-ussable Calendar object from EmbedResultSet\r\n\r\n2) It leaves the bug in the SQLTime.getTimestamp() method where if a non-null Calendar is passed in the incorrect Timestamp can be returned.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-09-03T05:16:34.000+0000","updated":"2006-09-03T05:16:34.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12432344","id":"12432344","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Dan, thanks for the feedback and pointers.\r\n\r\nYes, behavior (C): the current date at the time the getTimestamp() is called, is the\r\nbehavior that I was attempting to achieve with the patch.\r\n\r\nAm I understanding correctly that your idea with DERBY-1811 is to split this issue\r\ninto a client issue (DERBY-889) and an embedded issue (DERBY-1811)? That\r\nseems like a good plan to me.\r\n\r\nRegarding your critique of the EmbedResultSet change, I agree that it is undesirable\r\nto lose the optimization of re-using the shared Calendar object, and I agree that it\r\nleaves a hole in that it doesn't actively ensure any particular value for the DATE portion\r\nin the case of getTimestamp(<TIME column>, cal).\r\n\r\nIt sounds like your preferred fix for DERBY-1811 would be:\r\n - always re-use the cached calendar object if the user does not pass one in\r\n - set the date portion of the calendar object (either the cached one or the user-provided one)\r\n   to contain the current date when converting a TIME value into a TIMESTAMP\r\n\r\nThanks for your continued review and your help understanding the intended behavior.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-09-03T15:35:58.000+0000","updated":"2006-09-03T15:35:58.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12432352","id":"12432352","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Yes, I split t because the embedded behaviour (I think) is a more serious bug, it can return a totally incorrect date even though simple tests can show it as working. The client side had fixed behaviour.\r\n\r\nI attached a patch to DERBY-1811 for the embedded changes. Not ready for commit yet, need some more testing, I'm adding a JUnit test case.\r\n\r\nFor your client changes they look correct in that they perform the desired behaviour, but I wonder if they should use the correct mechanism\r\nand use a Calendar object. java.sql.Timstamp is a strange class in that its javadoc states its super class of java.util.Date should be\r\nseen as an implementation detail and not  part of its api. So methods like setDate() etc. are not really part of the contract of java.sql.Timestamp.\r\nHow does the client handle the getTimestamp methods that pass in a Calendar?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-09-03T16:03:22.000+0000","updated":"2006-09-03T16:03:22.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12432379","id":"12432379","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The client's implementation of the \"with-calendar\" form of the getTimestamp methods uses the passed-in calendar \r\nonly to perform a timezone adjustment. getDate(), getTime(), and getTimestamp() are all similar in this respect. So the \r\nDERBY-889 bug also occurs when a Calendar is passed to getTimestamp().\r\n\r\nThe relevant code is around lines 875-1050 in org.apache.derby.client.am.ResultSet\r\n\r\nI see your point about the strange contract of java.sql.Timestamp, though we've clearly been getting away with this for many years.\r\n\r\nI think that, now that DERBY-1811 is broken out, DERBY-889 no longer blocks DERBY-1700, right?\r\n\r\nSo I think that the right plan is this:\r\n - fix DERBY-1811 first\r\n - then I'll revisit this patch, removing the embedded fix, adding tests for the \"with-calendar\" form of getTimestamp,\r\n   and looking at the issue you raised about java.sql.Timestamp's inheritance from java.util.Date.\r\n\r\nFor the time being, I'm going to clear Patch Available because the current patch needs further work.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-09-03T20:39:14.000+0000","updated":"2006-09-03T20:39:14.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12432380","id":"12432380","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is derby-889-withCalTests.diff. This patch file just contains some tests of the \"with-calendar\"\r\nversion of the ResultSet.getTimestamp methods.\r\n\r\nAt a later time, I intend to combine derby-889-updated-Aug-2006.diff and\r\nderby-889-withCalTests.diff, to produce a new proposed patch, but this\r\nwill probably not happen until DERBY-1811 has been fixed since that patch\r\nwill supercede the embedded patch proposed in derby-889-updated-Aug-2006.diff \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-09-03T20:45:12.000+0000","updated":"2006-09-03T20:45:12.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12437887","id":"12437887","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"tests/lang/TimeHandlingTest.java may provide some good ideas about\r\nways to improve the testing of these changes.\r\n\r\nMarked the bug as unassigned; I'm not actively working on this problem.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-09-26T16:57:10.000+0000","updated":"2006-09-26T16:57:10.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328223/comment/12495112","id":"12495112","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Committed Bryan's fix for this issue. \r\nrevision 537252.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-05-11T18:08:34.070+0000","updated":"2007-05-11T18:08:34.070+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-889/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06plj:"}}