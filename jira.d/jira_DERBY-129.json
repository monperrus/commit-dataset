{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"29593","self":"https://issues.apache.org/jira/rest/api/latest/issue/29593","key":"DERBY-129","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316344","id":"12316344","description":"First release on the 10.9 branch","name":"10.9.1.0","archived":false,"released":true,"releaseDate":"2012-06-25"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2005-01-22 10:13:30.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"21786","customfield_12310222":"3_*:*_1_*:*_264500963_*|*_1_*:*_1_*:*_230974945180_*|*_5_*:*_2_*:*_9777012324_*|*_4_*:*_1_*:*_53817","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-09-11T18:24:01.273+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-129/watchers","watchCount":3,"isWatching":false},"created":"2005-01-22T05:22:09.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":["derby_backport_reject_10_8","derby_triage10_8"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/10991","id":"10991","description":"snapshot","name":"10.0.2.1","archived":false,"released":true,"releaseDate":"2004-12-06"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12351757","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12351757","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12535131","key":"DERBY-5537","self":"https://issues.apache.org/jira/rest/api/2/issue/12535131","fields":{"summary":"Casting to a shorter string type does not warn about truncation","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12377187","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12377187","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12672402","key":"DERBY-6373","self":"https://issues.apache.org/jira/rest/api/2/issue/12672402","fields":{"summary":"NPE in Statement.getWarnings()","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-01-21T00:22:58.872+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"}],"timeoriginalestimate":null,"description":"Derby doesn't throw a truncation exception/warning when data is too large during casting of constants or parameters to character string or bit string data types. \r\n\r\nFollowing is ij example for constants which is too big for the datatype it is getting cast to\r\nij> values (cast ('hello' as char(3)));\r\n1\r\n----\r\nhel\r\n\r\n1 row selected\r\nij> values (cast (X'0102' as char(1) for bit data));\r\n1\r\n----\r\n01\r\n\r\n1 row selected\r\n\r\nFollowing code snippet is when using parameters through a JDBC program\r\n   s.executeUpdate(\"create table ct (c CLOB(100K))\");\r\n   //the following Formatters just loads cData with 32700 'c' characters\r\n   String cData = org.apache.derbyTesting.functionTests.util.Formatters.repeatChar(\"c\",32700);\r\n   //notice that ? in the preared statement below is bound to length 32672\r\n   pSt = con.prepareStatement(\"insert into ct values (cast (? as varchar(32672)))\");\r\n   pSt.setString(1, cData);\r\n   //Derby doesn't throw an exception at ps.execute time for 32700 characters into 32672 parameter. It silently\r\n   truncates it to 32672\r\n   pSt.execute();\r\n\r\n\r\n\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"35456","summary":"Derby should throw a truncation error or warning when CASTing a parameter/constant to char or char for bit datatypes and the data is too large for the datatype.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10423","value":"Newcomer","id":"10423"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10053","value":"Low","id":"10053"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":14,"total":14,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/57928","id":"57928","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jboynes","name":"jboynes","emailAddress":"jboynes at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Boynes","active":true},"body":"I don't believe Derby should throw an exception under these circumstances.\r\n\r\nAccording to the SQL spec (SQL-03 4.2.1), \"if a retrieval assignment or evaluation of a\r\n<cast specification> would result in the loss of characters due to truncation, then a warning condition is raised.\" And according to JDBC (3.0 8.2) \"when data truncation occurs on a read from the data source, a SQLWarning is reported.\" The SQL spec considers this a retrieve/cast operation so instead of throwing an exception we should complete execution of the statement and add a java.sql.DataTruncation warning to the list returned from Statement.getWarnings()\r\n\r\nIn contrast, if the truncation occurs during a write operation then we do need to throw an exception; we actually do this, throwing an SQLException with SQLState 22001. However, I believe this is not compliant with JDBC which states that \"when data truncation occurs on a write to the data source, a DataTruncation object is thrown.\" So instead of throwing the SQLException base class we should be throwing a DataTruncation subclass.\r\n\r\nTo clarify, the reason this is a read operation even though we are executing an INSERT is that the data is being used the CAST function not directly in the INSERT. So if we have a table with a single VARCHAR(3) column\r\n\r\nINSERT INTO TEST VALUES (CAST('01234' AS VARCHAR(3))) \r\n\r\nshould complete with a warning but\r\n\r\nINSERT INTO TEST VALUES ('01234')\r\n\r\nshould fail by throwing a DataTruncation exception.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jboynes","name":"jboynes","emailAddress":"jboynes at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Boynes","active":true},"created":"2005-01-22T10:13:30.000+0000","updated":"2005-01-22T10:13:30.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/12730964","id":"12730964","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"[10.5.2 Triage] Mamta, do you agree with Jeremy's comments? If so, can this oldy be closed as Invalid?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2009-07-14T16:49:14.203+0000","updated":"2009-07-14T16:49:14.203+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/12867896","id":"12867896","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I don't think Jeremy suggested that this issue was invalid, only that the appropriate response is a warning and not an exception. Derby doesn't currently give a warning.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-05-15T17:11:33.090+0000","updated":"2010-05-15T17:11:33.090+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13278772","id":"13278772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attaching patch d129-1a.diff, which is based on warn.diff attached to\r\nDERBY-5537 with additional code to make the network server propagate\r\nthe warning to the client, and changes to make the tests pass.\r\n\r\nDetailed description of the changes:\r\n\r\n- iapi/types/SQLBinary.java\r\n- iapi/types/SQLChar.java\r\n\r\nAdded code to generate the DataTruncation warning.\r\n\r\nOne thing to note is that the javadoc for java.sql.DataTruncation says\r\nthe data size and the transfer size are to be specified in number of\r\nbytes, so SQLChar needed some logic to convert character length to\r\nbyte length. I refactored the writeUTF() method in that class in order\r\nto avoid duplication of the bit-fiddling logic when calculating the\r\nlength.\r\n\r\nAnother thing to note is that we don't know the index of the column\r\nthat's being truncated, so the index field of the DataTruncation\r\nwarning is set to -1, as DataTruncation's javadoc says getIndex() may\r\nreturn -1 if the column index is unknown.\r\n\r\n\r\n- iapi/types/SQLBit.java\r\n- iapi/types/SQLBlob.java\r\n- iapi/types/SQLVarbit.java\r\n\r\nUse the shared truncate() method added to SQLBinary to truncate and,\r\nif required, add a warning.\r\n\r\n\r\niapi/sql/ResultSet.java\r\nimpl/sql/execute/BasicNoPutResultSetImpl.java\r\nimpl/sql/execute/NoRowsResultSetImpl.java\r\nimpl/sql/execute/TemporaryRowHolderResultSet.java\r\n\r\nChanges to allow adding the warning even if we don't end up returning\r\na JDBC ResultSet, in which case the warning will be added to the\r\nexecuting statement.\r\n\r\n\r\n- impl/drda/DRDAConnThread.java\r\n\r\nDataTruncation.getErrorCode() always returns 0 (there's no way to\r\nchange that), but the protocol uses code 0 to indicate that the client\r\nshould discard the warning. The patch makes the server send error code\r\n10000 (ExceptionSeverity.WARNING_SEVERITY) for DataTruncation, like it\r\ndoes for all other warnings.\r\n\r\n\r\n- iapi/services/io/CounterOutputStream.java\r\n\r\nModified to allow it to be used to count number of bytes in a string\r\nwhen generating DataTruncation warning in SQLChar. Its javadoc says\r\nthe stream will discard bytes written to it if it's created with the\r\nzero-arg constructor. However, it does not discard the bytes and fails\r\nwith a NPE when trying to write to a null stream when used this way.\r\nThe patch modifies the write methods to do what the javadoc says they\r\nshould (and removes one of them - write(byte[]), since the default\r\nmethod inherited from OutputStream does the right thing, that is, it\r\nforwards the calls to write(byte[],int,int)).\r\n\r\n\r\n- shared/common/reference/SQLState.java\r\n\r\nRenamed constant from LANG_FILE_ERROR to LANG_IO_EXCEPTION since the\r\ncorresponding error message doesn't necessarily have to do with files.\r\nSince the message wasn't actually in use before the patch, even though\r\nit existed in the code, no callers had to be changed because of this.\r\nThe patch makes use of the message in SQLChar.getUTF8Length().\r\n\r\n\r\n- functionTests/tests/lang/CastingTest.java\r\n\r\nAdded a test case that verified that DataTruncation warnings were\r\nadded correctly to ResultSets and Statements. Enabled the test for\r\nclient/server mode as well to verify that the warnings made it over to\r\nthe client.\r\n\r\n\r\nAdditionally, lots of canons had to be updated because of new\r\nwarnings. Most of these were the expected truncation warnings, but\r\nthere were also some new warnings of the type\r\n\r\nWARNING 01003: Null values were eliminated from the argument of a column function.\r\n\r\nthat appeared because of the changes that propagated warnings from\r\nsub-queries of DML statements up to the executing statement. The new\r\nwarnings looked correct to me.\r\n\r\nThe canons were either changed to expect the new warnings, or, in the\r\ncases where the new warnings added too much noise (in particular the\r\nold framework tests that include LockTableQuery.subsql), the queries\r\nwere changed so that they would not emit DataTruncation warnings.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-05-18T12:42:00.189+0000","updated":"2012-05-18T12:42:00.189+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13278790","id":"13278790","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"One other thing that's probably worth mentioning, is that the\r\ntruncation warning doesn't always end up on the same row as the one\r\nwhere the truncation happened. This seems to be the case when there's\r\nbeen a join or the result has been sorted.\r\n\r\nFor example:\r\n\r\nij> create table t1 (x varchar(5));\r\n0 rows inserted/updated/deleted\r\nij> insert into t1 values 'hello', 'hi', 'hey', 'yo';\r\n4 rows inserted/updated/deleted\r\nij> select cast(x as char(3)) from t1 order by x desc;\r\n1   \r\n----\r\nyo  \r\nWARNING 01004: Data truncation\r\nhi  \r\nhey \r\nhel \r\n\r\n4 rows selected\r\n\r\nHere, the warning comes with the first row, whereas the truncated\r\nvalue is in the last row.\r\n\r\nThis appears to be an existing problem with warnings in Derby, also\r\nseen with other types of warnings. For example, with 10.8.2.2, I see\r\nthis in a query that generates a warning of a different kind:\r\n\r\nij> create table t2(x int, y int);\r\n0 rows inserted/updated/deleted\r\nij> insert into t2 values (1,1),(2,2),(3,null);\r\n3 rows inserted/updated/deleted\r\nij> select x, avg(y) from t2 group by x order by x;\r\nX          |2          \r\n-----------------------\r\n1          |1          \r\nWARNING 01003: Null values were eliminated from the argument of a column function.\r\n2          |2          \r\n3          |NULL       \r\n\r\n3 rows selected\r\n\r\nHere, too, the warning comes with the first row, whereas the row\r\ncontaining the NULL value that it warns about, shows up in the last\r\nrow. So the problem isn't introduced by the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-05-18T13:08:53.941+0000","updated":"2012-05-18T13:08:53.941+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13279223","id":"13279223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Hi Knut, thanks for this cleanup! I hope this can go in along with DERBY-5749 into 10.9 (both concern truncation diagnostics).\r\n\r\nSome small nits:\r\n\r\nSQLBinary#truncate\r\n\r\n- If value is lob, the call to first getLength, then to getValue, can\r\n  cause us the risk of havin to read a lob twice. If we call getValue\r\n  first, we can save the call to getLength, no?\r\n\r\n  Or, in all of SQLBit, SQLVarBit and SQLBlob, the actual width is\r\n  actually available at the call site, so it could be passed in\r\n  instead of doing another getLength? But maybe the lob is already in\r\n  memory, so LOB reading cannot take place here.. if so, a comment\r\n  that the getLength should be cheap would be nice.\r\n\r\n\r\nSQLChar#getUTF8Length\r\n\r\n- I think we could use the less specialized class ObjectOutputStream\r\n  instead of FormatIdOutputStream here for \"cs\". The write method\r\n  isn't overriden by FormatIdOutputStream, though, but it made me wary\r\n  at first, lest extra bytes were written. writeUTF needs\r\n  ObjectOutputStream, not FormatIdOutputStream.\r\n\r\nCastingTest:\r\n\r\n-   /**\r\n     * Check the results for the queries in testDataTruncation().\r\n     */\r\n    private void checkDataTruncationResult(Statement s, String sql)\r\n\r\n  Might be good to document the expected row behavior: 1, 0 and 2\r\n  warnings for rows 1,2 and three respectively, and 3, 3 and 4 in\r\n  actual dataSize in the Javadoc.\r\n\r\n- checkDataTruncationResult(s,\r\n  \"values (cast('abc' as clob(2)), cast('de'   as varchar(2))),\" +\r\n  \"       (cast('fg'  as clob(2)), cast('hi'   as varchar(2))),\" +\r\n  \"       (cast('jkl' as clob(2)), cast('mnop' as varchar(2)))\");\r\n\r\n  Why not clob(2) in column 2 on these rows? Copy/paste error?\r\n\r\n- DRDAConnThread\r\n\r\n  Is the code path \r\n  \r\n  private int getSqlCode(int severity)\r\n  {\r\n    if (severity == CodePoint.SVRCOD_WARNING)\t\t// warning\r\n       return 100;\t\t//CLI likes it\r\n\r\n  still relevant now that you test \"instanceof SQLEWarning\"?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-05-18T21:46:08.259+0000","updated":"2012-05-18T21:46:08.259+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13280095","id":"13280095","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for reviewing the patch, Dag!\r\n\r\n> Hi Knut, thanks for this cleanup! I hope this can go in along with\r\n> DERBY-5749 into 10.9 (both concern truncation diagnostics).\r\n\r\nIf it's completed in time for 10.9, perhaps the warnings should be\r\nmentioned in the DERBY-5749 release note? Might be easier to explain\r\nthe two together in one release note than in two separate notes.\r\n\r\n> SQLBinary#truncate\r\n>\r\n> - If value is lob, the call to first getLength, then to getValue, can\r\n>   cause us the risk of havin to read a lob twice. If we call getValue\r\n>   first, we can save the call to getLength, no?\r\n>\r\n>   Or, in all of SQLBit, SQLVarBit and SQLBlob, the actual width is\r\n>   actually available at the call site, so it could be passed in\r\n>   instead of doing another getLength? But maybe the lob is already in\r\n>   memory, so LOB reading cannot take place here.. if so, a comment\r\n>   that the getLength should be cheap would be nice.\r\n\r\nI think the getLength() calls would typically be cheap because, as you\r\nobserved, it has already been called before truncate(), and length is\r\nin most cases cached. The exception seems to be if the SQLBlob wraps a\r\njava.sql.Blob instance, in which case Blob.length() will be called\r\nboth times, and there's no guarantee that the Blob class in question\r\n(which could be a user-defined class) is caching the length.\r\n\r\nI'll change the signature of truncate() to take the original length as\r\na parameter, as you suggested, to avoid the extra getLength() calls.\r\n\r\n> SQLChar#getUTF8Length\r\n>\r\n> - I think we could use the less specialized class ObjectOutputStream\r\n>   instead of FormatIdOutputStream here for \"cs\". The write method\r\n>   isn't overriden by FormatIdOutputStream, though, but it made me wary\r\n>   at first, lest extra bytes were written. writeUTF needs\r\n>   ObjectOutputStream, not FormatIdOutputStream.\r\n\r\nThat was my first thought, too. However, ObjectOutputStream inserts\r\nsome extra bytes at block boundaries (typically, after flush() has\r\nbeen called, or when some internal block size limit is exceeded),\r\nwhich made it a bit tricky to count the number of bytes. It might be\r\npossible to compensate for this with some extra logic, but I think\r\nthat would just complicate the code for little added benefit.\r\n\r\nIt's easy to get confused with all the different base-classes and\r\ninterfaces with similar names here:\r\n\r\n  - writeUTF() takes an ObjectOutput, not an ObjectOutputStream\r\n\r\n  - FormatIdOutputStream extends DataOutputStream, not\r\n    ObjectOutputStream\r\n\r\n  - DataOutputStream does not implement the ObjectOutput interface,\r\n    and can therefore not be passed to writeUTF()\r\n\r\n  - FormatIdOutputStream, which is a specialization of\r\n    DataOutputStream, does implement the ObjectOutput interface\r\n\r\nSo of the three candidates\r\n\r\n  - ObjectOutputStream can be passed to writeUTF(), but gives the\r\n    wrong number of bytes\r\n\r\n  - DataOutputStream gives the right number of bytes, but cannot be\r\n    passed to writeUTF()\r\n\r\n  - FormatIdOutputStream gives the right number of bytes, and it can\r\n    be passed to writeUTF()\r\n\r\n> CastingTest:\r\n>\r\n> - /**\r\n>      * Check the results for the queries in testDataTruncation().\r\n>      */\r\n>     private void checkDataTruncationResult(Statement s, String sql)\r\n>\r\n>   Might be good to document the expected row behavior: 1, 0 and 2\r\n>   warnings for rows 1,2 and three respectively, and 3, 3 and 4 in\r\n>   actual dataSize in the Javadoc.\r\n\r\nWill copy that info into the javadoc.\r\n\r\n> - checkDataTruncationResult(s,\r\n>   \"values (cast('abc' as clob(2)), cast('de' as varchar(2))),\" +\r\n>   \" (cast('fg' as clob(2)), cast('hi' as varchar(2))),\" +\r\n>   \" (cast('jkl' as clob(2)), cast('mnop' as varchar(2)))\");\r\n>\r\n>   Why not clob(2) in column 2 on these rows? Copy/paste error?\r\n\r\nYes, the intention was to test CLOB(2) in both columns. Will fix.\r\n\r\n> - DRDAConnThread\r\n>\r\n>   Is the code path\r\n>\r\n>   private int getSqlCode(int severity)\r\n>   {\r\n>     if (severity == CodePoint.SVRCOD_WARNING) // warning\r\n>        return 100; //CLI likes it\r\n>\r\n>   still relevant now that you test \"instanceof SQLWarning\"?\r\n\r\nI don't think this code is reachable anymore now that we test for\r\ninstanceof SQLWarning. SQL code 100 is interpreted as end-of-data by\r\nthe client, so I don't think that code is correct in the first place.\r\n(The end-of-data warnings are generated/sent via another code path\r\nfrom DRDAConnThread.doneData(), and should still end up with SQL code\r\n100 on the client, so I don't expect this change to cause any kind of\r\nproblem.)\r\n\r\nAlthough it's now unreachable code, I'd prefer to address that in a\r\nseparate issue, as I think the entire getSqlCode() method needs to be\r\nfixed. Currently, it returns SQL code -1 for all exceptions, which\r\nmakes getErrorCode() return different values on client and embedded.\r\nLogged DERBY-5773 for this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-05-21T11:41:12.805+0000","updated":"2012-05-21T11:41:12.805+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13280132","id":"13280132","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attaching a new patch, d129-1b.diff, that addresses Dag's review comments. I've also updloaded a patch delta-1a-1b.diff, which only shows the changes between 1a and 1b.\r\n\r\nThe regression tests passed, except two failures in UpdateStatisticsTest, which I think are unrelated to the changes in the patch. Will log a separate bug for those failures.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-05-21T13:10:12.128+0000","updated":"2012-05-21T13:10:12.128+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13280145","id":"13280145","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks for the new patch, Knut. The changes look good! +1 Also, +1 to fixing getSqlCode in a separate JIRA.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-05-21T13:45:48.228+0000","updated":"2012-05-21T13:45:48.228+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13280148","id":"13280148","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"+1 to merging release notes with DERBY-5749","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-05-21T13:46:32.524+0000","updated":"2012-05-21T13:46:32.524+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13280181","id":"13280181","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks again, Dag. Committed revision 1341046. I'll update the DERBY-5749 release note with information about the warning.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-05-21T14:32:55.089+0000","updated":"2012-05-21T14:32:55.089+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13453256","id":"13453256","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"It seems like this issue would not be appropriate for backporting because of the behavior change. Reopening to add label.  I wonder should there be a release note?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2012-09-11T18:23:07.436+0000","updated":"2012-09-11T18:23:07.436+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/13454075","id":"13454075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The release note for DERBY-5749 covered this issue too.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-09-12T16:02:05.086+0000","updated":"2012-09-12T16:02:05.086+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/29593/comment/14284723","id":"14284723","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"bulk change to close all issues resolved but not closed and not changed since June 1, 2014.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2015-01-21T00:22:58.845+0000","updated":"2015-01-21T00:22:58.845+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-129/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06fkf:"}}