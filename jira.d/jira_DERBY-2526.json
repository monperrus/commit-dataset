{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12366604","self":"https://issues.apache.org/jira/rest/api/latest/issue/12366604","key":"DERBY-2526","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311972","id":"12311972","description":"","name":"10.1.3.2","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312251","id":"12312251","description":"Head of 10.2 branch","name":"10.2.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-04-06 15:33:22.323","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23086","customfield_12310222":"1_*:*_1_*:*_4814339968_*|*_6_*:*_3_*:*_1153063507_*|*_5_*:*_1_*:*_606243748_*|*_4_*:*_2_*:*_83771","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-06-20T01:25:30.712+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2526/watchers","watchCount":0,"isWatching":false},"created":"2007-04-04T23:23:19.718+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"12.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/10991","id":"10991","description":"snapshot","name":"10.0.2.1","archived":false,"released":true,"releaseDate":"2004-12-06"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12315646","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12315646","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"inwardIssue":{"id":"12354628","key":"DERBY-2034","self":"https://issues.apache.org/jira/rest/api/2/issue/12354628","fields":{"summary":"Tracking of bugs that lead to incorrect results being stored or returned to the client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.png","name":"Trivial","id":"5"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/task.png","name":"Task","subtask":false}}}},{"id":"12332262","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12332262","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12465506","key":"DERBY-4679","self":"https://issues.apache.org/jira/rest/api/2/issue/12465506","fields":{"summary":"Several left outer joins causes unstable query with incorrect results","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12358185","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12358185","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12608438","key":"DERBY-5933","self":"https://issues.apache.org/jira/rest/api/2/issue/12608438","fields":{"summary":"SQL sorting error","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12332364","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12332364","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12466382","key":"DERBY-4695","self":"https://issues.apache.org/jira/rest/api/2/issue/12466382","fields":{"summary":"Internal assignment of tablenumer, columnnumber looks wrong in query tree, although no ill effects are seen.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12318222","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12318222","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12376689","key":"DERBY-3023","self":"https://issues.apache.org/jira/rest/api/2/issue/12376689","fields":{"summary":"Different result rows depending on the sequence of INNER JOIN and OUTER JOIN","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-09-25T15:46:13.598+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"I think both select statements in the attached repro script should return 1 row, but in fact the first statement returns 1 row and the second returns zero rows.\n\nThe only difference between the two statements is that the columns in the UNION view are listed in a different order (bvw vs. bvw2).\n\nThis seems like a bug to me; the order of the columns in the view definition shouldn't matter, should it? \n\nAs Army noted on the derby-dev list, the fact that this reproduces with 10.0 means that it is not caused by some of the 10.2 optimizer changes. Something else is going wrong.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"35385","summary":"Wrong results with queries that use the JOIN ... ON syntax to join with views or other non-base table expressions.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10101","value":"Release Note Needed","id":"10101"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":45,"total":45,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12486808","id":"12486808","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"derby-2526.sql is a test script which demonstrates the problem. Both SELECT statements should return 1 row, but in fact the first statement returns 1 row and the second returns 0 rows.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-04T23:24:51.591+0000","updated":"2007-04-04T23:24:51.591+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12486834","id":"12486834","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is the output of derby.language.logQueryPlan for both queries.\r\n\r\ngoodQuery.log is the query plan for the query that returns 1 row, correctly I believe.\r\n\r\nbadQuery.log is the query plan for the query that returns 0 rows, wrongly I believe.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-05T01:52:10.756+0000","updated":"2007-04-05T01:52:10.756+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12486979","id":"12486979","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The two query plans are *substantially* different. They seem to show that the second query is\r\nexecuted in a totally different fashion than the first. This would seem to rule out a variety of\r\ntheories and would seem to focus attention on either:\r\n - optimizer chose an invalid query plan (one which could not produce the correct result)\r\n - or optimizer chose a valid, but different query plan, then something went wrong while executing it\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-05T14:33:46.188+0000","updated":"2007-04-05T14:33:46.188+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487128","id":"12487128","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"In the \"good\" query plan, table B4 is joined against the UNION, and the result \r\nis then joined against B3. This makes sense, and seems like a reasonable plan.\r\n\r\nIn the \"bad\" query plan, table B4 is joined against table B3, and the result is\r\nthen joined against the UNION. This does *not* make sense. The query does\r\nnot specify any criteria which would support such a join (unless it were a\r\ncartesian product I guess, but still I don't understand this join). In this query plan,\r\nhere's an excerpt from the portion of the plan where table B4 is joined against\r\ntable B3:\r\n\r\n        Right result set:\r\n            Table Scan ResultSet for B3 at read committed isolation level using instantaneous share row locking chosen by the optimizer\r\n            Rows seen = 0\r\n            Rows filtered = 0\r\n\r\n            scan information:\r\n                Bit set of columns fetched=All\r\n                Number of columns fetched=4\r\n                Number of pages visited=1\r\n                Number of rows qualified=0\r\n                Number of rows visited=1\r\n\r\nThe \"bad\" query plan visits the B3 row, but the B3 row does not qualify, so apparently\r\nthe query plan specified some sort of strange join criteria for this join between\r\ntable B4 and table B3, and according to that criteria no rows qualified, causing\r\nthe end result to be no rows found by the query.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-06T01:33:22.784+0000","updated":"2007-04-06T01:33:22.784+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487253","id":"12487253","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for your investigation of this issue, Bryan.  I've been a bit busy so I haven't had time to look at this more, but it sounds like you're doing a great job of narrowing this down.\r\n\r\nOne suggestion (without having actually run done any investigation of my own): does this problem reproduce if you set \"derby.optimizer.noTimeout=true\"?  If it does, then you could set that property and then step through the code to see if there are any obvious differences in the optimization paths for the two statements.  I usually start by putting a break point in the \"getNextPermutation()\" method of OptimizerImpl and then doing a quick step through of that method for the different queries, to see if any there are any obvious differences in code flows (esp. number of times the method is called).\r\n\r\nAnother technique I use (which is a tad less scientific) is to put System.outs in the \"rememberBestCost()\" method of OptimizerImpl to print out: a) the join order that is being saved as \"best\", and b) the cost of that join order.  Then add a similar System.out to the \"modifyAccessPaths()\" method of OptimizerImpl and print out the final value of bestJoinOrder, along with the final cost estimate.  If you do that and then run the two different queries,  you can often see a difference in plans/costs that helps track down the issue at hand...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-04-06T15:33:22.323+0000","updated":"2007-04-06T15:33:22.323+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487261","id":"12487261","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Army, thanks for the ideas and the encouragement! The problem does appear to\r\nreproduce with derby.optimizer.noTimeout=true, so I'll try some of your suggestions\r\nand see how far I get.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-06T16:03:58.370+0000","updated":"2007-04-06T16:03:58.370+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487267","id":"12487267","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The query that finds 1 row prints:\r\nModifying access paths to use join order: 2,1,0, with cost Level2CostEstimateImpl: at 602878, cost == 216.069408, rowCount == 0.25920000000000015, singleScanRowCount == 0.6000000000000001\r\n\r\nThe query that finds 0 rows prints:\r\nModifying access paths to use join order: 2,0,1, with cost Level2CostEstimateImpl: at 17715159, cost == 186.67111680000002, rowCount == 0.1555200000000001, singleScanRowCount == 1.2000000000000002\r\n\r\nI believe that optimizable 2 is table b4, optimizable 1 is the UNION view, and optimizable 0 is table b3, so these results match the other info I was seeing in the query plan dumps.\r\n\r\nTime to fire up the debugger...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-06T16:25:46.197+0000","updated":"2007-04-06T16:25:46.197+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487271","id":"12487271","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"One thing that stands out here: estimated row count that is less than 1.0.  This means that whenever the row counts are multiplied through, we'll actually estimate fewer rows than we should., which could throw off estimates.  I've noticed this oddity a couple of times myself when working with the optimizer--most recently while looking at DERBY-1905.\r\n\r\nI've always thought this was strange.  I wonder if you put a check for this at the end of FromBaseTable.estimateCost()--ex. set anything with a row count less than 1 to be 1.0--what would happen?  Could be a red herring, but should be easy enough to check...\r\n\r\n@@ -1832,6 +1832,12 @@\r\n \t\t/* Put the base predicates back in the predicate list */\r\n \t\tcurrentJoinStrategy.putBasePredicates(predList,\r\n \t\t\t\t\t\t\t\t\t   baseTableRestrictionList);\r\n+\r\n+if (costEstimate.rowCount() < 1.0)\r\n+{\r\n+// System.out.println(\"-=- Oops! \" + costEstimate.rowCount() + \" -- \" + costEstimate.singleScanRowCount());\r\n+costEstimate.setCost(costEstimate.getEstimatedCost(), 1.0d, costEstimate.singleScanRowCount());\r\n+}\r\n \t\treturn costEstimate;\r\n \t}\r\n \r\n\r\nProverbial (and potentialy irrelevant) 2c.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-04-06T16:40:17.583+0000","updated":"2007-04-06T16:40:17.583+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487299","id":"12487299","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"With those lines in FromBaseTable, the cost estimates are different, but the bottom line is the same:\r\n\r\nGood query plan:\r\nModifying access paths to use join order: 2,1,0 for 3 optimizables, with cost Level2CostEstimateImpl: at 7363880, cost == 401.716, rowCount == 7.2, singleScanRowCount == 0.6000000000000001\r\n\r\nBad query plan:\r\nModifying access paths to use join order: 2,0,1 for 3 optimizables, with cost Level2CostEstimateImpl: at 18796902, cost == 401.616, rowCount == 12.0, singleScanRowCount == 12.0\r\n\r\nI'll look into this more later; I've got a few other things to do first.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-06T18:08:59.150+0000","updated":"2007-04-06T18:08:59.150+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487411","id":"12487411","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"For both the \"good\" and \"bad\" queries, the optimizer examines the complete join orders:\r\n - 0,1,2\r\n - 2,0,1\r\n - 2,1,0\r\n\r\nIn the \"good\" case, the optimizer assigns the costs:\r\n - 1405\r\n - 1405\r\n - 401\r\nAnd thus selects the join order 2,1,0\r\n\r\nIn the \"bad\" case, the optimizer assigns the costs:\r\n - 1405\r\n - 401\r\n - 401\r\nAnd thus selects the join order 2,0,1\r\n\r\nThis leaves me with two \"next questions\" to study:\r\n1) Why does the optimizer compute a different cost for the join order 2,0,1 in the two cases?\r\n2) If the only problem is that the optimizer gets the costs wrong, it might pick a poorer query plan, but it still seems like it should pick a *valid* query plan, right? So, why, in the \"bad\" case where the optimizer uses the join order 2,0,1, does it actually get *incorrect results*? That is, is 2,0,1 actually a valid plan for executing this query? If so, why do we get wrong results? If it's *not* valid, why does the optimizer proceed to fully cost it out, rather than dismissing it during optimization?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-07T19:37:46.042+0000","updated":"2007-04-07T19:37:46.042+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487420","id":"12487420","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The optimizer also examines the join orders [0,2,1], [1,0,2], and [1,2,0], but all of those have cost 401 also. I'm just noting this for completeness, I don't think it's relevant to what's going on with this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-08T01:07:02.694+0000","updated":"2007-04-08T01:07:02.694+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487447","id":"12487447","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"In the \"good\" case, the OptimizerImpl's predicateList contains two predicates:\r\n[0]: bvw.c1 = b4.c7\r\n[1]: b3.c8 = bvw.c5\r\nwhich seems all well and good. But in the \"bad\" case, the predicateList contains:\r\n[0]: b3.c8=b4.c7\r\n[1]: bvw2.c1 = b4.c7\r\n[2]: b3.c8 = bvw2.c5\r\nand while the second and third predicates are fine, that first one is completely bogus.\r\n\r\nSo now I will try to figure out where that extra erroneous predicate is coming from.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-08T16:47:14.172+0000","updated":"2007-04-08T16:47:14.172+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487452","id":"12487452","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The erroneous predicate is coming from PredicateList.joinClauseTransitiveClosure,\r\ncalled by SelectNode.performTransitiveClosure, called by SelectNode.preprocess.\r\n\r\nPredicateList.joinClauseTransitiveClosure looks meaty, so I'll take a break for a bit\r\nand investigate this code anon.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-08T17:27:51.795+0000","updated":"2007-04-08T17:27:51.795+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487471","id":"12487471","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"joinClauseTransitiveClosure is examining the two predicates:\r\n    b3.c8 = bvw2.c5\r\nand\r\n   bvw2.c1 = b4.c7\r\n\r\nHowever, in the second predicate, the ColumnReference for bvw2.c1 has\r\ncolumnNumber = 5, so joinClauseTransitiveClosure, which matches up\r\nthe predicates based on tableNumber and columnNumber, thinks that\r\nthis is the predicate\r\n   bvw2.c5 = b4.c7\r\n\r\nAnd, therefore, it computes the transitive closure to include the predicate\r\n   b3.c8 = b4.c7\r\n\r\nSo next I need to figure out why the columnNumber is wrong in the\r\nleftOperand ColumnReference in the BinaryRelationalOperatorNode for\r\n   bvw2.c1 = b4.c7\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-09T04:09:22.847+0000","updated":"2007-04-09T04:09:22.847+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487475","id":"12487475","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"In ColumnReference.bindExpression, we fetch and set the column's columnNumber\r\nfrom the ResultColumn \"matchingRC\", with the comment:\r\n\r\n\t\t/* Set the columnNumber from the base table.\r\n \t\t * Useful for optimizer and generation.\r\n\t\t */\r\n\t\tcolumnNumber = matchingRC.getColumnPosition();\r\n\r\nAt this point, the ResultColumn instance for column C1 from view BVW2\r\nhas a null ColumnDescriptor, but has a virtualColumnId of 5.\r\n\r\nSo next I need to figure out why the ResultColumn instance for BVw2.C1\r\nis getting a virtualColumnId of 5.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-09T05:33:38.196+0000","updated":"2007-04-09T05:33:38.196+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487551","id":"12487551","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The ResultColumn instance for BVW2.C1 with virtualColumnId = 5\r\ncomes from a 9-element ResultColumnList which is built for the\r\nintermediate \"table\" that is built by JoinNode to represent the\r\njoining of B3 with BVW2. This ResultColumnList has the following columns:\r\n  Name      VirtualColumnId\r\n   b3.c8       1\r\n   b3.c9       2\r\n   b3.c5       3\r\n   b3.c6       4\r\n   bvw2.c1   5\r\n   bvw2.c2   6\r\n   bvw2.c3   7\r\n   bvw2.c4   8\r\n   bvw2.c5   9\r\n\r\nIn this context, the use of virtualColumnId=5 to represent BVW2.C1 makes complete sense.\r\n\r\nSo it appears that I can now finally state the problem with some clarity:\r\n\r\nThe problem involves an inconsistency in the handling of ColumnReference objects\r\nduring PredicateList.joinClauseTransitiveClosure. In this code, we are working with\r\nColumnReference objects whose columnNumber values refer to intermediate join tables,\r\nbut the code compares those ColumnReference objects against each other as though\r\nthe columnNumber values applied to the base tables.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-09T14:23:21.919+0000","updated":"2007-04-09T14:23:21.919+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487553","id":"12487553","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Note that in the \"good\" case, the code also mixes join-table-based column numbers\r\nand base-table-based column numbers, but since the columns in the view are\r\nin a different order, it doesn't accidentally see a match where the other case did.\r\nThat is, when the \"good\" case is being examined in PredicateList.joinClauseTransitiveClosure,\r\nit sees \r\n    b3.c8 = bvw.c5\r\nand\r\n   bvw.c1 = b4.c7\r\nbut in this case the ColumnReference for bvw.c1 is 6, because it was drawn from\r\nthe 9-element ResultColumnList: [b3.c8,b3.c9,b3.c5,b3.c6,bvw.c5,bvw.c1,bvw.c2,bvw.c3,bvw.c4]\r\n\r\nSo the transitive closure code does not think that bvw.c5 and bvw.c1 refer to the same\r\ncolumn, and thus does not \"close\" the two predicates together.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-09T14:37:13.962+0000","updated":"2007-04-09T14:37:13.962+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487562","id":"12487562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"This investigation and analysis has been fantastic, Bryan.  I don't have anything to add--it sounds like you've nailed down the issue and have a clear statement of the problem.  That's excellent news.\r\n\r\nI like the regular updates as you make progress--they are very helpful and also demonstrate the kind of steps developers in general can take to track down problems like this.  Thanks a ton for your continued work on this!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-04-09T15:30:00.268+0000","updated":"2007-04-09T15:30:00.268+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487670","id":"12487670","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks much for the encouragement and kind words Army! They are much appreciated.\r\n\r\nMy observation for tonight is as follows:\r\n\r\n*First*, we have the following:\r\n  CursorNode.bindStatement calls\r\n    SelectNode.bindResultColumns calls\r\n      FromList.bindResultColumns calls\r\n        JoinNode.bindResultColumns calls\r\n          JoinNode.deferredBindExpressions\r\n\r\nThen, *later*, we have:\r\n  CursorNode.optimizeStatement calls\r\n    DMLStatementNode.optimizeStatement calls\r\n      SelectNode.preprocess calls\r\n        SelectNode.performTransitiveClosure calls\r\n          PredicateList.joinClauseTransitiveClosure\r\n\r\nI'm wondering whether it would be possible to move the call\r\nto SelectNode.performTransitiveClosure out of SelectNode.preprocess\r\nand into the very start of SelectNode.bindResultColumns.\r\n\r\nThat is, do the transitive closure processing earlier, during\r\nbind processing, rather than at the start of optimizing the statement.\r\n\r\nI'll give this a try and see what my results are...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-10T01:57:28.110+0000","updated":"2007-04-10T01:57:28.110+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487782","id":"12487782","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Moving the transitive closure processing earlier fixes this test case, so that\r\nseems promising. I tried running the entire test suite and got about a\r\ndozen test failures:\r\n- lang/grantRevokeDDL.sql\r\n- lang/outerjoin.sql\r\n- lang/subqueryFlattening.sql\r\n- lang/wisconsin.java\r\n- lang/GroupByExpressionTest\r\n- lang/DistinctTest\r\n- derbynet/csPrepStmt.java\r\n- derbynet/testconnection.java\r\n- SecurityPolicyReloadingTest\r\n- lang/UpdateCursorTest\r\n\r\nI'm not sure that all of these are related to this change, but the \"lang\" suite\r\nfailures are definitely connected.\r\n\r\nStill, the overall results seem promising, so I think I shall analyze the\r\ntest differences in more detail and try to understand how the change\r\nprovoked those failures.\r\n\r\nI'll attach this first try patch to share the ideas. It is not for commit.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-10T14:30:29.541+0000","updated":"2007-04-10T14:30:29.541+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12487784","id":"12487784","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I see the csPrepStmt test was just changed, so I think I can probably\r\nremove that from the list of problems caused by my change. I'll focus\r\non the lang suite test diffs to start.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-10T14:35:03.441+0000","updated":"2007-04-10T14:35:03.441+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12488220","id":"12488220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Myrna for helping me sort out those test failures somewhat. Now I think I am down to:\r\n- lang/outerjoin.sql\r\n- lang/subqueryFlattening.sql\r\n- lang/wisconsin.java\r\n- lang/DistinctTest\r\n- lang/UpdateCursorTest \r\n\r\nThe first 3 tests contain query plans in their output, and the query plans have changed\r\nas a result of my patch. This requires some study, but it is possible that the new results\r\nare correct.\r\n\r\nDistinctTest and UpdateCursorTest appear to be getting assertion failures.\r\n\r\nI'll continue to study these failures and see what I can learn.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-11T22:57:07.744+0000","updated":"2007-04-11T22:57:07.744+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12488526","id":"12488526","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I analyzed the DistinctTest failure in more detail, and wrote up my notes in the attached 'DistinctTestNotes.txt'. I'm still not yet sure whether this test failure indicates a problem in my proposed patch, or a weakness in the test.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-12T23:14:15.343+0000","updated":"2007-04-12T23:14:15.343+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12488531","id":"12488531","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The UpdateCursorTest failure appears to be in a test (testVirtualMemoryHeap) which is intimately tied to a particular query execution plan, but I'm not sure how the test is forcing that particular query plan to be chosen. I sent a message about that test to the derby-dev list to see if I could get some help.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-12T23:22:22.494+0000","updated":"2007-04-12T23:22:22.494+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12488534","id":"12488534","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Just a knee-jerk reaction to the DistinctTest failure: I wonder if the transitive closure is leading to alteration or removal of predicates that break the conditions described here:\r\n\r\n  http://db.apache.org/derby/docs/dev/tuning/ctuntransform16279.html\r\n\r\nFor example, there is some talk about how Derby will remove equijoin predicates as part of transitive closure at the bottom of this page:\r\n\r\n  http://db.apache.org/derby/docs/dev/tuning/rtuntransform866587.html\r\n\r\nMaybe one of the equijoin predicates that is removed breaks the condition for DISTINCT elimination?\r\n\r\nAs I said, that's just knee-jerk feedback.  Apologies if it proves irrelevant...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-04-12T23:31:37.080+0000","updated":"2007-04-12T23:31:37.080+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12488535","id":"12488535","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"It's interesting that in all three of the outerjoin.sql, subqueryFlattening, andDistinctTest\r\ntest failures, the queries that get different query plans have some similarities: for one\r\nthing,  the failed query involves a case where there is both a join condition\r\nand a simple restriction condition on the same column.\r\n\r\nHere's the query from outerjoin.sql which gets a different query plan with the patch:\r\n\r\nselect * from tt1 left outer join tt2 on tt1.c1 = tt2.c2 where tt2.c2 = 3\r\n\r\nAnd here's the query from DistinctTest.java which gets a different query plan with\r\nthe patch:\r\n\r\nselect distinct a.c1 from two a, four b where a.c1 = b.c1 and a.c3 = b.c3 and b.c3 = 1;\r\n\r\nAnd here's the query from subqueryFlattening.sql which gets a different query\r\nplan with the patch:\r\n\r\nselect * from outer1 o where exists (select * from idx2 i, idx1 where o.c1 = i.c1 and i.c2 = idx1.c1 and i.c2 = 1)\r\n\r\nNote that in all 3 cases, the column that is being compared against a constant value\r\nis also part of the join criteria.\r\n\r\nI thought that the transitive closure processing was only looking at join conditions,\r\nnot at simple restriction conditions (\"tt2.c2 = 3\"), but perhaps I was wrong.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-12T23:39:53.609+0000","updated":"2007-04-12T23:39:53.609+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12488537","id":"12488537","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> I thought that the transitive closure processing was only looking at join conditions,\r\n> not at simple restriction conditions (\"tt2.c2 = 3\"), but perhaps I was wrong.\r\n\r\nThere are two types of transitive closure:\r\n\r\n  http://db.apache.org/derby/docs/dev/tuning/ctuntransform37032.html\r\n\r\nThe first is join conditions, as you've noticed.  The second is \"search conditions\" and does indeed take into account predicates like \"tt2.c2 = 3\", so maybe this is why you are seeing the different plans?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-04-12T23:45:41.644+0000","updated":"2007-04-12T23:45:41.644+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12488676","id":"12488676","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Army and Oystein for the help! The status now seems to be that:\r\n- the UpdateCursor test is unrelated\r\n- the other 4 failures all have the property that\r\n  - with the patch, we get the right results for all the queries in the test suite\r\n  - but some of the query plans have changed\r\nI will study the docs that Army noted, and look closely into the query plans\r\nbefore and after the patch, and see what I can learn.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-13T14:19:00.183+0000","updated":"2007-04-13T14:19:00.183+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12492516","id":"12492516","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"My firstTryPatch is just flat-out wrong. The patch attempted to fix the problem by\r\nmove the transitive closure processing from SelectNode.preprocess to\r\nSelectNode.bindResultColumns. However, the transitive closure processing\r\ntries to process the predicates in the predicate list held in SelectNode.wherePredicates,\r\nand that field isn't set up until mid-way through SelectNode.preprocess, by the code:\r\n\r\n        /* Pull apart the expression trees */\r\n        if (whereClause != null)\r\n        {\r\n            wherePredicates.pullExpressions(numTables, whereClause);\r\n            whereClause = null;\r\n        }\r\n\r\nSo until that code has been run, we can't do the transitive closure processing.\r\n\r\nNow I am contemplating three alternate ideas:\r\n\r\n1) move the code which pulls the expressions out of the whereClause into\r\nthe wherePredicates list into SelectNode.bindResultColumns, though\r\nthat seems increasingly risky to me.\r\n2) delay the call to JoinNode.deferredBindExpressions, which is where\r\nthe column renumbering is done, until after the transitive closure work\r\nhas occurred (that is, instead of moving transitive closure processing earlier,\r\nmove column renumbering later)\r\n3) rework the code in the transitive closure processing so that it isn't\r\nconfused by the column renumbering, presumably by working with the\r\noriginal column references, not by the renumbered bound references.\r\n\r\nSo, it's somewhat back to the drawing board, but at least I understand\r\nwhy the original patch proposal failed, which is good progress.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-28T20:40:07.110+0000","updated":"2007-04-28T20:40:07.110+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12492523","id":"12492523","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I tried various experiments toward alternates #1 and #2 from the previous\r\ncomment, and only succeeding in creating non-operational code. These\r\nsections of the SelectNode code seem delicate, and the code can't \r\nbe re-arranged easily; it all seems to work in exactly this order.\r\n\r\nNow I'm thinking I should investigate the transitive closure code more\r\ncarefully, to see if there is a way to revise it so that it isn't so sensitive\r\nto the column re-ordering but rather can recognize transitive closures\r\nbased on the original expressions.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-04-28T22:57:14.827+0000","updated":"2007-04-28T22:57:14.827+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12498861","id":"12498861","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Now I'm thinking I should investigate the transitive closure code more carefully, to see\r\n> if there is a way to revise it so that it isn't so sensitive to the column re-ordering ...\r\n\r\nHi Bryan, I noticed that it's been a while since you posted anything to this issue.  Are you still actively looking into this one?  Have you had any luck with your attempts to revise the transitive closure code?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-05-24T22:02:28.278+0000","updated":"2007-05-24T22:02:28.278+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12499249","id":"12499249","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"I started looking at this issue and, using Bryan's excellent analysis of the problem thus far, was able to track down what I believe is the underlying cause.  After reading all of Bryan's comments (thanks Bryan!), I found myself wondering why it was that \"bvw2.c1\" in the predicate \"bvw2.c1 = b4.c7\" had a column number w.r.t to the JoinNode while \"bvw.c5\" in the predicate \"b3.c8 = bvw2.c5\" had a column number w.r.t to the view (BVW) itself.  Given that both column references have the same tableNumber (by the time we get to transitive closure computation), I was expecting that their column numbers would be w.r.t to the same object--i.e. to \"BVW\".  But that did not appear to be the case (as Bryan discovered).\r\n\r\nSo I did some tracing through the \"preprocess()\" code and was able to come up with what I think is a reasonable explanation of the problem.  It also agrees with (and builds on) all of Bryan's previous findings (I think).  I'm attaching the writeup as \"d2526_v1.html\".\r\n\r\nIf this explanation is correct, the fix is a two-liner--which I'm attaching as d2526_v1.patch.  I ran derbyall and suites.All with this change and there were no failures.  I also verified that both of the queries in derby-2526 now return the same result (1 row).  I have not added any tests for this problem yet, as I'm just looking for validation of the explanation and proposed fix from anyone who might have the time to read it over.  The fact that derbyall/suites.All both ran cleanly is encouraging.\r\n\r\nMany many thanks again to Bryan for all of his effort and analysis.  Regardless of whether or not the attached writeup is an accurate assessment of the problem, Bryan's comments have been very helpful.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-05-25T22:49:42.925+0000","updated":"2007-05-25T22:49:42.925+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12499257","id":"12499257","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Re-attaching with the intended file name (as indicated in previous comment) and with some minor corrections to section II.  Sorry for the noise.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-05-25T23:45:04.130+0000","updated":"2007-05-25T23:45:04.130+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12499272","id":"12499272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Army, thank you very much! Your description is very clear. It describes exactly the behavior that I was seeing, and your analysis of the remapping feels spot-on. I agree with your fix, and your patch fixes the problem in my environment, too.\r\n\r\nNothing like having another pair of eyes on things! Very good work.\r\n\r\nI re-assigned the issue to you, assuming that you'll take it the rest of the way at this point. Is that OK?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-05-26T02:19:58.956+0000","updated":"2007-05-26T02:19:58.956+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12499958","id":"12499958","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for reading the write-up and verifying the fix, Bryan.  I'm attaching a second version of the patch, d2526_v2.patch, which adds some relevant test cases to the lang/joins.sql test.  That test is already run as part of JUnit via the lang.LangScripts class, so no additional JUnit work is required (I don't think).\r\n\r\nI re-ran derbyall and suites.All on SUSE Linux with ibm142 as a sanity check, and everything passed.  I also verified that if the engine change is backed out, lang/joins.sql will now fail due to incorrect results.\r\n\r\nThanks again to Bryan for his extensive analysis of the problem.  The _v2 patch is, I think, ready for commit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-05-29T23:06:28.955+0000","updated":"2007-05-29T23:06:28.955+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12499990","id":"12499990","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Patch2 looks great! The test cases are clear and make sense to me.\r\nThe patch applies without problems and ran as expected: failed without\r\nthe code change, and passes with it. +1 for commit from me.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-05-30T00:43:43.622+0000","updated":"2007-05-30T00:43:43.622+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12500190","id":"12500190","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thanks, as always, for your willingness to review, Bryan.  I committed the _v2 patch with svn # 542867:\r\n\r\n  URL: http://svn.apache.org/viewvc?view=rev&rev=542867\r\n\r\nMarking issue as resolved for 10.3, though I think it still needs a release note...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-05-30T16:42:19.498+0000","updated":"2007-05-30T16:42:19.498+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12501744","id":"12501744","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Attaching a release note for this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-06-05T23:44:51.236+0000","updated":"2007-06-05T23:44:51.236+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12501745","id":"12501745","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Changing summary to more accurately reflect the problem as described in d2526_v1.html.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-06-05T23:46:01.038+0000","updated":"2007-06-05T23:46:01.038+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12501788","id":"12501788","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Release note looks great! Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-06-06T04:30:09.985+0000","updated":"2007-06-06T04:30:09.985+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12501991","id":"12501991","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for looking at the release note, Bryan.  I think that's the last of the work for this issue, so I'm marking it as closed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-06-06T17:06:22.980+0000","updated":"2007-06-06T17:06:22.980+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12505547","id":"12505547","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"scrubbed releasenote","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2007-06-16T22:06:24.898+0000","updated":"2007-06-16T22:06:24.898+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12631978","id":"12631978","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"A user hit this bug in 10.1 but the symptom was different. Instead of wrong results, they got a message: The repro is attached as TestDerby.java\r\nException in thread \"main\" ERROR 42818: Comparisons between \r\n'CHAR () FOR BIT DATA' and 'CHAR' are not supported.\r\n        at \r\norg.apache.derby.iapi.error.StandardException.newException(Unkno\r\nwn Source)\r\n        at \r\norg.apache.derby.impl.sql.compile.BinaryComparisonOperatorNode.b\r\nindComparisonOperator\r\n(Unknown Source)\r\n        at \r\norg.apache.derby.impl.sql.compile.PredicateList.searchClauseTran\r\nsitiveClosure(Unknown\r\n Source)\r\n        at \r\norg.apache.derby.impl.sql.compile.SelectNode.performTransitiveCl\r\nosure(Unknown Source)\r\n\r\n        at \r\norg.apache.derby.impl.sql.compile.SelectNode.preprocess(Unknown \r\nSource)\r\n        at \r\norg.apache.derby.impl.sql.compile.DMLStatementNode.optimize(Unkn\r\nown Source)\r\n        at \r\norg.apache.derby.impl.sql.compile.CursorNode.optimize(Unknown \r\nSource)\r\n        at \r\norg.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown \r\nSource)\r\n        at \r\norg.apache.derby.impl.sql.GenericStatement.prepare(Unknown \r\nSource)\r\n        at \r\norg.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.\r\nprepareInternalStatem\r\nent(Unknown Source)\r\n        at \r\norg.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown \r\nSource)\r\n        at \r\norg.apache.derby.impl.jdbc.EmbedStatement.executeQuery(Unknown \r\nSource)\r\n\r\nI'll look into backporting this fix to 10.2 and 10.1\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-09-17T22:22:34.237+0000","updated":"2008-09-17T22:22:34.237+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12632272","id":"12632272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> I'll look into backporting this fix to 10.2 and 10.1\r\n\r\nFor what it's worth, there was another bug in a similar area that also affected 10.1 and 10.2, namely, DERBY-3023.  One of the comments for that issue includes the following quote:\r\n\r\n  \"It turns out that the introduction of these invalid predicates stems from a problem that is almost\r\n  identical to the one described in DERBY-2526. For details please see d2526_v1.html as attached\r\n  to that issue, since pretty much everything in that document applies to this issue, as well.\"\r\n\r\nSo I wonder if it'd be worth it to port DERBY-3023 back, as well?  I don't feel strongly about it, I just figured I'd mention it in case you were interested...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-09-18T16:18:17.298+0000","updated":"2008-09-18T16:18:17.298+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12366604/comment/12632291","id":"12632291","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Army. I'll look into backporting DERBY-3023 as well.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-09-18T16:52:20.384+0000","updated":"2008-09-18T16:52:20.384+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2526/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06f4n:"}}