{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12665201","self":"https://issues.apache.org/jira/rest/api/latest/issue/12665201","key":"DERBY-6314","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326659","id":"12326659","description":"candidate for Second release for 10.10 branch","name":"10.10.2.0","archived":false,"released":true,"releaseDate":"2014-04-15"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12324243","id":"12324243","description":"First release on the 10.11 branch","name":"10.11.1.1","archived":false,"released":true,"releaseDate":"2014-08-26"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2013-08-23 13:18:46.14","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"345142","customfield_12310222":"3_*:*_1_*:*_703387248_*|*_1_*:*_1_*:*_441490396_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2013-09-05T14:09:48.861+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-6314/watchers","watchCount":4,"isWatching":false},"created":"2013-08-23T08:08:31.243+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":["derby_backport_reject_10_10","derby_backport_reject_10_9"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12321550","id":"12321550","description":"First release on the 10.10 branch","name":"10.10.1.1","archived":false,"released":true,"releaseDate":"2013-04-15"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12324243","id":"12324243","description":"First release on the 10.11 branch","name":"10.11.1.1","archived":false,"released":true,"releaseDate":"2014-08-26"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12374250","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12374250","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12642244","key":"DERBY-6177","self":"https://issues.apache.org/jira/rest/api/2/issue/12642244","fields":{"summary":"Cleanup suspect coding practices in org.apache.derby.catalog.types","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12374251","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12374251","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12617390","key":"DERBY-6003","self":"https://issues.apache.org/jira/rest/api/2/issue/12617390","fields":{"summary":"Create row templates outside of the generated code","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12374249","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12374249","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12638566","key":"DERBY-6128","self":"https://issues.apache.org/jira/rest/api/2/issue/12638566","fields":{"summary":"Examine Derby classes to determine if we need to add serialVersionUID to any of them","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/task.png","name":"Task","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-01-21T00:23:20.834+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11415","id":"11415","name":"Services"}],"timeoriginalestimate":null,"description":"I noticed that after running the SignatureChecker tool on a database with version 10.10.1.1, I could not boot it with trunk (neither hard nor soft upgrade worked).\r\n\r\nTo reproduce, create a database and run SignatureChecker with 10.10:\r\n\r\n$ java -jar /code/derby/oldreleases/10.10.1.1/derbyrun.jar SignatureChecker 'jdbc:derby:db;create=true'\r\n\r\nThen, try to boot that database with trunk:\r\n\r\n$ java -Dderby.database.allowPreReleaseUpgrade=true -jar /code/derby/trunk/jars/sane/derbyrun.jar SignatureChecker 'jdbc:derby:db'             \r\njava.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.apache.derby.tools.SignatureChecker.getJ2SEConnection(SignatureChecker.java:445)\r\n\tat org.apache.derby.tools.SignatureChecker.execute(SignatureChecker.java:140)\r\n\tat org.apache.derby.tools.SignatureChecker.main(SignatureChecker.java:121)\r\n\tat org.apache.derby.iapi.tools.run.main(run.java:61)\r\nCaused by: java.sql.SQLException: Failed to start database 'db' with class loader sun.misc.Launcher$AppClassLoader@7e820d53, see the next exception for details.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:103)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:137)\r\n\tat org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:310)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2841)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:404)\r\n\tat org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(InternalDriver.java:628)\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:282)\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:913)\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:147)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:571)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:233)\r\n\t... 8 more\r\nCaused by: java.sql.SQLException: Failed to start database 'db' with class loader sun.misc.Launcher$AppClassLoader@7e820d53, see the next exception for details.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory.java:141)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:73)\r\n\t... 18 more\r\nCaused by: java.sql.SQLException: Exception during restore of a serializable or SQLData object of class \r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory.java:141)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:73)\r\n\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:288)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2835)\r\n\t... 15 more\r\nCaused by: ERROR XSDA8: Exception during restore of a serializable or SQLData object of class \r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:265)\r\n\tat org.apache.derby.impl.store.raw.data.StoredPage.readRecordFromArray(StoredPage.java:5827)\r\n\tat org.apache.derby.impl.store.raw.data.StoredPage.restoreRecordFromSlot(StoredPage.java:1514)\r\n\tat org.apache.derby.impl.store.raw.data.BasePage.fetchFromSlot(BasePage.java:441)\r\n\tat org.apache.derby.impl.store.raw.data.CachedPage.fetchFromSlot(CachedPage.java:53)\r\n\tat org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController.fetch(GenericConglomerateController.java:299)\r\n\tat org.apache.derby.impl.sql.catalog.TabInfoImpl.deleteRows(TabInfoImpl.java:725)\r\n\tat org.apache.derby.impl.sql.catalog.TabInfoImpl.deleteRow(TabInfoImpl.java:570)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropSPSDescriptor(DataDictionaryImpl.java:4673)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropSPSDescriptor(DataDictionaryImpl.java:4647)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(DataDictionaryImpl.java:14121)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateMetadataSPSes(DataDictionaryImpl.java:14135)\r\n\tat org.apache.derby.impl.sql.catalog.DD_Version.handleMinorRevisionChange(DD_Version.java:539)\r\n\tat org.apache.derby.impl.sql.catalog.DD_Version.upgradeIfNeeded(DD_Version.java:238)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.loadDictionaryTables(DataDictionaryImpl.java:7984)\r\n\tat org.apache.derby.impl.sql.catalog.DataDictionaryImpl.boot(DataDictionaryImpl.java:818)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1991)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:334)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:541)\r\n\tat org.apache.derby.impl.services.monitor.FileMonitor.startModule(FileMonitor.java:44)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:423)\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:196)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1991)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:334)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1819)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(BaseMonitor.java:1685)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1569)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:988)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:546)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2802)\r\n\t... 15 more\r\nCaused by: java.io.StreamCorruptedException: java.lang.ClassCastException: java.io.ObjectInputStream cannot be cast to org.apache.derby.iapi.services.io.ErrorInfo\r\n\tat org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:139)\r\n\tat org.apache.derby.iapi.services.io.ArrayUtil.readArrayItems(ArrayUtil.java:180)\r\n\tat org.apache.derby.impl.sql.GenericStorablePreparedStatement.readExternal(GenericStorablePreparedStatement.java:232)\r\n\tat org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:125)\r\n\tat org.apache.derby.iapi.types.UserType.readExternal(UserType.java:299)\r\n\tat org.apache.derby.impl.store.raw.data.StoredPage.readRecordFromArray(StoredPage.java:5684)\r\n\t... 43 more\r\nCaused by: java.lang.ClassCastException: java.io.ObjectInputStream cannot be cast to org.apache.derby.iapi.services.io.ErrorInfo\r\n\tat org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:97)\r\n\t... 48 more\r\nCould not get a connection.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"345443","summary":"Upgrade from 10.10 fails with ClassCastException","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10051","value":"Urgent","id":"10051"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":20,"total":20,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748386","id":"13748386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I ran a git bisect session, and found that the problem started with the following commit:\r\n\r\n0f36effcb4fcdfe13df88322dbf6026b9ba149ae is the first bad commit\r\ncommit 0f36effcb4fcdfe13df88322dbf6026b9ba149ae\r\nAuthor: Richard N. Hillegas <rhillegas@apache.org>\r\nDate:   Mon Apr 15 17:00:53 2013 +0000\r\n\r\n    DERBY-3177: Cleanup suspect coding practices in the types package.\r\n    \r\n    git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468143 13f79535-47bb-0310-9956-ffa450edef68","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-23T08:22:35.969+0000","updated":"2013-08-23T08:22:35.969+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748397","id":"13748397","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The real error is hidden by the ClassCastException, which happens in an error handler in FormatIdInputStream.readObject():\r\n\r\n\t\t\t\tObjectInputStream ois = getObjectStream();\r\n\t\t\t\ttry {\r\n\t\t\t\t\tObject result = ois.readObject();\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} catch (IOException ioe) {\r\n\t\t\t\t\tsetErrorInfo((ErrorInfo) ois);\r\n\t\t\t\t\tthrow ioe;\r\n\t\t\t\t}\r\n\r\nThe stream returned by getObjectStream() doesn't necessarily implement ErrorInfo. It doesn't in this case, and a ClassCastException is thrown. We're more interested in the IOException.\r\n\r\nI changed the error handler to check the type of the ObjectInputStream before attempting to cast it, and then I got this exception instead:\r\n\r\nCaused by: java.io.InvalidClassException: org.apache.derby.catalog.types.TypeDescriptorImpl; local class incompatible: stream classdesc serialVersionUID = -5485274209578709396, local class serialVersionUID = -3812847726962874375\r\n\tat java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:617)\r\n\tat java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1620)\r\n\tat java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1515)\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1769)\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)\r\n\tat java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)\r\n\tat org.apache.derby.iapi.types.DataTypeDescriptor.readExternal(DataTypeDescriptor.java:1777)\r\n\tat java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1835)\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1794)\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)\r\n\tat java.io.ObjectInputStream.readArray(ObjectInputStream.java:1704)\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1342)\r\n\tat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1989)\r\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1913)\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1796)\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)\r\n\tat java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)\r\n\tat org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:94)\r\n\tat org.apache.derby.iapi.services.io.ArrayUtil.readArrayItems(ArrayUtil.java:180)\r\n\tat org.apache.derby.impl.sql.GenericStorablePreparedStatement.readExternal(GenericStorablePreparedStatement.java:232)\r\n\tat org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:127)\r\n\tat org.apache.derby.iapi.types.UserType.readExternal(UserType.java:299)\r\n\tat org.apache.derby.impl.store.raw.data.StoredPage.readRecordFromArray(StoredPage.java:5684)\r\n\t... 42 more","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-23T08:44:44.833+0000","updated":"2013-08-23T08:44:44.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748407","id":"13748407","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Said commit added a static method to TypeDescriptorImpl, which was apparently enough to change its serialVersionUID.\r\n\r\nDERBY-6128 went through all serializable classes and added serialVersionUID fields. However, TypeDescriptorImpl was skipped because it implemented Formatable and Derby normally takes the responsibility for encoding Formatable instances. In this case, though, the type id seems to have been stored using normal Java serialization.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-23T09:14:53.568+0000","updated":"2013-08-23T09:14:53.568+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748479","id":"13748479","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Although setting a serialVersionUID may fix the problem, I'm not sure it's the correct way to fix it. I'm currently trying to find the answer to these questions:\r\n\r\n- Is it correct to store these objects with Java serialization instead of using Derby's Formatable logic?\r\n- TypeDescriptorImpl's serialVersionUID has changed many times before. Why does upgrade only fail now?\r\n- TypeDescriptorImpl's serialVersionUID did not change between 10.9 and 10.10. Still, upgrade from 10.9 to trunk does not fail. What changed in 10.10?\r\n- It looks like it's deserialization of the CONSTANTSTATE column in SYS.SYSSTATEMENTS that fails. That is, the stored prepared statement for a meta-data query. I recall that we at some point changed the upgrade logic to prevent it from deserializing that column, because the format of the stored plan is not guaranteed to be stable. Why is it attempting to read it now?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-23T11:40:17.167+0000","updated":"2013-08-23T11:40:17.167+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748518","id":"13748518","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The TypeDescriptorImpl that's being read when the exception is raised, is stored in an ExecRowBuilder instance that lives in the savedObjects array of the GenericStorablePreparedStatement.\r\n\r\nExecRowBuilder is Serializable, but not Formatable. That explains why plain Java serialization is used. Also, since ExecRowBuilder is a new class in 10.10 (introduced in DERBY-6003), it explains why we don't see the problem when upgrading from a 10.9 database.\r\n\r\nIt does not explain why the value is deserialized during upgrade. It should not be necessary to read that column during upgrade. In fact, it is read when the upgrade logic is requesting that the entire row is deleted from the SYSSTATEMENTS table.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-23T13:10:33.263+0000","updated":"2013-08-23T13:10:33.263+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748525","id":"13748525","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks for catching and investigating this, Knut. I'm puzzled about the deserialization problem with TypeDescriptorImpl. These are the objects stored in SYS.SYSCOLUMNS.COLUMNDATATYPE. I ran the following experiment:\r\n\r\n1) created database db_10_9 using 10.9.1.0.\r\n\r\n2) then used Derby 10.10.1.1 to run the following program which deserializes all of the TypeDescriptorImpl objects in SYS.SYSCOLUMNS.COLUMNDATATYPE. The program ran fine.\r\n\r\nimport java.sql.*;\r\n\r\npublic class w\r\n{\r\n    public  static  void    main( String... args ) throws Exception\r\n    {\r\n        Connection  conn = DriverManager.getConnection( \"jdbc:derby:db_10_9\" );\r\n        ResultSet   rs = conn.prepareStatement\r\n            ( \"select columndatatype from sys.syscolumns\" ).executeQuery();\r\n\r\n        while( rs.next() )\r\n        {\r\n            Object  obj = rs.getObject( 1 );\r\n            System.out.println( \"columndatatype is a \" + obj.getClass().getName() );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2013-08-23T13:18:46.140+0000","updated":"2013-08-23T13:20:12.938+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748548","id":"13748548","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"I ran a similar experiment with a database created by 10.10.1.1 and then booted by the 10.11 trunk:\r\n\r\n1) used 10.10.1.1 to create database db_10_10\r\n\r\n2) then used the 10.11 trunk to run the following program and successfully read out all TypeDescriptorImpl objects in SYS.SYSCOLUMNS.COLUMNDATATYPE:\r\n\r\nimport java.sql.*;\r\n\r\npublic class w\r\n{\r\n    public  static  void    main( String... args ) throws Exception\r\n    {\r\n        Connection  conn = DriverManager.getConnection( \"jdbc:derby:db_10_10\" );\r\n        ResultSet   rs = conn.prepareStatement\r\n            ( \"select columndatatype from sys.syscolumns\" ).executeQuery();\r\n\r\n        while( rs.next() )\r\n        {\r\n            Object  obj = rs.getObject( 1 );\r\n            System.out.println( \"columndatatype is a \" + obj.getClass().getName() );\r\n        }\r\n    }\r\n}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2013-08-23T13:46:56.752+0000","updated":"2013-08-23T13:46:56.752+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748552","id":"13748552","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"DD_Version.handleMinorRevisionChange() calls bootingDictionary.clearSPSPlans() to remove the stale execution plans from SYSSTATEMENTS. It essentially nulls out the CONSTANTSTATE column and sets the VALID column to false in all rows. However, it isn't called until after the meta-data queries have been processed, so it doesn't help prevent this particular problem. At the point where it is called now, it only helps avoid deserialization problems with trigger plans. If we move the call earlier, we'll avoid attempts to deserialize stale plans both for meta-data queries and triggers.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-23T13:53:34.828+0000","updated":"2013-08-23T13:53:34.828+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748564","id":"13748564","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks, Knut. Looks like you're on the path to fixing this. Stored prepared statements are supposed to be thrown away and not de-serialized when you go across upgrade/downgrade boundaries. The following comment from DeleteConstantAction implies this:\r\n\r\n\t/********************************************************\r\n\t**\r\n\t**\tThis class implements Formatable. But it is NOT used\r\n \t**\tacross either major or minor releases.  It is only\r\n\t** \twritten persistently in stored prepared statements, \r\n\t**\tnot in the replication stage.  SO, IT IS OK TO CHANGE\r\n\t**\tITS read/writeExternal.\r\n\t**\r\n\t********************************************************/\r\n\r\nThis comment is in the 10.0 codeline. By \"replication\", the comment means Cloudscape's synchronization logic, which was removed before Cloudscape was open-sourced as Derby.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2013-08-23T14:12:38.889+0000","updated":"2013-08-23T14:12:38.889+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748608","id":"13748608","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for running those experiments, Rick. I think the serialization problem happens because the GenericStoredPreparedStatements in SYS.SYSSTATEMENTS.CONSTANTSTATE now may contain references to ExecRowBuilder instances, which are Serializable and not Formatable. And since the TypeDescriptorImpl instances in question live inside ExecRowBuilder, they will be stored using the Serializable logic instead of the Formatable logic they are intended to be stored with. In your experiment, with a different column, ExecRowBuilder wasn't there to confuse things, so Formatable logic was used all the way. The Formatable logic doesn't care about the serialVersionUID, so the deserialization was successful in that experiment.\r\n\r\nI think I'm now able to answer the questions from one of my earlier comments:\r\n\r\n> Is it correct to store these objects with Java serialization instead of using Derby's Formatable logic?\r\n\r\nNo, Formatable objects should have been stored with Formatable logic. ExecRowBuilder probably has to be changed to Formatable for the contained TypeDescriptorImpl instances to be stored correctly.\r\n\r\n> TypeDescriptorImpl's serialVersionUID has changed many times before. Why does upgrade only fail now?\r\n> TypeDescriptorImpl's serialVersionUID did not change between 10.9 and 10.10. Still, upgrade from 10.9 to trunk does not fail. What changed in 10.10?\r\n\r\nExecRowBuilder was not introduced until 10.10 (DERBY-6003), so we never attempted to store TypeDescriptorImpl using Serializable logic before 10.10. The Formatable logic doesn't care about serialVersionUID.\r\n\r\n> It looks like it's deserialization of the CONSTANTSTATE column in SYS.SYSSTATEMENTS that fails. That is, the stored prepared statement for a meta-data query. I recall that we at some point changed the upgrade logic to prevent it from deserializing that column, because the format of the stored plan is not guaranteed to be stable. Why is it attempting to read it now?\r\n\r\nThose fixes only affected stored trigger plans. Metadata plans are still read during upgrade.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-23T15:01:27.936+0000","updated":"2013-08-23T15:01:27.936+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748611","id":"13748611","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attaching a first patch (d6314-1a.diff), which fixes the upgrade logic so that it discards metadata plans without looking at them first. This is the same thing we do with trigger plans.\r\n\r\nThe patch also adds an upgrade test case that fails without the fix.\r\n\r\nAll the regression tests passed.\r\n\r\nI plan to fix the serialization logic so that TypeDescriptorImpl is stored as a Formatable rather than a Serializable in a separate patch. The fix for the upgrade logic will be needed regardless of that fix, though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-23T15:07:35.026+0000","updated":"2013-08-23T15:07:35.026+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13748612","id":"13748612","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks, Knut. Your analysis sounds correct to me. +1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2013-08-23T15:09:41.165+0000","updated":"2013-08-23T15:09:41.165+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13750066","id":"13750066","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1517533 from [~knutanders] in branch 'code/trunk'\r\n[ https://svn.apache.org/r1517533 ]\r\n\r\nDERBY-6314: Upgrade from 10.10 fails with ClassCastException\r\n\r\nMake sure stored plans for metadata queries are cleared the same\r\nway as trigger plans during upgrade, so that upgrade doesn't fail\r\nif the format of the old metadata plans cannot be read by the new\r\nversion.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-08-26T12:57:05.941+0000","updated":"2013-08-26T12:57:05.941+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13750075","id":"13750075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"d6314-2a.diff addresses the remaining issues:\r\n\r\n- make ExecRowBuilder implement the Formatable interface\r\n\r\n- add type checks to the error handlers in FormatableInputStream to prevent ClassCastExceptions that shadow the underlying exception\r\n\r\nAll regression tests ran cleanly with the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-26T13:10:38.397+0000","updated":"2013-08-26T13:10:38.397+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13751070","id":"13751070","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1517761 from [~knutanders] in branch 'code/trunk'\r\n[ https://svn.apache.org/r1517761 ]\r\n\r\nDERBY-6314: Upgrade from 10.10 fails with ClassCastException\r\n\r\nMake ExecRowBuilder implement the Formatable interface so that any\r\nFormatable instances referenced from its fields are stored using\r\nFormatable logic instead of Serializable logic.\r\n\r\nAdd type checking in FormatIdInputStream's error handlers to prevent\r\nthe underlying exception from being shadowed by a ClassCastException\r\nunder certain circumstances.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-08-27T08:16:03.712+0000","updated":"2013-08-27T08:16:03.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13751116","id":"13751116","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I don't think we need to backport any of this to 10.10 at the moment.\r\n\r\nWe may want to backport the upgrade fix (the 1a patch) because it makes upgrade more robust in case any future changes on the 10.10 branch changes the serialized format of the stored query plan.\r\n\r\nBackporting the 2a patch may be more problematic. Not for the case of upgrade from 10.10.1.1 to a later release produced from the 10.10 branch, but for the case of downgrading from that later 10.10 release back to 10.10.1.1. Since the 2a patch changes the format of the stored plan, and 10.10.1.1 does not have the upgrade fix, downgrade from 10.10.x to 10.10.1.1 will attempt to read the newer plan and fail. (Possible workaround: call SYSCS_INVALIDATE_STORED_STATEMENTS with 10.10.x before downgrading)\r\n\r\nSo I'm leaning towards backporting 1a and not backporting 2a for now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-08-27T09:31:55.460+0000","updated":"2013-08-27T09:31:55.460+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13758367","id":"13758367","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"Backporting at least the 1a patch to 10.10 makes sense to me. Knut, did you intend to do this?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2013-09-04T21:23:14.194+0000","updated":"2013-09-04T21:23:14.194+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13759091","id":"13759091","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1520320 from [~knutanders] in branch 'code/branches/10.10'\r\n[ https://svn.apache.org/r1520320 ]\r\n\r\nDERBY-6314: Upgrade from 10.10 fails with ClassCastException\r\n\r\nMerged revision 1517533 from trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-09-05T14:08:00.071+0000","updated":"2013-09-05T14:08:00.071+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/13759093","id":"13759093","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks, Myrna. I've now backported the 1a patch to 10.10. Marking the issue as resolved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-09-05T14:09:48.879+0000","updated":"2013-09-05T14:09:48.879+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12665201/comment/14284784","id":"14284784","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"bulk change to close all issues resolved but not closed and not changed since June 1, 2014.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2015-01-21T00:23:20.780+0000","updated":"2015-01-21T00:23:20.780+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-6314/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1niof:"}}