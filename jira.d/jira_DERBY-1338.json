{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12343348","self":"https://issues.apache.org/jira/rest/api/latest/issue/12343348","key":"DERBY-1338","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-05-23 05:46:11.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22447","customfield_12310222":"1_*:*_1_*:*_2601281000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_9569030000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-06-21T22:51:32.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1338/watchers","watchCount":0,"isWatching":false},"created":"2006-05-22T20:16:51.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2006-10-10T16:55:22.000+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11410","id":"11410","name":"Network Server"}],"timeoriginalestimate":null,"description":"When run from Sun JDK 1.4.2 and Sun JDK 1.5, these two tests fail when run from the\nclasses directory. They work, though, when run from jars.\n\nRunning NSinSameVM in my sandbox:\n\nbash-3.00$ java   -Dframework=DerbyNetClient org.apache.derbyTesting.functionTests.harness.RunTest derbynet/NSinSameJVM.java\n*** Start: NSinSameJVM jdk1.4.2_05 DerbyNetClient 2006-05-22 14:49:05 ***\nInitialize for framework: DerbyNetClient\nstartServer = false. Bypass server startup\n6 add\n> java.lang.NoClassDefFoundError: org/apache/derby/impl/drda/DRDAProtocolExceptionInfo\nTest Failed.\n*** End:   NSinSameJVM jdk1.4.2_05 DerbyNetClient 2006-05-22 14:49:27 ***\n\nI get similar behavior for DerbyNetNewServer.  I ran this on a Solaris 10/i86x box. Davis has seen it too, see \ninitial discusson on this thread: http://www.nabble.com/forum/ViewPost.jtp?post=4477600&framed=y\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"40333","summary":"Client tests DerbyNetNewServer and NSinSameVM fail with NoClassDefFoundError: DRDAProtocolExceptionInfo when run from classes dir","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Sun JDK 1.4.2, Sun JDK 1.5 on Solaris\n","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":11,"total":11,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12412772","id":"12412772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"(quote from mail thread)\r\n\r\nDag says:\r\n\r\nI looked at this again: This is my understanding so far.\r\n\r\nI think this is a problem with the test and/or the server code.\r\nApperently there is a race condition between the connection being\r\nclosed and the shutdown of the server.  This test starts its own\r\nserver and then opens and closes a connection to it, in this case via\r\nthe derby client driver.  Skeleton code:\r\n\r\n  server.start\r\n  conn = DriverManager.getConnection(<derby client>)\r\n  conn.close\r\n         <inserting a small sleep here makes problem go away>\r\n  server.shutdown\r\n\r\nBy inserting a small sleep between the close and the shutdown, the\r\ntest works in my environment. I would guess the problem appears\r\nbecause the server gets to (start) shut down *before* the close\r\nmessage process is started/completed, and when the server DRDA\r\nprotocol code is in the process of handling the close, the server is\r\ngoing down, hence the class not found exceptions.\r\n\r\nThe larger question is: Is there any way to avoid this in the server?\r\nUsers can hit this one, too, and it would be nice if the server were\r\nmore rubust. I think is possibly related to the problem discussed\r\nunder JIRA-1219 and DERBY-1326, although in those cases, the problems\r\noccur further down the line: ghost sessions remain after shutdown\r\ncausing trouble on restart. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-22T20:18:49.000+0000","updated":"2006-05-22T20:18:49.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12412773","id":"12412773","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Dag.Wanvik@Sun.COM (Dag H. Wanvik) writes:\r\n\r\n> Hi,\r\n>\r\n> I looked at this again: This is my understanding so far.\r\n\r\nOoops. The analysis in my previous post was for the test\r\nDerbyNetNewServer.java, which has a similar symptom in my\r\nenvironment. For NSinSameVM.java, I found that the connection is\r\nactually *not* closed prior to shutdown:\r\n\r\n :\r\n // Leave the connection open before shutdown to make \r\n // sure the thread closes down. \r\n // connection.close();\r\n :\r\n serverControl.shutdown();\r\n\r\nBy uncommenting the close, the test passed. I am not sure what the\r\nmeaning of the above comment is.\r\n\r\nAnyway, it would seem my explanation in my previous post is not the\r\nwhole story here. One hypothesis might be that the error occurs at\r\nshutdown when the connection is not closed, but then, I don't\r\nunderstand why it works if run from jars. Can anyone shed some light\r\non this?\r\n\r\nDag","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-22T20:20:20.000+0000","updated":"2006-05-22T20:20:20.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12412775","id":"12412775","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Bryan Pendleton <bpendleton@amberpoint.com> writes:\r\n\r\n> This is very interesting! I don't know what is going on here, either, but\r\n> it sounds very similar to the issues that I've been investigating with\r\n> Deepa and Kathey under DERBY-1326 and DERBY-1219.\r\n>\r\n> I'm hoping to put some effort into Network Server session/connection\r\n> management in the context of DERBY-1326.\r\n>\r\n> I think it is too soon to tell whether the problems you are seeing\r\n> are identical to those of DERBY-1326 and DERBY-1219, but I certainly\r\n> think that this part of the system will benefit from having a number\r\n> of contributors carefully analyzing it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-22T20:21:34.000+0000","updated":"2006-05-22T20:21:34.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12412791","id":"12412791","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"I have looked at this some more and I think I understand\r\nmore of what's happening, although the root cause is still \r\nan open question. Here are my findings so far:\r\n\r\n- When I run this with JDK1.6 the test works.\r\n- Running without security manager did not impact the error.\r\n- I ran the test with -Duseprocess=false and the error still occurs,\r\n  so I can see what happens in jdb. In jdb, I was able to find where\r\n  the exception occurs: \r\n\r\n  As the NetworkServerStarter#blockingStart, released from its wait on\r\n  shutdownSync, is dowing the actual shutdown (interrupting threads,\r\n  closing server socket), the connection thread is blocked on a read:\r\n\r\nDRDAConnThread_4[1] where\r\n  [1] java.net.SocketInputStream.socketRead0 (native method)\r\n  [2] java.net.SocketInputStream.read (SocketInputStream.java:129)\r\n  [3] org.apache.derby.impl.drda.DDMReader.fill (DDMReader.java:1,720)\r\n  [4] org.apache.derby.impl.drda.DDMReader.ensureALayerDataInBuffer (DDMReader.java:1,473)\r\n  [5] org.apache.derby.impl.drda.DDMReader.readDssHeader (DDMReader.java:315)\r\n  [6] org.apache.derby.impl.drda.DRDAConnThread.processCommands (DRDAConnThread.java:628)\r\n  [7] org.apache.derby.impl.drda.DRDAConnThread.run (DRDAConnThread.java:238)\r\n\r\nThe read then fails when socket is closed, and gives an IOException\r\nhere:\r\n\r\n> breakpoint hit: \"thread=DRDAConnThread_4\",\r\n> org.apache.derby.impl.drda.DDMReader.fill(), line=1,724 bci=43\r\n> \r\n> DRDAConnThread_4[1] print ioe\r\n>  ioe = \"java.net.SocketException: Socket closed\"\r\n\r\nAt this point the method markCommunicationsFailure is called, which\r\ntries to create an exception of class DRDAProtocolException. This is\r\nwhere the class loader gives the error. I used jdb to check which\r\nclasses were loaded *before* this line:\r\n\r\n\tthrow DRDAProtocolException.newDisconnectException(this,oa);\r\n\r\nAnd I could see that *both* DRDAProtocolException and\r\nDRDAProtocolExceptionInfo were unknown to the VM. After I step this\r\nstatement in jdb, DRDAProtocolException is known, but *not*\r\nDRDAProtocolExceptionInfo, hence the error. Why it cannot load it, I\r\ndon't know.\r\n\r\nIf I make a dummy DRDAProtocolExceptionInfo object in\r\nNetworkServerControlImpl, the error goes away.\r\n\r\nThis all leads me to believe that the Derby code is ok, and that this\r\nis a class loader issue, all the more so, since the problem goes away\r\nwhen the test is run with jars or with the newer JDK1.6.\r\n\r\nI did run the test inside jdb with JDK1.6 and could see that both\r\nclasses got loaded correctly at this point in the code.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-22T22:24:46.000+0000","updated":"2006-05-22T22:24:46.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12412841","id":"12412841","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thank you for filing the bug, and for posting the results of your\r\ndebugging. Your analysis is very interesting, and I can't think\r\nof a reason why the class would fail to be loaded.\r\n\r\nI was wondering if there was a way to figure out whether this\r\nproblem *only* happens at server shutdown, or whether it could\r\nhappen earlier in the server's lifetime as well.\r\n\r\nFor example, would it be possible to run a test in which you\r\ncause a client to break a connection with the server during\r\n\"normal\" server processing, because it seems like in that case\r\nthe server should go through a similar path (calling the\r\nmarkCommunicationsFailure routine to handle the IOException),\r\nand in that case does the DRDAProtocolExceptionInfo class get\r\nloaded successfully?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-05-23T05:46:11.000+0000","updated":"2006-05-23T05:46:11.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12413021","id":"12413021","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks for the suggestion Bryan. I tried it, but in that case the socket read \r\nreturns -1 (end of data) and all is well. So i had to do some more digging.\r\n\r\nIt seems clear that this is bug in the classloader.  I suggest a\r\nsimple workaround, see below.\r\n\r\nI compiled my own version of URLClassLoader so I could see what\r\nhappens when the class fails to load and I found that the reading of\r\nthe actual bytes of the class fails with java.io.InterruptedIOException:\r\n\r\njava/net/URLClassLoader.java (JDK 1.5)\r\n                    :\r\nline 214           private Class defineClass(String name, Resource res) throws IOException {\r\n                       :\r\nline 256               byte[] b = res.getBytes();\r\n                                      **\r\nWe get java.io.InterruptedIOException here. This in turn causes\r\nURLClassLoader#findClass to throw ClassNotFoundException:\r\n\r\nline 184           protected Class<?> findClass(final String name) \r\n                       throws ClassNotFoundException\r\n                       :\r\nline 194                    try {\r\n                                return defineClass(name, res);\r\n                            } catch (IOException e) {\r\n                                throw new ClassNotFoundException(name, e);\r\n                            }\r\n\r\n\r\nThe shutdown of the server *has* interrupted the thread, in\r\nNetworkServerStarter#blockingStart. So, is this the reason we get this\r\nexception? Most likely. I googled and found relevant these bug\r\nreports:\r\n\r\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4549130\r\n\tURLClassLoader: NoClassDefFoundError thrown when not using rt.jar\r\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4764778\r\n\tInterrupted thread can't load classes from classes directory (sol)\r\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4385444\r\n        (spec) InterruptedIOException should not be required by platform specification (sol)\r\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6375934\r\n        thread interruption interferes with classloading (sol)\r\n\r\nI quote from the first:\r\n\r\n> On Solaris java.io is interruptible. Therefore, if you\r\n> read class from a classfile and the thread gets interrupted,\r\n> one gets an InterruptedIOException.\r\n> One needs to catch InterruptedIOException in defineClass\r\n> of URLClassLoader and then retry.\r\n\r\nA simple repro is enclosed:\r\n\r\n----------------------------------------\r\npublic class Test {\r\n    public static void main(String[] args) {\r\n        new HappyClass();\r\n        Thread.currentThread().interrupt();\r\n        new UnhappyClass();\r\n    }\r\n}\r\n\t\r\nclass HappyClass {}\r\nclass UnhappyClass {}\r\n----------------------------------------\r\n\r\nThe second issue indicates that this has been fixed for Mustang. \r\n\r\nIn deed, when I run this repro, it fails on JDK1.5, but *not* on JDK\r\n1.6. It would seem this is the root cause of our problem, and that\r\nJDK1.6 does not have this problem. I checked the source for 1.6,\r\nthough, and the code in URLCLassLoader is unchanged, so presumably it\r\nhas been fixed somewhere else, the bug issue doesn't say how. \r\n\r\nHowever, http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6375934\r\ndated Jan 2006, seems to say it has not been fully fixed, even in\r\n1.6 - it seems to be gone, though :-)\r\n\r\nIt is a Solaris specific problem, according to CR 4385444, since under\r\nother OSes, the interrupting of a Java thread goes not give rise to\r\nthe InterruptedIOException.\r\n\r\nAgain, this has not been seen when running from jars, but I think it\r\nis sufficiently annoying/risky that it would be nice to fix it, since\r\nit will be some time before we only run on 1.6 :)\r\n\r\nAs I mentioned before, we can make sure the classes in question\r\n(DRDAProtocolExceptionInfo and DRDAProtocolException) are already\r\nloaded (by creating a dummy object) before the thread is interrupted,\r\nthus sidestepping the issue.  If nobody objects, I will post a patch\r\nwith this solution.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-05-24T05:44:44.000+0000","updated":"2006-05-24T05:44:44.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12416817","id":"12416817","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"From: Bryan Pendleton, Date: Tue, 23 May 2006 16:17:59 -0700\r\n\r\n> The shutdown of the server *has* interrupted the thread, in\r\n> NetworkServerStarter#blockingStart. So, is this the reason we get this\r\n> exception? \r\n\r\nThis is *very* interesting -- thank you for doing this great research!\r\n\r\nThis sort of thing is exactly why I've been so scared to add more\r\ncalls to interrupt() as part of DERBY-1219 and DERBY-1326 -- interrupt()\r\nis a very scary call to make.\r\n\r\nThe good news is that this does mean that this is purely a shutdown\r\nproblem, as the only place that we interrupt the DRDAConnThread instances\r\nright now is at the very end of the blockingStart() method.\r\n\r\nBut it certainly means we'll have to be even more careful about whatever\r\nfix we eventually make for DERBY-1326, as we definitely don't want to\r\ncasually add any more interrupt() calls, given the possibility of horrible\r\nside effects like this.\r\n\r\n> As I mentioned before, we can make sure the classes in question\r\n> (DRDAProtocolExceptionInfo and DRDAProtocolException) are already\r\n> loaded (by creating a dummy object) before the thread is interrupted,\r\n> thus sidestepping the issue.\r\n\r\nAlternatively, we could remove the interrupt() call in Network Server shutdown.\r\n\r\nSince we are shutting down the server anyway, I don't know how crucial it\r\nis to clean up those background threads. We have called close() on them already,\r\nso if they try to run again, they will quickly detect that they have been closed\r\nand exit themselves. And, so long as they have been marked as \"daemon\" threads,\r\ntheir mere presence won't prevent the server from shutting down.\r\n\r\nBut I'm also fine with pre-loading the classes if that seems to help.\r\n\r\nThese sorts of startup/shutdown bugs always seem very hard to me: trying to\r\nshut down a complex piece of server software while all sorts of complicated\r\nprocessing may be still underway has always been a dicey business.\r\n\r\nthanks,\r\n\r\nbryan\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-06-20T05:56:52.000+0000","updated":"2006-06-20T05:56:52.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12416818","id":"12416818","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Here is a simple patch which preloads the class causing the problem.\r\nIt makes the tests run correctly - derbyall ran without errors on the classes\r\ndirectory on my Solaris 10/x86 box).\r\n\r\nI don't have to time to work on getting rid of the thread interrupts right now; although\r\nI would prefer that solution.  I can leave this issue open or we could file another\r\none.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-06-20T06:03:26.000+0000","updated":"2006-06-20T06:03:26.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12416840","id":"12416840","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Dag,\r\n\r\nI looked at your patch. Unless anybody else has a better suggestion, I think we\r\nshould go ahead and use your patch, since it clearly improves the behavior\r\nin your environment.\r\n\r\nI think that we should put a more complete comment in the code itself, though,\r\nso that people aren't required to visit JIRA unless they really need the detailed\r\nbackground. What do you think about the following comment -- is it accurate?\r\n\r\n  // Work around a classloader bug involving interrupt handling during\r\n  // class loading. If the first request to load the DRDAProtocolException\r\n  // class occurs during shutdown, the loading of the class may be aborted\r\n  // when the Network Server calls Thread.interrupt() on the DRDAConnThread.\r\n  // By including a static reference to the DRDAProtocolException class here,\r\n  // we ensure that it is loaded as soon as the DRDAConnThread class is loaded,\r\n  // and therefore we know we won't be trying to load the class during shutdown.\r\n  // See DERBY-1338 for more background, including pointers to the apparent\r\n  // classloader bug in the JVM.\r\n\r\nIf this comment seems reasonable to you, and if the community doesn't come up\r\nwith any better suggestions, I can commit this change later this week.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-06-20T10:17:25.000+0000","updated":"2006-06-20T10:17:25.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12416942","id":"12416942","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Hi Bryan, \r\n\r\nThanks for quick feed-back!\r\nI did consider including a longer comment - I agree it is better. The\r\ncomment is fine, except it should be DRDAProtocolExceptionInfo in all\r\ncases, not plain DRDAProtocolException. \r\n\r\n  // Work around a classloader bug involving interrupt handling during\r\n  // class loading. If the first request to load the\r\n  // DRDAProtocolExceptionInfo class occurs during shutdown, the\r\n  // loading of the class may be aborted when the Network Server calls\r\n  // Thread.interrupt() on the DRDAConnThread.  By including a static\r\n  // reference to the DRDAProtocolExceptionInfo class here, we ensure\r\n  // that it is loaded as soon as the DRDAConnThread class is loaded,\r\n  // and therefore we know we won't be trying to load the class during\r\n  // shutdown.  See DERBY-1338 for more background, including pointers\r\n  // to the apparent classloader bug in the JVM.\r\n\r\nI made a minimal patch; to be safe, one could preload\r\nDRDAProtocolException as well, since that class did not seem to be\r\nloaded at the time of the protocol exception either, but every time\r\nthe loader succeed with its loading, but failed on\r\nDRDAProtocolExceptionInfo.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2006-06-21T00:21:27.000+0000","updated":"2006-06-21T00:21:27.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12343348/comment/12417136","id":"12417136","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks for the patch, Dag! In addition to your testing, derbynetclientmats runs\r\nclean for me. I edited in the revised comment to the code and submitted it\r\nto subversion: http://svn.apache.org/viewvc?view=rev&revision=416012\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-06-21T22:51:32.000+0000","updated":"2006-06-21T22:51:32.000+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1338/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i079o7:"}}