{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12609632","self":"https://issues.apache.org/jira/rest/api/latest/issue/12609632","key":"MAHOUT-1086","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310751","id":"12310751","key":"MAHOUT","name":"Mahout","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310751&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310751&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310751&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310751&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13060","id":"13060","description":"Apache Mahout","name":"Mahout"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12320153","id":"12320153","description":"The release will stabilize core components, improve performances and adds new streaming algorithms. Unmaintained code is getting killed as part of this","name":"0.8","archived":false,"released":true,"releaseDate":"2013-07-25"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-09-29 23:31:57.273","customfield_12312323":null,"customfield_12310420":"240721","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_1022848603_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-10-11T01:18:21.047+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAHOUT-1086/watchers","watchCount":3,"isWatching":false},"created":"2012-09-29T05:10:52.463+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12319261","id":"12319261","description":"Primarily a cleanup and refactoring release. Some new functionality which has been previously completed and tested may be introduced.","name":"0.7","archived":false,"released":true,"releaseDate":"2012-05-15"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-02-03T08:05:46.616+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312151","id":"12312151","name":"Clustering","description":"Bugs related to any of the clustering packages"}],"timeoriginalestimate":null,"description":"Something changed in Mahout around 9/6/12 that caused TestMeanShift.testCanopyEuclideanMRJobNoClustering to return 4 clusters rather than 3. All of the other tests using the same data still return 3 clusters. No changes were made to any of the MeanShiftCanopy classes other than 1 formatting change to the driver so I'm at a loss to the cause.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"4597","summary":"Mean Shift Test Now Produces 4 Clusters","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jeastman","name":"jeastman","emailAddress":"jeff at windwardsolutions dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jeastman&avatarId=12232","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jeastman&avatarId=12232","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jeastman&avatarId=12232","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jeastman&avatarId=12232"},"displayName":"Jeff Eastman","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jeastman","name":"jeastman","emailAddress":"jeff at windwardsolutions dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jeastman&avatarId=12232","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jeastman&avatarId=12232","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jeastman&avatarId=12232","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jeastman&avatarId=12232"},"displayName":"Jeff Eastman","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":10,"total":10,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13466360","id":"13466360","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"I think that this is my issue.  According to git, it find that the first bad commit was svn@1379763 \r\n\r\n{code}\r\n9929fddbc542d43f7978cb45980ae3e8855b2278 is the first bad commit\r\ncommit 9929fddbc542d43f7978cb45980ae3e8855b2278\r\nAuthor: Ted Dunning <tdunning@apache.org>\r\nDate:   Sat Sep 1 14:03:22 2012 +0000\r\n\r\n    MAHOUT-1063 - Integer and real attributes are handled just as any numeric attribute.\r\n    \r\n    git-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@1379763 13f79535-47bb-0310-9956-ffa450edef68\r\n\r\n:040000 040000 199b69ff766daded3774d0e8fa64cf59199e9af1 12e47b4f7f35512604c457c2dd18e40d8d0ae34a M\tintegration\r\nbisect run success\r\nTeds-MacBook-Pro-2:mahout-2[(no branch)*]$ git bisect log\r\ngit bisect start\r\n# bad: [fa30e5fcb8f2ed8002a6676a673494273f63e679] MAHOUT-1059 - Remove memory hungry test\r\ngit bisect bad fa30e5fcb8f2ed8002a6676a673494273f63e679\r\n# good: [556737f074a0ad97595a6b584e99bd020c9d8b23] more getters for a factorization (minor change)\r\ngit bisect good 556737f074a0ad97595a6b584e99bd020c9d8b23\r\n# bad: [c91eba1ad197de6f61a010b880b6cfed671051d9] MAHOUT-1059 - Add generic vector test.\r\ngit bisect bad c91eba1ad197de6f61a010b880b6cfed671051d9\r\n# bad: [ab514d84bfc4cb0c34b5a79d63d08df5f742dba0] MAHOUT-1063 - Add test case for ARFF integers and reals.\r\ngit bisect bad ab514d84bfc4cb0c34b5a79d63d08df5f742dba0\r\n# bad: [9929fddbc542d43f7978cb45980ae3e8855b2278] MAHOUT-1063 - Integer and real attributes are handled just as any numeric attribute.\r\ngit bisect bad 9929fddbc542d43f7978cb45980ae3e8855b2278\r\nTeds-MacBook-Pro-2:mahout-2[(no branch)*]$ \r\n{code}\r\n\r\nI will look further.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-09-29T23:31:57.273+0000","updated":"2012-09-29T23:31:57.273+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13466361","id":"13466361","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"Hmm... looks like my test script wasn't installing math so it was artificially failing.\r\n\r\nMore anon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-09-29T23:37:37.630+0000","updated":"2012-09-29T23:37:37.630+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13466440","id":"13466440","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"OK.  So this is a bit of a Heisenbug.  I am not seeing consistent failures.\r\n\r\nI am about to run again with multiple replications so that success means five clean runs or some such.\r\n\r\nThank goodness bisection is \"fast\".","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-09-30T10:35:37.595+0000","updated":"2012-09-30T10:35:37.595+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13466480","id":"13466480","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"OK.  I seem to be able replicate the problem with \r\n\r\n    trunk@1380432 MAHOUT-1059 - Abstract the idea of a cached length\r\n    1cb76f01b9b504fdf33a7ef6e30afdbd7d3842ef\r\n\r\nand not before.  This change also introduces some changes to AbstractVector that might be the issue.\r\n\r\nThe changes involved have to do with whether operations on sparse matrices operated sparsely.  For instance, like()\r\nused to be this:\r\n{code}\r\n    Vector result = like().assign(this);\r\n{code}\r\nThis causes a dense iteration which is wrong.  The new code does this instead:\r\n{code}\r\n    Vector result;\r\n    if (isDense()) {\r\n      result = like().assign(this);\r\n    } else {\r\n      result = like();\r\n      Iterator<Element> i = this.iterateNonZero();\r\n      while (i.hasNext()) {\r\n        final Element element = i.next();\r\n        result.setQuick(element.index(), element.get());\r\n      }\r\n    }\r\n{code}\r\nThe idea is that if the source of the data is sparse, we only need to assign the non-zero elements since we know the newly minted destination will be zero filled.\r\n\r\nMy feeling is that this code is correct, but there is a more complex change later in the same diff that might have changed some results.\r\n\r\nI will isolate these changes and see if I can determine what the changes were and how they impact canopy stuff.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-09-30T13:47:00.330+0000","updated":"2012-09-30T13:47:00.330+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13466500","id":"13466500","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"OK. I think I have the problem isolated even if I don't understand it.  In getDistanceSquared, I separate out the computation of one operand's squared length and push it back into that operand for caching.  The code is\r\n{code}\r\n    Iterator<Element> it = sparseAccessed.iterateNonZero();\r\n    double d = randomlyAccessed.getLengthSquared();\r\n    double d2 = 0;\r\n    double dot = 0;\r\n    while (it.hasNext()) {\r\n      Element e = it.next();\r\n      double value = e.get();\r\n      d2 += value * value;\r\n      dot += value * randomlyAccessed.getQuick(e.index());\r\n    }\r\n    //assert d > -1.0e-9; // round-off errors should never be too far off!\r\n    final double r1 = Math.abs(d + d2 - 2 * dot);\r\n    final double r2 = oldDistanceSquared(v);\r\n    final double error = Math.abs(r1 - r2) / r1;\r\n    if (error > 1e-14) {\r\n      System.err.printf(\"Discrepancy %.3f\\n\", error);\r\n    }\r\n//    if (sparseAccessed instanceof LengthCachingVector) {\r\n//      ((LengthCachingVector) sparseAccessed).setLengthSquared(d2);\r\n//    }\r\n    return r2;\r\n{code}\r\nThe commented code is where the cache is updated.  If these lines are commented, the problem does not happen.  If these lines are uncommented, it does happen.  \r\n\r\nMy problem here is that I can't yet understand what the problem is.  I also don't understand how this is different from what we had before.  I have also have put a test into the place that the cache is updated and don't see that saving this causes a problem.\r\n\r\nI think that we have a problem where some other code somewhere is misusing this cache.  I am going to start a wide-ranging inspection to see what is going on.  That is going to take quite a while, especially since I am unlikely to have another full day to beat on this for a while.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-09-30T15:22:39.980+0000","updated":"2012-09-30T15:22:39.980+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13466654","id":"13466654","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"OK.  The problem was round-off errors introduced by the new formulation.  The caching of squared lengths apparently changed which round-off errors occurred which triggered a change in the (excessively) sensitive clustering tests.\r\n\r\nPatch coming shortly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-10-01T05:59:26.693+0000","updated":"2012-10-01T05:59:26.693+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13466655","id":"13466655","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"Here is a patch in git format.  I can't remember if jenkins will apply that cleanly or not.\r\n\r\nThe problem was round-off errors that happened differently when the ordering of operations is different.  That ordering is changed when caching is changed and this problem comes up.\r\n\r\nThe expected result of this patch is that the old error will come back (reversed).  That is, you should see\r\n{code}\r\nFailed tests:   testCanopyEuclideanMRJobNoClustering(org.apache.mahout.clustering.meanshift.TestMeanShift): count expected:<4> but was:<3>\r\n{code}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-10-01T06:10:08.895+0000","updated":"2012-10-01T06:10:08.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13472155","id":"13472155","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"Here is a patch that deals with the issue as well as related issues. It includes many new tests and increases coverage generally.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-10-09T05:46:33.196+0000","updated":"2012-10-09T05:46:33.196+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13473754","id":"13473754","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"Committed this patch.  This will set up MAHOUT-1091 for committing.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2012-10-11T01:18:21.061+0000","updated":"2012-10-11T01:18:21.061+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12609632/comment/13473820","id":"13473820","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"body":"Integrated in Mahout-Quality #1695 (See [https://builds.apache.org/job/Mahout-Quality/1695/])\r\n    MAHOUT-1086 - Deal with round-off errors in computing L_2 distances.  Add special case to get higher accuracy when vector difference is small, merge AbstractVectorTest and AbstractTestVector, fix like() bug in Centroid and WeightedVector. (Revision 1396888)\r\n\r\n     Result = SUCCESS\r\ntdunning : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1396888\r\nFiles : \r\n* /mahout/trunk/core/src/test/java/org/apache/mahout/clustering/meanshift/TestMeanShift.java\r\n* /mahout/trunk/math/src/main/java/org/apache/mahout/math/AbstractVector.java\r\n* /mahout/trunk/math/src/main/java/org/apache/mahout/math/Centroid.java\r\n* /mahout/trunk/math/src/main/java/org/apache/mahout/math/DelegatingVector.java\r\n* /mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseVector.java\r\n* /mahout/trunk/math/src/main/java/org/apache/mahout/math/LengthCachingVector.java\r\n* /mahout/trunk/math/src/main/java/org/apache/mahout/math/RandomAccessSparseVector.java\r\n* /mahout/trunk/math/src/main/java/org/apache/mahout/math/SequentialAccessSparseVector.java\r\n* /mahout/trunk/math/src/main/java/org/apache/mahout/math/WeightedVector.java\r\n* /mahout/trunk/math/src/test/java/org/apache/mahout/math/AbstractTestVector.java\r\n* /mahout/trunk/math/src/test/java/org/apache/mahout/math/AbstractVectorTest.java\r\n* /mahout/trunk/math/src/test/java/org/apache/mahout/math/CentroidTest.java\r\n* /mahout/trunk/math/src/test/java/org/apache/mahout/math/TestDenseVector.java\r\n* /mahout/trunk/math/src/test/java/org/apache/mahout/math/TestRandomAccessSparseVector.java\r\n* /mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSequentialAccessSparseVector.java\r\n* /mahout/trunk/math/src/test/java/org/apache/mahout/math/VectorTest.java\r\n* /mahout/trunk/math/src/test/java/org/apache/mahout/math/WeightedVectorTest.java\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"created":"2012-10-11T04:02:13.858+0000","updated":"2012-10-11T04:02:13.858+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAHOUT-1086/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0153z:"}}