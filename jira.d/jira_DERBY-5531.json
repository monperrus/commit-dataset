{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12534778","self":"https://issues.apache.org/jira/rest/api/latest/issue/12534778","key":"DERBY-5531","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315436","id":"12315436","description":"Head of 10.5 branch - version bump for DERBY-4835","name":"10.5.3.2","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12315434","id":"12315434","description":"Head of 10.6 branch as of 2014-01-13","name":"10.6.2.4","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12315902","id":"12315902","description":"Head of 10.7 branch as of 2010-11-29","name":"10.7.1.4","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12323456","id":"12323456","description":"Third release on the 10.8 branch","name":"10.8.3.0","archived":false,"released":true,"releaseDate":"2012-11-16"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12323562","id":"12323562","description":"Head of 10.9 branch after releasing 10.9.1.0","name":"10.9.2.2","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321550","id":"12321550","description":"First release on the 10.10 branch","name":"10.10.1.1","archived":false,"released":true,"releaseDate":"2013-04-15"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2011-12-13 20:15:22.749","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"220462","customfield_12310222":"1_*:*_1_*:*_22478022827_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-08-28T16:28:04.285+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-5531/watchers","watchCount":2,"isWatching":false},"created":"2011-12-12T12:34:21.500+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":["derby_triage10_9"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317968","id":"12317968","description":"second release on the 10.8 branch","name":"10.8.2.2","archived":false,"released":true,"releaseDate":"2011-10-24"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-11-25T20:14:46.871+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"ij> connect 'jdbc:derby:colldb;territory=en;collation=TERRITORY_BASED;create=true';\r\nij> create table t(x varchar(10) unique);\r\n0 rows inserted/updated/deleted\r\nij> insert into t values null;\r\nERROR XJ001: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchartype of template column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.AssertFailure'.\r\njava.sql.SQLException: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchartype of template column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.AssertFailure'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:98)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)\r\n\tat org.apache.derby.impl.jdbc.Util.javaException(Util.java:299)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:436)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2288)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1334)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:559)\r\n\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:527)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:369)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)\r\n\tat org.apache.derby.impl.tools.ij.Main.go(Main.java:229)\r\n\tat org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)\r\n\tat org.apache.derby.impl.tools.ij.Main.main(Main.java:75)\r\n\tat org.apache.derby.tools.ij.main(ij.java:59)\r\n\tat org.apache.derby.iapi.tools.run.main(run.java:53)\r\nCaused by: java.sql.SQLException: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchartype of template column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.AssertFailure'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:42)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:122)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:71)\r\n\t... 18 more\r\nCaused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchartype of template column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar\r\n\tat org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)\r\n\tat org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)\r\n\tat org.apache.derby.impl.store.access.btree.OpenBTree.isIndexableRowConsistent(OpenBTree.java:515)\r\n\tat org.apache.derby.impl.store.access.btree.BTreeController.doIns(BTreeController.java:679)\r\n\tat org.apache.derby.impl.store.access.btree.BTreeController.insert(BTreeController.java:1374)\r\n\tat org.apache.derby.impl.store.access.btree.index.B2IController.insert(B2IController.java:210)\r\n\tat org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(IndexChanger.java:440)\r\n\tat org.apache.derby.impl.sql.execute.IndexChanger.doInsert(IndexChanger.java:383)\r\n\tat org.apache.derby.impl.sql.execute.IndexChanger.insert(IndexChanger.java:590)\r\n\tat org.apache.derby.impl.sql.execute.IndexSetChanger.insert(IndexSetChanger.java:268)\r\n\tat org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(RowChangerImpl.java:453)\r\n\tat org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:999)\r\n\tat org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:519)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)\r\n\t... 11 more","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"35470","summary":"Assert failure when inserting NULL into indexed column with territory-based collation","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":9,"total":9,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13168677","id":"13168677","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"repro'd for me also.  Here is full stack on my system from derby.log:\r\n\r\n\r\nTue Dec 13 12:11:11 PST 2011:\r\nBooting Derby version The Apache Software Foundation - Apache Derby - 10.9.0.0 alpha - (1): instance a816c00e-0134-390c-db37-00000001711d\r\non database directory C:\\mikem\\_db\\colldb  with class loader sun.misc.Launcher$AppClassLoader@69326932\r\nLoaded from file:/C:/derby/s1/classes/^M\r\njava.vendor=IBM Corporation\r\njava.runtime.version=jvmwi3260sr9-20101124_69295\r\njava.fullversion=JRE 1.6.0 IBM J9 2.4 Windows XP x86-32 jvmwi3260sr9-20101124_69295 (JIT enabled, AOT enabled)\r\nJ9VM - 20101124_069295\r\nJIT  - r9_20101028_17488ifx2\r\nGC   - 20101027_AA\r\nuser.dir=C:\\mikem^M\r\nderby.system.home=_db^M\r\nDatabase Class Loader started - derby.database.classpath=''^M\r\nTue Dec 13 12:11:49 PST 2011 Thread[main,5,main] (XID = 202), (SESSIONID = 1), (DATABASE = colldb), (DRDAID = null), Cleanup action starting^M\r\nTue Dec 13 12:11:49 PST 2011 Thread[main,5,main] (XID = 202), (SESSIONID = 1), (DATABASE = colldb), (DRDAID = null), Failed Statement is: insert into\r\nt values null^M\r\norg.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchartype of template\r\n column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar^M\r\n    at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)^M\r\n    at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)^M\r\n    at org.apache.derby.impl.store.access.btree.OpenBTree.isIndexableRowConsistent(OpenBTree.java:515)^M\r\n    at org.apache.derby.impl.store.access.btree.BTreeController.doIns(BTreeController.java:679)^M\r\n    at org.apache.derby.impl.store.access.btree.BTreeController.insert(BTreeController.java:1374)^M\r\n    at org.apache.derby.impl.store.access.btree.index.B2IController.insert(B2IController.java:210)^M\r\n    at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(IndexChanger.java:440)^M\r\n    at org.apache.derby.impl.sql.execute.IndexChanger.doInsert(IndexChanger.java:383)^M\r\n    at org.apache.derby.impl.sql.execute.IndexChanger.insert(IndexChanger.java:590)^M\r\n    at org.apache.derby.impl.sql.execute.IndexSetChanger.insert(IndexSetChanger.java:268)^M\r\n    at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(RowChangerImpl.java:453)^M\r\n    at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:999)^M\r\n    at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:519)^M\r\n    at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)^M\r\n    at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)^M\r\n    at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)^M\r\n    at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)^M\r\n    at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:559)^M\r\n    at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)^M\r\n    at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:527)^M\r\n    at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:369)^M\r\n    at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)^M\r\n    at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)^M\r\n    at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)^M\r\n    at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)^M\r\n    at org.apache.derby.tools.ij.main(ij.java:59)^M\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2011-12-13T20:15:22.749+0000","updated":"2011-12-13T20:15:22.749+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13168680","id":"13168680","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"insert of a string works, so null is the special case causing the bug.  At least at first look it looks like the calling code to store is wrong and that the type of column containing the null should be CollatorSQLVarchar.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2011-12-13T20:17:26.896+0000","updated":"2011-12-13T20:17:26.896+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13215455","id":"13215455","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Just noting that running with an insane build dosen't result in any error, neither in the insert nor in a subsequent select.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2012-02-24T07:17:56.909+0000","updated":"2012-02-24T07:17:56.909+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13434254","id":"13434254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I have been debugging this issue and found that, for some reason, for a non-null value, we have a NormalizeResultSet which does the conversion for char to territory based char equivalent at execution time. But, for null value, we do not have NormalizeResultSet and hence no such conversion of data type happens. The conversion probably is not necessary since we are dealing with nulls. I am debugging further to see where the decision is happening about the requirement of NormalizeResultSet.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2012-08-14T16:41:57.869+0000","updated":"2012-08-14T16:41:57.869+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13436064","id":"13436064","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"It looks like at bind time of insert node, we go through the individual columns in the insert statement to determine if there is a need for normalization or not. For some reason, for our insert staement in this jira, we conclude that we do not need normalization and hence at execution time, the data type conversion from SQLVarchar to CollatorSQLVarchar never happens and hence the assert failure in OpenBTree.java. Here is the relevant code in InsertNode.bindStatement()\r\n\t\t/* Insert a NormalizeResultSetNode above the source if the source\r\n\t\t * and target column types and lengths do not match.\r\n \t\t */\r\n\t\tif (! resultColumnList.columnTypesAndLengthsMatch(\r\n\t\t\t\t\t\t\t\t\t\t\t\tresultSet.getResultColumns()))\r\n\t\t{\r\n            \r\n\t\t\tresultSet = \r\n\t\t\t(ResultSetNode) getNodeFactory().getNode(\r\n\t\t\tC_NodeTypes.NORMALIZE_RESULT_SET_NODE, resultSet,\r\n\t\t\tresultColumnList, null, Boolean.FALSE,\r\n\t\t\tgetContextManager());\r\n\t\t}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2012-08-16T16:14:57.527+0000","updated":"2012-08-16T16:14:57.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13437258","id":"13437258","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I went through the code and have following 2 proposals.\r\na)ResultColumnList.java's method columnTypesAndLengthMatch returns false if it finds a mismatch between column types and lengths.Based on this return value, the calling method InsertNode.bind determines if it needs a Normalize ResultSet. If the column has null value as it can be in the following example, the method columnTypesAndLengthMatch returns true even though the column length is not really the size of the underlying table's column. \r\ninsert into t values null;\r\nWe can change columnTypesAndLengthMatch to return false(as shown below) if the insert value is null but it will add additional runtime processing because of the Normalize ResultSet(I am attaching DERBY5531_proposal1_diff.txt which shows the proposed changes for this proposal).\r\n  if((otherResultColumn.getExpression() instanceof ConstantNode) &&\r\n\t ((ConstantNode) otherResultColumn.getExpression()).isNull()) {\r\n\tConstantNode otherResultColumnConstNode = (ConstantNode)otherResultColumn.getExpression();\r\n\tif (otherResultColumnConstNode.isNull())\r\n\t\treturn false;\r\n\t}\r\nI don't know the history behind why we have chosen not to have a normalize resultset if the values being inserted are null.This existing behavior of not having a normalize resultset for null values has not resulted in any bugs and hence I would prefer us not going with this proposal of adding normalize resultset on top of null insert values. I would prefer the 2nd proposal which is as follows.\r\n2)As per this proposal, we should change OpenBTree.isIndexableRowConsistent  to not throw an assert failure if dealing with null values. If the value is null, then we should not assert the column datatypes. As it is, this method is meaningful only in sane mode. As we have seen in this jira, insane jars do not give any error for the test case provided in the jira. I am attaching \r\nDERBY5531_proposal2_diff.txt which shows the proposed changes for this proposal.\r\n\r\nI have added test cases in CollationTest.\r\n\r\nI have run derbyall and junit suite with both the proposals and there were no issues with the tests.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2012-08-18T06:21:00.011+0000","updated":"2012-08-18T06:21:00.011+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13438149","id":"13438149","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"+1 to approach 2)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-08-20T20:07:51.238+0000","updated":"2012-08-20T20:07:51.238+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13448405","id":"13448405","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"changes went in as revision 1378206 in trunk\r\nBackport went as revision 1378787 in 10.9 codelines.\r\nBackport went as revision 1378788 in 10.8 codelines.\r\nBackport went as revision 1380946 in 10.7 codelines.\r\nBackport went as revision 1380950 in 10.6 codelines.\r\nBackport went as revision 1381271 in 10.5 codelines.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2012-09-05T02:33:55.930+0000","updated":"2012-09-05T18:00:02.539+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12534778/comment/13449026","id":"13449026","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"This jira has been backported upto 10.5. \r\n\r\nIf anyone is in need of further backporting, they can backport it upto 10.3 which is where territory based collation was introduced.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2012-09-05T19:14:04.426+0000","updated":"2012-09-05T19:14:04.426+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-5531/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06fnj:"}}