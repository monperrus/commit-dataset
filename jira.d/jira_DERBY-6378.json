{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12673891","self":"https://issues.apache.org/jira/rest/api/latest/issue/12673891","key":"DERBY-6378","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324243","id":"12324243","description":"First release on the 10.11 branch","name":"10.11.1.1","archived":false,"released":true,"releaseDate":"2014-08-26"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2013-10-16 02:02:25.651","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"353514","customfield_12310222":"3_*:*_1_*:*_12076570570_*|*_1_*:*_1_*:*_104443996_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2014-03-05T13:49:39.596+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-6378/watchers","watchCount":5,"isWatching":false},"created":"2013-10-15T14:12:45.063+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":["derby_backport_reject_10_10"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"8.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12321550","id":"12321550","description":"First release on the 10.10 branch","name":"10.10.1.1","archived":false,"released":true,"releaseDate":"2013-04-15"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-01-21T00:23:32.327+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"ij version 10.10\r\nij> connect 'jdbc:derby:memory:db;create=true';\r\nij> create table t(x int);\r\n0 rows inserted/updated/deleted\r\nij> insert into t values 1,2,3;\r\n3 rows inserted/updated/deleted\r\nij> select * from t offset 1 row fetch first 1 row only;\r\nX          \r\n-----------\r\n2          \r\n\r\n1 row selected\r\nij> (select * from t offset 1 row fetch first 1 row only);\r\nX          \r\n-----------\r\n1          \r\n2          \r\n3          \r\n\r\n3 rows selected\r\n\r\nI would have expected that both of the queries had returned a single row.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10366","value":"Wrong query result","id":"10366"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"353806","summary":"OFFSET/FETCH NEXT ignored when query is enclosed in parentheses","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":23,"total":23,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13796330","id":"13796330","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I wonder if this is related to whether or not the query is a \"top level query\", or is a \"subquery\".\r\n\r\nSee, e.g., DERBY-4398.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2013-10-16T02:02:25.651+0000","updated":"2013-10-16T02:02:25.651+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13796753","id":"13796753","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"This is obviously an error; I'll have a look.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-16T13:00:34.675+0000","updated":"2013-10-16T13:00:34.675+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13797148","id":"13797148","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Attaching a patch which solves the problem. From my sandbox commit log:\r\n\r\nPatch derby-6378-1. A cursor node is generated in another way here than normal since the top level is an expression, and the ORDER BY and offset/fetch info is attached to the SELECT at the outset, rather than to the CursorNode.\r\n\r\nThe issue was that the generated cursor node's (empty) offset/fetch got pushed onto the SELECT's versions in this case, effectively clobbering them. The patch adds checks for null as is done for ORDER BY and this solved the problem. Added a new test case to OffsetFetchNextTest.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-16T19:15:33.040+0000","updated":"2013-10-16T19:28:51.552+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13797153","id":"13797153","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Regressions ran ok, please review.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-16T19:16:32.317+0000","updated":"2013-10-16T19:21:55.434+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13797710","id":"13797710","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The fix seems to work if the OFFSET/FETCH clauses are located either in the top-level query or in the subquery. But if both of them contain such clauses, it seems like the outer ones still overwrite the inner ones.\r\n\r\nExample:\r\n\r\n{noformat}\r\nij> create table t1 (x int);\r\n0 rows inserted/updated/deleted\r\nij> insert into t1 values 1,2,3,4,5;\r\n5 rows inserted/updated/deleted\r\nij> (select * from t1 order by x offset 3 rows);\r\nX          \r\n-----------\r\n4          \r\n5          \r\n\r\n2 rows selected\r\nij> (select * from t1 order by x offset 3 rows) fetch next 1 row only;\r\nX          \r\n-----------\r\n1          \r\n\r\n1 row selected\r\nij> (select * from t1 order by x offset 100 rows) offset 0 rows;\r\nX          \r\n-----------\r\n1          \r\n2          \r\n3          \r\n4          \r\n5          \r\n\r\n5 rows selected\r\n{noformat}\r\n\r\nThe first SELECT statement returns the expected result with the patch.\r\n\r\nThe second SELECT statement should have returned 4, not 1, I think. Looks like {{offset = null}} gets pushed from the {{CursorNode}} and removes the OFFSET clause from the subquery.\r\n\r\nThe third SELECT statement should have returned empty results. Seems like OFFSET 0 ROWS is pushed from the top-level query and overwrites the OFFSET 100 ROWS clause in the subquery.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-10-17T08:22:32.927+0000","updated":"2013-10-17T08:22:32.927+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13797871","id":"13797871","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Ha! That's a weird syntax; is this legal SQL I wonder?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-17T13:14:18.705+0000","updated":"2013-10-17T13:14:18.705+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13797933","id":"13797933","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"The following code failed with an assert failure. It's a similar unexpected push down for\r\nORDER BY:\r\n\r\n{code}\r\n(select * from t1 order by a,b fetch first 1 rows only) order by a,b desc\r\n{code}\r\n\r\n{code:title=AssertFailure|borderStyle=solid}\r\ntestDerby6378(org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest)java.sql.SQLException: Java exception: 'ASSERT FAILED: org.apache.derby.shared.common.sanity.AssertFailure'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:103)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:137)\r\n\tat org.apache.derby.impl.jdbc.Util.javaException(Util.java:331)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:436)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2395)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:691)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeQuery(EmbedStatement.java:147)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest.testDerby6378(OffsetFetchNextTest.java:663)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)\r\n\tat org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:440)\r\n\tat org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:457)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat singlederbyjunittest.SingleDerbyJunitTest.main(SingleDerbyJunitTest.java:22)\r\nCaused by: java.sql.SQLException: Java exception: 'ASSERT FAILED: org.apache.derby.shared.common.sanity.AssertFailure'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory.java:141)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:73)\r\n\t... 34 more\r\nCaused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED\r\n\tat org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:98)\r\n\tat org.apache.derby.impl.sql.compile.SelectNode.pushOrderByList(SelectNode.java:986)\r\n\tat org.apache.derby.impl.sql.compile.CursorNode.optimizeStatement(CursorNode.java:591)\r\n\tat org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:459)\r\n\tat org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:99)\r\n\tat org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:1109)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:683)\r\n\t... 27 more\r\n2) testDerby6378(org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest)java.sql.SQLException: DERBY SQL error: ERRORCODE: 0, SQLSTATE: XJ001, SQLERRMC: org.apache.derby.shared.common.sanity.AssertFailure\u0014ASSERT FAILED\u0014XJ001.U\r\n\tat org.apache.derby.client.am.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:112)\r\n\tat org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:321)\r\n\tat org.apache.derby.client.am.ClientStatement.executeQuery(ClientStatement.java:515)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest.testDerby6378(OffsetFetchNextTest.java:663)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)\r\n\tat org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:440)\r\n\tat org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:457)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat singlederbyjunittest.SingleDerbyJunitTest.main(SingleDerbyJunitTest.java:22)\r\nCaused by: org.apache.derby.client.am.SqlException: DERBY SQL error: ERRORCODE: 0, SQLSTATE: XJ001, SQLERRMC: org.apache.derby.shared.common.sanity.AssertFailure\u0014ASSERT FAILED\u0014XJ001.U\r\n\tat org.apache.derby.client.am.ClientStatement.completeSqlca(ClientStatement.java:2119)\r\n\tat org.apache.derby.client.net.NetStatementReply.parsePrepareError(NetStatementReply.java:579)\r\n\tat org.apache.derby.client.net.NetStatementReply.parsePRPSQLSTTreply(NetStatementReply.java:145)\r\n\tat org.apache.derby.client.net.NetStatementReply.readPrepareDescribeOutput(NetStatementReply.java:54)\r\n\tat org.apache.derby.client.net.StatementReply.readPrepareDescribeOutput(StatementReply.java:41)\r\n\tat org.apache.derby.client.net.NetStatement.readPrepareDescribeOutput_(NetStatement.java:156)\r\n\tat org.apache.derby.client.am.ClientStatement.readPrepareDescribeOutput(ClientStatement.java:1703)\r\n\tat org.apache.derby.client.am.ClientStatement.flowExecute(ClientStatement.java:2392)\r\n\tat org.apache.derby.client.am.ClientStatement.executeQueryX(ClientStatement.java:521)\r\n\tat org.apache.derby.client.am.ClientStatement.executeQuery(ClientStatement.java:506)\r\n\t... 35 more\r\n{code}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-17T14:21:03.473+0000","updated":"2013-10-17T14:22:37.480+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13797963","id":"13797963","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I think it is legal syntax, actually. SQL:2011 says:\r\n\r\n{quote}{noformat}\r\n<query expression> ::=\r\n[ <with clause> ] <query expression body>\r\n[ <order by clause> ] [ <result offset clause> ] [ <fetch first clause> ]\r\n{noformat}{quote}\r\n\r\nWhich means you can have ORDER BY, OFFSET and FETCH on the top-level. Furthermore, you can follow the production rules for <query expression body> via <query term> to <query primary>:\r\n\r\n{quote}{noformat}\r\n<query primary> ::=\r\n<simple table>\r\n| <left paren> <query expression body>\r\n[ <order by clause> ] [ <result offset clause> ] [ <fetch first clause> ] <right\r\nparen>\r\n{noformat}{quote}\r\n\r\nWhich shows that you can have the parenthesized expression with ORDER BY, OFFSET and FETCH in the <query expression body> of the top-level <query expression>. Looks like these expressions can also be nested indefinitely.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-10-17T14:42:58.850+0000","updated":"2013-10-17T14:42:58.850+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13799110","id":"13799110","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Yes, agreed. I just did the same analysis before reading your reply. So, if possible we should support these constructions.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-18T13:56:48.037+0000","updated":"2013-10-18T13:56:48.037+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13799294","id":"13799294","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"I think a consequence of this is that we need to be able to push down any number of ORDER BY and fetch/offset clauses onto SELECT, VALUES, UNION and INTERSECT nodes, so these would need to handle/generate a stack of such clauses, the innermost being evaluated immediately after the SELECT, VALUES, UNION and SELECT operations, the topmost clause being evaluated last.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-18T16:57:24.737+0000","updated":"2013-10-18T16:57:24.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13802040","id":"13802040","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Uploading a second patch for this issue, which introduces a stack mechanism for order by and offset/fetch clauses, factored out into ResultSetNode#QueryExpressionClause (nested class). From the javadoc for that class\r\n{panel}\r\nFor ease of handling order by clause, offset clause and fetch first/next clauses in subclasses. Clauses on the same nesting level have the same index in the lists, so at any level, any of the lists' elements may be empty. For example, (select * from t order by a fetch next 5 rows only) order by b would have\r\n{noformat}\r\n            obl[0] = \"order by a\",\r\n            offset[0] = null,\r\n            fetchFirst[0] = \"next 5 rows\"\r\n{noformat} \r\nand\r\n{noformat}\r\n            obl[1] = \"order by b\",\r\n            offset[1] = null\r\n            fetchFirst[1] = null\r\n{noformat}\r\nWhen starting a new level, always remember to do a push() before adding clauses via setOffset(org.apache.derby.impl.sql.compile.ValueNode), setFetchFirst(org.apache.derby.impl.sql.compile.ValueNode), setOrderByList(org.apache.derby.impl.sql.compile.OrderByList) and setHasJDBCLimitClause(java.lang.Boolean).\r\n{panel}\r\n\r\nAdded tests to OrderByAndOffsetFetchInSubqueries in #testDerby6378, running regressions.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-22T17:24:30.948+0000","updated":"2013-10-22T17:32:28.350+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13802140","id":"13802140","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Uploading version #3 of the patch, the regressions revealed a couple of typos. Some other small improvements. Rerunning regressions.\r\n[Update: regressions passed]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-22T19:04:26.856+0000","updated":"2013-10-23T21:02:01.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13806679","id":"13806679","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks, Dag. The approach in the #3 patch looks good to me.\r\n\r\nSome comments:\r\n\r\n- It would be good to add a sentence to the javadoc comments of pushOrderBy() and pushOffsetFetchFirst() about the requirement to call pushQueryExpressionSuffix() first.\r\n- The \"test is necessary\" comment in CursorNode is a bit cryptic.\r\n- RSN.pushQueryExpressionSuffix() could have a javadoc comment saying what it does (currently it only says who should override it).\r\n- RSN.pushQueryExpressionSuffix() could be made package-private (its siblings pushOrderByList() and pushOffsetFetchFirst() already are).\r\n- QueryExpressionClauses does not reference its parent instance, so it may be declared static. Since the class is package-private, its methods are effectively non-public, so it might be clearer not to declare them with the \"public\" modifier.\r\n- QueryExpressionClauses.hasOffsetFetchFirst() could access the offset and fetchFirst fields directly without going through the getter methods and thereby avoid creating temporary array objects.\r\n- Code such as {{qec.getFetchFirsts()\\[i\\] = (ValueNode)fetchFirst.accept\\(v\\);}} looks a bit suspicious, since getFetchFirsts() returns a fresh array, so the assignment will only be performed on an array that is immediately eligible for gc. (Similar code exists for getOrderByLists() and getOffsets() too.) Was it supposed to update the QEC's ArrayList instead?\r\n- All calls to getFetchFirsts() and friends seem to look at only one element of the returned array and throw the rest of the array away. We might change these getters to take the level as an argument and return a single node instead. Then we don't need the temporary arrays.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-10-28T10:36:53.529+0000","updated":"2013-10-28T10:36:53.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13806712","id":"13806712","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks for having a look at this, Knut. These seems like good improvements; I'll roll a new patch. And, yes, the visitor code is broken (I had changed the underlying data structure from array without updating that modification access).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-28T12:18:11.900+0000","updated":"2013-10-28T12:18:11.900+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13807166","id":"13807166","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Uploading revision #4 of the patch; regressions passed. It believe it addresses Knut's comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2013-10-28T20:00:51.984+0000","updated":"2013-10-28T20:00:51.984+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13807192","id":"13807192","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1536507 from [~dagw] in branch 'code/trunk'\r\n[ https://svn.apache.org/r1536507 ]\r\n\r\nDERBY-6378 OFFSET/FETCH NEXT ignored when query is enclosed in parentheses\r\n\r\nPatch derby-6378-4.\r\n\r\nTo address the required generality of several layers of nested\r\nmultiple clauses allowed by SQL, this patch introduces a stack\r\nmechanism for order by and offset/fetch clauses, factored out into\r\nResultSetNode#QueryExpressionClause (nested class). From the javadoc\r\nfor that class:\r\n\r\nFor ease of handling order by clause, offset clause and fetch\r\nfirst/next clauses in subclasses. Clauses on the same nesting level\r\nhave the same index in the lists, so at any level, any of the lists'\r\nelements may be empty. For example, (select * from t order by a fetch\r\nnext 5 rows only) order by b would have\r\n\r\n            obl[0] = \"order by a\",\r\n            offset[0] = null,\r\n            fetchFirst[0] = \"next 5 rows\"\r\nand\r\n            obl[1] = \"order by b\",\r\n            offset[1] = null\r\n            fetchFirst[1] = null\r\n\r\nWhen starting a new level, always remember to do a push() before\r\nadding clauses via\r\nsetOffset(org.apache.derby.impl.sql.compile.ValueNode),\r\nsetFetchFirst(org.apache.derby.impl.sql.compile.ValueNode),\r\nsetOrderByList(org.apache.derby.impl.sql.compile.OrderByList) and\r\nsetHasJDBCLimitClause(java.lang.Boolean).\r\n\r\nAdded tests to OrderByAndOffsetFetchInSubqueries in #testDerby6378,\r\nrunning regressions.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-28T20:37:35.565+0000","updated":"2013-10-28T20:37:35.565+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13808601","id":"13808601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"In one of my environments, I now see the following javadoc warning:\r\n [javadoc] D:\\svnnightlies\\main\\src\\opensource\\java\\engine\\org\\apache\\derby\\impl\\sql\\compile\\ResultSetNode.java:1973: warning - Tag @link: can't find QueryExpressionClauses in org.apache.derby.impl.sql.compile.ResultSetNode\r\n\r\nIn another environment I do not see this warning show up, and I'm not sure it's worth while checking the differences; as QueryExpressionClauses is an internal class, should this be something like '@link QueryExpressionClauses#QueryExpressionClauses' ?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2013-10-30T00:01:31.705+0000","updated":"2013-10-30T00:01:31.705+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13810650","id":"13810650","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1537618 from [~dagw] in branch 'code/trunk'\r\n[ https://svn.apache.org/r1537618 ]\r\n\r\nDERBY-6378 OFFSET/FETCH NEXT ignored when query is enclosed in parentheses\r\n\r\nJavadoc fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-31T20:14:44.344+0000","updated":"2013-10-31T20:14:44.344+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13923282","id":"13923282","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I tried a merge to see how easy it would be to backport this, but this is not a simple fix, and I am getting conflicts which appear to be caused by DERBY-673 and so I'd say this is not suitable for backport.\r\nDag, do you agree?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2014-03-07T00:00:57.341+0000","updated":"2014-03-07T00:00:57.341+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13925870","id":"13925870","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I went ahead and marked this as backport reject for 10.10 (and older); the backport shows a lot of conflicts because of other changes and it seems more work than the issue warrants to try to rework the same fix for older branches.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2014-03-10T16:37:21.887+0000","updated":"2014-03-10T16:37:21.887+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13926346","id":"13926346","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Myrna, I agree it's a corner case, so backporting may not be crucial. The conflicts should be resolvable though: I don't think there is any fundamental reason for them other than the simplifications introduced in DERBY-673.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2014-03-10T22:27:38.433+0000","updated":"2014-03-10T22:27:38.433+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/13929974","id":"13929974","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I tried to do an elaborate manual backport of the 5 nodes which had conflicts (ResultSetNode, SelectNode, UnionNode, RowResultSetNode, SetOperatorNode and InterSectOrExceptNode) which was entertaining. \r\nI'm attaching a patch of the diff.\r\n\r\nBut in the end it doesn't compile - initially with errors like:\r\n    [javac] C:\\derby\\10.10\\java\\engine\\org\\apache\\derby\\impl\\sql\\compile\\IntersectOrExceptNode.java:341: cannot find symbol\r\n    [javac] symbol  : method getNode(int,org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode,boolean,org.apache.derby.iapi.services.context.ContextManager)\r\n    [javac] location: class org.apache.derby.iapi.sql.compile.NodeFactory\r\n    [javac]                 treeTop = (ResultSetNode)getNodeFactory().getNode(\r\n\r\nIf I then hit ant all again, it goes on to complain about the parser:\r\n    [javac] C:\\derby\\10.10\\generated\\java\\org\\apache\\derby\\impl\\sql\\compile\\SQLParser.java:5265: cannot find symbol\r\n    [javac] symbol  : class ParseException\r\n    [javac] location: class org.apache.derby.impl.sql.compile.SQLParser\r\n    [javac]   final public int multiplicativeOperator() throws ParseException, StandardException {\r\n    [javac]                                                    ^\r\n    [javac] 100 errors\r\n\r\nSo, I'm giving up on this after all/again.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2014-03-11T05:37:31.636+0000","updated":"2014-03-11T05:37:31.636+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673891/comment/14284817","id":"14284817","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"bulk change to close all issues resolved but not closed and not changed since June 1, 2014.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2015-01-21T00:23:32.316+0000","updated":"2015-01-21T00:23:32.316+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-6378/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1oy6f:"}}