{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12354260","self":"https://issues.apache.org/jira/rest/api/latest/issue/12354260","key":"DERBY-2017","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-12-07 13:46:45.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22839","customfield_12310222":"3_*:*_2_*:*_89439319547_*|*_1_*:*_2_*:*_20493219664_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-04-24T17:44:22.211+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2017/watchers","watchCount":1,"isWatching":false},"created":"2006-10-30T08:55:23.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"13.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12325803","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12325803","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"outwardIssue":{"id":"12430835","key":"DERBY-4315","self":"https://issues.apache.org/jira/rest/api/2/issue/12430835","fields":{"summary":"Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12332129","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12332129","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"outwardIssue":{"id":"12347633","key":"DERBY-1658","self":"https://issues.apache.org/jira/rest/api/2/issue/12347633","fields":{"summary":"Too short streams passed in through JDBC are handled differently in client and embedded","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12314010","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12314010","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"inwardIssue":{"id":"12354628","key":"DERBY-2034","self":"https://issues.apache.org/jira/rest/api/2/issue/12354628","fields":{"summary":"Tracking of bugs that lead to incorrect results being stored or returned to the client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.png","name":"Trivial","id":"5"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/task.png","name":"Task","subtask":false}}}},{"id":"12374875","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12374875","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12513038","key":"DERBY-5317","self":"https://issues.apache.org/jira/rest/api/2/issue/12513038","fields":{"summary":" NullPointerException in org.apache.derby.client.net.Request.sendBytes()  with client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-09-06T21:20:26.077+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"},{"self":"https://issues.apache.org/jira/rest/api/2/component/11690","id":"11690","name":"Network Client"}],"timeoriginalestimate":null,"description":"When a LOB stream throws an exception or does not match the specified length, the client driver does not raise an exception until it has finished executing the statement. Therefore, the statement will be executed (and possibly committed) on the server even though the client reports that the statement failed.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10364","value":"Data corruption","id":"10364"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10366","value":"Wrong query result","id":"10366"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"36750","summary":"Client driver can insert and commit partial data when a LOB stream throws IOException or does not match the specified length","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10422","value":"High Value Fix","id":"10422"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":46,"total":46,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12445522","id":"12445522","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attached a repro which shows the problem when using PreparedStatement.setCharacterStream() with a stream that is longer than the specified length.\r\n\r\nThe embedded driver aborts the query and throws \"java.sql.SQLException: An IOException was thrown when reading a 'java.sql.String' from an InputStream.\"\r\n\r\nThe client driver completes the query (inserts a row) and throws \"java.sql.SQLException: Network protocol error: the specified size of the InputStream, parameter #1, is less than the actual InputStream length.\"\r\n\r\nThe client driver should abort the the query and not insert the row.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-10-30T09:02:06.000+0000","updated":"2006-10-30T09:02:06.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12445568","id":"12445568","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"When this issue has been fixed, jdbcapi/CharacterStreamsTest should be updated so that it runs with the client driver.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-10-30T12:00:57.000+0000","updated":"2006-10-30T12:00:57.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12456412","id":"12456412","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"body":"When an error occurs, rolling back the transaction in network mode so as the database remains consistent.\r\nHandling the scenario in the same way its done in org.apache.derby.client.am.Statement.checkForStoredProcResultSetCount() which rolls back the transaction on error.\r\n\r\n- also modified the test CharacterStreamsTest to run under client mode.\r\n- derbyall & Junit tests runs fine.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"created":"2006-12-07T13:46:45.000+0000","updated":"2006-12-07T13:46:45.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12456414","id":"12456414","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"body":"Adding fixed version to 10.2.2 also","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"created":"2006-12-07T13:51:13.000+0000","updated":"2006-12-07T13:51:13.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12456452","id":"12456452","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Saurabh,\r\n\r\nAfter the discussion on the mailing list regarding this issue I'm still\r\nconfused. Does your change proposal make the network client configuration's\r\nbehavior match the embedded system behavior? Or do the two configurations\r\nbehave differently? See this part of the discussion:\r\nhttp://www.nabble.com/forum/ViewPost.jtp?post=7735323&framed=y\r\n\r\nI'm worried that it is incorrect to roll back the entire transaction for\r\nthis error; that only the statement that caused the LOB problem should\r\nbe rolled back.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-12-07T15:33:41.000+0000","updated":"2006-12-07T15:33:41.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12456523","id":"12456523","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"body":"Well with this approach, the two configurations will behave differently. In embedded mode, in case of error, only the erroneous statement will make no effect on database and rest of the statements in transaction will remain unaffected by the error. Whereas in network mode, in case of error, the complete transaction will be rolled back so that the database can remain in consistent state (which is not handled currently as pointed out in repro).\r\n\r\nI tried searching options from DRDA specifications but the DO_NOT_CONTINUE_ON_ERROR flag provided in DSS header will not be of any use as the error is at client side. Thanks to Julo for pointing this out.\r\n\r\nApart, as mentioned by Knut also, the closest we can get as long as we're using DRDA. Can we try any other approach for this.\r\nComments/Suggestions.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"created":"2006-12-07T18:41:09.000+0000","updated":"2006-12-07T18:41:09.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12457921","id":"12457921","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Unknown release vehicle.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2006-12-12T22:29:58.000+0000","updated":"2006-12-12T22:29:58.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12465791","id":"12465791","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Clearing patch available flag.\r\nThe issue seems to be stalled. I think we need another round of effort to decide what is an acceptable approach.\r\nIf the community reaches consensus on using the approach implemented by the existing patch, please set the patch available flag again.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2007-01-18T15:48:16.382+0000","updated":"2007-01-18T15:48:16.382+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12466994","id":"12466994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"body":"Thanks Kristian for bringing this issue to attention and another round of discussion over it.\r\n\r\nTill now, according to my approach, While an error occurs, in the network mode, the complete transaction will be rolled back. This is to make sure that Data is in consistent state, but this approach also rollbacks some correct operations on database (all insert, updates &  delete prior to the erroneous statement). This behavior is is different from that of the embedded mode.\r\n\r\nTo make the consistent behavior for both embedded & network mode, there should be an mechanism by which the client should be able to communicate to server that the last operation is invalid & only this operation has to be reverted. This implies that at the time of error rather than ignoring the read error, the client need to fire another statement to revert the current changes done at server (currently client calls connection_.writeCommitSubstitute_(); ). So how should we go ahead for this approach ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"created":"2007-01-24T11:18:49.378+0000","updated":"2007-01-24T11:18:49.378+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12500076","id":"12500076","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"body":"I will not be working on this anymore, so un-assigning myself","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sv204098","name":"sv204098","emailAddress":"vyassaurabh1 at rediffmai dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Saurabh Vyas","active":true},"created":"2007-05-30T09:26:35.732+0000","updated":"2007-05-30T09:26:35.732+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12501138","id":"12501138","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"This is a HIGH VALUE FIX CANDIDATE.\r\n\r\nI did some more investigation to understand the exact difference in client behavior compared to the embedded.\r\nIn embedded mode, the stream is checked for its data by ReadertoUTF8Stream to see if the length specified is matching with the number of characters in the stream. An exception is raised if the length is not matched, hence we see the exception in the repro.\r\n\r\nClient does not check for stream data before hand and reads the stream data only when that is needed to pass onto to the server. So, by the time the lenght matching errors are caught, the DSS header  and the full/partial data is sent to the server.\r\n\r\nI tried a different approach (attached patch) to fix this bug. The stream is read (like in embedded mode) to validate the length much before the DSS header is sent to the server.\r\n\r\nThe patch is not  ready for commit, but it solves the problem. I feel, validation of stream should be done even before the place in attached patch, something like in LocatorStream which is under development. Like in embedded, a new method 'checkSufficientData' should be implemented in a class that is equivalent to ReaderToUTF8Stream in embedded.\r\n\r\nI would like to see comments on this approach from experts.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2007-06-04T08:23:57.947+0000","updated":"2007-06-04T08:23:57.947+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12501161","id":"12501161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":"I have a few questions, pls feel free to ignore them if you think they are unrelated.\r\n\r\n1) By \"The stream is read (like in embedded mode) to validate the length\" is it meant that the\r\n    Stream should be materialized completely  in tempChars (the array used in the patch \r\n    attached)? \r\n   \r\n    If this is true wouldn't it result in OutOfMemory problems when the stream is too large?\r\n\r\n2) The logic used to see that the exception must be thrown is\r\n     a) Read length bytes (InputStream.read(byte[] b, int off, int len))\r\n     b) Read one more byte (read()) if this returns -1 means that the stream has\r\n          no more data.\r\n\r\n     If the above two steps is the algorithm for the logic the following\r\n     snippet from the API doc of InputStream.read(byte[] b, int off, int len) might be\r\n     relevant \"An attempt is made to read as many as len bytes, but a smaller \r\n     number may be read, possibly zero. The number of bytes actually read is returned \r\n     as an integer.\"\r\n\r\n3)  Also in derby2017_try1.diff bytesToRead is no longer used. bytesToRead is\r\n     set to the minimum of DssConstants.MAX_DSS_LEN - 6 - 4 - 1 - extendedLengthByteCount.\r\n     I think this is the maximum chunk size that can be sent. Has derby2017_try1.diff\r\n     been tried with a stream of size greater than 32767?\r\n\r\nSorry if the above seem like random thoughts.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2007-06-04T09:25:07.139+0000","updated":"2007-06-04T09:25:07.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12501179","id":"12501179","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":"Some thoughts on this issue.\r\n\r\nThe solution for this is difficult because of the following reason\r\n\r\nThe idea of not causing an OutOfMemory error in the client is that \r\nyou should transmit the data without materializing it. \r\n\r\nBut how would you get the length then? This would be necessary to\r\nthrow the stream truncation exception that is thrown.\r\n\r\nI somehow feel that the trick of not writing this data should lie in the server\r\nand the client rather than in the client alone.\r\n\r\na) The server should keep with it the data it gets from the stream sent as chunks\r\n   without writing it into the database. \r\n\r\nb) When the client reaches the end of the stream it comes to know that the \r\n   truncation has happened it would inform the server that truncation has\r\n   happened and the server does not write the data.\r\n\r\nThe above outlined steps would be possible if the PreparedStatement were\r\nconverted to use locators. So when a setBinaryStream is called\r\n\r\na) create a locator value\r\n\r\nb) write the stream to the locator value(using CLOBSETSTRING or BLOBSETBYTES)\r\n\r\nc) If truncation happens Call CLOBRELEASELOCATOR and release this value.\r\n   Note: here we have not gone to the PreparedStatement execute as yet.\r\n\r\nd) If there is not truncation do what happens in locators attach the stream\r\n   to the PreparedStatement as happens for locators now.\r\n\r\nDrawbacks\r\n---------\r\n\r\n1) This implementation would mean not using Layer-B streaming for Prepared Statements. \r\n   Layer-B streaming is a better way to transmit this stream data than locators\r\n   which was the reason that during locator work the decision was taken to \r\n   retain Layer-B implementation here. See Derby-2529.\r\n\r\n2) Locators involve building a temporary LOB on the server. This would again\r\n   make it less efficient than Layer-B streaming.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2007-06-04T11:27:56.769+0000","updated":"2007-06-04T11:27:56.769+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12501180","id":"12501180","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Thanks narayanan for your comments.\r\n\r\nAs I mentioned earlier, this patch is incomplete. I was aware of 2) and 3) from your comments, but wanted to put up a prototype for this different approach, so that it is clear; hence the patch. \r\n\r\nBut, with 1) that I missed, I see the challenges with this approach. Materializing large streams at client side is not preferred at all. \r\n\r\nHowever, length must be known in order to construct appropriate DSS. JDBC 3.0 spec hints that the length specified in setBinaryStream should be equal to the length of the stream. Validating this is preferred at Client side to avoid the cost of data transfer in such error cases.\r\n\r\nMaking the behavior consistent with the embedded is tricky here due to the client-server nature.\r\n\r\n... looking for more inputs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2007-06-04T11:29:38.232+0000","updated":"2007-06-04T11:29:38.232+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12501214","id":"12501214","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I think what Narayanan proposed sounds interesting. It would solve both the OutOfMemoryError problem and the problems with invalid length or errors when reading the stream, and it would make the commit/rollback behaviour identical on client and embedded.\r\n\r\nOf the drawbacks he mentioned, I agree that (2) probably would reduce the performance. Not sure how much, though. However, I'm not sure drawback (1) is such a big issue. If I remember correctly, Tomohito tested the performance of layer A vs layer B streaming once and didn't notice any improvement with layer B.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-06-04T13:40:06.913+0000","updated":"2007-06-04T13:40:06.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12502750","id":"12502750","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Thanks a lot Narayanan and Knut.\r\n\r\nAfter some more investigation, I figured that the Locator support needed to implement the suggested solution is not yet complete on the trunk.\r\n\r\nAlso, regarding the drawbacks narayanan mentioned, I feel drawback 2) could degrade the performance considerably because of more number of round-trips even before the execution.\r\n\r\nI think, It make sense to revisit this issue later (probably after 10.3).\r\nComments are welcome!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2007-06-08T10:58:31.504+0000","updated":"2007-06-08T10:58:31.504+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12537365","id":"12537365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Mayuresh, are you actively working on this issue?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-10-24T17:24:54.929+0000","updated":"2007-10-24T17:24:54.929+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12537622","id":"12537622","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Cathey, I am not working on this issue.\r\nCurrently, I am tied up with something and hence un-assigning myself.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2007-10-25T14:55:09.223+0000","updated":"2007-10-25T14:55:09.223+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12611949","id":"12611949","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":"One of the solutions proposed in the discussions above is converting Prepared/Callable\r\nstatements to use locators. Has this solution been rejected?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2008-07-09T09:05:02.683+0000","updated":"2008-07-09T09:05:02.683+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12612863","id":"12612863","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"No, it hasn't been rejected, but it was indicated that it might have negative impact on the performance. One alternative is to add a product-specific code point so that we have a way to indicate to the server that an error has happened. See \"Developing Product-Unique Extensions\" in DRDA, Version 4, Volume 3, Section 2.5.5.4 for details.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-07-11T12:38:27.612+0000","updated":"2008-07-11T12:38:27.612+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12728625","id":"12728625","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Triaged for 10.5.2.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-07-08T10:51:51.498+0000","updated":"2009-07-08T10:51:51.498+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12832890","id":"12832890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"(cleared the in-progress flag, had to assign the issue to myself to do this)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-02-12T08:36:27.797+0000","updated":"2010-02-12T08:36:27.797+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12835771","id":"12835771","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I haven't looked into the details, but DRDA has a mechanism for interrupting DRDA requests. However, this requires that the client opens a new connection to the server to issue the request.\r\nWithout knowing how hard this will be to implement, does this sound as a viable solution?\r\n\r\nInterrupting the server is an exceptional case, so I guess the performance of the mentioned solution isn't critical (i.e. create new connection, send the request,  receive reply, throw exception and do cleanup on the client side will take a while compared to sending something on the existing connection). I suppose we can use the same mechanism if we need to be able to interrupt the server in other states.\r\n\r\nFor those interested, see DRDA vol 1 -  4.4.14 Interrupting a Running DRDA Request.\r\nAs I said, I haven't yet studied the spec, nor Derby's DRDA implementation, so I can't say for sure this will work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-02-19T15:15:30.892+0000","updated":"2010-02-19T15:15:30.892+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12835836","id":"12835836","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Hi Kristian,\r\n\r\nI may not be understanding the solution you are proposing. However, I wonder if it might not be air-tight. It seems to me that there might be a race condition. Wrong results might still be committed if the statement manages to complete before the client can open a second connection and interrupt the server.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2010-02-19T17:21:48.338+0000","updated":"2010-02-19T17:21:48.338+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12837265","id":"12837265","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Hi Rick,\r\n\r\nI agree that in the general case there might be race conditions, but that shouldn't be a problem in this specific case. To cancel truly running requests I understand that a second connection is needed, since the existing one is stuck waiting for the server reply.\r\nI think we can control when the statement completes, since we are controlling when we send data to the server. Be holding back data, the server thread will be stuck.\r\n\r\nHowever, when prototyping this, it seems to me that the complexity of this approach is a lot higher than adding a product specific code point.\r\nWe would need to handle the following issues:\r\n - creating a new connection based on an existing connection. Here we would need to have things like the user name and password available.\r\n - introducing an interrupt token (sent to the client on ACCRDB, sent back to the server to identify which session to interrupt)\r\n - looking up session based on interrupt token on the server side\r\n - interrupt logic on the server side\r\n\r\nWe might get away with one thread on the client side, but on the server side we need two threads / connections to communicate with each other. The overall process would be something like this (there are several variations):\r\n - client sends data\r\n - client detects problem (too much data or too little data)\r\n - client creates a second connection (the server session is currently stuck in a read loop awaiting more data, or maybe the last piece of data)\r\n - the second thread on the server (new connection) signals that a DRDA interrupt has been requested\r\n - the client sends valid data (wrt the DRDA protocol) to the server session to wake it up\r\n - the server reads data, detects interrupt request and aborts the current statement\r\n - the second thread on the server sends a reply to the interrupt request itself\r\n - the client reads the reply (second connection)\r\n - the first server thread informs that the running request was interrupted and canceled\r\n - the client reads reply from the original connection and throws exception\r\n\r\nIn addition to the code complexity, we must also make sure we obey the DRDA protocol rules to avoid network protocol errors.\r\n\r\n\r\nAs a side note, the code in org.apache.derby.impl.drda.DRDAConnThread.convertAsByteArrayInputStream can cause OOME on the server for if more than one large LOB is transferred from the client in the same statement. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-02-23T14:57:52.097+0000","updated":"2010-02-23T14:57:52.097+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12837776","id":"12837776","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attached a first revision of a regression test as patch 2a.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-02-24T13:15:41.024+0000","updated":"2010-02-24T13:15:41.024+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12841251","id":"12841251","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I think I may have a feasible solution for this bug. I have investigated a few different approaches, and I will soon post some patches and approach descriptions.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-03-04T13:40:33.795+0000","updated":"2010-03-04T13:40:33.795+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12845885","id":"12845885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attaching a preview patch, where a Derby specific trailing status flag is sent as the last byte. The status flag is appended to the user data.\r\nI think this solution is the simplest approach, and it should also be easy to deal with the compatibility issue. The status flag is stripped away, it isn't saved to disk.\r\n\r\nThe idea is to make the statement fail on the server side, and let the embedded driver deal with the clean-up. The error will then be reported to the client driver as any other error that may occur during statement execution.\r\nIn the case of multiple stream sources and an error in the first one, I figured it is easier to continue with the statement execution rather than to abort early on. This is because one would otherwise need recovery logic in both the client driver and the network server. As a possible optimization I thought of adding a status called STREAM_SKIPPED. This, possibly together with a single \"fake\" data byte, will be sent to the server for any remaining data sources. Doing this avoids having to read and send potentially large values when we know that the statement will fail.\r\n\r\nThe various statuses are modeled after the current code in the client code. We don't need all of them (we really only need SUCCESS and FAILURE), but maybe they can be helpful for debugging? Having many status values doesn't add overhead to the network protocol (we always send one byte).\r\nHere's the current list:\r\n  STREAM_OK\r\n  STREAM_UNKNOWN_LENGTH  (used with layer-B streaming and in an assert)\r\n  STREAM_READ_ERROR\r\n  STREAM_READ_ERROR_ON_LEN_VAL\r\n  STREAM_TOO_SHORT\r\n  STREAM_TOO_LONG\r\n  STREAM_SKIPPED\r\n\r\nI'm considering removing at least STREAM_UNKNOWN_LENGTH and STREAM_READ_ERROR_ON_LEN_VAL (effectively merging them with STREAM_OK and  STREAM_READ_ERROR, respectively).\r\n\r\nRemaining work on the patch:\r\n  o layer-B streaming code\r\n  o encryption code [1]\r\n  o error handling on the client (I don't think we need to use the accumulated error mechanism when sending the status byte)\r\n\r\nI'll continue work on finalizing the patch, but feel free to ask questions and comment on the proposed approach.\r\n\r\n\r\n[1] We are currently materializing the value here, and I won't improve this as part of this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-03-16T12:37:59.750+0000","updated":"2010-03-16T12:37:59.750+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12845991","id":"12845991","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Hi Kristian,\r\n\r\nThis sounds like a good approach to me. Also, +1 to keeping the code simple and not optimizing for possible failure scenarios. Exhausting all streams, even if the first one fails, sounds perfectly acceptable.\r\n\r\nOne question: If the user stream fails with an exception on the client side, will the original exception be the one that's reported to the user, or will it be the synthetic exception produced on the server?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-03-16T16:52:49.210+0000","updated":"2010-03-16T16:52:49.210+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12846476","id":"12846476","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks for having a look, Knut Anders.\r\n\r\nKnut Anders wrote:\r\n-----\r\nOne question: If the user stream fails with an exception on the client side, will the original exception be the one that's reported to the user, or will it be the synthetic exception produced on the server? \r\n-----\r\n\r\nWith the current code (preview with some changes), where nothing has been done to the exception handling, the following exceptions are produced for the embedded and the client driver:\r\n\r\n---------> Client\r\n\r\n----- SQLException -----\r\n  SQLState:   XN015\r\n  Error Code: 20000\r\n  Message:    Network protocol error: the specified size of the InputStream, parameter #1, is less than the actual InputStream length.\r\njava.sql.SQLException: Network protocol error: the specified size of the InputStream, parameter #1, is less than the actual InputStream length.\r\n\tat org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:96)\r\n\tat org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:399)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.test(StreamErrRepro.java:38)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.main(StreamErrRepro.java:21)\r\nCaused by: org.apache.derby.client.am.SqlException: Network protocol error: the specified size of the InputStream, parameter #1, is less than the actual InputStream length.\r\n\tat org.apache.derby.client.net.Request.writePlainScalarStream(Request.java:540)\r\n\tat org.apache.derby.client.net.Request.writeScalarStream(Request.java:264)\r\n\tat org.apache.derby.client.net.Request.writeScalarStream(Request.java:679)\r\n\tat org.apache.derby.client.net.NetStatementRequest.buildEXTDTA(NetStatementRequest.java:1011)\r\n\tat org.apache.derby.client.net.NetStatementRequest.writeExecute(NetStatementRequest.java:147)\r\n\tat org.apache.derby.client.net.NetPreparedStatement.writeExecute_(NetPreparedStatement.java:178)\r\n\tat org.apache.derby.client.am.PreparedStatement.writeExecute(PreparedStatement.java:1855)\r\n\tat org.apache.derby.client.am.PreparedStatement.flowExecute(PreparedStatement.java:2085)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdateX(PreparedStatement.java:404)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:390)\r\n\t... 2 more\r\n\r\n----- SQLException -----\r\n  SQLState:   XCL30\r\n  Error Code: -1\r\n  Message:    An IOException was thrown when reading a 'java.lang.String' from an InputStream.\r\njava.sql.SQLException: An IOException was thrown when reading a 'java.lang.String' from an InputStream.\r\n\tat org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:96)\r\n\tat org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)\r\n\tat org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:367)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:399)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.test(StreamErrRepro.java:38)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.main(StreamErrRepro.java:21)\r\nCaused by: org.apache.derby.client.am.SqlException: An IOException was thrown when reading a 'java.lang.String' from an InputStream.\r\n\tat org.apache.derby.client.am.Statement.completeExecute(Statement.java:1601)\r\n\tat org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreply(NetStatementReply.java:322)\r\n\tat org.apache.derby.client.net.NetStatementReply.readExecute(NetStatementReply.java:71)\r\n\tat org.apache.derby.client.net.StatementReply.readExecute(StatementReply.java:55)\r\n\tat org.apache.derby.client.net.NetPreparedStatement.readExecute_(NetPreparedStatement.java:189)\r\n\tat org.apache.derby.client.am.PreparedStatement.readExecute(PreparedStatement.java:1865)\r\n\tat org.apache.derby.client.am.PreparedStatement.flowExecute(PreparedStatement.java:2162)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdateX(PreparedStatement.java:404)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:390)\r\n\t... 2 more\r\nCaused by: org.apache.derby.client.am.SqlException: Java exception: 'Input stream did not have exact amount of data as the requested length.: org.apache.derby.iapi.services.io.DerbyIOException'.\r\n\t... 11 more\r\n\r\n----- SQLException -----\r\n  SQLState:   XJ001\r\n  Error Code: 99999\r\n  Message:    Java exception: 'Input stream did not have exact amount of data as the requested length.: org.apache.derby.iapi.services.io.DerbyIOException'.\r\njava.sql.SQLNonTransientConnectionException: Java exception: 'Input stream did not have exact amount of data as the requested length.: org.apache.derby.iapi.services.io.DerbyIOException'.\r\n\tat org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)\r\n\tat org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)\r\n\tat org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:367)\r\n\tat org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:367)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:399)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.test(StreamErrRepro.java:38)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.main(StreamErrRepro.java:21)\r\nCaused by: org.apache.derby.client.am.SqlException: Java exception: 'Input stream did not have exact amount of data as the requested length.: org.apache.derby.iapi.services.io.DerbyIOException'.\r\n\tat org.apache.derby.client.am.Statement.completeExecute(Statement.java:1601)\r\n\tat org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreply(NetStatementReply.java:322)\r\n\tat org.apache.derby.client.net.NetStatementReply.readExecute(NetStatementReply.java:71)\r\n\tat org.apache.derby.client.net.StatementReply.readExecute(StatementReply.java:55)\r\n\tat org.apache.derby.client.net.NetPreparedStatement.readExecute_(NetPreparedStatement.java:189)\r\n\tat org.apache.derby.client.am.PreparedStatement.readExecute(PreparedStatement.java:1865)\r\n\tat org.apache.derby.client.am.PreparedStatement.flowExecute(PreparedStatement.java:2162)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdateX(PreparedStatement.java:404)\r\n\tat org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:390)\r\n\t... 2 more\r\n\r\n\r\n\r\n---------> Embedded\r\n\r\njava.sql.SQLException: An IOException was thrown when reading a 'java.lang.String' from an InputStream.\r\n\r\n----- SQLException -----\r\n  SQLState:   XCL30\r\n  Error Code: 20000\r\n  Message:    An IOException was thrown when reading a 'java.lang.String' from an InputStream.\r\njava.sql.SQLException: An IOException was thrown when reading a 'java.lang.String' from an InputStream.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)\r\n\tat org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:278)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:398)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2269)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1321)\r\n\tat org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1673)\r\n\tat org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:303)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.test(StreamErrRepro.java:38)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.main(StreamErrRepro.java:22)\r\nCaused by: java.sql.SQLException: An IOException was thrown when reading a 'java.lang.String' from an InputStream.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)\r\n\t... 11 more\r\nCaused by: java.sql.SQLException: Java exception: 'Input stream did not have exact amount of data as the requested length.: org.apache.derby.iapi.services.io.DerbyIOException'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)\r\n\tat org.apache.derby.impl.jdbc.Util.javaException(Util.java:299)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)\r\n\t... 9 more\r\nCaused by: org.apache.derby.iapi.services.io.DerbyIOException: Input stream did not have exact amount of data as the requested length.\r\n\tat org.apache.derby.iapi.types.ReaderToUTF8Stream.checkSufficientData(ReaderToUTF8Stream.java:420)\r\n\tat org.apache.derby.iapi.types.ReaderToUTF8Stream.fillBuffer(ReaderToUTF8Stream.java:378)\r\n\tat org.apache.derby.iapi.types.ReaderToUTF8Stream.read(ReaderToUTF8Stream.java:197)\r\n\tat java.io.DataInputStream.readUnsignedShort(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.readExternal(SQLChar.java:1050)\r\n\tat org.apache.derby.iapi.types.SQLChar.getString(SQLChar.java:695)\r\n\tat org.apache.derby.iapi.types.SQLVarchar.normalize(SQLVarchar.java:148)\r\n\tat org.apache.derby.iapi.types.DataTypeDescriptor.normalize(DataTypeDescriptor.java:648)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeColumn(NormalizeResultSet.java:329)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(NormalizeResultSet.java:373)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:188)\r\n\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)\r\n\tat org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:494)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232)\r\n\t... 4 more\r\n\r\n----- SQLException -----\r\n  SQLState:   XJ001\r\n  Error Code: 0\r\n  Message:    Java exception: 'Input stream did not have exact amount of data as the requested length.: org.apache.derby.iapi.services.io.DerbyIOException'.\r\njava.sql.SQLException: Java exception: 'Input stream did not have exact amount of data as the requested length.: org.apache.derby.iapi.services.io.DerbyIOException'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)\r\n\tat org.apache.derby.impl.jdbc.Util.javaException(Util.java:299)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:398)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2269)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1321)\r\n\tat org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1673)\r\n\tat org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:303)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.test(StreamErrRepro.java:38)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.StreamErrRepro.main(StreamErrRepro.java:22)\r\nCaused by: java.sql.SQLException: Java exception: 'Input stream did not have exact amount of data as the requested length.: org.apache.derby.iapi.services.io.DerbyIOException'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)\r\n\t... 12 more\r\nCaused by: org.apache.derby.iapi.services.io.DerbyIOException: Input stream did not have exact amount of data as the requested length.\r\n\tat org.apache.derby.iapi.types.ReaderToUTF8Stream.checkSufficientData(ReaderToUTF8Stream.java:420)\r\n\tat org.apache.derby.iapi.types.ReaderToUTF8Stream.fillBuffer(ReaderToUTF8Stream.java:378)\r\n\tat org.apache.derby.iapi.types.ReaderToUTF8Stream.read(ReaderToUTF8Stream.java:197)\r\n\tat java.io.DataInputStream.readUnsignedShort(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.readExternal(SQLChar.java:1050)\r\n\tat org.apache.derby.iapi.types.SQLChar.getString(SQLChar.java:695)\r\n\tat org.apache.derby.iapi.types.SQLVarchar.normalize(SQLVarchar.java:148)\r\n\tat org.apache.derby.iapi.types.DataTypeDescriptor.normalize(DataTypeDescriptor.java:648)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeColumn(NormalizeResultSet.java:329)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(NormalizeResultSet.java:373)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:188)\r\n\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)\r\n\tat org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:494)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232)\r\n\t... 4 more\r\n\r\n\r\nWhen using the client driver, the following stack trace is written to derby.log:\r\n============= begin nested exception, level (1) ===========\r\norg.apache.derby.iapi.services.io.DerbyIOException: Input stream did not have exact amount of data as the requested length.\r\n\tat org.apache.derby.impl.drda.EXTDTAReaderInputStream.checkStatus(EXTDTAReaderInputStream.java:173)\r\n\tat org.apache.derby.impl.drda.StandardEXTDTAReaderInputStream.read(StandardEXTDTAReaderInputStream.java:146)\r\n\tat sun.nio.cs.StreamDecoder.readBytes(Unknown Source)\r\n\tat sun.nio.cs.StreamDecoder.implRead(Unknown Source)\r\n\tat sun.nio.cs.StreamDecoder.read(Unknown Source)\r\n\tat sun.nio.cs.StreamDecoder.read0(Unknown Source)\r\n\tat sun.nio.cs.StreamDecoder.read(Unknown Source)\r\n\tat java.io.InputStreamReader.read(Unknown Source)\r\n\tat org.apache.derby.iapi.services.io.LimitReader.read(LimitReader.java:57)\r\n\tat org.apache.derby.iapi.types.ReaderToUTF8Stream.fillBuffer(ReaderToUTF8Stream.java:352)\r\n\tat org.apache.derby.iapi.types.ReaderToUTF8Stream.read(ReaderToUTF8Stream.java:197)\r\n\tat java.io.DataInputStream.readUnsignedShort(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.readExternal(SQLChar.java:1050)\r\n\tat org.apache.derby.iapi.types.SQLChar.getString(SQLChar.java:695)\r\n\tat org.apache.derby.iapi.types.SQLVarchar.normalize(SQLVarchar.java:148)\r\n\tat org.apache.derby.iapi.types.DataTypeDescriptor.normalize(DataTypeDescriptor.java:648)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeColumn(NormalizeResultSet.java:329)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(NormalizeResultSet.java:373)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:188)\r\n\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)\r\n\tat org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:494)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232)\r\n\tat org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1673)\r\n\tat org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(EmbedPreparedStatement.java:1328)\r\n\tat org.apache.derby.impl.drda.DRDAStatement.execute(DRDAStatement.java:672)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAConnThread.java:4262)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:4085)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:1004)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:291)\r\n============= end nested exception, level (1) ===========\r\n\r\n\r\nIf we disable the use of the accumulated exception mechanism on the client (when sending the status byte, i.e. server and client at 10.6+), we get the same SQL states (XCL30 and XJ001) in both drivers. Looking at the traces, I do see DerbyIOException. This was introduced to make Derby able to rewrite IOException to SQLException with the correct state, but this is obviously not done for this code path. For instance, we may want to differentiate between a generic read error from a user stream and an error thrown by Derby due to a mismatch between the specified and the actual stream length.\r\n\r\nI would prefer to throw a different exception than the generic XJ001, but I think this can be handled under a different Jira. For instance, XJ023 may be better suited.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-03-17T17:12:25.384+0000","updated":"2010-03-17T17:12:25.384+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12846609","id":"12846609","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I agree that it would be good to get the same error on both drivers for the situations above.\r\n\r\nThe situation I had in mind was slightly different. I was thinking of the case where the user stream throws an exception when it's read. In the current code, I believe that both the client driver and the embedded driver will expose the original exception thrown by the user stream. If we disable the accumulation of exceptions, will we then instead see the below exception on the client?\r\n\r\n+            case DRDAConstants.STREAM_READ_ERROR:\r\n+            case DRDAConstants.STREAM_READ_ERROR_ON_LEN_VAL:\r\n+                throw new IOException(\"Read error on client side when \" +\r\n+                        \"reading user stream\");\r\n\r\nMy preference would be that we continued to report the original exception in such a situation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-03-17T21:53:12.984+0000","updated":"2010-03-17T21:53:12.984+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12848650","id":"12848650","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attached an updated version of the regression test patch, which adds another test class (for layer B).\r\n\r\nI plan to commit this shortly, and I will do a few changes once the matter of exception handling in the drivers has been settled.\r\nRun on trunk 5+3 failures should be seen. There are a few cases where the client driver currently does ok (because a combination of no auto-commit and rollback is used), and most of the tests are also run with the embedded driver as verification.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-03-23T10:44:59.967+0000","updated":"2010-03-23T10:44:59.967+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12849271","id":"12849271","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Committed patch 2b to trunk with revision 927114.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-03-24T16:37:04.758+0000","updated":"2010-03-24T16:37:04.758+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12849274","id":"12849274","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attached a fix as patch 3a.\r\n\r\nReady for review.\r\nI'll describe/explain a few things tomorrow (no time now, just wanted to get the patch out there).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-03-24T16:53:38.076+0000","updated":"2010-03-24T16:53:38.076+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12849693","id":"12849693","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Description of patch 3a:\r\n\r\n* iapi/reference/DRDAConstants\r\nConstants for the various error conditions. There are currently four different conditions: OK, READ_ERROR, TOO_SHORT and TOO_LONG.\r\nTwo would be enough, but having more may help debugging / tracing (from the server side) and it doesn't add much complexity / overhead.\r\n\r\n* drda/StandardEXTDTAReaderInputStream\r\nExtended the stream reading \"normal\" EXTDTA to handle the Derby-specific status byte.\r\nSee comment under drda/EXTDTAReaderInputStream.\r\n\r\n* drda/LayerBStreamedEXTDTAReaderInputStream\r\nExtended the stream reading layer B streamed EXTDTA to handle the Derby-specific status byte.\r\nSlightly more complex than the normal case, as we don't know up front when we read the last data byte.\r\nFirst I tried to make the stream check the status when it read the last byte, but the code got too complex due to buffer boundary issues (i.e. I had to deal with a \"carry-over\" byte etc). The stream now requires that it is properly drained to guarantee that the status byte is read (i.e. read in a loop until you get -1). This is the normal operational mode, so it shouldn't cause problems.\r\nTo my knowledge this stream is always passed directly into the embedded driver, which means it should thrown an exception instead of saving the status byte.\r\n\r\n* drda/EXTDTAReaderInputStream\r\nExtended the class to deal with the Derby-specific status byte.\r\nContains the logic determining if something went wrong when reading the stream on the client side. If so, either an exception is thrown or the status if saved for later inspection.\r\nSeems I removed some required functionality here, as I think we have to be able to explicitly tell if an error condition should cause an exception to be thrown or not. The reason is that sometimes Derby reads the value off the network before executing the statement. I want the statement itself to fail, as this simplifies the clean-up and error handling.\r\n\r\n* drda/FailingEXTDTAInputStream\r\nDummy stream that will throw an exception as soon as a read request is made.\r\n\r\n* drda/AppRequester\r\nAdded method that tells if the client supports EXTDTA aborts or not.\r\n\r\n* drda/DRDAConnThread\r\nFixed some suboptimal logic in convertAsByteArrayInputStream, where the buffer size could be set to poorly chosen values (very small or too large).\r\nIn the case of normal EXTDTAs, added logic to pass in a stream that will fail instead of the stream containing padded or truncated data.\r\n\r\n* drda/DDMReader\r\nModified the code creating the streams reading data off the wire to tell whether a Derby-specific status byte is expected or not.\r\n\r\n* tests/jdbc4/PreparedStatementTest\r\nRemoved special code that was added due to DERBY-2017.\r\n\r\n* client/net/NetDatabaseMetaData\r\nAdded code to tell if the server supports EXTDTA aborts.\r\n\r\n* client/net/NetConnection\r\nAdded method calling code added in NetDatabaseMetaData.\r\n\r\n* client/net/Request\r\nThe changes required to send the status byte (both for layer A and layer B streaming).\r\nNote that I suspect that the method writeEncryptedScalarStream is dead code. There are several major problems with it, suggesting that it isn't used. I may remove this code in a later patch, added a comment for now.\r\n\r\n\r\nI'll add some more JavaDoc for some of the existing methods in Request, add some tests for binary data (as opposed to character data) and verify that all code paths in DRDAConnThread.readAndSetExtParam are covered.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-03-25T12:56:06.581+0000","updated":"2010-03-25T12:56:06.581+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12850069","id":"12850069","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Hi Kristian,\r\n\r\nI downloaded the 3a patch and tested it, and it only seems to address the layer B case (as can be seen by running Derby2017LayerATest or the original repro which still fail). Was layer A supposed to work with this patch?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-03-26T10:32:39.783+0000","updated":"2010-03-26T10:32:39.783+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12850077","id":"12850077","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The subclasses of EXTDTAReaderInputStream implement both read() and read(byte[],int,int). Those methods have become rather complex now, since they handle both switching of buffers and the new status byte. To reduce the complexity of these classes, do you think it would make sense to define read() in terms of read(byte[],int,int) so that buffer switching and reading the status byte only need to be implemented once per class?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-03-26T10:52:21.511+0000","updated":"2010-03-26T10:52:21.511+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12850264","id":"12850264","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Hi Knut Anders,\r\n\r\nHere's another version. 3a had a bug in the checkState-method (I removed some functionality I thought was unnecessary), which is why Derby2017LayerATest failed.\r\nI have also made some additional changes in DRDAConnThread (refactoring). See DRDAConnThread.convertAsByteArrayInputStream for the use of the exception suppress mechanism in the streaming classes.\r\nAdded some more JavaDoc to the methods in Request.\r\n\r\nI also made the change you suggested - to implement read() using read(byte[], int, int). It does reduce the complexity, and I know that the normal access pattern for these stream classes is to read data into a buffer (we're currently using a 8 KB buffer). I considered keeping the one-byte array as an instance variable, but chose not to.\r\n\r\nI just started the regression tests, and will report back later with the results.\r\nMore tests are coming (using setBinaryStream).\r\n\r\nPatch 3b ready for further review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-03-26T18:05:05.730+0000","updated":"2010-03-26T18:05:05.730+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12850868","id":"12850868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks, Kristian. The new patch looks fine to me. My only further comments are (I don't think you need to hold the commit, though):\r\n\r\n1) New error messages in EXTDTAReaderInputStream.getStatus()/checkStatus() and FailingEXTDTAInputStream.read() are not internationalized.\r\n\r\n2) Could the two JUnit tests for this issue also be enabled now?\r\n\r\nBy the way, I noticed that the layer B test ran in just 6 seconds on my laptop, whereas the layer A test needed 2 minutes to complete. I haven't studied the details of the tests, but perhaps you could tell if this difference is expected?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-03-29T10:07:18.224+0000","updated":"2010-03-29T10:07:18.224+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12859889","id":"12859889","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attached patch 3a.\r\nCommitted the fix to trunk with revision 936950.\r\n\r\nThanks for looking at the patch, Knut.\r\nI rewrote it slightly, adding a static method instead of duplicating the logic to throw the exception. I also one of the messages to MessageId. The others shouldn't be seen by users...\r\n\r\nI will post a follow-up patch for the tests. It will add some tests for binary data, and also enable the tests.\r\nThe time difference you see between the two tests is expected. The layer A test runs a buffer boundary test, which is not run in the layer B test (the two tests exercise the same code path when it comes to the buffer boundary issue).\r\n\r\nIf there are additional comments, I'll incorporate the necessary changes in a new patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-04-22T16:49:56.444+0000","updated":"2010-04-22T16:49:56.444+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12860151","id":"12860151","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"There were two failures in the Tinderbox after this check-in. Do you think they are related?\r\n\r\nhttp://dbtg.foundry.sun.com/derby/test/tinderbox_trunk16/jvm1.6/testing/testlog/SunOS-5.10_i86pc-i386/936985-org.apache.derbyTesting.functionTests.suites.All_diff.txt\r\n\r\norg.apache.derbyTesting.functionTests.suites.All fail *************************************************************\r\n1) testBlobExceptionDoesNotRollbackOtherStatements(org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest)junit.framework.AssertionFailedError\r\n2) testBlobExceptionDoesNotRollbackOtherStatements(org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest)junit.framework.AssertionFailedError\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-04-23T07:12:22.043+0000","updated":"2010-04-23T07:12:22.043+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12860188","id":"12860188","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Absolutely.\r\n\r\nGoing from 3b to 3c the test fix got lost.\r\nAttached as patch 4a, committed to trunk with revision 937198.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-04-23T09:07:16.640+0000","updated":"2010-04-23T09:07:16.640+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12860232","id":"12860232","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attached patch 5a, which adds tests of binary data values (slightly different code path on the server) and enables the tests as part of their respective suites.\r\n\r\nPatch ready for review.\r\nWill commit shortly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-04-23T12:16:26.587+0000","updated":"2010-04-23T12:16:26.587+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12860556","id":"12860556","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Committed patch 5a to trunk with revision 937655.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-04-24T17:42:41.462+0000","updated":"2010-04-24T17:42:41.462+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12860557","id":"12860557","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Although the error reporting could have been cleaned up somehow (change error message text, make states consistent between the drivers), I don't expect to do more work on this issue for 10.6.\r\n\r\nFix ready for verification.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-04-24T17:44:22.179+0000","updated":"2010-04-24T17:44:22.179+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12354260/comment/12995584","id":"12995584","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I looked at this issue for possible backport to 10.5 and think it is not appropriate because there were pretty extensive changes and protocol changes.  From the commit message of r936950:\r\n\r\n\"Made the client tell the server (if supported) if the EXTDTA transfer was\r\nsuccessful or not, by appending a Derby-specific status byte to the user data.\"\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-02-16T23:39:01.187+0000","updated":"2011-02-16T23:39:01.187+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2017/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06njz:"}}