{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12380989","self":"https://issues.apache.org/jira/rest/api/latest/issue/12380989","key":"SOLR-390","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310230","id":"12310230","key":"SOLR","name":"Solr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310230&avatarId=22151","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310230&avatarId=22151","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310230&avatarId=22151","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310230&avatarId=22151"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/5","id":"5","description":"All attempts at reproducing this issue failed, or not enough information was available to reproduce the issue. Reading the code produces no clues as to why this behavior would occur. If more information appears later, please reopen the issue.","name":"Cannot Reproduce"},"customfield_12312322":null,"customfield_12310220":"2007-10-23 16:15:52.39","customfield_12312323":null,"customfield_12310420":"7205","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_30899242_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-10-24T00:25:39.242+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-390/watchers","watchCount":0,"isWatching":false},"created":"2007-10-23T15:50:40.147+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2007-11-03T05:42:40.924+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310674","id":"12310674","name":"search","description":"Query the search collection"}],"timeoriginalestimate":null,"description":"HashDocSet initializes the internal array but iterating it instead of using Arrays.fill which is much faster. Patch included","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"20794","summary":"HashDocSet initialization of internal array is not efficient","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=john.wang%40gmail.com","name":"john.wang@gmail.com","emailAddress":"john dot wang at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Wang","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=john.wang%40gmail.com","name":"john.wang@gmail.com","emailAddress":"john dot wang at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Wang","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":6,"total":6,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12380989/comment/12537051","id":"12537051","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=john.wang%40gmail.com","name":"john.wang@gmail.com","emailAddress":"john dot wang at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Wang","active":true},"body":"I am having problems with \"Attach file\"\r\nFollowing is the patch:\r\nIndex: /Users/john/plum/solr-trunk/src/java/org/apache/solr/search/HashDocSet.java\r\n===================================================================\r\n--- /Users/john/plum/solr-trunk/src/java/org/apache/solr/search/HashDocSet.java (revision 587538)\r\n+++ /Users/john/plum/solr-trunk/src/java/org/apache/solr/search/HashDocSet.java (working copy)\r\n@@ -17,6 +17,8 @@\r\n \r\n package org.apache.solr.search;\r\n \r\n+import java.util.Arrays;\r\n+\r\n import org.apache.solr.util.BitUtil;\r\n \r\n \r\n@@ -63,8 +65,8 @@\r\n     mask=tsize-1;\r\n \r\n     table = new int[tsize];\r\n-    for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\r\n-\r\n+    //for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\r\n+    Arrays.fill(table, EMPTY);\r\n     for (int i=offset; i<len; i++) {\r\n       put(docs[i]);\r\n     }\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=john.wang%40gmail.com","name":"john.wang@gmail.com","emailAddress":"john dot wang at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Wang","active":true},"created":"2007-10-23T16:00:30.145+0000","updated":"2007-10-23T16:00:30.145+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12380989/comment/12537055","id":"12537055","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"That's interesting... does it actually test as faster for you?  Have any JVMs finally done specific optimizations for it?\r\nIn the past, my version was always a little faster because counting down to zero can be slightly faster (no explicit compare needed in many instruction sets because the flags are often set by arithmetic operations anyway).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2007-10-23T16:15:52.390+0000","updated":"2007-10-23T16:15:52.390+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12380989/comment/12537062","id":"12537062","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"As I suspected, it doesn't look like there is yet any JVM acceleration for Arrays.fill() (and I wouldn't hold my breath).\r\nI just tested with Java 1.6 -server, and my current method appears about 88% faster (on a P4 at least).\r\n\r\nI used an array size of 1000 (since HashDocSet will normally be between 1 and 3000),\r\nand 10,000,000 iterations.\r\n\r\nexplicit loop countdown =>  9281 msec\r\nArrays.fill => 17515 msec\r\n\r\n{code}\r\npublic class TestPerf {\r\n\r\n  private static int VAL=-1;\r\n\r\n  private static void fill(int[] x) {\r\n/*\r\n    for (int i=x.length-1; i>=0; i--) {\r\n      x[i] = VAL;\r\n    }\r\n*/\r\n    Arrays.fill(x,VAL);\r\n  }\r\n\r\n\r\n  public static void main(String[] args) {\r\n    int a=0;\r\n    int sz = Integer.parseInt(args[a++]);\r\n    int iter = Integer.parseInt(args[a++]);\r\n    int[] x = new int[sz];\r\n    int ret=0;\r\n    long start = System.currentTimeMillis();\r\n    for (int i=0; i<iter; i++) {\r\n      fill(x);\r\n      ret = ret + x[0];  // use results\r\n    }\r\n    long end = System.currentTimeMillis();\r\n    System.out.println(\"result=\" + ret);\r\n    System.out.println(\"time=\" +(end-start));\r\n  }\r\n}\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2007-10-23T16:39:27.581+0000","updated":"2007-10-23T16:39:27.581+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12380989/comment/12537171","id":"12537171","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"I did some further tests with mixed results...\r\nAfter modifying the test program to do fill() on multiple arrays per iteration (and using an element from each array to try and prevent any dead code elimination), the benefit of the inlined loop vanishes (sneaky hotspot). Sometimes the Arrays.fill() version was faster, and sometimes it wasn't.  So perhaps a real test is needed here.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2007-10-23T23:49:01.290+0000","updated":"2007-10-23T23:49:01.290+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12380989/comment/12537179","id":"12537179","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Doing a quick HashDocSet construction test (below) showed the loop to be slightly faster on average than Arrays.fill()... I have no idea why, but I'll close this bug for now and it can be reopened if someone comes up with a better test (or tests on different JVMs, etc).\r\n\r\n{code}public class TestPerf {\r\n\r\n  private static int VAL=-1;\r\n\r\n  private static int go(int[] x) {\r\n    HashDocSet ds = new HashDocSet(x,0,x.length);\r\n    return ds.exists(1) ? 1 : 0;\r\n  }\r\n\r\n\r\n  public static void main(String[] args) {\r\n    int a=0;\r\n    int sz = Integer.parseInt(args[a++]);\r\n    int iter = Integer.parseInt(args[a++]);\r\n    int[] x = new int[sz];\r\n    int[] x2 = new int[sz];\r\n    for (int ii=0; ii<sz; ii++) {\r\n      x[ii]=ii*1234567891;\r\n      x2[ii]=ii*987654323;\r\n    }\r\n\r\n    int ret=0;\r\n    long start = System.currentTimeMillis();\r\n    int num=0;\r\n    for (int i=0; i<iter; i++) {\r\n      if (++num>=sz) num=0;\r\n      x[num] += go(x)+ret+x2[num];\r\n      ret += go(x2) + x2[num]++;\r\n    }\r\n    long end = System.currentTimeMillis();\r\n    System.out.println(\"result=\" + ret);\r\n    System.out.println(\"time=\" +(end-start));\r\n  }\r\n}\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2007-10-24T00:24:33.295+0000","updated":"2007-10-24T00:24:33.295+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12380989/comment/12539863","id":"12539863","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=john.wang%40gmail.com","name":"john.wang@gmail.com","emailAddress":"john dot wang at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Wang","active":true},"body":"Hi Yonik:\r\n    With my tests, for large arrays, e.g. 2M entries, there is a 14% gain.\r\nBut it is 14% out of a small number, so I guess it is not a big deal. Sorry\r\nfor the false alarm.\r\n\r\n-John\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=john.wang%40gmail.com","name":"john.wang@gmail.com","emailAddress":"john dot wang at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Wang","active":true},"created":"2007-11-03T05:42:40.413+0000","updated":"2007-11-03T05:42:40.413+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-390/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i03x3b:"}}