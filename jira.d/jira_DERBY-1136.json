{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12330533","self":"https://issues.apache.org/jira/rest/api/latest/issue/12330533","key":"DERBY-1136","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-03-23 06:29:43.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22330","customfield_12310222":"1_*:*_1_*:*_122735000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_2_*:*_54389365844_*|*_4_*:*_1_*:*_148000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-05-18T18:08:26.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1136/watchers","watchCount":2,"isWatching":false},"created":"2006-03-22T10:47:23.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/10993","id":"10993","description":"","name":"10.1.1.0","archived":false,"released":true,"releaseDate":"2005-08-03"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2007-12-13T09:04:51.841+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"}],"timeoriginalestimate":null,"description":" I have a table created in the Derby database with a field as \"float\". I am able to successfully insert into this field the value FLOAT.MAX_VALUE (3.4028235E38). But when I try to query this field and try to use resultSet.getFloat() to retrieve this value I get a SQLException thrown.\n The derby driver that I am using is the one that is part of our Glassfish 9.0 build.\n The stack trace is :\n org.apache.derby.client.am.LossOfPrecisionConversionException: Invalid data conversion:Requested conversion would result in a loss of precision of 3.4028235E38\n        at org.apache.derby.client.am.CrossConverters.getFloatFromDouble(Unknown Source)\n        at org.apache.derby.client.am.Cursor.getFloat(Unknown Source)\n        at org.apache.derby.client.am.ResultSet.getFloat(Unknown Source)\n        at DerbyFloat.testFloat(DerbyFloat.java:121)\n        at DerbyFloat.main(DerbyFloat.java:139)\n\n I have attached a simple java program that I have used to reproduce this problem. \n\n\n import java.sql.*; \n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n\n public class DerbyFloat {\n     \n     /* Derby */\n     static final String userName = \"APP\";\n     static final String password = \"APP\";\n     static final String connectionURL =\n             \"jdbc:derby://localhost:1527/sun-appserv-samples;retrieveMessagesFromServerOnGetMessage=true;\";\n     static final String driverName = \"org.apache.derby.jdbc.ClientDriver\";\n     Connection conn;\n     \n     public DerbyFloat() {}\n     \n     void init() throws SQLException {\n         conn = getConnection(driverName, connectionURL, userName, password);\n     }\n     \n     private static Connection getConnection(String driverName, String connectionURL,\n            String userName, String password) throws SQLException {\n        Connection conn = null;\n\n        try {\n            Class.forName (driverName);\n        }\n        catch (ClassNotFoundException e) {\n            System.out.println(\"Could not load the driver class. Error is \" + e);\n        }\n\n        try {\n            conn = DriverManager.getConnection(connectionURL, userName, password);\n            conn.setAutoCommit(false);\n        } catch (SQLException e) {\n            System.out.println(\"Error while getting connection\");\n            SQLException currentException = e;\n            do {\n                System.out.println(\"Exception is\" + currentException);\n                System.out.println(\n                        \"getMessage()\" + currentException.getMessage());\n                System.out.println(\n                        \"getErrorCode()\" + currentException.getErrorCode());\n                System.out.println(\n                        \"getSQLState()\" + currentException.getSQLState());\n                currentException = currentException.getNextException();\n            } while (currentException != null);\n            throw e;\n        }\n\n        return conn;\n     }\n    \n    public void insertRows() throws java.sql.SQLException {\n        PreparedStatement ps;\n         try {\n             ps = conn.prepareStatement(\"DROP TABLE DERBYFLOAT\");\n             ps.executeUpdate();           \n         } catch (SQLException e) {\n             System.out.println(\"Table does not exist\");\n         }       \n        \n         ps = conn.prepareStatement(\"CREATE TABLE DERBYFLOAT (ID INT PRIMARY KEY, FLOATDATA FLOAT)\");\n //        ps = conn.prepareStatement(\"CREATE TABLE DERBYFLOAT (ID INT PRIMARY KEY, FLOATDATA FLOAT(24))\");       \n         ps.executeUpdate();        \n        \n         ps = conn.prepareStatement(\"DELETE FROM DERBYFLOAT\");\n         ps.executeUpdate();        \n         ps = conn.prepareStatement(\n             \"INSERT INTO DERBYFLOAT(ID, FLOATDATA) VALUES(1, 1)\");\n         ps.executeUpdate();    \n         ps = conn.prepareStatement(\n             \"INSERT INTO DERBYFLOAT(ID, FLOATDATA) VALUES(2, 124567890123456)\");\n         ps.executeUpdate();          \n         ps = conn.prepareStatement(\n             \"INSERT INTO DERBYFLOAT(ID, FLOATDATA) VALUES(3, 3.4028235E37)\");\n         ps.executeUpdate(); \n         ps = conn.prepareStatement(\n             \"INSERT INTO DERBYFLOAT(ID, FLOATDATA) VALUES(4, 3.4028235E38)\");\n         ps.executeUpdate();          \n         \n     }\n    \n     public void testFloat() throws java.sql.SQLException {        \n         PreparedStatement ps = conn.prepareStatement(\n                \"SELECT ID, FLOATDATA FROM DERBYFLOAT\");\n         ResultSet rs = ps.executeQuery();\n         ResultSetMetaData rsmd = rs.getMetaData();\n         while(rs.next()) {\n /*\n                Object o = rs.getObject(i);\n\n                String columnTypeName = rsmd.getColumnTypeName(i);\n                System.out.println(\"column \" + (i) + \" type: \" + columnTypeName +\n                      \" (\" + rsmd.getColumnType(i) + \") \" + \"\\t\\tJava Type: \" +  o.getClass());\n */               \n                 System.out.println(\"\\n Value of field 1 uing getInt() : \" + rs.getInt(1));  \n                 try {\n                     System.out.println(\"\\n Value of field 2 using getFloat() : \" + rs.getFloat(2));    \n                 } catch (SQLException e) {\n                     System.out.println(\"\\n Value of field 2 using getFloat() resulted in a SQLException\");\n                     e.printStackTrace();\n                     System.out.println(\"\\n Value of field 2 using getObject() : \" + rs.getObject(2));\n                 }\n                     \n        }\n         \n     }\n     \n     public static final void main (String args [])\n     {\n         DerbyFloat dbFloat = new DerbyFloat();\n         try {\n             dbFloat.init();\n             dbFloat.insertRows();\n             dbFloat.testFloat();\n         } catch (SQLException ex) {\n             System.out.println(\"SQLException : \"+ ex);\n             ex.printStackTrace();            \n         }\n     }\n     \n }\n   \n\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"39705","summary":"JDBC driver on rs.getFloat() gives LossOfPrecisionConversionException for float fields containing Float.MAX_VALUE","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miteshm","name":"miteshm","emailAddress":"mitesh dot meswani at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mitesh Meswani","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miteshm","name":"miteshm","emailAddress":"mitesh dot meswani at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mitesh Meswani","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":11,"total":11,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12371475","id":"12371475","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmork","name":"hmork","emailAddress":"havard dot mork at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Håvard Mork","active":true},"body":"Attached suggested patch for the problem. The problem occurs by a inaccuracy when casting float.max_value to double for comparison. IJ avoids the problem by using getDouble instead.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmork","name":"hmork","emailAddress":"havard dot mork at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Håvard Mork","active":true},"created":"2006-03-23T06:29:43.000+0000","updated":"2006-03-23T06:29:43.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12371477","id":"12371477","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miteshm","name":"miteshm","emailAddress":"mitesh dot meswani at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mitesh Meswani","active":true},"body":"Thanks for looking into this. I don't have environment setup to build Derby. I will not be able to try the patch. Does the test case in the bug run successfully with the patch? \r\n\r\n>IJ avoids the problem by using getDouble instead.\r\nThis is not an option for us as we are implenenting Java Persistence API in Glassfish and the code that reads value from the result set is generic and common to all databases. \r\n\r\nDo you have expected date this would get checked in?\r\n\r\nThanks,\r\nMitesh","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miteshm","name":"miteshm","emailAddress":"mitesh dot meswani at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mitesh Meswani","active":true},"created":"2006-03-23T06:39:12.000+0000","updated":"2006-03-23T06:39:12.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12371553","id":"12371553","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bernt","name":"bernt","emailAddress":"bernt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bernt M. Johnsen","active":true},"body":"Committed revision 388161.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bernt","name":"bernt","emailAddress":"bernt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bernt M. Johnsen","active":true},"created":"2006-03-23T20:52:56.000+0000","updated":"2006-03-23T20:52:56.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12371883","id":"12371883","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is a patch containing a regression test for this bug:\r\nderby-1136-reg-test.diff. If anyone has time to look at this\r\npatch, I would be very grateful.\r\n\r\nI intend to commit the regression test, unless somebody feels\r\nlike that would be a bad idea.\r\n\r\nI found myself interested in this bug, for reasons I can't\r\ntotally explain. Floating point is still rather a mystery to\r\nme, and so I enjoy fooling around with it when I get a chance.\r\n\r\nIn particular, the notion that there was a floating point value\r\nwhich was greater than Float.MAX_VALUE, but which when cast to\r\nfloat returns FALSE from Float.isInfinite(), intrigued me, so\r\nI wrote a little program (test.java) to explore that behavior\r\nand am attaching it for anyone who wants to share my joy in\r\nfloating point behaviors...\r\n\r\nWhile developing the regression test, I discovered two things:\r\n1) The JCC 2.4 driver also suffers from this bug. If anybody has\r\na way to pass this fix along to the JCC team, they might be\r\ngrateful.\r\n2) I don't really understand why the patch to this problem also\r\nincludes a change to SQLDouble.java. From what I can tell, that\r\nchange is not necessary to resolve the behavior reported by this\r\nbug; only the change to CrossConverters.java is needed. Still,\r\nthe change to SQLDouble seems reasonable to me, and I'm not\r\nopposed to it. I just didn't write a regression test for it,\r\nbecause I don't understand it. :)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-26T10:58:29.000+0000","updated":"2006-03-26T10:58:29.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12371957","id":"12371957","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmork","name":"hmork","emailAddress":"havard dot mork at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Håvard Mork","active":true},"body":"I changed SQLDouble.java in order to address the same behaviour in the embedded driver also. I'm a newbie here, so I'm unsure wether that constitute a problem. Is it necessary to check for net client in the regression test?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmork","name":"hmork","emailAddress":"havard dot mork at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Håvard Mork","active":true},"created":"2006-03-27T17:31:46.000+0000","updated":"2006-03-27T17:31:46.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12372011","id":"12372011","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thank you for the information about the SQLDouble change.\r\n\r\nYour comment helped me realize that derbynet/prepStmt.java is not the best location for the regression test, because those tests run only for the network server environments, not for the embedded environment.\r\n\r\nTherefore, I've attached a new patch, 'derby-1136-resultset-reg-test.diff', which moves the regression test to jdbcapi/resultset.java. The resultset regression test runs in the embedded environment as well as in the network server environment.\r\n\r\nWith this new test, I am able to confirm *both* of your fixes. That is, when I backed both your fixes out of my sandbox, resultset.java produces the expected exception failure in both the embedded and DerbyNetClient configurations. Then, when I restored the SQLDouble.java change, the embedded test works. And when I restored the CrossConverters.java change, the DerbyNetClient test works. This makes me much happier about the regression test, since now it confirms both fixes.\r\n\r\nPlease let me know of any other comments about this patch.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-28T03:01:19.000+0000","updated":"2006-03-28T03:01:19.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12372138","id":"12372138","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I've committed the regression test to subversion:\r\nhttp://svn.apache.org/viewcvs?rev=389575&view=rev\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-03-29T03:59:06.000+0000","updated":"2006-03-29T03:59:06.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12412327","id":"12412327","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bernt","name":"bernt","emailAddress":"bernt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bernt M. Johnsen","active":true},"body":"Merge to 10.1 branch","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bernt","name":"bernt","emailAddress":"bernt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bernt M. Johnsen","active":true},"created":"2006-05-18T18:05:58.000+0000","updated":"2006-05-18T18:05:58.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12412328","id":"12412328","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bernt","name":"bernt","emailAddress":"bernt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bernt M. Johnsen","active":true},"body":"Committed revision 407519 to 10.1 branch\r\nNOTE: Regression test (Rev. 389575) not (yet?) merged.\r\n\r\nShould this issue be closed?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bernt","name":"bernt","emailAddress":"bernt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bernt M. Johnsen","active":true},"created":"2006-05-18T18:08:26.000+0000","updated":"2006-05-18T18:08:26.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12413102","id":"12413102","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bernt","name":"bernt","emailAddress":"bernt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bernt M. Johnsen","active":true},"body":"The regression test cannot be merged into 10.1 without conflict on all files. This fix is very small, and have a regression test on trunk, so I suggest we don't backport the test to 10.1, but close this issue. Unless there are someone that has the itch to backport the test, of course.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bernt","name":"bernt","emailAddress":"bernt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bernt M. Johnsen","active":true},"created":"2006-05-24T18:46:54.000+0000","updated":"2006-05-24T18:46:54.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330533/comment/12551326","id":"12551326","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fuzzylogic","name":"fuzzylogic","emailAddress":"mcintyre dot a at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andrew McIntyre","active":true},"body":"This issue has been resolved for over a year with no further movement. Closing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fuzzylogic","name":"fuzzylogic","emailAddress":"mcintyre dot a at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andrew McIntyre","active":true},"created":"2007-12-13T09:04:51.836+0000","updated":"2007-12-13T09:04:51.836+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1136/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i075sn:"}}