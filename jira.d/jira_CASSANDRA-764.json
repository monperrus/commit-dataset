{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12455322","self":"https://issues.apache.org/jira/rest/api/latest/issue/12455322","key":"CASSANDRA-764","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png","name":"New Feature","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310865","id":"12310865","key":"CASSANDRA","name":"Cassandra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310865&avatarId=12034","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310865&avatarId=12034","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310865&avatarId=12034","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310865&avatarId=12034"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11961","id":"11961","description":"Apache Cassandra related projects","name":"Cassandra"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314533","id":"12314533","description":"","name":"0.7 beta 1","archived":false,"released":true,"releaseDate":"2010-08-13"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2010-02-04 22:48:51.888","customfield_12312322":null,"customfield_12312323":null,"customfield_12310222":"10002_*:*_2_*:*_482661033_*|*_1_*:*_2_*:*_1877607514_*|*_5_*:*_1_*:*_0","customfield_12310420":"27725","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-03-03T23:40:58.532+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-764/watchers","watchCount":3,"isWatching":false},"created":"2010-02-04T16:03:09.985+0000","customfield_10022":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":["api"],"customfield_12312333":null,"customfield_12311124":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2010-03-04T12:39:21.284+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312978","id":"12312978","name":"Core"}],"timeoriginalestimate":null,"description":"Add bitmasks (OR of an array of ANDs) to the SliceRange.  Make them optional.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12437770","id":"12437770","filename":"0001-CASSANDRA-764-bitmasks.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-03-03T19:32:14.939+0000","size":31078,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12437770/0001-CASSANDRA-764-bitmasks.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12437197","id":"12437197","filename":"0001-CASSANDRA-764-bitmasks.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-26T15:38:46.075+0000","size":30770,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12437197/0001-CASSANDRA-764-bitmasks.patch"}],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"91581","summary":"bitmasks applied to SliceRange","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"customfield_12311420":null,"customfield_12311421":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":31,"total":31,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12829644","id":"12829644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"This patch introduces the bitmasks parameter in SliceQueryFilter and SliceRangeCommand.  The convenience methods in ThriftGlue are also updated.\r\n\r\nOne TODO has to do with an unused function (ColumnFamilyStore::getColumnFamily).  Please advise.\r\n\r\nThis patch does NOT serialize bitmasks properly in SliceRangeCommand.  Please advise on the best approach there.\r\n\r\nThe bitmasks parameter does not do anything in this patch, it's simply passed around.  The next patch will attempt to provide the SliceQueryFilter functionality.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-04T16:51:11.762+0000","updated":"2010-02-04T16:51:11.762+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12829684","id":"12829684","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"Resubmitting with changes to Memtable and SSTableSliceIterator, which I think are the only places where the SliceQueryFilter matters.outside of ColumnFamilyStore.  Quilt did NOT like something about the patch set so I couldn't do a 002 incremental patch, sorry.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-04T18:31:10.443+0000","updated":"2010-02-04T18:31:10.443+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12829832","id":"12829832","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"> One TODO has to do with an unused function (ColumnFamilyStore::getColumnFamily). Please advise. \r\n\r\nIf you mean there is an unused function in CFS, it should be removed in a separate patch.\r\n\r\n> This patch does NOT serialize bitmasks properly in SliceRangeCommand. Please advise on the best approach there. \r\n\r\nSerialize them as byte[].  Not sure what the question is here.  There's any number of examples of \"serializing a list of something.\"","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-04T22:48:51.888+0000","updated":"2010-02-04T22:48:51.888+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12829834","id":"12829834","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"you're wrong about it being unused, though -- it's used extensively in the unit tests.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-04T22:51:31.383+0000","updated":"2010-02-04T22:51:31.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830131","id":"12830131","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"The test cases were accidentally missing from my Eclipse include path when I did the search for that method.  Sorry about that, I see it's used.  Just ignore that comment.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-05T15:22:08.965+0000","updated":"2010-02-05T15:22:08.965+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830152","id":"12830152","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"DataOutputStream doesn't serialize Lists.  ObjectOutputStream does.  So I wasn't sure of the best way to approach the serialization of the List<byte[]> object.  Should I serialize to an intermediate byte[] or should I encode the number of bitmasks followed by each bitmask individually?  I think you're saying to use an intermediate but please confirm.  Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-05T16:18:59.206+0000","updated":"2010-02-05T16:18:59.206+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830157","id":"12830157","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"please look at some of the other examples in the codebase and follow what they do.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-05T16:36:57.925+0000","updated":"2010-02-05T16:36:57.925+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830167","id":"12830167","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"This patch serializes the bitmasks using a new ObjectSerializer templated class.  It attempts to make toString() nicely legible by printing the bitmasks as hex.  It also removes the erroneous TODO comment.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-05T17:09:00.747+0000","updated":"2010-02-05T17:09:00.747+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830173","id":"12830173","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"(a) where do you see us using ObjectSerializer to write a list?\r\n(b) don't serialize byte[] to String first, that is insane","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-05T17:12:16.054+0000","updated":"2010-02-05T17:12:16.054+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830179","id":"12830179","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"This is why I asked for advice.  \"look at the code\" showed me several ways to do the task.\r\n\r\nI see BitSetSerializer used and the bitmasks are most similar to a BitSet so I thought it made sense to approach it similarly.  ObjectSerializer simply ensures we won't have to write ListSerializer, etc. and in fact BitSetSerializer can be reduced to ObjectSerializer<BitSet>.\r\n\r\nI also see ColumnSerializer but considering the purpose (bitmasks are not supposed to be large or many; if they are then we can revisit this) I thought serializing through a String made sense.  If you're suggesting to approach it as with ColumnSerializer, that is, to serialize the count and then the byte[] objects individually, I can do that too.\r\n\r\nDoes the SliceFromReadCommand.toString() look OK at least?  Or should I encode it more efficiently for space?\r\n\r\nThanks for your help.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-05T17:24:48.830+0000","updated":"2010-02-05T17:24:48.830+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830182","id":"12830182","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"> If you're suggesting to approach it as with ColumnSerializer\r\n\r\nthat is what I'm suggesting.\r\n\r\n> Does the SliceFromReadCommand.toString() look OK\r\n\r\nthose are just for human-readability so it doesn't matter much","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-05T17:30:22.507+0000","updated":"2010-02-05T17:30:22.507+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830268","id":"12830268","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"Here is another attempt to do serialization properly.  It uses an external ByteArrayListSerializer, which could be merged into FBUtilities.\r\n\r\nWhile it compiles, this definitely breaks things: the TableTest fails in many places.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-05T20:12:43.253+0000","updated":"2010-02-05T20:12:43.253+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830270","id":"12830270","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"there isn't usually much point in submitting patches w/ broken test suite.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-05T20:17:43.146+0000","updated":"2010-02-05T20:17:43.146+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830481","id":"12830481","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"Apparently a HashSet<IColumn> doesn't work as I expected it to.  Patch 002 redone to fix that.  I'll add tests for a bitmasked SliceRange and whatever fixes they require with 003 but 001 and 002 do the ReadCommand serialization properly (with a unit test) and pass all the tests.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-06T06:31:02.421+0000","updated":"2010-02-06T06:31:02.421+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12830483","id":"12830483","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"Oops file.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-06T06:33:56.162+0000","updated":"2010-02-06T06:33:56.162+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12831570","id":"12831570","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"Sorry to be a pain but I can't figure out what I'm doing wrong.  The attached patch introduces bitmask tests but they fail with nonsense errors that show completely wrong column names:\r\n\r\n    [junit] Bitmasked Columns [636f6c303936:false:21@1,636f6c303937:false:21@1,636f6c303938:false:21@1,636f6c303939:false:21@1,] is not expected [] (bitmasks '[0 bitmasks: ]')\r\n\r\nThe other tests, where no bitmasks are in use, don't have this issue.  It must be caused by the filtering predicates or something in the code path that creates them.  Can you give me a hint about what I'm doing wrong?  I've spent several hours tracking this and can't find the issue.  Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-09T18:11:38.226+0000","updated":"2010-02-09T18:11:38.226+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12832159","id":"12832159","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"- the strange column names were coming from cf.getComparator().getColumnsString(columns)).  This should not be called in assertColumns() because the strings it generates don't match the actual column names.  See assertBitmaskedColumns() in the latest patch for an example of what it could do instead (show both the column's toString() and the actual name).  assertBitmaskedColumns() is backwards compatible with assertColumns() so maybe it can just get called with an empty list to simplify the test code.\r\n\r\n- the tests pass the first stage, BEFORE the ColumnFamilyStore forceBlockingFlush().  They don't pass the second stage so I'm researching that piece.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-10T19:57:07.927+0000","updated":"2010-02-10T19:57:07.927+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12832230","id":"12832230","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"I put some output code (to System.err) which produced this output:\r\n\r\n    [junit] TableTest: running bitmask test\r\n    [junit] TableTest: no bitmasks\r\n    [junit] TableTest: pass 2 step 0 substep 0 got CF null\r\n    [junit] TableTest: assertBitmaskedColumns: got CF null at 1265838911425\r\n    [junit] ColumnFamilyStore.getTopLevelColumns: adding SSTable reader org.apache.cassandra.io.SSTableReader(path='/home/tzz/workspace/Cassandra/build/test/cassandra/data/Keyspace1/Standard1-2-Data.db') at 1265838911454\r\n... (more SSTable readers get initialized here, all of them after the first)...\r\n\r\nI removed all but the first (without any bitmasks) test, so the error is happening with what should be an unfiltered result set.  pass 2 is after the cfs.forceBlockingFlush() call (pass 1 is 100% successful).  Step 0 is the first bitmask set (which is an empty array).  Substep 0 is the first test, shown below.\r\n\r\nThe sequence leads me to believe that the SSTable reader is getting iterated AFTER a null CF is returned by ColumnFamilyStore.getColumnFamily().  The timestamps show that a little bit after this call:\r\n\r\n                    cf = cfStore.getColumnFamily(ROW, new QueryPath(\"Standard1\"), \"col096\".getBytes(), \"col099\".getBytes(), bitmasks, false, 4);\r\n\r\nreturns null, the necessary SSTable iteration is happening.  Thus the test gets a null CF and it fails, of course.\r\n\r\nI looked at the code and am not sure yet how this is happening.  I am attaching the testing patch, to be applied on top of 004, which is mostly throwaway debugging but shows the error clearly.\r\n\r\nI will keep investigating.\r\n\r\nupdate: the SSTable readers I saw here are asynchronous from the other TableTest unit tests and so a red herring.  What a pain this is to debug.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-10T22:05:29.538+0000","updated":"2010-02-11T15:03:17.030+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12832258","id":"12832258","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"Looks like the row cache is returning a column family without any columns during the second pass.  If I turn off the row cache in getColumnFamily just for the bitmask tests they complete fine.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-10T22:34:12.481+0000","updated":"2010-02-10T22:34:12.481+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12832521","id":"12832521","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"With 004, this passes all tests, including bitmask ranges, by forcing a row cache flush at the time of a ColumnFamilyStore::forceFlush()\r\n\r\nI don't know if forcing the row cache to be flushed is required.  I know that when the bitmask tests run, the row cache contains an empty column family when the column family should contain several columns.  Forcing a cache flush fetches the right values.  I don't know, however, whether the problem that causes that invalid cached value is with the bitmasks patch or if it already existed (maybe linked to the IdentityQueryFilter that the row cache uses, or to the memtable switch).  So I really need some advice here if this is not the right approach.\r\n\r\nMinor stuff: I introduced a getMethodName() in TableTest so the test row key is linked to the test that's run.  I think it makes sense to use that system in the other TableTest unit tests as well, but I didn't make the change in case that change is not welcome.  Similarly I think assertColumns() should print the column names as assertBitmaskedColumns() does.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-11T15:32:01.780+0000","updated":"2010-02-11T15:32:01.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12833939","id":"12833939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"Here are comments on patch 01.  If they are applicable, please apply to the other patches too.\r\n\r\n01: still adds TODO about method not being used, that is\r\n\r\n>>> new ArrayList<byte[]>(0)\r\n\r\nuse Collections.emptyList\r\n\r\n>>> null == reference\r\n\r\nuse reference == null\r\n\r\n>>> hasFullPredicate\r\n\r\ndon't make a method for something trivial.  and isn't this backwards, i.e., shouldn't it return true if bitmasks is NOT null?\r\n\r\n>>> int limit = Math.min(bitmask.length, name.length)\r\n\r\nISTM that the semantics for a bitmask predicate against a value of a different length are unclear.  Let's stick to only matching values of the same length.\r\n\r\n>>> for (int i=0; i < bitmasks.size(); i++)\r\n\r\nuse a foreach loop\r\n\r\n>>> PredicateUtils\r\n\r\nprefer google collections to apache commons unless the former does not support what you need (here you want Predicates.or)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-15T19:38:51.945+0000","updated":"2010-02-15T19:38:51.945+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12833941","id":"12833941","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"also: patchset needs rebasing","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-15T19:42:02.847+0000","updated":"2010-02-15T19:42:02.847+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12835000","id":"12835000","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":">01: still adds TODO about method not being used, that is\r\n>use Collections.emptyList\r\n>use reference == null\r\n>>> hasFullPredicate\r\n>don't make a method for something trivial. and isn't this backwards, i.e., shouldn't it return true if bitmasks is NOT null?\r\n\r\nFixed, thanks.  Also rebased using git-svn now and consolidated into a single patch.\r\n\r\n>>> int limit = Math.min(bitmask.length, name.length)\r\n>ISTM that the semantics for a bitmask predicate against a value of a different length are unclear. Let's stick to only matching values of the same length.\r\n\r\nI think it makes sense to have shorter bitmasks that are assumed to extend into infinity as all true.  That would save bandwidth in some cases, but you're right that semantically this is unclear.  Maybe it can be enabled with an option.  Anyhow, it returns false now but I can make it throw an exception instead.\r\n\r\n>>> for (int i=0; i < bitmasks.size(); i++)\r\n>use a foreach loop\r\n\r\nI need the offset to assign the result.  Or would you rather I use Collections2.transform()?\r\n\r\n>>> PredicateUtils\r\n>prefer google collections to apache commons unless the former does not support what you need (here you want Predicates.or) \r\n\r\nSorry, I didn't know that.  Thanks for letting me know.  I like the Google collections better anyhow :)\r\n\r\nThis patch passes all the tests, including the new TableTest ones that exercise bitmask matching.\r\n\r\nPlease note the TableTest.assertColumns() changes. I think they are an improvement but am OK with making them for bitmasks only.  The problem is that assertColumns() will print the toString() version of the column which doesn't contain the name so it's a bit confusing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-17T21:23:43.447+0000","updated":"2010-02-17T21:24:08.521+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12835220","id":"12835220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"I forgot to mention that my earlier comments about the row cache problems are no longer valid.  I'm not sure which ticket fixed it, but I no longer need to flush the row cache now to pass the second stage of the bitmask tests in TableTest.  Excellent.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-18T14:27:21.366+0000","updated":"2010-02-18T14:27:21.366+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12838350","id":"12838350","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"marking as Patch Submitted so it doesn't fall off review queue again","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-25T14:16:59.477+0000","updated":"2010-02-25T14:16:59.477+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12838519","id":"12838519","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"Comments:\r\n\r\n0. patch to Memtable needs rebasing, it did not apply\r\n\r\n1. In\r\n\r\nif (bitmasks != null && !bitmasks.isEmpty()) return Predicates.or(getBitmaskMatchColumnPredicate())\r\n\r\nthe .or is redundant, is it not?\r\n\r\n2. Still lots of null != reference\r\n\r\n3. Re \"it returns false now [on different byte[] length],\" matchesBitmaskString still only compares up to the min length.  (and matchesBitmask would be a better name, wouldn't it?  there are no Strings involved here)\r\n\r\n4.\r\n\r\n+//        Collection<IColumn> columns = cf == null ? new TreeSet<IColumn>() : cf.getSortedColumns();\r\n+//        List<String> L = new ArrayList<String>();\r\n\r\nlet's not commit commented-out code, please.\r\n\r\n5.\r\n\r\n+    String getMethodName()\r\n\r\nJust hardcode a row name, this is more obfuscatory than helpful.\r\n\r\n6.\r\n\r\n+        assert Arrays.equals(la, columnNames)\r\n+                : \"Columns [\" + ((cf == null) ? \"\" : cf.getComparator().getColumnsString(columns)) + \"(as string: \" + lasb.t\r\n+                  + \" is not expected [\" + StringUtils.join(columnNames, \",\") + \"] (bitmasks \" + SliceFromReadCommand.getBit\r\n\r\nplease use String.format for monsters like this :)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-02-25T20:18:16.595+0000","updated":"2010-02-25T20:18:16.595+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12838904","id":"12838904","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":">0. patch to Memtable needs rebasing, it did not apply\r\ndone\r\n\r\n>1. return Predicates.or(getBitmaskMatchColumnPredicate()) the .or is redundant, is it not?\r\nyes, it was a remainder from a refactoring (you can see the .or() lower)\r\n\r\n>2. Still lots of null != reference\r\ndone\r\n\r\n>3. Re \"it returns false now [on different byte[] length],\" matchesBitmaskString still only compares up to the min length. (and matchesBitmask would be a better name, wouldn't it? there are no Strings involved here)\r\nI had that fixed but somehow missed it in the patch.  Renamed as well.\r\n\r\n>4.let's not commit commented-out code, please.\r\ndone\r\n\r\n>5.Just hardcode a row name, this is more obfuscatory than helpful.\r\nat least the tests should not use numeric row names, I think...  Much easier to track test issues.  Done in any case.\r\n\r\n>6.please use String.format for monsters like this :)\r\ndone","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-02-26T15:38:01.496+0000","updated":"2010-02-26T15:38:01.496+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12840813","id":"12840813","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"+    public static boolean matchesBitmask(byte[] bitmask, byte[] name)\r\n+    {\r\n+        if (name == null || bitmask == null || bitmask.length != name.length) return false;\r\n\r\ndon't use \" == null checks\" for never-supposed-to-happen conditions.  use asserts.\r\n\r\nput the stmt part of \"if (cond) stmt\" on a separate line from the if, there's a lot of those here.\r\n\r\nother than that, +1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-03-03T19:12:28.702+0000","updated":"2010-03-03T19:12:28.702+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12840831","id":"12840831","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"body":"Fixed the one-line if statements I saw, sorry if I missed any.  Plus I fixed another \"null == x\" use :)\r\n\r\nAdded assert in matchesBitmask() but the other places could get nulls in normal use so I left as is.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tzz","name":"tzz","emailAddress":"tzz at lifelogs dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Zlatanov","active":true},"created":"2010-03-03T19:33:49.051+0000","updated":"2010-03-03T19:33:49.051+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12840950","id":"12840950","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"committed.\r\n\r\nmade some minor changes, including making the bitmask use min(mask length, name length) for the compare as you had originally.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-03-03T23:40:58.479+0000","updated":"2010-03-03T23:40:58.479+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12455322/comment/12841215","id":"12841215","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"body":"Integrated in Cassandra #372 (See [http://hudson.zones.apache.org/hudson/job/Cassandra/372/])\r\n    add optional bitmask matching to SliceRange.  patch by Ted Zlatanov; reviewed by jbellis for \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"created":"2010-03-04T12:39:21.230+0000","updated":"2010-03-04T12:39:21.230+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-764/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0g0xj:"}}