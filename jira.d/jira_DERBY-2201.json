{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12359485","self":"https://issues.apache.org/jira/rest/api/latest/issue/12359485","key":"DERBY-2201","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-10-15 17:48:38.549","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22941","customfield_12310222":"1_*:*_1_*:*_76817705163_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-06-04T14:55:11.163+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2201/watchers","watchCount":0,"isWatching":false},"created":"2006-12-28T12:40:06.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"7.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12320806","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12320806","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12399289","key":"DERBY-3744","self":"https://issues.apache.org/jira/rest/api/2/issue/12399289","fields":{"summary":"User-coded functions can't return Blob or Clob because these raise connection-killing errors in the byte-code compiler","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12322788","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12322788","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12395004","key":"DERBY-3652","self":"https://issues.apache.org/jira/rest/api/2/issue/12395004","fields":{"summary":"Derby does not follow the SQL Standard when trying to map SQL routines to Java methods.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12322612","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12322612","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"inwardIssue":{"id":"12333102","key":"DERBY-1285","self":"https://issues.apache.org/jira/rest/api/2/issue/12333102","fields":{"summary":"Finish JDBC3 Blob implementation","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-02T02:29:19.162+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"Calling functions that return Blob/Clob results in NoSuchMethodException (See stackTrace below).  It fails because DataValueFactory.getClobDataValue(Clob, StringDataValue) does not exist.  However,  getClobDataValue(String, StringDataValue) exists.  I will attach program to repro this.\n\njava.lang.NoSuchMethodException: org.apache.derby.iapi.types.DataValueFactory.getClobDataValue(java.sql.Clob, org.apache.derby.iapi.types.StringDataValue)        at java.lang.Class.getDeclaredMethod(Class.java:1909)\n        at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethod(d_BCValidate.java:133)\n        at org.apache.derby.impl.services.bytecode.BCMethod.callMethod(BCMethod.java:745)\n        at org.apache.derby.impl.sql.compile.BaseTypeCompiler.generateDataValue(BaseTypeCompiler.java:135)\n        at org.apache.derby.impl.sql.compile.ExpressionClassBuilder.generateDataValue(ExpressionClassBuilder.java:918)\n        at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpression(JavaToSQLValueNode.java:179)\n        at org.apache.derby.impl.sql.compile.CastNode.generateExpression(CastNode.java:884)\n        at org.apache.derby.impl.sql.compile.SQLToJavaValueNode.generateSQLValue(SQLToJavaValueNode.java:361)\n        at org.apache.derby.impl.sql.compile.SQLToJavaValueNode.generateExpression(SQLToJavaValueNode.java:341)\n        at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpression(JavaToSQLValueNode.java:176)\n        at org.apache.derby.impl.sql.compile.ResultColumn.generateExpression(ResultColumn.java:884)\n        at org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ResultColumnList.java:1097)\n        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1516)\n        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1303)\n        at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generate(ScrollInsensitiveResultSetNode.java:110)\n        at org.apache.derby.impl.sql.compile.CursorNode.generate(CursorNode.java:565)\n        at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:333)\n        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:447)\n        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:741)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.<init>(EmbedPreparedStatement.java:129)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.<init>(EmbedPreparedStatement20.java:83)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.<init>(EmbedPreparedStatement30.java:63)\n        at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Driver30.java:93)\n        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:742)\n        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:586)\n        at lobtests.ClobFunction.main(ClobFunction.java:87)\nInvalid method org.apache.derby.iapi.types.DataValueFactory >> org.apache.derby.iapi.types.StringDataValue getClobDataValue(java.sql.Clob, org.apache.derby.iapi.types.StringDataValue) because java.lang.NoSuchMethodException: org.apache.derby.iapi.types.DataValueFactory.getClobDataValue(java.sql.Clob, org.apache.derby.iapi.types.StringDataValue)\njava.sql.SQLException: Java exception: 'ASSERT FAILED Invalid method org.apache.derby.iapi.types.DataValueFactory >> org.apache.derby.iapi.types.StringDataValue getClobDataValue(java.sql.Clob, org.apache.derby.iapi.types.StringDataValue) because java.lang.NoSuchMethodException: org.apache.derby.iapi.types.DataValueFactory.getClobDataValue(java.sql.Clob, org.apache.derby.iapi.types.StringDataValue): org.apache.derby.shared.common.sanity.AssertFailure'.\norg.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED Invalid method org.apache.derby.iapi.types.DataValueFactory >> org.apache.derby.iapi.types.StringDataValue getClobDataValue(java.sql.Clob, org.apache.derby.iapi.types.StringDataValue) because java.lang.NoSuchMethodException: org.apache.derby.iapi.types.DataValueFactory.getClobDataValue(java.sql.Clob, org.apache.derby.iapi.types.StringDataValue)\n        at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:149)\n        at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethod(d_BCValidate.java:192)\n        at org.apache.derby.impl.services.bytecode.BCMethod.callMethod(BCMethod.java:745)\n        at org.apache.derby.impl.sql.compile.BaseTypeCompiler.generateDataValue(BaseTypeCompiler.java:135)\n        at org.apache.derby.impl.sql.compile.ExpressionClassBuilder.generateDataValue(ExpressionClassBuilder.java:918)\n        at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpression(JavaToSQLValueNode.java:179)\n        at org.apache.derby.impl.sql.compile.CastNode.generateExpression(CastNode.java:884)\n        at org.apache.derby.impl.sql.compile.SQLToJavaValueNode.generateSQLValue(SQLToJavaValueNode.java:361)\n        at org.apache.derby.impl.sql.compile.SQLToJavaValueNode.generateExpression(SQLToJavaValueNode.java:341)\n        at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpression(JavaToSQLValueNode.java:176)\n        at org.apache.derby.impl.sql.compile.ResultColumn.generateExpression(ResultColumn.java:884)\n        at org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ResultColumnList.java:1097)\n        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1516)\n        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1303)\n        at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generate(ScrollInsensitiveResultSetNode.java:110)\n        at org.apache.derby.impl.sql.compile.CursorNode.generate(CursorNode.java:565)\n        at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:333)\n        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:447)\n        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:741)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.<init>(EmbedPreparedStatement.java:129)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.<init>(EmbedPreparedStatement20.java:83)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.<init>(EmbedPreparedStatement30.java:63)\n        at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Driver30.java:93)\n        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:742)\n        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:586)\n        at lobtests.ClobFunction.main(ClobFunction.java:87)\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37008","summary":"Calling functions that return Blob/Clob does not work.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10102","value":"Patch Available","id":"10102"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Derby, head of trunk. Sun JVM 5. Solaris 10 (x86).","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":25,"total":25,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12461185","id":"12461185","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"This program reproduces the problem for Clob.  Similar problems exists for Blob.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2006-12-28T12:42:08.000+0000","updated":"2006-12-28T12:42:08.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12461187","id":"12461187","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"I tried defining getBlobDataValue/getClobDataValue that takes a Blob/Clob parameter instead of a String (see attached getClobDataValue.diff), but then the repro fails because getObject is not implemented for SQLBlob/SQLClob:\r\n\r\njava.sql.SQLException: An attempt was made to get a data value of type 'java.lang.Object' from a data value of type 'CLOB'.\r\nERROR 22005: An attempt was made to get a data value of type 'java.lang.Object' from a data value of type 'CLOB'.\r\n        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:316)\r\n        at org.apache.derby.iapi.types.DataType.dataTypeConversion(DataType.java:1038)\r\n        at org.apache.derby.iapi.types.SQLClob.getObject(SQLClob.java:141)\r\n        at org.apache.derby.exe.ac07170079x010fxc918x10adx0000001741881.e1(Unknown Source)\r\n        at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:141)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjection(ProjectRestrictResultSet.java:488)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:292)\r\n        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:475)\r\n        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:440)\r\n        at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:384)\r\n        at lobtests.ClobFunction.main(ClobFunction.java:89)\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2006-12-28T12:54:29.000+0000","updated":"2006-12-28T12:54:29.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12461970","id":"12461970","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"If nobody has the itch to fix this for the next release, I feel we should disallow creating functions that return Blob/Clob.  I do not think it makes sense to allow a definition if the functions can never be successfully called.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-01-03T14:49:47.615+0000","updated":"2007-01-03T14:49:47.615+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12534913","id":"12534913","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I think this should be marked improvement not bug.  \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-10-15T17:48:38.549+0000","updated":"2007-10-15T17:48:38.549+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12535213","id":"12535213","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"I think it is a bug that you are able to create such functions, but not to call them.  Either this should be fixed, or you should get an error when attempting to create a function that returns a Blob/Clob.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2007-10-16T09:51:58.773+0000","updated":"2007-10-16T09:51:58.773+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12670112","id":"12670112","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Attaching derby-2201-aa-01-crudeDog.diff. This patch allows functions to return Blob and Clob values. This is incremental improvement and may be adequate for small values. The implementation will be slow for large LOBs, however. That is because the contents of the LOBs are materialized into memory. For large LOBs we may consider building stream support.\r\n\r\nThe bug arises because two bits of the code path for LOBs were not implemented:\r\n\r\n1) DataValueFactory was missing overloads for the methods which re-use existing LOB holders as you advance through the rows of a ResultSet. This is the stack trace recorded above. Addressed in this patch by implementing the missing overloads, crudely materializing LOBs into memory.\r\n\r\n2) Once (1) was patched, a new problem arose because the refined getObject() methods for the LOB data values were not implemented. This was addressed by making SQLBlob and SQLClob be implementations of java.sql.Blob and java.sql.Clob respectively and by making the objects return themselves when getObject() is called.\r\n\r\n\r\nTouches the following files:\r\n\r\nM      java/engine/org/apache/derby/iapi/types/DataValueFactoryImpl.java\r\nM      java/engine/org/apache/derby/iapi/types/DataValueFactory.java\r\n\r\nAddresses (1).\r\n\r\n\r\nM      java/engine/org/apache/derby/iapi/types/DataType.java\r\nM      java/engine/org/apache/derby/iapi/types/SQLBlob.java\r\nM      java/engine/org/apache/derby/iapi/types/SQLClob.java\r\n\r\nAddresses (2).\r\n\r\n\r\nM      java/testing/org/apache/derbyTesting/functionTests/tests/lang/AnsiSignaturesTest.java\r\n\r\nUncommented the tests for functions which return LOBs.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-03T21:09:14.994+0000","updated":"2009-02-03T21:09:14.994+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12670114","id":"12670114","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Running regression tests now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-03T21:09:49.069+0000","updated":"2009-02-03T21:09:49.069+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12670286","id":"12670286","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks for looking into this, Rick.\r\n\r\nAt first sight, I have to say that I don't like what is done to the SQLBlob/SQLClob classes. In my opinion these classes are already complex enough, and with the change we're also implementing java.sql.[BC]lob in several places. History has shown us that dealing with LOBs is difficult to get right [in Derby]; freeing resources / cleanup, materialization and performance.\r\n\r\nIs the DVD returned to the user as a java.sql.[BC]lob? If so, I suggest that we consider to create a proper Blob/Clob object instead of returning the DVD. Quite a lot of effort has been put into the relevant classes.\r\nTo make the getObject-method return either EmbedBlob or EmbedClob, we need a reference to the connection. Is there a way we can obtain it?\r\n\r\nIf creating EmbedBlob/-Clob isn't feasible, I think two rather simple classes implementing Blob/Clob can be written and instantiated from the DVD. Both of these will do their work off char[]/String or byte[]. As soon as we start working with source streams, my preference is to use the existing LOB classes. Even in the simplest case, I'm sure there will be pitfalls related to updates and cleanup/closing.\r\n\r\nAlso, are any special considerations required for LOBs in this context?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-02-04T09:25:06.725+0000","updated":"2009-02-04T09:25:06.725+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12670340","id":"12670340","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks for the quick feedback, Kristian.\r\n\r\nThis new kind of java.sql.[BC]ob is never returned to the user. Having a SQL[BC]lob return an Embed[BC]lob feels to me like a layering violation for two reasons:\r\n\r\n1) it would mean that an iapi package would be reaching into an impl package\r\n\r\n2) it would mean that the internal datatype layer would be reaching up into the JDBC layer, inverting the normal layering of these components\r\n\r\nWe could create vacuous implementations of java.sql.[BC]lob in the iapi package next to SQL[BC]lob. Let's call them [BC]lobImpl. A  [BC]lobImpl would wrap the byte or stream contents of a SQL[BC]lob, either by being constructed from the bytes or streams or by simply forwarding its methods to the SQL[BC]lob. That might be easier to understand than having SQL[BC]lob implement java.sql.[BC]lob.\r\n\r\nYour point about the complexity of writing another implementation of java.sql.[BC]lob is well founded. Writing a vacuous implementation of java.sql.[BC]lob is easy--but as you know better than anyone else, handling the streaming methods is very hard.\r\n\r\nIn this particular code path, I think that SQL[BC]lob.getObject() should not return a SQL[BC]lob or an Embed[BC]lob but rather a User[BC]lob, where the User[BC]lob is what's returned by the user-defined function. That is, the nesting/wrapping of these classes should be:\r\n\r\n   Embed[BC]lob\r\n   (\r\n       SQL[BC]lob\r\n       (\r\n            User[BC]lob\r\n       )\r\n   )\r\n\r\nI tried to get this to work a couple months ago, but my User[BC]lob kept getting lost in the SQLBinary pinball machine. I will put some more effort into this approach.\r\n\r\nFor the record, the tests ran cleanly for me.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-04T14:51:51.772+0000","updated":"2009-02-04T14:51:51.772+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12670748","id":"12670748","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks for the extra information, Rick.\r\n\r\nI have to admit, I still don't understand the problem at hand here.\r\nCan you briefly say in which situations the object returned by SQLClob.getObject() can/will be used?\r\nIs it read-only, or can it be modified?\r\nWhat is the life-time of the object?\r\nDoes the data in the DVD (that implements getObject()) come from the user/function or Derby? Or can it be both?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-02-05T13:19:52.456+0000","updated":"2009-02-05T13:19:52.456+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12670750","id":"12670750","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Hi Kristian,\r\n\r\nHere's some more context on the problem:\r\n\r\n>Can you briefly say in which situations the object returned by SQLClob.getObject() can/will be used?\r\n\r\nThe data can be used anywhere that you can use the return value of a user-defined function. It is possible that there are other contexts but I don't know what they are. Since the current effect of calling this method is that Derby raises a coercion exception today, those use cases would be hidden behind coercion exceptions.\r\n\r\n>Is it read-only, or can it be modified?\r\n\r\nIn the use cases I understand (function return values), the data is read-only.\r\n\r\n>What is the life-time of the object?\r\n\r\nIt depends on what the object is. If the object is a SQLClob (as in this patch), then it is a transient, internal object which disappears at the end of the query.\r\n\r\nIf, however, the object is the UserClob (a solution I am experimenting with now), then the object's lifetime is determined by the application.\r\n\r\n>Does the data in the DVD (that implements getObject()) come from the user/function or Derby? Or can it be both? \r\n\r\nThe data in the DVD comes out of the Clob returned by the user-defined function. The function, of course, could have gotten the data from anywhere.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-05T13:47:42.548+0000","updated":"2009-02-05T13:47:42.548+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12670917","id":"12670917","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Attaching derby-2201-02-aa-wrapUserLob.diff. This is a second approach to the problem. In this patch, SQL[BC]lob.getObject() return the [BC]lob instantiated by the user-defined function. When writing LOBs to this store, this approach takes advantage of the stream api on the user [BC]lob in order to stream the user data into the store--I expect that this approach will perform better on large LOBs.\r\n\r\nItem (1) from the previous patch remains unchanged.\r\n\r\nItem (2) is replaced with\r\n\r\n2') Previously SQL[BC]lob could contain the data as a raw array of bytes/chars, a string, or as a stream attached to Derby's on-disk storage of the value. With this patch, SQL[BC]lob can contain the data in yet another form, namely as a java.sql.[BC]lob.\r\n\r\nI'm running regression tests now. I will write additional tests.\r\n\r\nGiven the following script, during the final insert, this approach should cause SQL[BC]lob to stream data out of the [BC]lob returned by the user-defined functions and directly into the store. That is, this approach should not materialize the [BC]lobs in memory on the way to writing them to disk.\r\n\r\ndrop function \"blob_Blob_String\";\r\ncreate function \"blob_Blob_String\"\r\n(\r\n\ta_0 varchar( 10 )\r\n)\r\nreturns blob\r\nlanguage java\r\nparameter style java\r\nno sql\r\nexternal name 'org.apache.derbyTesting.functionTests.tests.lang.AnsiSignatures.blob_Blob_String'\r\n;\r\ndrop function \"clob_Clob_String\";\r\ncreate function \"clob_Clob_String\"\r\n(\r\n\ta_0 varchar( 10 )\r\n)\r\nreturns clob\r\nlanguage java\r\nparameter style java\r\nno sql\r\nexternal name 'org.apache.derbyTesting.functionTests.tests.lang.AnsiSignatures.clob_Clob_String'\r\n;\r\ndrop table t;\r\ncreate table t( a clob, b blob );\r\n\r\ninsert into t( a, b ) values( \"clob_Clob_String\"( 'abc' ), \"blob_Blob_String\"( 'abc' ) );\r\n\r\n\r\n\r\nTouches the following files:\r\n\r\nM      java/engine/org/apache/derby/iapi/types/DataValueFactoryImpl.java\r\nM      java/engine/org/apache/derby/iapi/types/DataValueFactory.java\r\n\r\nAs in the previous patch, the changes above implement (1).\r\n\r\n\r\nM      java/engine/org/apache/derby/iapi/types/BitDataValue.java\r\nM      java/engine/org/apache/derby/iapi/types/SQLBinary.java\r\nM      java/engine/org/apache/derby/iapi/types/SQLBlob.java\r\n\r\nThe changes above implement (2') for Blobs. That is, binary data types can now hold the user data as a java.sql.Blob as well as the old forms (byte array and Derby storage stream).\r\n\r\n\r\nM      java/engine/org/apache/derby/iapi/types/StringDataValue.java\r\nM      java/engine/org/apache/derby/iapi/types/SQLChar.java\r\nM      java/engine/org/apache/derby/iapi/types/SQLVarchar.java\r\nM      java/engine/org/apache/derby/iapi/types/SQLClob.java\r\n\r\nThe changes above implement (2') for Clobs. That is, string data types can now hold the user data as a java.sql.Clob as well as the old forms of char array, String, and Derby storage stream.\r\n\r\n\r\nM      java/testing/org/apache/derbyTesting/unitTests/store/T_Recovery.java\r\n\r\nSmall change to disambiguate the new SQLChar( Clob ) constructor from the SQLChar( String ) constructor.\r\n\r\n\r\nM      java/testing/org/apache/derbyTesting/functionTests/tests/lang/AnsiSignaturesTest.java\r\n\r\nUncomments some tests which were introduced by DERBY-3652 but which had to be commented out because of this bug.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-05T21:59:43.320+0000","updated":"2009-02-05T21:59:43.320+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12671145","id":"12671145","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Regression tests passed cleanly for me except for the heisenbug in the stress multi tests.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-06T14:28:52.550+0000","updated":"2009-02-06T14:28:52.550+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12671219","id":"12671219","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I had a very quick look at the patch, and have one initial comment. However, I plan to take a better look next week.\r\nMy comment is regarding the Clob part of the patch;\r\n o Do you have to push the Clob into SQLVarchar and SQLChar?\r\n o How many methods do you have to override in SQLClob if you make the java.sql.Clob part of the SQLClob state?\r\n\r\nAnswering these questions may involve some work, but I thought I'd ask them now anyway :)\r\nMy motivation from asking is the assumption that only SQLClob will be instantiated with a java.sql.Clob as the source. If that is not the case, maybe SQLChar and SQLVarchar should have special methods that materialize the source, which should be acceptable due to their limited maximum size.\r\nThere is already some Clob specific code in SQLChar, but they were introduced to avoid making the state in SQLChar directly available to its subclasses.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-02-06T17:58:29.756+0000","updated":"2009-02-06T17:58:29.756+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12671233","id":"12671233","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks for taking a look at the patch, Kristian. I think that the Clob state should be parked in SQLChar next to the other kinds of state. It ought to be possible to construct a CHAR or VARCHAR from a Clob. It is certainly possible to cast between those types and CLOB.\r\n\r\nParking the Clob in SQLClob would involve overriding the following methods:\r\n\r\nsetStream()\r\ngetObject()\r\ngetLength()\r\ngetString()\r\nisNull()\r\nwriteClobUTF()\r\ncloneObject()\r\nsetFrom()\r\ncopyState()\r\n\r\nThanks,\r\n-Rick\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-06T18:31:16.225+0000","updated":"2009-02-06T18:31:16.225+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12671844","id":"12671844","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I agree it it possible to cast between CHAR/VARCHAR and Clob, and that constructing one of these from a CLOB is / should be possible. That, however, doesn't mean that it should be represented internally as a java.sql.Clob.\r\nFor instance, since a CHAR has a maximum size of 255 characters,  the Clob value could be read and then stored in the SQLChar object as a string. I admit it's not as clear-cut for VARCHAR.\r\nUsing the same code to deal with CHAR and CLOB has caused lots of problems in the past, because the maximum length of these values differ so much.\r\n\r\nWhere will the new constructors and the new setValue(Clob) be used? Is it only in the case of functions, and for SQLClob?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-02-09T13:12:34.167+0000","updated":"2009-02-09T13:12:34.167+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12671854","id":"12671854","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Should the position arguments in the code below be 1L instead of 0L?\r\n\r\n+                try {\r\n+                    value = _clobValue.getSubString( 0L, getClobLength() );\r\n+                    _clobValue = null;\r\n+                }\r\n\r\nand\r\n\r\n+\t\t\tif ((dataValue == null) && (_blobValue != null) )\r\n+            {\r\n+                dataValue = _blobValue.getBytes( 0L,  getBlobLength() );\r\n\r\n\r\nI see that SQLBinary.estimateMemoryUsage() was updated. Should SQLChar.estimateMemoryUsage() be updated too?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-02-09T13:38:40.771+0000","updated":"2009-02-09T13:38:40.771+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12672327","id":"12672327","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks for the feedback, Kristian and Knut. Here are some responses. I will post a revised patch which addresses your comments.\r\n\r\n> Should the position arguments in the code below be 1L instead of 0L? \r\n\r\nThanks for catching that.\r\n\r\n> I see that SQLBinary.estimateMemoryUsage() was updated. Should SQLChar.estimateMemoryUsage() be updated too? \r\n\r\nThanks for noticing that asymmetry. After mulling this over further, I came to the conclusion that if the data is really in a user Clob or Blob, then the space is already allocated. It would be wrong to increase the estimated memory by the length of the Lob because we intend to use the streaming api if we can. So I have removed the changes to SQLBinary.estimateMemoryUsage().\r\n\r\n> Where will the new constructors and the new setValue(Clob) be used? Is it only in the case of functions, and for SQLClob? \r\n\r\nThanks for raising this question. It caused me to go through the code and find that, due to some short-circuiting in the pinball machine, we were not taking advantage of the streaming apis. It has taken me a while to get back to you because this is tricky code to debug. I had to decompile the generated code and prune it back so that I could see the forest instead of the trees--a painstaking process.\r\n\r\nThese methods will be invoked in SQL statements which invoke Lob-returning functions. I don't know of other cases but I can't promise that they don't exist. Today, those other cases would raise the compiler errors seen in this bug.\r\n\r\nHere, for instance, is a case in which the compiler will generate code which stuffs a user Clob into a SQLVarchar. The final INSERT statement generates that code:\r\n\r\ncreate function \"clob_Clob_String\"\r\n(\r\n\ta_0 varchar( 10 )\r\n)\r\nreturns clob\r\nlanguage java\r\nparameter style java\r\nno sql\r\nexternal name 'org.apache.derbyTesting.functionTests.tests.lang.AnsiSignatures.clob_Clob_String'\r\n;\r\ncreate table t2( a varchar( 32000 ) );\r\ninsert into t2( a ) values( cast( \"clob_Clob_String\"( 'abc' ) as varchar( 32000)) );\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-10T17:27:01.532+0000","updated":"2009-02-10T17:27:01.532+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12672329","id":"12672329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Attaching derby-2201-02-ac-wrapUserLob.diff. This is the derby-2201-02-aa-wrapUserLob.diff patch with the following improvements, discussed in the previous comment:\r\n\r\nA) 0L changed to 1L in the getSubString() and getBytes() calls.\r\n\r\nB) Removed changes to SQLBinary.estimateMemoryUsage().\r\n\r\nC) Removed the short-circuiting which prevented us from using the streaming apis when serializing SQLClobs which contain user Clobs.\r\n\r\nD) Adjusted the serialization of SQLVarchar to use the streaming apis when the payload is a user Clob.\r\n\r\nI need to run the regression tests now.\r\n\r\n\r\nTouches the following additional file:\r\n\r\nM      java/testing/org/apache/derbyTesting/functionTests/tests/lang/StringColumnVTI.java\r\n\r\nThe dummy [BC]lob implementations in this class were coded to use 0-based indexing rather than 1-based indexing. This is why the tests did not catch problem (A). I have corrected Clob.getSubString() and Blob.getBytes() to use 1-based indexing.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-10T17:42:21.710+0000","updated":"2009-02-10T17:42:21.710+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12673040","id":"12673040","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"The previous patch produced errors in the following tests:\r\n\r\n  org.apache.derbyTesting.functionTests.tests.lang.triggerGeneral.sql\r\n  org.apache.derbyTesting.functionTests.tests.lang.TriggerTest\r\n  org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest\r\n\r\nI have tracked the errors down to the fix for short-circuiting (item (C) above) which I introduced in the previous patch. It appears that when setting the width of a Derby Clob which is attached to a Store stream, we rely on the following side-effect of SQLChar.setWidth(): this method throws away the Store stream and materializes a string payload for the SQLChar. This, in turn, is a side-effect of SQLChar.getString().\r\n\r\nThe latter side-effect was the root cause of the short-circuiting described above. I am not thrilled by this side-effect and I suspect that it gives rise to other inefficiencies and bugs. However, removing the side-effect falls outside the scope of this JIRA.\r\n\r\nAttaching a new version of the patch which takes this subtlety into account: derby-2201-02-ad-wrapUserLob.diff.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-12T20:11:16.663+0000","updated":"2009-02-12T20:11:16.663+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12673254","id":"12673254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Tests passed cleanly for me on derby-2201-02-ad-wrapUserLob.diff except for a heisenbug in the JMX tests (NetworkServerMBeanTest):\r\n\r\n1) testAttributeAccumulatedConnectionCount(org.apache.derbyTesting.functionTests.tests.management.NetworkServerMBeanTest)java.security.PrivilegedActionException: javax.management.InstanceNotFoundException: org.apache.derby:type=NetworkServer,system=c013800d-011f-6c92-dc68-ffffe1d7aa3e\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat org.apache.derbyTesting.functionTests.tests.management.MBeanTest.getAttribute(MBeanTest.java:379)\r\n\tat org.apache.derbyTesting.functionTests.tests.management.NetworkServerMBeanTest.testAttributeAccumulatedConnectionCount(NetworkServerMBeanTest.java:93)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\nCaused by: javax.management.InstanceNotFoundException: org.apache.derby:type=NetworkServer,system=c013800d-011f-6c92-dc68-ffffe1d7aa3e\r\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1010)\r\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:627)\r\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:659)\r\n\tat org.apache.derbyTesting.functionTests.tests.management.MBeanTest$4.run(MBeanTest.java:382)\r\n\t... 41 more\r\n\r\nFAILURES!!!\r\nTests run: 9425,  Failures: 0,  Errors: 1\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-13T14:20:52.185+0000","updated":"2009-02-13T14:20:52.185+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12674322","id":"12674322","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Committed derby-2201-02-ad-wrapUserLob.diff at subversion revision 745202.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-17T19:25:05.814+0000","updated":"2009-02-17T19:25:05.814+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12675374","id":"12675374","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Attaching patch which adds more tests for functions which return lobs: derby-2201-03-aa-moreTests.diff. Committed at subversion revision 746245. Touches the following files:\r\n\r\nA      java/testing/org/apache/derbyTesting/functionTests/tests/lang/UserLobTest.java\r\nM      java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-02-20T14:16:30.412+0000","updated":"2009-02-20T14:16:30.412+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12716293","id":"12716293","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Looks to me like this one is resolved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-06-04T14:55:11.128+0000","updated":"2009-06-04T14:55:11.128+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12359485/comment/12871134","id":"12871134","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Closing issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-05-25T13:18:43.623+0000","updated":"2010-05-25T13:18:43.623+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2201/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06p5b:"}}