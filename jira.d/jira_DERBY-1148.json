{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12330637","self":"https://issues.apache.org/jira/rest/api/latest/issue/12330637","key":"DERBY-1148","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-04-28 02:35:27.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22336","customfield_12310222":"1_*:*_1_*:*_6097297000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_45000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-06-02T23:26:20.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1148/watchers","watchCount":0,"isWatching":false},"created":"2006-03-24T09:44:43.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"13.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12312625","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12312625","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"outwardIssue":{"id":"12329365","key":"DERBY-1035","self":"https://issues.apache.org/jira/rest/api/2/issue/12329365","fields":{"summary":"With client, Connection.getTransactionIsolation() return value is wrong after changing the isolation level with an SQL statement such as \"set current isolation = RS\"","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12312513","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12312513","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12334191","key":"DERBY-1325","self":"https://issues.apache.org/jira/rest/api/2/issue/12334191","fields":{"summary":"Isolation level of local connection does not get reset after exiting a global transaction if the isolation level was changed using SQL","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12314166","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12314166","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12355583","key":"DERBY-2084","self":"https://issues.apache.org/jira/rest/api/2/issue/12355583","fields":{"summary":"getTransactionIsolation() in network client should not activate a transaction","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2006-11-14T13:27:08.000+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11690","id":"11690","name":"Network Client"}],"timeoriginalestimate":null,"description":"When rejoining a global transaction, client does not report the correct isolation level with a \ngetTransactionIsolation().    The server side isolation should be ok I think.\n\nThis was discovered when testing the fix for DERBY-1044.  After the fix for DERBY-1044, there is a new diff in the test, but the fix for DERBY-1044 just exposed this issue.  The output for the test was correct before by circumstance.\n\nI will put comments with this bug in checkDataSource test.\n\n// now re-join the transaction, should pick up the read-only\n// and isolation level from the transaction,\n// holdability remains that of this handle.\nxar.start(xid, XAResource.TMJOIN);\nprintState(\"re-join X1\", cs1);\nxar.end(xid, XAResource.TMSUCCESS);\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"40292","summary":"Client XA getTransactionIsolation()   does not return the correct isolation level when rejoining a global transaction","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":13,"total":13,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12376788","id":"12376788","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Kathey mentioned the problem could be in reporting of isolation level by client.  So I was trying to check that the isolation level at the server is correct. To check this, I created a smaller repro (XACheckIsolation.java) with a part of the checkDataSource test. In the test, I added calls to a stored procedure which checks the isolation level of a nested connection. From the results, it seems to me the server-side isolation is correct when rejoining a global transaction. It is only the return value of getTransactionIsolation in client driver which is wrong. However, the switch from global back to local does not seem to restore the isolation level in the server. Here are the outputs of running the attached repro. I have added my comments starting with ----> as to what I think the problem is:\r\n\r\n---------------------------------------------------------------------------------------------------------------------------------------\r\nWith client driver:\r\n---------------------------------------------------------------------------------------------------------------------------------------\r\ninitial local\r\n  isolation level: READ_COMMITTED\r\ninitial  X1\r\n  isolation level: READ_COMMITTED\r\nmodified X1\r\n  isolation level: READ_UNCOMMITTED\r\nmodified local\r\n  isolation level: READ_UNCOMMITTED\r\nreset local\r\n  isolation level: READ_COMMITTED\r\nre-join X1\r\n  isolation level: READ_COMMITTED   ----> This is wrong. But isolation level in the server is correct.\r\nback to local (same as reset)\r\n  isolation level: READ_COMMITTED\r\n\r\n---------------------------------------------------------------------------------------------------------------------------------------\r\nCorresponding server-side isolation (with client driver):\r\n---------------------------------------------------------------------------------------------------------------------------------------\r\n  isolation level in procedure: READ_COMMITTED\r\n  isolation level in procedure: READ_COMMITTED\r\n  isolation level in procedure: READ_UNCOMMITTED\r\n  isolation level in procedure: READ_UNCOMMITTED\r\n  isolation level in procedure: READ_COMMITTED\r\n  isolation level in procedure: READ_UNCOMMITTED\r\n  isolation level in procedure: READ_UNCOMMITTED   ----> This is wrong.\r\n\r\n---------------------------------------------------------------------------------------------------------------------------------------\r\nOutput with embedded driver (for reference):\r\n---------------------------------------------------------------------------------------------------------------------------------------\r\ninitial local\r\n  isolation level: READ_COMMITTED\r\n  isolation level in procedure: READ_COMMITTED\r\ninitial  X1\r\n  isolation level: READ_COMMITTED\r\n  isolation level in procedure: READ_COMMITTED\r\nmodified X1\r\n  isolation level: READ_UNCOMMITTED\r\n  isolation level in procedure: READ_UNCOMMITTED\r\nmodified local\r\n  isolation level: READ_UNCOMMITTED\r\n  isolation level in procedure: READ_UNCOMMITTED\r\nreset local\r\n  isolation level: READ_COMMITTED\r\n  isolation level in procedure: READ_COMMITTED\r\nre-join X1\r\n  isolation level: READ_UNCOMMITTED\r\n  isolation level in procedure: READ_UNCOMMITTED\r\nback to local (same as reset)\r\n  isolation level: READ_COMMITTED\r\n  isolation level in procedure: READ_COMMITTED\r\n---------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nFrom the test, I think there are two problems:\r\n1. Isolation level reported by client driver is wrong. This seems to be because of the disconnect between the connection object states in the client and the server.\r\n2. With client driver, when switching from global to local transaction, the isolation level does not get restored at the server.\r\n\r\nI would appreciate if someone can go through the attached test and outputs and tell me if I have understood this correctly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-04-28T02:35:27.000+0000","updated":"2006-04-28T02:35:27.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12376971","id":"12376971","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Currently, I am using what is implemented in embedded driver as my reference. JDBC 3.0 standard mentions this: \"Applications should also refrain from calling Connection.setTransactionIsolation within the bounds of a distributed transaction. The resulting behavior is implementation-defined.\". I could not find any documentation which describes the Derby implementation. Is this documented at some place? If not, I plan to write up the behaviour referring to what is done in the embedded driver.\r\n\r\nIn my previous comment, I had identified two problems which I am restating (with some additions) as follows:\r\n\r\n1. Isolation level reported by client driver is wrong in some cases. This seems to be because of the disconnect between the connection object states in the client and the server.\r\n2. With client driver, when switching from a global transaction (which we joined) to a local transaction, the isolation level does not get restored at the server.  In this case, the isolation level of the local transaction should be restored to what it was before joining the global transaction.\r\n\r\nAssuming I have understood the problem correctly, here is what I have done so far for problem# 1 :\r\n\r\n* Add a variable(xaTransactionIsolation_) to NetXACallInfo to store the transaction isolation level used in the distributed transaction.  \r\n\r\n*. When \"joining\" a distributed transaction, get the isolation level from the callInfo and use it to update the client connection's isolation level locally. Do not flow anything to the server since the server uses the correct isolation level. This will make sure the client reports the same isolation that is used by the server. Before updating the connection's isolation level, store it in a temporary variable so that we can use it restore the isolation level when the distributed transaction ends.\r\n\r\n*. When ending the distributed transaction, store the isolation level used in the distributed transaction in the callInfo. Restore the connection's transaction isolation only if we had changed it (when we joined the global transaction).\r\n\r\nI have run my repro with these code changes and verified that the transaction isolation reported by client in various cases is okay. I also need to understand the behaviour when we resume a suspended transaction and run more tests. I am puzzled by problem 2 and need to look at it in more detail. Meanwhile, I would appreciate any feedback on this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-04-29T00:30:17.000+0000","updated":"2006-04-29T00:30:17.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12376996","id":"12376996","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Attaching an updated repro with cases for suspend/resume of a transaction. These were also behaving wrongly with the client. I'll add these cases to checkDataSource test.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-04-29T04:17:01.000+0000","updated":"2006-04-29T04:17:01.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12383326","id":"12383326","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Problem 2 mentioned above seems to be a problem in the embedded driver and not just a client problem. I have opened DERBY-1325 for this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-05-13T06:27:23.000+0000","updated":"2006-05-13T06:27:23.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12412228","id":"12412228","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Attaching a patch 'derby-1148_v1.diff' which changes the getTransactionIsolation method in client's Connection class to get the transaction isolation from the server. This patch solves both DERBY-1148 and DERBY-1053. I found these issues are specific cases of a more general problem -----\"isolation_\" stored in client's connection object can get out of sync with the actual isolation e.g., when in an XA transaction, when isolation is set using SQL instead of JDBC. \r\n\r\nI am also attaching a repro 'SetIsolationUsingSQL.java' which shows this problem is not limited to XA. To run this repro, start network server on port 1527, and run 'java SetIsolationUsingSQL'. Without the patch, the isolation level reported by client is wrong when SQL is used to set it.\r\n\r\nIn my previous comment, I had mentioned I tried to solve this problem by trying to store the isolation used in the distributed transaction in NetXACallInfo. This solved one case but for other cases, I tried to change client's XA and did not find much success. Also, I found that this a generic problem. So the patch I am uploading takes a completely different approach.\r\n\r\nSummary of patch:\r\n\r\n* Changes getTransactionIsolation method in org.apache.derby.client.am.Connection class to get the isolation level from server. The built-in function \"CURRENT ISOLATION\" is used for this. If we do not get the isolation from the server, we return what is stored in \"isolation_\" variable. Is this okay or should we throw an exception if we do not get the isolation level from the server?\r\n\r\n* Removes the excludes for DERBY-1148 and DERBY-1035 from checkDataSource test. \r\n\r\n* Adds a test for transaction suspend/resume in checkDataSource test.\r\n\r\n*  Adds exclusions for DERBY-1325. These cases were coincidentally correct before this patch. However, the actual isolation used at server was wrong (mentioned as problem 2 in previous comments). This is fixed in DERBY-1325. I have a patch uploaded to DERBY-1325 which has become out of sync. When I upload the new patch, I will remove these exclusions and verify that problem 2 is solved. I will also upload a small write-up which summarizes the isolation level changes across transaction boundaries.\r\n\r\n* Updates master files\r\n\r\nThis patch modifies client code and the checkDataSource tests. With this patch, I have run derbynetclientmats using Sun jdk 1.4.2 on Windows XP. I have also run the changed tests jdbcapi/checkDataSource.java and jdbcapi/checkDataSource30.java in embedded framework. Please take a look at this patch and provide feedback. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-05-18T01:17:14.000+0000","updated":"2006-05-18T01:17:14.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12412233","id":"12412233","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Deepa said:\r\n>The built-in function \"CURRENT ISOLATION\" is used for this.\r\nI have a couple of concerns with this:\r\n1)  Might the  VALUES CURRENT ISOLATION statement that is called upon getTransactionIsolation()  cause a commit when autocommit is on?\r\n\r\n2) I sem to recall a problem with setTransactionIsolationStmt that it was    not null but not valid on  connection reset. But I don't see the bug or the fix. It might be good to null out this variable in closeResourcesX() in addition to closing it.\r\n\r\n\r\n>If we do not get the isolation from the server, we return what is stored in \"isolation_\" variable. \r\n\r\nUnder what circumstances would we not get the isolation from the server. Might the value stored in the isolation_ variable be wrong? If so it is better to throw an exception I think.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-05-18T02:39:14.000+0000","updated":"2006-05-18T02:39:14.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12412241","id":"12412241","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Yes, the VALUES CURRENT ISOLATION statement that is called upon getTransactionIsolation() can cause a commit when autocommit is on. Does this mean we cannot use this to get the isolation from the server?\r\n\r\nFor other comments from Kathey, I will make the changes if we decide we can use this approach. Otherwise, I will go back to my first approach which partly solves this problem. Any pointers/suggestions are welcome.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-05-18T03:13:08.000+0000","updated":"2006-05-18T03:13:08.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12412997","id":"12412997","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"As Kathey pointed out, my previous patch changes getTransactionIsolation method and will cause a commit when autocommit is on. So I am off to my first approach which solved one case where transaction isolation was wrong. I am attaching a draft patch (not for commit) 'derby-1148-draft1.diff' which does the following:\r\n\r\n* Add a variable(xaTransactionIsolation_) to NetXACallInfo to store the transaction isolation level used in the distributed transaction.\r\n\r\n*. When \"joining\" a distributed transaction, get the isolation level from the callInfo and use it to update the client connection's isolation level locally. Do not flow anything to the server since the server uses the correct isolation level. This will make sure the client reports the same isolation that is used by the server. Before updating the connection's isolation level, store it in a temporary variable so that we can use it restore the isolation level when the distributed transaction ends.\r\n\r\n*. When ending the distributed transaction, store the isolation level used in the distributed transaction in the callInfo. Restore the connection's transaction isolation only if we had changed it (when we joined the global transaction). \r\n\r\nBut it does not solve all cases in checkDataSource test. I would like to solve the general problem which is not specific to XA - \"isolation_\" stored in client's connection object can get out of sync with the actual isolation. This will solve all issues in the client driver in this area. Looking for some solution similar (but without the side effects) of what I tried in my previous patch 'derby-1148_v1.diff'. As I have'nt found any, I am going back to my first  approach which partly solves the XA problem. Any suggestions/feedback are welcome.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-05-24T04:02:08.000+0000","updated":"2006-05-24T04:02:08.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12413289","id":"12413289","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"I am attaching another patch 'derby-1148_v2.diff' which is based on proposal 2 ----  change the getTransactionIsolation method in client's Connection class to get the transaction isolation from the server. It addresses Kathey's concern of auto-commit by changing/restoring auto-commit inside the method call. \r\nI have tried to address all comments from Kathey in this patch.\r\n\r\nSummary of patch:\r\n\r\n* Changes getTransactionIsolation method in org.apache.derby.client.am.Connection class to get the isolation level from server. The built-in function \"CURRENT ISOLATION\" is used for this. It throws SQLException in case of failures. At the start of the method, the current auto-commit value is stored in a variable. When executing the function, auto-commit is set to false. At the end of the method, auto-commit value is restored. As it is the client which drives the auto-commit, this strategy of locally changing the auto-commit works. \r\n\r\n* Removes the excludes for DERBY-1148 and DERBY-1035 from checkDataSource test. Adds a test for transaction suspend/resume in checkDataSource test. Updates master files \r\n\r\nWith this patch, I have run derbynetclientmats with Sun jdk 1.4.2 on Windows XP. I also ran checkDataSource.java and checkDataSource30.java with embedded and client framework. No failures. Please take a look at this patch and provide feedback.\r\n\r\nIf this change looks okay, it will solve both DERBY-1148 and DERBY-1035. Sorry for going back and forth between the proposed solutions. As I mentioned earlier, solving the general problem seems better than trying to address individual cases. I have also attached a small write-up 'XA_TransactionIsolation.html' based on my understanding of how isolation levels change across transaction boundaries.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-05-26T02:14:54.000+0000","updated":"2006-05-26T02:14:54.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12414286","id":"12414286","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Attaching a patch \"derby-1148-javadoc.diff\" which adds a javadoc comment that I missed with the previous patch. This is a one-line change. I ran ant javadoc to check that the warning does not occur. I also ran ant clobber, ant all. I would appreciate if someone can commit this small patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-06-02T02:41:34.000+0000","updated":"2006-06-02T02:41:34.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12414299","id":"12414299","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Port this fix to 10.1 branch","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-06-02T03:56:37.000+0000","updated":"2006-06-02T03:56:37.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12414300","id":"12414300","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"body":"Attaching a patch \"derby-1148_10.1.diff\" for 10.1 branch. There were conflicts with a direct merge, hence attaching a patch. With the patch, I ran derbynetclientmats using Sun jdk1.4.2 on Windows XP.  No failures.\r\n\r\nPlease note that there are two pending patches attached to this issue:\r\n1. derby-1148-javadoc.diff - for trunk\r\n2. derby-1148_10.1.diff - for 10.1 branch\r\n\r\nPlease take a look at these. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=deepa","name":"deepa","emailAddress":"dremesh at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Deepa Remesh","active":true},"created":"2006-06-02T04:06:21.000+0000","updated":"2006-06-02T04:06:21.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12330637/comment/12414468","id":"12414468","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Submitted to 10.1\r\n\r\nDate: Fri Jun  2 09:15:08 2006\r\nNew Revision: 411202\r\n\r\nURL: http://svn.apache.org/viewvc?rev=411202&view=rev\r\n\r\nThanks Deepa!\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-06-02T23:26:20.000+0000","updated":"2006-06-02T23:26:20.000+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1148/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i079f3:"}}