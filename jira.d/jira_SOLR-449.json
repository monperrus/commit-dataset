{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12385474","self":"https://issues.apache.org/jira/rest/api/latest/issue/12385474","key":"SOLR-449","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310230","id":"12310230","key":"SOLR","name":"Solr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310230&avatarId=22151","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310230&avatarId=22151","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310230&avatarId=22151","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310230&avatarId=22151"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312486","id":"12312486","description":"","name":"1.3","archived":false,"released":true,"releaseDate":"2008-09-16"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2008-01-03 21:50:50.054","customfield_12312323":null,"customfield_12310420":"7154","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_159792037_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-01-04T22:21:12.037+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-449/watchers","watchCount":0,"isWatching":false},"created":"2008-01-03T01:58:00.831+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.png","name":"Trivial","id":"5"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312486","id":"12312486","description":"","name":"1.3","archived":false,"released":true,"releaseDate":"2008-09-16"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-10T10:38:49.717+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"The JSON response writer can omit \"NaN\" as float literal; this is fine for JSON but breaks eval() in python (not sure if this is a problem in ruby).","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"20737","summary":"python (and presumably ruby) writer can generate NaN","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":8,"total":8,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385474/comment/12555680","id":"12555680","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"body":"Fix that serializes NaN/Inf as \r\n\r\nfloat('NaN')\r\nfloat('Inf')\r\n\r\nwhich will produce the proper values if the underlying c library is sufficiently smart.  To do it more portably requires importing modules, so isn't particularly feasible.\r\n\r\nI'll probably commit this soon.  ruby might also suffer from the same problem, though I don't know how to represent NaN properly there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"created":"2008-01-03T21:19:55.533+0000","updated":"2008-01-03T21:19:55.533+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385474/comment/12555686","id":"12555686","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"when the description says \"omit\" i think you mean \"emit\" right?\r\n\r\nI don't know squat about Ruby, but the docs seem to suggest that...\r\n\r\n{noformat}NaN{noformat}\r\n\r\n...is the proper way to express \"not a number\" as a float literal...\r\n\r\nhttp://ruby-doc.org/core/classes/Float.html#M000244","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2008-01-03T21:50:50.054+0000","updated":"2008-01-03T21:50:50.054+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385474/comment/12555690","id":"12555690","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"body":"Yes, \"emit\"\r\n\r\nUsing an online ruby interpreter, \"NaN\" and \"Infinity\" aren't literals.  But I can produce them using (0.0/0.0) and (1.0/1e-3000), so I'll throw that into the patch too.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"created":"2008-01-03T21:58:25.020+0000","updated":"2008-01-03T21:58:25.020+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385474/comment/12555695","id":"12555695","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Rather than rely on an overflow for infinity, one can divide by zero, right?\r\n\r\nirb(main):022:0> 1.0/0.0\r\n=> Infinity\r\nirb(main):023:0>\r\nirb(main):024:0* -1.0/0.0\r\n=> -Infinity\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2008-01-03T22:15:00.686+0000","updated":"2008-01-03T22:15:00.686+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385474/comment/12555697","id":"12555697","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"body":"so you can!  I tried the integer version (1/0), which complains bitterly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"created":"2008-01-03T22:24:53.360+0000","updated":"2008-01-03T22:24:53.360+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385474/comment/12555740","id":"12555740","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"Yonik's comment lead me to discover that \"irb\" is the interactive ruby shell (who knew!) which lead me to spend 20 minutes banging my head against my desk (and google) attempting to find literals or constants that express NaN or Infinity.\r\n\r\nI can not fathom the existence a language written in this millennium that understands the concept of NaN but has no literal way for you to express NaN without doing a computation.  I would say \"i've lost all respect for Ruby\", but since i didn't really know enough about ruby to respest it before, let me just say \"i've lost the ability to gain respect for Ruby in the future\".\r\n\r\nI can't believe i'm saying this, but: would it be worth while for the RubyResponseWriter to output code that declares variables for NaN, Infinite and -Infinite and only does those 3 computations once, instead of each time they occur?  (i'm assuming that if one document has a NaN value for a field value, then other docs will probably have a NaN value).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2008-01-04T00:32:56.938+0000","updated":"2008-01-04T00:32:56.938+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385474/comment/12555743","id":"12555743","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"body":"I don't think that declaring a viable approach.  At least in python, it would create a series of statements rather than a single expression, which would make parsing more difficult (using exec instead of eval(), etc).  Ruby might behave similarly.\r\n\r\nI'm not sure that repeating the computation is a justifiable worry though: even floating point division is blazingly fast compared to anything ruby will try to do.  Also, I'm not sure if it is possible to store a NaN or infinity in a document field, is it?  I'm too lazy to check if Float.parseFloat(\"NaN\") does the right thing in java.\r\n\r\nIt came up for me because of a bug in a custom queryscorer that gamely attempted a division by zero.  I've checked in a the fix that we discussed for python and ruby--I'll leave the issue open in case our resident rubyista has a better solution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"created":"2008-01-04T00:46:07.069+0000","updated":"2008-01-04T00:46:07.069+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385474/comment/12555881","id":"12555881","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehatcher","name":"ehatcher","emailAddress":"ehatcher at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehatcher&avatarId=22298","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehatcher&avatarId=22298","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehatcher&avatarId=22298","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehatcher&avatarId=22298"},"displayName":"Erik Hatcher","active":true},"body":"I've looked around for constants for those too, and asked around to several Ruby experts, and sure enough no such constants exist for Infinity or NaN. But come on, Hoss, don't throw in the towel on Ruby just for that - there are plenty of other great features of Ruby to more than make up for this weird omission of those constants. There are methods on Float that allow you to ask if something is infinite or not a number.\r\n\r\nHoss's point about outputting code is not that far-fetched and is actually along the lines of what I proposed in SOLR-358 - having a special Ruby response writer mode that output something interpretable by solr-ruby that took care of all data type / ordering issues. For now the divide-by-zero hack is fine I suppose. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehatcher","name":"ehatcher","emailAddress":"ehatcher at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehatcher&avatarId=22298","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehatcher&avatarId=22298","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehatcher&avatarId=22298","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehatcher&avatarId=22298"},"displayName":"Erik Hatcher","active":true},"created":"2008-01-04T10:44:39.436+0000","updated":"2008-01-04T10:44:39.436+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-449/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i03wqn:"}}