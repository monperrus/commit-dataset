{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12347287","self":"https://issues.apache.org/jira/rest/api/latest/issue/12347287","key":"DERBY-1644","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-11-14 05:48:22.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22618","customfield_12310222":"1_*:*_1_*:*_11527826000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_34979151885","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-12-15T16:44:14.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1644/watchers","watchCount":0,"isWatching":false},"created":"2006-08-04T06:33:48.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12397033","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12397033","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12741924","key":"DERBY-6740","self":"https://issues.apache.org/jira/rest/api/2/issue/12741924","fields":{"summary":"NullPointerException when inserting value into generated by default as identity using DEFAULT and specific value at the same time","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12327806","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12327806","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12440634","key":"DERBY-4442","self":"https://issues.apache.org/jira/rest/api/2/issue/12440634","fields":{"summary":"Evaluation of default value and identity in an INSERT result set evaluated too early.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12396976","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12396976","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12741924","key":"DERBY-6740","self":"https://issues.apache.org/jira/rest/api/2/issue/12741924","fields":{"summary":"NullPointerException when inserting value into generated by default as identity using DEFAULT and specific value at the same time","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12327469","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12327469","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12438889","key":"DERBY-4419","self":"https://issues.apache.org/jira/rest/api/2/issue/12438889","fields":{"summary":"NullPointerException with INSERT INTO ... from UNION and identity columns","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-09-17T13:54:59.149+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"The following scenario triggers a NullPointerException in statement compilation:\n\nij> create table t1 (c1 int, c2 int generated by default as identity);\n0 rows inserted/updated/deleted\nij> insert into t1 (c2) values default, 10;\nERROR XJ001: Java exception: ': java.lang.NullPointerException'.\n\nStacktrace from derby.log:\n\nDatabase Class Loader started - derby.database.classpath=''\n2006-08-04 06:31:17.235 GMT Thread[main,5,main] (XID = 235), (SESSIONID = 0), (DATABASE = wombat), (DRDAID = null), Cleanup action starting\n2006-08-04 06:31:17.235 GMT Thread[main,5,main] (XID = 235), (SESSIONID = 0), (DATABASE = wombat), (DRDAID = null), Failed Statement is: insert into t1 (c2) values default, 10\njava.lang.NullPointerException\n\tat org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ResultColumnList.java:1033)\n\tat org.apache.derby.impl.sql.compile.ResultColumnList.generate(ResultColumnList.java:893)\n\tat org.apache.derby.impl.sql.compile.RowResultSetNode.generate(RowResultSetNode.java:690)\n\tat org.apache.derby.impl.sql.compile.UnionNode.generate(UnionNode.java:589)\n\tat org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1424)\n\tat org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1286)\n\tat org.apache.derby.impl.sql.compile.NormalizeResultSetNode.generate(NormalizeResultSetNode.java:122)\n\tat org.apache.derby.impl.sql.compile.InsertNode.generate(InsertNode.java:764)\n\tat org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:232)\n\tat org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:477)\n\tat org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:118)\n\tat org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:713)\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:567)\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:516)\n\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:313)\n\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:478)\n\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:347)\n\tat org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)\n\tat org.apache.derby.impl.tools.ij.Main.go(Main.java:203)\n\tat org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:169)\n\tat org.apache.derby.impl.tools.ij.Main14.main(Main14.java:55)\n\tat org.apache.derby.tools.ij.main(ij.java:69)\n\nsysinfo:\n\n------------------ Java Information ------------------\nJava Version:    1.4.2_12\nJava Vendor:     Sun Microsystems Inc.\nJava home:       C:\\jdk142\\jre\nJava classpath:  classes;.\nOS name:         Windows XP\nOS architecture: x86\nOS version:      5.1\nJava user name:  yip\nJava user home:  C:\\Documents and Settings\\Administrator\nJava user dir:   C:\\derby\\trunk\njava.specification.name: Java Platform API Specification\njava.specification.version: 1.4\n--------- Derby Information --------\nJRE - JDBC: J2SE 1.4.2 - JDBC 3.0\n[C:\\derby\\trunk\\classes] 10.2.0.5 alpha - (1)\n------------------------------------------------------\n----------------- Locale Information -----------------\nCurrent Locale :  [English/United States [en_US]]\nFound support for locale: [de_DE]\n         version: 10.2.0.5 alpha - (1)\nFound support for locale: [es]\n         version: 10.2.0.5 alpha - (1)\nFound support for locale: [fr]\n         version: 10.2.0.5 alpha - (1)\nFound support for locale: [it]\n         version: 10.2.0.5 alpha - (1)\nFound support for locale: [ja_JP]\n         version: 10.2.0.5 alpha - (1)\nFound support for locale: [ko_KR]\n         version: 10.2.0.5 alpha - (1)\nFound support for locale: [pt_BR]\n         version: 10.2.0.5 alpha - (1)\nFound support for locale: [zh_CN]\n         version: 10.2.0.5 alpha - (1)\nFound support for locale: [zh_TW]\n         version: 10.2.0.5 alpha - (1)\n------------------------------------------------------","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38293","summary":"NPE when inserting values to a table that has a column declared as generated by default as identity","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Sun JDK 1.4.2","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":22,"total":22,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12449575","id":"12449575","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I think that the issue here involves mixing \"default\" with constant values.\r\n\r\nNote that the quite-similar-but-not-identical statements below all work fine:\r\n\r\n  insert into t1 (c2) values (10);\r\n  insert into t1 (c2) values default;\r\n  insert into t1 (c2) values (default);\r\n  insert into t1 (c2) values 10, 20, 30;\r\n\r\nHowever, this statement gets the same NPE as the one in the description:\r\n\r\n  insert into t1 (c2) values 40, 50, default;\r\n\r\nSo it appears to be that the bug involves:\r\n - inserting multiple rows with a single INSERT statement using multiple values clauses, and\r\n - some of the rows have numeric constant values, while others fire the identity field generator\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-14T05:48:22.000+0000","updated":"2006-11-14T05:48:22.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12449704","id":"12449704","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"I was running the above queries for kicks to see if I could reproduce the problem--but they all succeeded.  I then realized that my test table \"t1\" only had *one* column--the \"generated by default\" column c2.  When I recreated the table so that it had two columns (c1 and c2 as posted in the repro) the NPE occurs.\r\n\r\nSo the bug appears to require that there be at least one non-identity column in the table, as well.  Maybe that's useful, maybe not...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-11-14T16:58:47.000+0000","updated":"2006-11-14T16:58:47.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451063","id":"12451063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Army! I think that your observation is crucial, and here's why:\r\n\r\nThe problem arises due to this code in InsertNode.bind():\r\n\r\n                if (! inOrder || resultSet.resultColumns.size() < numTableColumns)\r\n                {\r\n                        // one thing we do know is that all of the resultsets underneath\r\n                        // us have their resultColumn names filled in with the names of\r\n                        // the target table columns.  That makes generating the mapping\r\n                        // \"easier\" -- we simply generate the names of the target table columns\r\n                        // that are included.  For the missing columns, we generate default\r\n                        // value expressions.\r\n\r\n                        resultSet = resultSet.enhanceRCLForInsert(numTableColumns, colMap,\r\n                                       dataDictionary,\r\n                                       targetTableDescriptor, targetVTI);\r\n                }\r\n\r\n                if (resultSet instanceof UnionNode)\r\n                {\r\n                        // If we are inserting a number of rows in VALUES clause, we need to\r\n                        // examine each row for 'autoincrement'.\r\n                        resultColumnList.checkAutoincrementUnion(resultSet);\r\n                }\r\n                else resultColumnList.checkAutoincrement(resultSet.getResultColumns());\r\n\r\nWhen the VALUES clause encounters multiple rows, it generates a UNION node tree to \r\ncombine the rows to be inserted. The code above notices the top-level UNION node\r\nand calls the special checkAutoincrementUnion() method which knows how to\r\nrecursively traverse the Union tree and call checkAutoIncrement() on the underlying\r\nRowResultSetNode instances at the leaf level of the tree.\r\n\r\nHOWEVER, when the number of columns in the rows in the VALUES clause is a subset of\r\nthe number of columns in the table we're inserting into, the top node of the tree\r\nis not a UnionNode, but is rather a ProjectRestrictNode. This means that we skip past\r\nthe UnionNode test and just call checkAutoincrement(), which processes the PRN but doesn't\r\ngo down to the RowResultSetNode(s) at the leaf level.\r\n\r\nThis leaves the ResultColumn instance at the leaf level with a NULL column descriptor,\r\nwhich causes the NPE during the code generation phase.\r\n\r\nAnd, there is a second, related problem. The enhanceRCLForInsert() call is also only made\r\nat the top level of the tree. However, this call is a necessary pre-condition for calling\r\ncheckAutoincrement() because enhanceRCLForInsert() ensures that the proper ResultColumnList\r\nvalues are in place prior to the checkAutoincrement() reconciliation of the column lists.\r\n\r\nI believe that the way to solve this is to merge the above code from InsertNode.bind\r\ntogether with the current recursive processing in ResultColumnList.checkAutoincrementUnion()\r\nto produce a new recursive routine, which I have called enhanceAndCheckForAutoincrement(),\r\nwhich will recursively traverse the ResultSet tree, calling *both* enhanceRCLForInsert()\r\nand checkAutoincrement() on the various nodes in the tree.\r\n\r\nThat way, even if the RowResultSetNode instances are buried within UnionNode trees, they\r\nwill still be correctly set up for autoincrement processing during bind processing.\r\n\r\nI'll attach a complete patch to this Jira issue once I finish writing a bunch of tests\r\nand tidying up the code changes.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-18T20:35:21.000+0000","updated":"2006-11-18T20:35:21.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451165","id":"12451165","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is d1644_recursivelyCheck_v1.diff, a proposed patch to fix this issue.\r\n\r\nThis patch moves the method checkAutoincrementUnion() from\r\nResultColumnList into InsertNode, renames the method to\r\nenhanceAndCheckForAutoincrement(), and updates the recursive\r\nprocessing so that it:\r\na) can handle PRN nodes in the ResultSet tree\r\nb) knows to call enhanceRCLForInsert on ResultSetNodes\r\nc) can recurse on all sorts of ResultSet trees, not just those\r\nheaded by a UnionNode.\r\n\r\nThe patch also contains some new tests. \r\n\r\nThe patch passes derbyall and suites.All, and I'd love to hear your feedback on it.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-19T17:06:23.000+0000","updated":"2006-11-19T17:06:23.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451166","id":"12451166","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I think there is room for a follow-on patch in this area, to ResultSetNode.enhanceRCLForInsert.\r\n\r\nThe Javadoc comments for this method suggest that this is the place where PRN nodes\r\ncan get inserted into the ResultSet node tree, but in fact this method does not do this.\r\nI suspect that perhaps it once did, and it could be that when that processing was moved\r\nelsewhere, that is when DERBY-1644 arose.\r\n\r\nI think it would be useful to have a follow-on patch to ResultSetNode, which would have\r\nno functional changes, but would improve the clarity of the code, to do the following:\r\n\r\n1) Change the return type of enhanceRCLForInsert from ResultSetNode to void\r\n2) Remove the \"return this\" statement\r\n3) Remove the unused variable numResultSetColumns\r\n4) Fix the Javadoc for this method to remove the suggest that it may insert a PRN\r\ninto the ResultSet tree.\r\n\r\nI shall attach such a follow-on patch for review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-19T17:10:05.000+0000","updated":"2006-11-19T17:10:05.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451168","id":"12451168","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"RSNCommentFixup_v1.diff, which must be applied after the recursivelyCheck patch,\r\nis an optional second part to the patch which, I believe, improves the clarity of\r\nResultSetNode.enhanceRCLForInsert().\r\n\r\nI would appreciate any feedback about whether this patch is worth including as part of this change.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-19T17:18:37.000+0000","updated":"2006-11-19T17:18:37.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451169","id":"12451169","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hmmm... I think that second patch is mis-considered. I see now that\r\nSetOperatorNode.enhanceRCLForInsert overrides ResultSetNode.enhanceRCLForInsert,\r\nand the SetOperatorNode version *does* return a new result set node.\r\n\r\nI think this means that I still don't understand this problem well enough.\r\n\r\nFeedback on the patch(es) is most welcome, but they are definitely not ready for commit.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-19T17:29:22.000+0000","updated":"2006-11-19T17:29:22.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451173","id":"12451173","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I think the method SetOperatorNode.enhanceRCLForInsert  can\r\nbe wholly deleted, leaving only the implementation in ResultSetNode.\r\nI shall pursue this possibility.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-19T17:56:21.000+0000","updated":"2006-11-19T17:56:21.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451203","id":"12451203","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"After doing some more studying and testing, I believe that it is in fact\r\nsafe to remove SetOperatorNode.enhanceRCLForInsert() entirely,\r\nand to simply ResultSetNode.enhanceRCLForInsert() as described\r\nin my previous comment. There seems to be no code path which can\r\nall SetOperatorNode.enhanceRCLForInsert().\r\n\r\nAttached is RSN_EnhanceRCL_Simplify_v2.diff, which is as I said an\r\noptional part of this fix, but I think it is nice to delete code if it is clearly\r\nunnecessary because that simplifies the overall implementation.\r\n\r\nPlease let me know your feedback.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-20T00:42:13.000+0000","updated":"2006-11-20T00:42:13.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451480","id":"12451480","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Hi Bryan,\r\n\r\nI applied the d1644_recursivelyCheck_v1.diff patch to my local codeline and it applied cleanly.  However, when I tried to run lang/autoincrement.sql the test failed due to an ArrayIndexOutOfBounds exception.  I was able to reproduce the error on a clean database by executing the following (pulled from that test):\r\n\r\nij> create table ai_test (x int generated always as identity (start with 2, increment by 2), y int);\r\n0 rows inserted/updated/deleted\r\nij> insert into ai_test (y) values (1),(2);\r\nERROR XJ001: Java exception: '1 >= 1: java.lang.ArrayIndexOutOfBoundsException'.\r\njava.lang.ArrayIndexOutOfBoundsException: 1 >= 1\r\n\tat java.util.Vector.elementAt(Vector.java(Compiled Code))\r\n\tat org.apache.derby.impl.sql.compile.QueryTreeNodeVector.elementAt(QueryTreeNodeVector.java:52)\r\n\tat org.apache.derby.impl.sql.compile.ResultColumnList.checkStorableExpressions(ResultColumnList.java:890)\r\n\tat org.apache.derby.impl.sql.compile.InsertNode.bind(InsertNode.java:419)\r\n\tat org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:345)\r\n\tat org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:119)\r\n\tat org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:742)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:568)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:517)\r\n\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:321)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:517)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:370)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:268)\r\n\tat org.apache.derby.impl.tools.ij.Main.go(Main.java:204)\r\n\tat org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:170)\r\n\tat org.apache.derby.impl.tools.ij.Main14.main(Main14.java:56)\r\n\tat org.apache.derby.tools.ij.main(ij.java:71)\r\n\r\nTo see if it made any difference I also applied RSN_EnhanceRCL_Simplify_v2.diff to my codeline.  When I did that things started working correctly again.  This surprised me since I was under the impression that this second patch was optional--i.e. nice but not required.  Am I overlooking something here, or is it in fact true that both patches must be applied in order for your fix to be complete?  I didn't look into it at all but if you could give a quick explanation of why the second patch is required, that'd be great.\r\n\r\nIn any event, having applied both patches together I was able to run lang/autoincrement.sql without problems.  I also verified that without the changes the new tests fail with an NPE, as expected.\r\n\r\nMy one minor suggestion is to perhaps add two more test cases to your current scenario:\r\n\r\ninsert into D1644 (c2) values default, default, default, default;\r\ninsert into D1644 (c2, c1) values (default, 128), (default, 129), (default, 131);\r\n\r\nThe above two INSERTs work as expected when both of your patches have been applied, so this is not a requirement.  But it might be nice to have the extra test cases, just for safety...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-11-20T23:34:34.000+0000","updated":"2006-11-20T23:34:34.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12451495","id":"12451495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks for the review Army! I had both patches together in my sandbox and thought \r\nI had separated them cleanly, but it seems that they got hooked together.\r\n\r\nI shall go study this some more.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-21T00:23:01.000+0000","updated":"2006-11-21T00:23:01.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12452322","id":"12452322","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I'm not quite sure what I was thinking when I thought that the two code\r\nchanges could be separated, but they cannot. They are linked and really\r\nit needs to be a single patch proposal.\r\n\r\nAttached is d1644_combined_v3.diff, a patch proposal which combines\r\nthe two previous code change patches. The new patch also adds the\r\nnew tests suggested by Army.\r\n\r\nThere are several ideas involved in this patch:\r\n - When an INSERT statement will insert multiple rows from the VALUES\r\n   clause, the compiler will compile the various values into a tree of\r\n   UnionNodes with RowResultSetNodes at the leaves of the three\r\n - The columns specified in the INSERT statement may be a subset\r\n   of the rows in the table. The \"extra\" columns need to be constructed by\r\n   the INSERT statement, either by generating NULL values for those\r\n   columns which are nullable, or by compiling a default values for those\r\n   columns which have DEFAULT values, or by generating a value for an IDENTITY\r\n   column which is GENERATED. The work of constructing these extra\r\n   column values is done by genNewRCForInsert.\r\n - For columns which are GENERATED ALWAYS, we must make sure that\r\n   the INSERT statement doesn't allow the user to insert their own value for\r\n   the generated column.\r\n - The columns which are specified in the INSERT column spec may not match\r\n   the order in which the columns arise in the table. Therefore, the column\r\n   values may need to be re-ordered by the INSERT statement so that they\r\n   occur in the proper order.\r\n - In the case when the ResultSet which provides the values for the INSERT\r\n   statement is not just a single node, but is rather a tree of UnionNodes, the\r\n   above processing needs to happen throughout the tree, not just at the root node.\r\n\r\nThe combined patch proposal accomplishes all of this.\r\n\r\nThere is one aspect to this patch that I can't fully explain yet. If somebody knows\r\nthe reason behind it, that would be very nice; I am hoping to continue studying\r\nthis in the near future. This question involves the ProjectRestrictNode at the\r\nroot of the ResultSetNode tree. With the current code, when the VALUES clause\r\nresults in multiple rows, and is compiled into a UnionNode tree with\r\nRowResultSetNodes at the leaves, InsertNode.bind calls SetOperatorNode.\r\nenhanceRCLForInsert(), which constructs a brand-new ProjectRestrictNode to\r\nbe the new root of the UnionNode tree. With my patch proposal, the PRN is\r\nno longer built; the ResultSetNode tree is left with a UnionNode at the root.\r\nFrom what I can tell, this works fine: the PRN is no longer needed once we are\r\nsure to generate and re-order the ResultSet columns at *all* nodes in the\r\nResultSetNode tree. The new rows can be inserted directly from the UnionNodes.\r\n\r\nI think this patch is correct, but it is possible that there is some other aspect to\r\nhaving the PRN at the root of the tree which I haven't discovered yet, which will\r\ncause a problem if we don't generate that PRN. If anybody knows what such a\r\nproblem might be, please let me know.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-11-23T20:21:30.000+0000","updated":"2006-11-23T20:21:30.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12454020","id":"12454020","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Attached is d1644_combined_v3.diff, a patch proposal which combines the two previous code change patches.\r\n\r\nI will try to review the latest patch sometime today...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-11-28T16:58:26.000+0000","updated":"2006-11-28T16:58:26.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12454202","id":"12454202","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for the updated patch, Bryan. I was able to apply it cleanly to trunk and I ran the lang/autoincrement.sql test without any problems.  Code comments look good and the changes agree with the explanation of the problem/solution that you provided for this issue.\r\n\r\nAs for your question about the PRN over the UnioNode, I agree that the PRN seems unnecessary based on my understanding of the changes.  As you mentioned in a previous comment, prior to your changes the enhanceRCLForInsert() call was only made at the top of the tree.  In the case of a UnionNode the code did the \"enhancing\" by generating a PRN over the UnionNode, where the PRN itself had the \"enhanced\" result columns.  The rest of the tree was then left untouched.  But since, as you have said, your changes make it so that the entire tree beneath the UnionNode (including the UnionNode itself) is \"enhanced\", the additional PRN is no longer required.\r\n\r\nSo basically, I agree with your analysis and I think your solution looks good.  Assuming, of course, that derbyall ran cleanly? ;)\r\n\r\nI should say, though, that after re-reading the code comments for enhanceRCLForInsert() method several times, these lines still have me scratching my head:\r\n\r\n    * Those RSNs whose generate() method does not handle projects will\r\n    * insert a PRN, with a new RCL which matches the target RCL, above\r\n    * the current RSN.\r\n\r\nI see that you removed these lines in your patch so that the comment matches the current state of the code, which is good.  But I'm having problems figuring out what the lines were saying to begin with.  In particular, what does it mean to say \"those RSNs whose generate() method does not handle projects\"?\r\n\r\nIn any event, your changes make sense and the basic tests I've run all pass, so I too tend to think the patch is correct.  Assuming derbyall runs cleanly, I vote +1 to commit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-11-29T00:48:01.000+0000","updated":"2006-11-29T00:48:01.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12455514","id":"12455514","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"body":"Per Bryan's request, I will be reviewing this patch also.  Hopefully I can give some feedback tomorrow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"created":"2006-12-05T05:24:04.000+0000","updated":"2006-12-05T05:24:04.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12455771","id":"12455771","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"body":"I wasn't able to apply the latest patch, d1644_combined_v3.diff  cleanly.  It has a problem patching ResultColumnList.java, so I have to resolve this manually.  The patch fixes the stated problem of this jira and without it, it fails.  I have reviewed the code changes and they all look reasonable to me.  (Great comments and thanks for cleaning up the code to make it clearer for reviewers/contributers).  I also ran derbyall + junit suite and they all pass.  +1 to commit.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"created":"2006-12-05T22:00:59.000+0000","updated":"2006-12-05T22:00:59.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12455835","id":"12455835","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thank you very much Army and Yip for the reviews. I'll bring the patch up to date and look into \r\nproceeding with some final testing and commit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-12-06T01:14:36.000+0000","updated":"2006-12-06T01:14:36.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12458648","id":"12458648","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Committed d1644_combined_v3.diff to the trunk as revision 487414.\r\n\r\nI haven't marked this issue resolved yet because I suspect we may \r\nwant to investigate merging these changes back to the 10.2 branch. Yip,\r\nwhat do you think? Should we merge these changes back to 10.2?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-12-15T01:03:30.000+0000","updated":"2006-12-15T01:03:30.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12458840","id":"12458840","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"After thinking about it some more I decided to mark this issue as resolved,\r\nsince the change is in the trunk. If we later decide that we want to port this \r\nchange to one or more of the older branches, we can re-open the issue then.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-12-15T16:44:14.000+0000","updated":"2006-12-15T16:44:14.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12458851","id":"12458851","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"body":" <snip>\r\n\r\nHi Bryan, I think if there is a need, we can always merge back the fix\r\nto 10.2.  So let's mark this issue as resolved for now.\r\n\r\nRegards,\r\nYip Ng\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yipng","name":"yipng","emailAddress":"yipng168 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yip Ng","active":true},"created":"2006-12-15T17:01:21.000+0000","updated":"2006-12-15T17:01:21.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12458926","id":"12458926","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Revision 487656 is a follow-on commit with a 1-line fix to a javadoc typo\r\nparameter targetTD should have been targetTableDescriptor.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-12-15T20:51:11.000+0000","updated":"2006-12-15T20:51:11.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12347287/comment/12562051","id":"12562051","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"This issue is resolved and has not been updated in the last 12 months (since 24/Jan/07). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-24T13:10:05.875+0000","updated":"2008-01-24T13:10:05.875+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1644/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06x2v:"}}