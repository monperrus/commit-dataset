{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12500942","self":"https://issues.apache.org/jira/rest/api/latest/issue/12500942","key":"DERBY-5120","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317968","id":"12317968","description":"second release on the 10.8 branch","name":"10.8.2.2","archived":false,"released":true,"releaseDate":"2011-10-24"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12316344","id":"12316344","description":"First release on the 10.9 branch","name":"10.9.1.0","archived":false,"released":true,"releaseDate":"2012-06-25"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2011-07-06 13:21:06.14","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"31507","customfield_12310222":"1_*:*_1_*:*_12609544102_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-08-02T19:20:06.661+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-5120/watchers","watchCount":1,"isWatching":false},"created":"2011-03-09T20:41:02.587+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"10.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12316362","id":"12316362","description":"First release on the 10.8 branch","name":"10.8.1.2","archived":false,"released":true,"releaseDate":"2011-04-29"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12393520","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12393520","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12731721","key":"DERBY-6684","self":"https://issues.apache.org/jira/rest/api/2/issue/12731721","fields":{"summary":"Failure in testDERBY5120NumRowsInSydependsForTrigger when upgrading from 10.11.1.0 to trunk","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12340688","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12340688","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12513295","key":"DERBY-5323","self":"https://issues.apache.org/jira/rest/api/2/issue/12513295","fields":{"summary":"SYSDEPENDS may be keeping redundant dependency info. Specific information for trigger case in this jira but there might be other cases as well","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-08-06T00:21:29.439+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"I have an ij script below which shows that the number of rows in SYSDEPENDS go down by 1 for the following test case after an update is made to a table with update triggers defined on it. Am not sure what kind of problems the missing dependnecy might cause.\r\n\r\n\r\nconnect 'jdbc:derby:c:/dellater/db1;create=true';\r\nCREATE TABLE ATDC_13_TAB1(c11 int, c12 int);\r\ninsert into ATDC_13_TAB1 values (1,11);\r\n\r\ncreate table ATDC_13_TAB2(c21 int, c22 int);\r\ninsert into ATDC_13_TAB2 values (1,11);\r\n\r\ncreate table ATDC_13_TAB3(c31 int, c32 int);\r\ninsert into ATDC_13_TAB3 values (1,11);\r\n\r\ncreate table ATDC_13_TAB1_backup(c11 int, c12 int);\r\ninsert into ATDC_13_TAB1_backup values (1,11);\r\n\r\n                create trigger ATDC_13_TAB1_trigger_1 after update \r\n                on ATDC_13_TAB1 for each row mode db2sql \r\n                INSERT INTO ATDC_13_TAB1_BACKUP(C11) \r\n                SELECT C21 from ATDC_13_TAB2;\r\n\r\n                 create trigger ATDC_13_TAB1_trigger_2 after update \r\n                on ATDC_13_TAB1 for each row mode db2sql \r\n                INSERT INTO ATDC_13_TAB1_BACKUP \r\n                 SELECT C31, C32 from ATDC_13_TAB3;\r\n\r\n-- following shows 14 rows\r\nselect * from sys.sysdepends;\r\nupdate ATDC_13_TAB1 set c12=11;\r\n-- following shows only 13 rows\r\n\r\nI tried this on 10.2 and 10.8 and saw the same behavior on both. It seems like the dependency that gets dropped is between the stored prepared statement and a table. Have not spent enough time to find out more details but I thought it is worth pointing out the behavior\r\nselect * from sys.sysdepends;\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"36119","summary":"Row from SYSDEPENDS gets deleted when a table has update triggers defined on it and an upate is made to the table","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":25,"total":25,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13058688","id":"13058688","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I much simpler test case for this jira is as follows\r\n\r\nconnect 'jdbc:derby:db1_2;create=true'; \r\nCREATE TABLE ATDC_13_TAB1(c11 int, c12 int); \r\ninsert into ATDC_13_TAB1 values (1,11); \r\n\r\ncreate trigger ATDC_13_TAB1_trigger_1 after update \r\n         on ATDC_13_TAB1 for each row mode db2sql \r\n          values(1);\r\n\r\ncreate trigger ATDC_13_TAB1_trigger_2 after update \r\n         on ATDC_13_TAB1 for each row mode db2sql \r\n         values(1,2);\r\n\r\n-- following shows 6 rows \r\nselect * from sys.sysdepends; \r\nupdate ATDC_13_TAB1 set c12=11; \r\n-- following shows only 5 rows \r\nselect * from sys.sysdepends; \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-01T18:17:55.161+0000","updated":"2011-07-01T18:17:55.161+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13059308","id":"13059308","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"A typical CREATE TRIGGER goes through following steps as far as adding/deleting rows from SYSDEPENDS tale\r\n1)Any time a trigger is created, CreateTriggerConstantAction.executeConstantAction() sends CREATE_TRIGGER invalidation to the trigger table as shown below(The list of objects getting invalidated will include existing triggers defined on the trigger table).\r\n\t\t/*\r\n\t\t** Send an invalidate on the table from which\r\n\t\t** the triggering event emanates.  This it\r\n\t\t** to make sure that DML statements on this table\r\n\t\t** will be recompiled.  Do this before we create\r\n\t\t** our trigger spses lest we invalidate them just\r\n\t\t** after creating them.\r\n\t\t*/\r\n\t\tdm.invalidateFor(triggerTable, DependencyManager.CREATE_TRIGGER, lcc);\r\n\r\n2)Next, CreateTriggerConstantAction.executeConstantAction() does the trigger action sps generation\r\n\t\t/*\r\n\t\t** Create the trigger action\r\n\t\t*/\r\n\t\tactionspsd = createSPS(lcc, ddg, dd, tc, tmpTriggerId, triggerSd,\r\n\t\t\t\t\t\tactionSPSId, spsCompSchemaId, actionText, false, triggerTable);\r\n\r\n3) During trigger action sps generation, SPSDescriptor.compileStatement removes the existing dependencies of trigger action sps in sysdepends as shown below\r\n(for a trigger getting created the first time, there will be no SPS dependencies for the trigger action SPS. The same code is called when a trigger is found invalid, in that case, there will be existing trigger action SPS dependencies which will get dropped here) \t\r\n\t\t/*\r\n\t\t** Clear out all the dependencies that exist\r\n\t\t** before we recreate them so we don't grow\r\n\t\t** SYS.SYSDEPENDS forever.\r\n\t\t*/\r\n\t\tdm.clearDependencies(lcc, this, tc);\r\n4)After clearing out existing dependencies, it adds the dependencies that it finds during this compile SPSDescriptor.compileStatement()\r\n\t\t\t/*\r\n\t\t\t** Copy over all the dependencies to me\r\n\t\t\t*/\r\n\t\t\tdm.copyDependencies(preparedStatement, \t// from\r\n\t\t\t\t\tthis, \t// to\r\n\t\t\t\t\tfalse,\t// persistent only\r\n\t\t\t\t\tcm,\r\n\t\t\t\t\ttc);\r\n5)After finishing with trigger action SPS generation, CreateTriggerConstantAction.executeConstantAction adds the depdencies for the trigger descriptor on trigger action sps and on trigger table. Additionally, it adds depedency on trigger action sps on trigger table(this is the dependency which later gets dropped when a compile of trigger action sps had cleared existing trigger action sps dependencies before regenerating the trigger action sps. The trigger action sps regeneration\r\ndoes not add the dependency between trigger action sps and trigger table\r\n\t\tdm.addDependency(triggerd, actionspsd, lcc.getContextManager());\r\n\t\tdm.addDependency(triggerd, triggerTable, lcc.getContextManager());\r\n\t\tdm.addDependency(actionspsd, triggerTable, lcc.getContextManager());\r\n\r\nFollowing the steps above (to find what rows get added into SYSDEPENDS)for the first trigger in the simpler example that I posted on 01/Jul/11\r\ncreate trigger ATDC_13_TAB1_trigger_1 after update \r\n         on ATDC_13_TAB1 for each row mode db2sql \r\n          values(1); \r\nStep 4) will not find any dependencies for trigger action values(1); \r\nStep 5) will add three rows into SYSDEPENDS, namely \r\na)dependency between triiger descriptor for ATDC_13_TAB1_trigger_1 and triiger action SPS \r\nb)dependency between trigger descriptor for ATDC_13_TAB1_trigger_1 and triiger table ATDC_13_TAB1 \r\n3)dependency between triiger action SPS and triiger table ATDC_13_TAB1 \r\n\r\nThis is how, we end up with three rows for the first trigger ATDC_13_TAB1_trigger_1 \r\n\r\nWhen the 2nd trigger(ATDC_13_TAB1_trigger_2) is created, it also results into adding 3 rows into SYSDEPENDS but additionally in step 1), it invalidates the existing trigger ATDC_13_TAB1_trigger_1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-04T01:26:27.603+0000","updated":"2011-07-04T01:26:27.603+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13060566","id":"13060566","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Hi Mamta, I am confused by this code to be honest. For example, the\r\nfollowing fragment:\r\n\r\n/*\r\n ** Make underlying spses dependent on the trigger.\r\n */\r\nif (whenspsd != null)\r\n{\r\n    dm.addDependency(triggerd, whenspsd, lcc.getContextManager());\r\n}\r\ndm.addDependency(triggerd, actionspsd, lcc.getContextManager());\r\ndm.addDependency(triggerd, triggerTable, lcc.getContextManager());\r\ndm.addDependency(actionspsd, triggerTable, lcc.getContextManager());\r\n\r\nAs far as I understand, the first addDependency makes \"triggerd\"\r\ndependent on \"whenspsd\", but the comment says its the other way\r\naround.\r\n\r\nSimilarly, the second add makes \"triggerd\" dependent on\r\n\"actionspsd\". I would have throught it should be the other way around?\r\nThat the stored sps should dependent on the trigger definition as as\r\nto get recompiled when the trigger definition changed.. \r\n\r\nThe third and the fourth adds make sense to me: when the table\r\nchanges, the trigger definition would need recompilation and when the\r\ntriggerTable changed the actionspsd would need recompilation.\r\n\r\nBut I may be missing something here... \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-07-06T13:21:06.140+0000","updated":"2011-07-06T13:21:06.140+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13060723","id":"13060723","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Dag, I tend to agree with your comments. The cooment in the code does not seem to agree with the kinds of dependencies added by first 2 addDepency statements. I tried looking through the history of this code and it appears that we have this code from the very beginning.\r\n \r\nBut, I debugged further to find out why one of the rows added during CREATE TRIGGER time gets dropped later on. The issue seems to be around trigger action sps getting invalidated and later getting recompiled when it gets fired next time around. Going back to the example test case provided earlier\r\n\r\nconnect 'jdbc:derby:db1_2;create=true'; \r\nCREATE TABLE ATDC_13_TAB1(c11 int, c12 int); \r\ninsert into ATDC_13_TAB1 values (1,11); \r\n\r\ncreate trigger ATDC_13_TAB1_trigger_1 after update \r\n         on ATDC_13_TAB1 for each row mode db2sql \r\n          values(1); \r\n\r\ncreate trigger ATDC_13_TAB1_trigger_2 after update \r\n         on ATDC_13_TAB1 for each row mode db2sql \r\n         values(1,2); \r\n\r\n-- following shows 6 rows \r\nselect * from sys.sysdepends; \r\nupdate ATDC_13_TAB1 set c12=11; \r\n-- following shows only 5 rows \r\nselect * from sys.sysdepends; \r\n\r\nWhen the 2nd trigger(ATDC_13_TAB1_trigger_2) gets created, CreateTriggerConstantAction sends CREATE_TRIGGER invalidation to the trigger table as shown below(This sends invalidation code to the first trigger ATDC_13_TAB1_trigger_1)\r\n\t\t/*\r\n\t\t** Send an invalidate on the table from which\r\n\t\t** the triggering event emanates.  This it\r\n\t\t** to make sure that DML statements on this table\r\n\t\t** will be recompiled.  Do this before we create\r\n\t\t** our trigger spses lest we invalidate them just\r\n\t\t** after creating them.\r\n\t\t*/\r\n\t\tdm.invalidateFor(triggerTable, DependencyManager.CREATE_TRIGGER, lcc);\r\n\r\nLater when, \"update ATDC_13_TAB1 set c12=11\" statement is executed, it fires both the triggers. The first trigger\r\n(ATDC_13_TAB1_trigger_1) during it's execution finds that it is invalid. During recompilation, SPSDescriptor.compileStatement \r\nremoves the existing dependencies recorded in SYSDEPENDS table for the trigger action sps as shown below.This step ends up\r\nremoving the dependency recorded between the trigger action sps and trigger table(added by CreateTriggerConstantAction at the time trigger creation) and that is where we can one row short.\r\n\t/*\r\n\t** Clear out all the dependencies that exist\r\n\t** before we recreate them so we don't grow\r\n\t** SYS.SYSDEPENDS forever.\r\n\t*/\r\n\tdm.clearDependencies(lcc, this, tc);\r\nAfter clearing out existing dependencies for invalid trigger action sps, the trigger action sps regeneration process adds the dependencies that it finds during this recompile SPSDescriptor.compileStatement()\r\n\t/*\r\n\t** Copy over all the dependencies to me\r\n\t*/\r\n\tdm.copyDependencies(preparedStatement, \t// from\r\n\t\tthis, \t// to\r\n\t\tfalse,\t// persistent only\r\n\t\tcm,\r\n\t\ttc);\r\nBut the dependency between trigger action SPSD and trigger table never gets added back during the recompilation and that is where we loose a row from SYSDEPENDS.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-06T17:57:54.508+0000","updated":"2011-07-06T17:57:54.508+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13060783","id":"13060783","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"I guess the trigger action statement here (\"values(1)\") isn't really dependent on either the table or the trigger definition for that matter? So maybe it doesn't matter. Maybe it was gratuitous in the first place? Maybe the table dependency should always (only) be added by the compilation step of the SPS..? The comment (\"SIDE EFFECTS\") in SPSDescriptor#prepareAndRelease seems to indicate it would happen there..\r\n\r\nIt seems weird that adding a second trigger should invalidate the first trigger's SPS, though, but as far as I can see it's a side effect of forcing DML statements to be recompiled when adding the second trigger. It would seems this could set of a ping-pong of invalidation between triggers, but I guess it doesn't, since on invalidation of the first trigger's SPS we just recompile and do not re-execute the code in CreateTriggerConstantAction (which would otherwise set off the CREATE_TRIGGER invalidation on the trigger table and hence recompile of the second etc)...\r\n\r\nThe whole idea of invalidation is to keep things up to date, maybe we should revisit what dependencies are really needed for triggers, right now it's not clear to me..\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-07-06T19:31:50.026+0000","updated":"2011-07-06T19:31:50.026+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13061458","id":"13061458","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I have a test case(with comments in the script below) that shows how missing row in SYSDEPENDS does not catch a trigger getting invalid.\r\n\r\nconnect 'jdbc:derby:db1;create=true';\r\ncreate table t1(c11 int, c12 int);\r\ninsert into t1 values(1,1);\r\ncreate table t1_bkup1(c111 int, c112 int);\r\ncreate table t1_bkup2(c211 int, c212 int);\r\n\r\n-- for following trigger, 5 rows will be added to sysdepends\r\ncreate trigger tr1 after update of c11 on t1 referencing\r\n old_table as old for each statement insert into\r\n t1_bkup1 select * from old;\r\n\r\n-- for following trigger, 5 rows will be added to sysdepends\r\n-- This trigger creation will also invalidate the trigger tr1 \r\ncreate trigger tr2 after update of c11 on t1 referencing\r\n old as oldrow for each row insert into\r\n t1_bkup2(c211) values (oldrow.c11);\r\nselect count(*) from sys.sysdepends;\r\n\r\n-- following update will cause tr1 to recompile because it has been marked invalid\r\n-- But as part of recompile, trigger action sps's dependency on trigger table will\r\n--  be lost bringing down the total number of rows in sysdepends from 10 to 9\r\nupdate t1 set c11=2;\r\nselect count(*) from sys.sysdepends;\r\n\r\n-- Because the dependency between trigger tr1's trigger action sps and trigger table\r\n--   is lost, following alter table on trigger table will not be noticed by tr1\r\nalter table t1 add column c113 int;\r\n-- following update will not fail for trigger tr1 even though it is not correct anymore(tr1\r\n--  is inserting into t1_bkup1 but after the alter table the number of columns in \r\n--  trigger table do not match the number of columns in t1_bkup1 but this is never \r\n--  caught because of the missing dependency.)\r\nupdate t1 set c11=3;\r\n\r\n-- We can prove that trigger tr1 is incorrect after alter table because if we tried \r\n--  creating another trigger with same definition as tr1, it will fail\r\ncreate trigger tr3 after update of c11 on t1 referencing\r\n old_table as old for each statement insert into\r\n t1_bkup1 select * from old;\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-07T17:45:17.986+0000","updated":"2011-07-07T17:45:17.986+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13061488","id":"13061488","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Interesting. Why isn't the dependency on the trigger table (bound as old, oldrow) added during (re)prepare of the action statement I wonder? If it were, the dependency would be added back(?)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-07-07T18:56:33.507+0000","updated":"2011-07-07T18:56:33.507+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13061500","id":"13061500","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"What would be the correct behavior here? Obviously, tr1 is no longer valid after the alter table: should tr1 be silently dropped or should the alter table fail? We don't have a CASCADE/RESTRICT specification for ADD COLUMN, perhaps this proves we need it?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-07-07T19:03:08.939+0000","updated":"2011-07-07T19:03:08.939+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13061524","id":"13061524","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"If the dependency between trigger action sps and trigger table wasn't dropped, I think then update sql would fail because of trigger tr1 finding out during recompile that the it is not valid anymore.\r\n\r\nAs for ALTER TABLE drop column catching the dependency, there are couple jiras open for catching cases like this I think.\r\n\r\nI am looking at how the dependency between trigger action sps and trigger table can be maintained during the recompile of trigger action.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-07T19:32:11.060+0000","updated":"2011-07-07T19:32:11.060+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13061570","id":"13061570","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"The following theory and example may help people reason about how to fix the problem described by this JIRA.\r\n\r\n-------------- THEORY ---------------------\r\n\r\nThe following discussion relies on these definitions and assumptions:\r\n\r\ni) Invaliding events - These include \"object dropped\" and \"object modified\".\r\n\r\nii)  \"A -> B\" -  This is a dependency arc. It is shorthand for \"A  depends on B\". Invalidating events travel backward along the  dependency arcs, allowing each object to decide how to respond to the event. Possible responses include: \"raise an exception because RESTRICT semantics are violated\" and \"recompile me\".\r\n\r\niii) Dependency Graph - This is a graph of all dependency arcs needed by Derby. The nodes in this graph are the persistent objects plus PreparedStatements. There is an arrow from A to B iff \"A -> B\".\r\n\r\niv) Transitivity - The Dependency Graph obeys the following rule:\r\n\r\n  if \"A -> B\" and \"B -> C\", then \"A -> C\"\r\n\r\nv) SYSDEPENDS contains dependency arcs between persistent objects.\r\n\r\nvi) Sufficient - SYSDEPENDS is said to be sufficient if it contains enough dependency arcs to reconstruct the entire Dependency Graph. Note that SYSDEPENDS is not the only input to constructing the Dependency Graph. Some arcs are implicitly described by other catalogs. Transitivity can be used to construct further arcs.\r\n\r\nvii) Minimal - SYSDEPENDS is said to be minimal if it contains the smallest number of arcs needed to reconstruct the entire Dependency Graph. For instance, if SYSDEPENDS contains the arcs \"A -> B\" and \"B -> C\" then SYSDEPENDS does not need to contain the \"A -> C\" arc because Derby can reconstruct that arc from the Transitivity rule.\r\n\r\nviii) Fuzzy - SYSDEPENDS is said to be fuzzy if it contains arcs that are not in the Dependency Graph.\r\n\r\nI would venture the following:\r\n\r\nI) SYSDEPENDS should be Sufficient and not Fuzzy.\r\n\r\nII) Even if SYSDEPENDS is Sufficient, Derby may have a bug which prevents it from constructing the complete Dependency Graph. For instance, Derby may be ignoring relevant information in other catalogs.\r\n\r\nIII) I do not believe that SYSDEPENDS is Minimal. When DDL creates new arcs in the Dependency Graph, Derby does not recompute the contents of SYSDEPENDS just to guarantee a Minimal representation.\r\n\r\n\r\n------------- EXAMPLE ------------------\r\n\r\nLet's apply this to a trigger example.\r\n\r\n  INSERTs into table T1 fire a trigger which INSERTs into table T2\r\n\r\nThis example gives rise to the following persistent objects:\r\n\r\n  Tables T1 and T2\r\n  Corresponding conglomerates C1 and C2\r\n  Trigger TR\r\n  Action statement A\r\n\r\nThe following would be a Minimal representation in SYSDEPENDS:\r\n\r\n  TR -> T1\r\n  A -> T2\r\n\r\nNote that the following additional arcs do not need to be modelled in SYSDEPENDS, but can be constructed by Derby from information in other catalogs:\r\n\r\n  T1 -> C1\r\n  C1 -> T1\r\n  T2 -> C2\r\n  C2 -> T2\r\n  TR -> A\r\n  A -> TR\r\n\r\nOther arcs arise via the Transitive rule.\r\n\r\nWhat we actually see in SYSDEPENDS is the following Sufficient, non-Minimal representation:\r\n\r\n  TR -> T1\r\n  TR -> A (non-Minimal, could be constructed from SYSTRIGGERS)\r\n  A -> T1 (non-Minimal, could be constructed by Transitivity)\r\n  A -> T2\r\n  A -> C2  (non-Minimal, could be constructed by Transitivity)\r\n\r\nHere is a script which shows this example:\r\n\r\nconnect 'jdbc:derby:memory:db;create=true'; \r\n\r\ncreate table t1( a int );\r\ncreate table t2( a int );\r\ncreate trigger trig after insert on t1 for each statement insert into t2( a ) values( 1 );\r\n\r\nselect * from sys.sysdepends order by dependentid, providerid;\r\nselect tablename, tableid from sys.systables where tablename like 'T%';\r\nselect t.tablename, c.conglomerateid\r\nfrom sys.systables t, sys.sysconglomerates c\r\nwhere tablename like 'T%'\r\nand t.tableid = c.tableid;\r\nselect triggerid from sys.systriggers;\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2011-07-07T20:26:49.985+0000","updated":"2011-07-07T20:26:49.985+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13061645","id":"13061645","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Thanks Rick and Dag on all the time you have put in this jira. I really appreciate that. \r\n\r\nAs part of this jira though, I will like to focus on how to keep the dependency between trigger action sps and trigger table intact during recompile(which currently gets dropped during the recompile phase). As for the bigger picture of having only the necessary dependencies for triggers and checking if Derby is keeping only the required depdendencies, I will create a new jira for that. I will put Dag's and Rick's comments in this jira and will also link that new jira to the current jira. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-07T22:55:53.631+0000","updated":"2011-07-07T22:55:53.631+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13061713","id":"13061713","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Yes Mamta, I can see that the update statement would be the one failing with the current implementation (if the dependency of the action on the trigger table had not been dropped, as you point out). I think the behavior may be wrong, though, the time to fail or drop the trigger should probably at ALTER TABLE time. But that's another issue as you say. Meanwhile, I'm still curious why the dependency wouldn't/coudln't be added back when we reprepare, though, since the trigger action does contain reference to the trigger table, albeit in the form of the \"old\"/\"oldrow\" aliases (in your second example repro).\r\n\r\nRick, in your explanation of extended (data) dependencies, some dependencies are bi-directional, mirroring a one-to-one relationhip. When would such bidirectional dependencies ever be required in SYSDEPENDS? I think in some cases we only register unidirectional ones? Is this \"pragmatic\", in the sense that we register deps in SYSDEPENDS (or in memory only) only in the (inverse) direction we want to invalidate?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2011-07-08T01:38:08.131+0000","updated":"2011-07-08T01:38:08.131+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13061940","id":"13061940","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Hi Dag,\r\n\r\nI think that SYSDEPENDS exists in order to make it fast to reconstruct the Dependency Graph. It doesn't need to contain arcs representing the relationship between tables and conglomerates because those can be figured out quickly by looking at other catalogs. But the arc backward from a triggering table to its trigger is hard to reconstruct, so that arc is put into SYSDEPENDS.\r\n\r\nThe issue of bidirectional arcs (cycles) is interesting. I don't know if there are any examples of this in SYSDEPENDS. However, the cycles should exist in the Dependency Graph I think. The example of tables and conglomerates comes to mind:\r\n\r\n  T1 -> C1 models the fact that dropping the conglomerate (e.g. by bulk import) should invalidate the table.\r\n\r\n  C1 -> T1 models the fact that dropping the table should also drop the conglomerate.\r\n\r\nI don't think that Derby systematically implements the Dependency Graph I have described. My impression is that dependency management is a hodge-podge today. Some of the relationships are managed by the dependency subsystem. Other relationships are managed by little winks and nods in other parts of the SQL interpreter. In my opinion this hodge-podge makes dependency management brittle and hard to reason about.\r\n\r\nHi Mamta,\r\n\r\nI may not be following your analysis. But it sounds to me as though the following arc has vanished from SYSDEPENDS:\r\n\r\n  A -> triggeringTable\r\n\r\nI am suggesting that this is a non-Minimal arc and doesn't need to be in SYSDEPENDS. Derby should be able to construct this arc on the fly via Transitivity from the following arcs:\r\n\r\n A -> TR (this is known from SYSTRIGGERS)\r\n TR -> triggeringTable (this is still in SYSDEPENDS if I understand correctly)\r\n\r\nThanks,\r\n-Rick","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2011-07-08T13:00:09.673+0000","updated":"2011-07-08T13:00:09.673+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13062102","id":"13062102","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Created a new jira to see if dependency info in SYSDEPENDS can be cleaned up a little with all the great info provided by Rick. \r\n\r\nThe new jira number is DERBY-5323 SYSDEPENDS may be keeping redundant dependency info. Specific informatio​n for trigger case in this jira but there might be other cases as well.\r\n\r\nI have connected the 2 jiras.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-08T18:34:06.570+0000","updated":"2011-07-08T18:34:06.570+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13062104","id":"13062104","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Rick, I was planning to keep my focus on just maintaining the dependency that was originally intended for trigger. At the create trigger time, we add the dependency between trigger action and trigger table. We loose that during trigger recompile. I think this fix will be real easy by having SPSDescriptor add this dependency info rather than create trigger do it. This will take care of both create trigger and trigger action recompile because of invalidity. Let me know if you, Dag or anyone else have any feedback on moving the trigger action -> trigger table dependency to SPSDescriptor from Create Trigger. Thanks\r\n\r\nI agree that some of these dependencies can probably be established programmatically rather than SYSDEPENDS having to carry it. But I will like that work to go as part of the new jira DERBY-5323.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-08T18:40:06.226+0000","updated":"2011-07-08T18:40:06.226+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13062118","id":"13062118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Hi Mamta,\r\n\r\nYour plan sounds good to me. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2011-07-08T19:11:13.623+0000","updated":"2011-07-08T19:11:13.623+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13063608","id":"13063608","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I am attaching a patch which moves recording to trigger action sps's dependency on trigger table from create trigger constant action to SPSDescriptor. This should take care of both create trigger time and sps regeneration time. I am seeing couple failures with this patch. I hope to have those tests fixed by tomorrow. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-11T23:34:05.096+0000","updated":"2011-07-11T23:34:05.096+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13064007","id":"13064007","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I am attaching another patch which has two test problems resolved which I saw seeing with the earlier patch. The two tests that were failing with patch 1 were 1)AlterTableTest,testDropColumn This was failing because  the number of rows in sysdepends were not as expected by the test. I found the problem was that AlterTableConstantAction does a drop and recreate trigger and it was adding the dependency between trigger action sps and trigger table. It does not need to add that dependency anymore because it is taken care of by SPSDescriptor. Removing the dependency add code from AlterTableConstantAction resolved the problem.\r\n2)triggerGeneral.sql was failing because a trigger action was using select * from trigger table to insert into another table. Later an alter table was performed to add one more column to the trigger table. With missing dependency before, trigger action was not getting regenerated and hence trigger didn't detect that it is not valid anymore. After I have made the changes for the dependency, trigger action gets invalidated when a new column is added to trigger table and this will cause the trigger to fail.I have fixed the test to not do select * in trigger action so add column will not impact it. The test in triggerGeneral has been written for a specific purpose and that is why I didn't want the test to fail with select *. I will add another test which will catch a case like insert into select * in trigger action and it getting invalid with add column.\r\n\r\nThe only tasks left on this jira is to add the test I mentioned. Additionally, I plan to add an upgrade test.\r\n\r\nIf anyone has any feedback, please let me know.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-12T17:08:49.032+0000","updated":"2011-07-12T17:08:49.032+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13064297","id":"13064297","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Adding a new patch which now has a test for the changes.Next,will work on an upgrade test","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-13T02:25:32.088+0000","updated":"2011-07-13T02:25:32.088+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13064760","id":"13064760","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Attaching patch DERBY5120_patch4_diff.txt which now also has an upgrade test. The upgrade test's intention is to verify that sysdepedns row that may have been dropped of in earlier releases will be restored during the various phases of upgrade. In other words, when a pre-10.9 db is soft/hard upgraded to trunk, the missing row will be added back into sysdepends. But after the soft-upgrade, if the db is taken back to it's original release, the row will be lost again.I am verifying this by looking at the count of number of rows in sysdepends. \r\n\r\nI am running into one issue with this test though. There are few releases where the rows in sysdepends do not match with what the test expects them to. I am doing more debugging to find what might be the issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-13T18:45:00.282+0000","updated":"2011-07-13T18:45:00.282+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13064903","id":"13064903","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I have found that the new upgrade test added in patch 4 fails for 10.5.1.1, 10.5.3.0, 10.6.1.0 and 10.6.2.1 releases. I do not believe the problem is with my changes, I am debugging further to find out why the test fails only with these 4 releases. The test is failing for those 4 releases because the number of rows expected by the test do not match with what's actually found in the database.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-13T22:01:32.216+0000","updated":"2011-07-13T22:03:13.887+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13065353","id":"13065353","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Attaching final patch which is ready for commit. The reason newly added upgrade test(from patch 4) is failing with 10.5.1.1, 10.5.3.0, 10.6.1.0 and 10.6.2.1 releases is that those releases have DERBY-4835 fix missing from them.\r\n\r\n        During the upgrade time, the clearing of stored statements(including trigger action spses) happened conditionally before DERBY-4835 was fixed. DERBY-4835 made changes so that the stored statements get marked invalid unconditionally during the upgrade phase. But these changes for DERBY-4835 did not make into 10.5.1.1, 10.5.3.0, 10.6.1.0 and 10.6.2.1. Because of this missing fix, trigger action spses do not get marked invalid when the database is taken after soft upgrade back to the original db release(if the original db release is one of the releases mentioned above). The newly added upgrade test relies on trigger action spses getting invalid during upgrade phase and getting recompiled when they are fired next time around thus altering the number of rows in sysdepends. Because of this, I have disabled the upgrade test for those 4 releases.\r\n\r\nI will go ahead and commit this patch","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-14T16:06:31.885+0000","updated":"2011-07-14T16:06:31.885+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13065354","id":"13065354","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"BTW, when I run the junite suite with patch number 5, I see only known intermittent failures as shown below. derbyall ran fine with no errors.\r\n1) testBootLock(org.apache.derbyTesting.functionTests.tests.store.BootLockTest)java.lang.InterruptedException\r\n\tat org.apache.derbyTesting.functionTests.tests.store.BootLockTest.testBootLock(BootLockTest.java:158)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:112)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n2) ManagementMBeanTest:clientjava.lang.InterruptedException\r\n\tat org.apache.derbyTesting.junit.SpawnedProcess.complete(SpawnedProcess.java:182)\r\n\tat org.apache.derbyTesting.junit.NetworkServerTestSetup.tearDown(NetworkServerTestSetup.java:394)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:20)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:51)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\nThere were 3 failures:\r\n1) testPingWithWrongHost(org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest)junit.framework.AssertionFailedError: Could not find expectedString:Unable to find host in output:Wed Jul 13 19:37:36 PDT 2011 : Could not connect to Derby Network Server on host nothere, port 1527: Connection timed out: connect\r\n\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.assertExecJavaCmdAsExpected(BaseTestCase.java:516)\r\n\tat org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.assertFailedPing(NetworkServerControlClientCommandTest.java:147)\r\n\tat org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.testPingWithWrongHost(NetworkServerControlClientCommandTest.java:112)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:112)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n2) testInvalidLDAPServerConnectionError(org.apache.derbyTesting.functionTests.tests.jdbcapi.InvalidLDAPServerAuthenticationTest)junit.framework.AssertionFailedError\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.InvalidLDAPServerAuthenticationTest.testInvalidLDAPServerConnectionError(InvalidLDAPServerAuthenticationTest.java:122)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:112)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n3) testInvalidLDAPServerConnectionErrorjunit.framework.AssertionFailedError: Failed to delete 8 files (root=C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48: C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48\\db.lck (isDir=false, canRead=true, canWrite=true, size=38), C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48\\log\\log1.dat (isDir=false, canRead=true, canWrite=true, size=1048576), C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48\\log (isDir=true, canRead=true, canWrite=true, size=0), C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48\\seg0\\c10.dat (isDir=false, canRead=true, canWrite=true, size=8192), C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48\\seg0\\cc0.dat (isDir=false, canRead=true, canWrite=true, size=8192), C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48\\seg0\\cd1.dat (isDir=false, canRead=true, canWrite=true, size=8192), C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48\\seg0 (isDir=true, canRead=true, canWrite=true, size=0), C:\\p4clients\\svnmain\\client7\\trunk\\systest\\dellater\\system\\singleUse\\oneuse48 (isDir=true, canRead=true, canWrite=true, size=0)\r\n\tat org.apache.derbyTesting.junit.BaseJDBCTestCase.assertDirectoryDeleted(BaseJDBCTestCase.java:1526)\r\n\tat org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabaseSetup.java:119)\r\n\tat org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDatabaseSetup.java:35)\r\n\tat org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSetup.java:105)\r\n\tat java.security.AccessController.doPrivileged(AccessController.java:202)\r\n\tat org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropDatabaseSetup.java:102)\r\n\tat org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropDatabaseSetup.java:98)\r\n\tat org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDatabaseSetup.java:91)\r\n\tat org.apache.derbyTesting.junit.TestConfiguration$4.tearDown(TestConfiguration.java:747)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:20)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:16)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-14T16:08:19.263+0000","updated":"2011-07-14T16:08:19.263+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13065596","id":"13065596","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I haved committed changes for this jira as revision 1146915. The changes committed look like patch 5 except that I have changed the upgrade test to not rely on number of rows in sysdepends. Instead the upgrade test does the testing of this jira by issuing the UPDATE sql after a sql which should cause trigger invalidation and showing how UPDATE does not fail in pre-10.9 releases but it does fail correctly after soft/hard upgrade to 10.9","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2011-07-14T22:59:33.086+0000","updated":"2011-07-14T22:59:33.086+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12500942/comment/13685375","id":"13685375","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"[bulk update] Close all resolved issues that haven't been updated for more than one year.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-06-17T09:19:51.028+0000","updated":"2013-06-17T09:19:51.028+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-5120/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06jnr:"}}