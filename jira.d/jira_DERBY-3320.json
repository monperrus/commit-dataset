{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12386270","self":"https://issues.apache.org/jira/rest/api/latest/issue/12386270","key":"DERBY-3320","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2008-01-24 19:04:44.841","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23571","customfield_12310222":"1_*:*_1_*:*_7148679213_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-04-07T08:50:53.554+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3320/watchers","watchCount":0,"isWatching":false},"created":"2008-01-15T15:06:14.341+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12359332","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12359332","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12612982","key":"DERBY-5959","self":"https://issues.apache.org/jira/rest/api/2/issue/12612982","fields":{"summary":"Territory-based collation is not robust against changes in the collation rules","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12359333","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12359333","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12612692","key":"DERBY-5958","self":"https://issues.apache.org/jira/rest/api/2/issue/12612692","fields":{"summary":"Many tests fail on JDK 8 because of missing collators","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12319874","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319874","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12393450","key":"DERBY-3608","self":"https://issues.apache.org/jira/rest/api/2/issue/12393450","fields":{"summary":"Add test cases for missing Collator support during the reboot of a territory based database","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-10-23T13:28:43.147+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11415","id":"11415","name":"Services"}],"timeoriginalestimate":null,"description":"A problem I've discovered when testing with the phoneME advanced platform is that the collationtests expect other locales than Locale.US to be available on the platform that is used for the test, and for phoneME advanced (when compiled as foundation profile) only Locale.US is available. From the jdk1.6 javadoc of Collator.getAvailableLocales() I see that only Locale.US is strictly required:\n\npublic static Locale[] getAvailableLocales()\n\n    Returns an array of all locales for which the getInstance methods of this class can return localized instances. The returned array represents the union of locales supported by the Java runtime and by installed CollatorProvider implementations. It must contain at least a Locale instance equal to Locale.US.\n\n    Returns:\n        An array of locales for which localized Collator instances are available.\n\nThis led me to thinking about how Derby should behave if created/booted with collation=TERRITORY_BASED and territory=<some unsupported locale>. I'm not sure what the consequences could be if the database is first created on a platform that supports whatever locale is set and later booted with one that doesn't, or created on a platform missing support and later booted with one that has. In any case I think it may confuse a user needlessly to see the database boot successfully with his collation setting and later behave in a way he does not expect.\n\nOpinions voiced on the derby-dev list are that both database creation and boot should fail if collation=TERRITORY_BASED and the selected locale is not supported.\n\nIf a change like this is implemented, the collationtests should be changed to verify correct behavior also if they are executed in an environment were some of the tested locales are not supported.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37350","summary":"Database creation and boot should fail if collation=TERRITORY_BASED and the selected locale is not supported","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Java ME:\nProduct: phoneME Advanced (phoneme_advanced_mr2-b34)\nProfile: Foundation Profile Specification 1.1\n\nLinux 2.4.21-40.ELsmp #1 SMP Thu Feb 2 22:14:12 EST 2006 i686 athlon i386 GNU/Linux","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":44,"total":44,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12562171","id":"12562171","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I am working on trying to find a way to check for a territory based database, if the Locale requested by the user is supported by the JVM or not. \r\n\r\nI thought there would be a straightforward JAVA api which will let me provide the language and country and tell me if the Locale for it is supported by the JVM or not. But I didn't find any such api. \r\n\r\nA have attached stand alone test case DERBY_3320_Repro.java which shows how I have to use Locale.getAvailableLocales() and go through it to determine if a specific Locale is supported or not. Am I correct or did I miss some simpler way of achieveing this? \r\n\r\nThanks for looking at this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-01-24T19:04:44.841+0000","updated":"2008-01-24T19:04:44.841+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12562434","id":"12562434","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"body":"I am not sure if there is an easier way to check for Locale support, I used your method when making a patch for the tests to avoid running them when the locale to test with was not available. It has not been committed yet, though.\r\n\r\nI think maybe that Locale.getAvailableLocales() doesn't necessarily have to return the same list of supported Locales as Collator.getSupportedLocales(), or other locale-dependent classes with the getSupportedLocales() method. So maybe it is important to check what returned by the functionality that will be used, like Collator.\r\n\r\nTake a look at the javadoc for java.util.spi.LocaleServiceProvider, it seems all the different locale-dependant provider classes are subclasses of this. The second last paragraph says:\r\n\r\nLocale sensitive factory methods and methods for name retrieval in the java.text and java.util packages invoke service provider methods when needed to support the requested locale. The methods first check whether the Java runtime environment itself supports the requested locale, and use its support if available. Otherwise, they call the getAvailableLocales() methods of installed providers for the appropriate interface to find one that supports the requested locale. If such a provider is found, its other methods are called to obtain the requested object or name. If neither the Java runtime environment itself nor an installed provider supports the requested locale, a fallback locale is constructed by replacing the first of the variant, country, or language strings of the locale that's not an empty string with an empty string, and the lookup process is restarted. In the case that the variant contains one or more '_'s, the fallback locale is constructed by replacing the variant with a new variant which eliminates the last '_' and the part following it. Even if a fallback occurs, methods that return requested objects or name are invoked with the original locale before the fallback.The Java runtime environment must support the root locale for all locale sensitive services in order to guarantee that this process terminates.\r\n\r\nSo, I think you will have to go through the list of supported locales for the functionality that will be used. Maybe that is only Collator?\r\n\r\nSomething to consider is also whether you need an exact match to consider a locale supported for the purpose of the Collator, or if it is enough to get a language match? For instance, if looking for en_GB, is en_US good enough? Maybe if a partial match is found, the DB should be allowed to boot but write a warning about it only finding a partial match?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"created":"2008-01-25T10:53:59.175+0000","updated":"2008-01-25T10:53:59.175+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12566219","id":"12566219","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"The list of Derby functionality that uses the database locale is (are there any others?)\r\n\r\n - error messages : not a requirement that the database locale is supported, error messages will default to English.\r\n\r\n - collation - index order is dependent on the ordering, thus the database locale must be supported for collation.\r\n\r\n - UPPER/LOWER - in order to have consistent results  the database locale must be supported\r\n\r\nOne possible additional case is the conversion of java date time values to DATE/TIME/TIMESTAMP, that though may use the locale of the jvm.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-02-06T17:32:28.646+0000","updated":"2008-02-06T17:32:28.646+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577136","id":"12577136","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Currently, I am thinking of concentrating only on making sure that Collator can be instantiated for the locale on a give JVM when a user is trying to create/boot a database with territory based collation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-10T19:32:23.957+0000","updated":"2008-03-10T19:32:23.957+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577151","id":"12577151","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Also, I am considering throwing an exception if the exact locale is not found. If anyone has any comments on this proposed behavior, please add a comment to this jira entry.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-10T20:01:52.748+0000","updated":"2008-03-10T20:01:52.748+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577157","id":"12577157","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Wasn't the problem that if a locale wasn't supported, the Collator would be instantiated anyway and silently use en_US? If that was the problem, I don't think checking that the Collator can be instantiated will help.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-03-10T20:11:40.002+0000","updated":"2008-03-10T20:11:40.002+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577171","id":"12577171","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Sorry for the brief comment \"making sure that Collator can be instantiated for the locale on a give JVM \". Let me elaborate on what I am thinking of doing.\r\n\r\nCollator class has a method called getAvailableLocales which returns an array of locales which are the union of locales supported by the Java runtime and by installed CollatorProvider(a subclass of LocaleServiceProvider) implementations. \r\n\r\nLocale class also has a method called getAvailableLocales which returns an array of locales which are the union of locales supported by the Java runtime and by installed LocaleServiceProvider implementations.\r\n\r\nSo, it appears that the locale arrary returned from Collator.getAvailableLocales will be a subset of locale array returned by Locale.getAvailableLocales \r\n\r\nWhat I was thinking of doing was adding a new method (don't know in which class at this point) which will go through the arrary returned by Collator.getAvailableLocales and see if the locale requested by the user is included in the locale arrary. If not, then throw an exception. I was planning on calling this method when I find at database create/boot time that user has asked for territory based collation.\r\n\r\nAfter thinking more about it, I think it will be better for us to make the new method more generic by going through Locale.getAvailableLocales rather than the Collator.getAvailableLocales. And then seee if the locale requested by the user is inclueded in the locale array. Making the method generic this way will enable us to use it for other Derby functionality that uses the database locale (some of this functionality has been identified by Dan in his earlier comment to this jira entry).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-10T20:36:39.311+0000","updated":"2008-03-10T20:36:39.311+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577186","id":"12577186","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks, that makes sense.\r\n\r\n> After thinking more about it, I think it will be better for us to\r\n> make the new method more generic by going through\r\n> Locale.getAvailableLocales rather than the\r\n> Collator.getAvailableLocales.\r\n\r\nWhat if Locale.getAvailableLocales() says that a locale is available\r\nand Collator.getAvailableLocales() says that we don't have collators\r\nfor that locale? If we only look at Locale.getAvailableLocales(),\r\nwon't we incorrectly conclude that we support collation for that\r\nlocale and create an en_US Collator?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-03-10T21:00:34.473+0000","updated":"2008-03-10T21:00:34.473+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577221","id":"12577221","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Mamta> see if the locale requested by the user is included in the locale arrary\r\n\r\nWhat does that mean, especially with regards to this comment:\r\n\r\nVemund> Something to consider is also whether you need an exact match to consider a locale supported for the purpose of the Collator, or if it is enough to get a language match? For instance, if looking for en_GB, is en_US good enough?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-10T21:59:27.962+0000","updated":"2008-03-10T21:59:27.962+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577235","id":"12577235","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Sorry missed earlier comment about exact match on locale.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-10T22:36:53.837+0000","updated":"2008-03-10T22:36:53.837+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577486","id":"12577486","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"body":"My understanding is along the lines of what Knut writes, that the set of locales supported by Collator and Locale in theory can be different.\r\n\r\nIf collation=TERRITORY_BASED the selected locale should be one of those returned by Collator.getAvailableLocales().\r\n\r\nSee also my comment on Jan. 25. 08.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"created":"2008-03-11T15:48:31.054+0000","updated":"2008-03-11T15:48:31.054+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577500","id":"12577500","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Thanks, Vemund and Knut. I was under the impression that if a locale is avaialble through Locale.getAvailableLocales(), then all the locale related functionality (including Collation) is automatically available. But it appears that it is not correct. Based on this, I will go ahead and code to look for Collator.getAvailableLocales rather than Locale.getAvailableLocales(). Is there a need to look at Locale.getAvailableLocales() also or is Collator.getAvailableLocales() sufficient?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-11T16:24:44.747+0000","updated":"2008-03-11T16:24:44.747+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12577882","id":"12577882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"body":"I think it is sufficient as a first increment at least to check just Collator.getAvailableLocales().\r\n\r\nI think you are correct in your earlier assessment that the locales returned by Collator.getAvailableLocales() is a subset of the locales returned by Locale.getAvailableLocales(), so if you find the locale in the first list it should also be in the second.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"created":"2008-03-12T15:50:07.779+0000","updated":"2008-03-12T15:50:07.779+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12579910","id":"12579910","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I spent some time on this jira entry and found that we get the Locale and Collator for the database even before we know that we are dealing with a territory based database. This happens in DataValueFactoryImpl.setLocale which gets called by BasicDatabase.boot(). The reason we do this setting before the store module and data dictionary module boots up is so that Collator info is available to store if needs to do recovery. I am trying to tackle the problem first for database create time only(will address subsequent boot times later on). I will try to see if I can find the request for territory based database during DataValueFactory module bootup so we can see if Collator is really supported or not for the given locale.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-18T16:12:30.004+0000","updated":"2008-03-18T16:12:30.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580071","id":"12580071","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Patch DERBY_3320_not_ready_for_commit_diff_v1.txt not ready for commit.\r\n\r\nI have added code in DataValueFactoryImpl.setLocale to see if we are dealing with database create time and if user has asked for territory based database in JDBC url. If yes, then verify that a Collator object can be instantiated for the requested locale. If not, then throw an exception. \r\n\r\nNotice though that this does not take care of subsequent database boot up time. A user might boot up a territory based database on a machine that does not have Collator support for the locale. The reason I could not do the check for Collator during subsequent boot up time is that at this time of Derby bootup (ie when we are in DVF.setLocale method), we do not have access to the information if the database is territory based or not. That information becomes available after the store has finished booting up. But store bootup happens after DVF bootup finishes. \r\n\r\nWe can not wait for store to finish booting up to decide if the Collator support is available because store during bootup may need to go through the recovery and at the time of recovery, we need access to Collator object. So, this is a kind of catch 22 during subsequent database bootup time. We need to know if the databsase is territory based to see if we need to check Collator support. But to know if the database is territory based, we need for store to finish booting up. But store during bootup may require access to Collator if it needs to recover the db.\r\n\r\nA solution could be to always check if the Collator support is available for the locale of the database, whether or not user has requested territory based database. This can be done in DVF.setLocale. This approach will be fine IF we know that there will always be Collator support for the default locale of the JVM when dealing with the non-territory based databases.\r\n\r\nPlease ask questions if this store recovery and Collator dependency is not clear.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-18T20:45:46.052+0000","updated":"2008-03-18T20:45:46.052+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580106","id":"12580106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Why not just throw an exception when the collator object is created if the locale is not supported?\r\nThen there's no need to figure out if it's boot or create database time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-18T21:36:00.547+0000","updated":"2008-03-18T21:36:00.547+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580423","id":"12580423","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"In DVF.setLocale, the Collator object gets created whether we are dealing with territory based database or not. If the database is not territory based, then the Collator object never gets used. But if it is a territory based database, then Store might use the Collator object if it needs to database recovery.\r\n\r\nI think we can check if the Collator object can be created or not for the given locale irrespective of whether it is territory based db or UCS_BASIC db. So, I will go ahead and do the check and not worry about whether it is boot/create time and whether we are dealing with territory based db or not.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-19T16:01:27.051+0000","updated":"2008-03-19T16:01:27.051+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580432","id":"12580432","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"That's not exactly what I meant, I was more thinking of just throwing an error when a collator was requested (ie. needed for collation) and could not be created. Thinking about it more though, that might be sometime later than create/boot.\r\n\r\nThough I'm not sure if that's a problem. Thinking about the future, a database may have many collations associated with it. Will it be a requirement that all collations are supported on the current jvm before the database can be booted?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-19T16:13:20.489+0000","updated":"2008-03-19T16:13:20.489+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580436","id":"12580436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Dan wrote \"Thinking about it more though, that might be sometime later than create/boot.\" I am not sure if that is correct, In case of recovery, store will need the collator object during boot.\r\n\r\nBased on the same thinking, in future, when a database may have many collations associated with it, we might need to make sure the all collations are supported at db boot time because they may be required during store recovery at the database boot time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-19T16:20:10.274+0000","updated":"2008-03-19T16:20:10.274+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580442","id":"12580442","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"I don't think store needs the collator if there is no recovery to perform (e.g. clean shutdown previously), so that's what I meant by \"might be sometime later\".\r\n\r\nSo I'm saying if the database has tables with three collations A,B,C and the current vm only supports A,C, then if recovery does not touch any table with B, then why not let the database boot. If recovery needed B then an exception would be thrown and the database would fail to boot.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-19T16:37:12.798+0000","updated":"2008-03-19T16:37:12.798+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580445","id":"12580445","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"So, seems like there could be 2 approaches here.\r\nDuring the boot, if the access to Collator object is required, then verify at that time that the Collator object can be created for the given locale. Once, the recovery/boot is over, 1)right before leaving the boot process, make sure that the Collator object can be created if it has not already been created. This would mean that if the database has tables with three different collations, then all those Collator objects should be supported by JVM once the boot process is over. 2)wait until the first access to Collator object and verify that Collator object can be instantiated. So, user may not find until much later in the database session(when they actually need to use the Collator object) that the required Collator object is not available. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-19T16:50:40.328+0000","updated":"2008-03-19T16:50:40.328+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580464","id":"12580464","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I think it is reasonable in the current system to check at create database time and throw an error then rather than wait until a table with a user char column is created.  But for an existing db I do think it is ok to delay the check until the actual use of the \r\nCollator, if we can make the error somewhat obvious to the user what is going on.  Do test that the error makes it to the user if we fail in recovery as there have been problems in the past with errors during boot getting eaten and the user just gets a \r\ncould not boot message with module startup failure.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-03-19T17:27:59.913+0000","updated":"2008-03-19T17:27:59.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580477","id":"12580477","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I am starting to think of the implementation for the following approach \r\nAt the db create time, we will give the error for Collator not available (if that is the case) when the database is getting created rather than wait until a user creates a table with char column. For the database boot time, throw the error whenever the Collator is accessed first(ie not right towards the end of the boot time in BasicDatabase). This first access can happen because recovery was required during boot time or later when user has triggered access to Collator through SQL.\r\n\r\nWith the above approach in mind, I am thinking that I will keep the changes in DVF.setLocale(the changes shown in the patch attached to this jira entry) where I check if we are in here for database create time and check for Collator object and if found, put it in collatorForCharacterTypes class variable. If not for database create time, don't even create the Collator object in DVF.setLocale ie do not load collatorForCharacterTypes.\r\n\r\nDVF has a method called getCharacterCollator which now will have to see if it is dealing with territory based db, If yes, then check if collatorForCharacterTypes is not null. If not null, then return collatorForCharacterTypes otherwise it mean that Collator object is getting accessed for the first time and hence check if the JVM supports it. If not, then throw exception. If it is supported, then put the Collator object in collatorForCharacterTypes and return collatorForCharacterTypes from getCharacterCollator. So, as we can see, now we will have an additional check for territory based db in getCharacterCollator to see if collatorForCharacterTypes is null or not and if null, then verify that Collator is supported by the JVM. Pseudo code follows\r\n\r\nDVF.getCharacterCollator  (as it is in trunk)\r\n    \tif (collationType == StringDataValue.COLLATION_TYPE_UCS_BASIC)\r\n    \t\treturn (RuleBasedCollator)null;\r\n    \telse\r\n    \t\treturn collatorForCharacterTypes;    \t\r\n\r\nThe new code for DVF.getCharacterCollator will be\r\n    \tif (collationType == StringDataValue.COLLATION_TYPE_UCS_BASIC)\r\n    \t\treturn (RuleBasedCollator)null;\r\n    \telse if (collatorForCharacterTypes == null) {\r\n                                           Collator object supported by JVM for databaseLocale?\r\n                                           If not, throw exception\r\n                                           If yes, then collatorForCharacterTypes = Collator object\r\n  \t\t    return collatorForCharacterTypes;    \t\r\n    \t} else\r\n    \t\treturn collatorForCharacterTypes;    \t\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-19T17:53:07.612+0000","updated":"2008-03-19T17:53:07.612+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580486","id":"12580486","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"The general approach looks good, though I would say all the create logic going into setLocale() really should be in\r\n\r\nDataValueFactoryImpl.boot()\r\n\r\nThen this avoids the need to change the signature of setLocale().","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-19T18:19:12.814+0000","updated":"2008-03-19T18:19:12.814+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12580497","id":"12580497","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I might not be understanding the boot handshake correctly but the signature of the boot method in DVF is as follows\r\npublic void boot(boolean create, Properties properties) throws StandardException \r\n\r\nBasicDatabase.boot has gotten the Locale required for the db through the following code\r\n\tif (create)\r\n\t{\r\n\t\tif (startParams.getProperty(Property.CREATE_WITH_NO_LOG) == null)\r\n\t\t\tstartParams.put(Property.CREATE_WITH_NO_LOG, \"true\");\r\n\r\n\t\tString localeID = \r\n                                                                startParams.getProperty(org.apache.derby.iapi.reference.Attribute.TERRITORY);\r\n\r\n\t\tif (localeID == null) {\r\n\t\t\tlocaleID = Locale.getDefault().toString();\r\n\t\t}\r\n\t\tdatabaseLocale = monitor.setLocale(startParams, localeID);\r\n\t} else {\r\n\t\tdatabaseLocale = monitor.getLocale(this);\r\n\t}\r\nAnd then BasicDatabase.boot boots DVF and calls DVF.setLocale so that it can pass the locale object that it has determined to DVF. It looks like there is no way to pass that locale info through the boot machinery that we already have in place. So, if we want DVF.boot to do the Collator checking, it will have to get its hand on locale in it's boot method by going through code similar to BasicDatabase.boot (copied above). This seems fine to me because then everything related to boot is in boot method of the DVF and it does not have to wait for DVF.setLocale to get it's locale set correctly. If we do decide to go this path, then we can remove DVF.setLocal from BasicDatabase.boot and do the locale setting in the DVF boot method.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-19T18:38:59.066+0000","updated":"2008-03-19T18:38:59.066+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12581182","id":"12581182","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I am attaching a patch DERBY_3320_Collator_Support_Check_diff_v2.txt which will make sure during the database create time that Collator support is available from the JVM otherwise an exception will be thrown. As for the subsequent boot times, the Collator support from the JVM will be checked the first time there is a need to access Collator functionality. This may or may not be at the database boot time. The first access to Collator object can happen under 2 scenarios 1)during database boot time because Store has to recover the database or 2)if user exectues a SQL which requires territory based collation.\r\n\r\nIn order to do the check for Collator support during database create time, I had to add code in DataValueFactoryImpl.boot to look at the collation attribute on the JDBC url, verify it's value and see if user has requested territory based collation. If yes, then verify that JVM supports the Collator for the database's locale. Because the attribute value validation happens here in DVF.boot, we do not need to do the value validation again in DataDictionaryImpl.boot and hence I removed the collation attribute value validation from DataDictionaryImpl.boot.\r\n\r\nAlso, BasicDatabase.boot does not have to make special call to DVF.setLocal to set the locale on DVF because it now happens in DVF.boot method. This makes the code fit more into the existing boot machinery rather than relying on special calls like DVF.setLocale.\r\n\r\nThe Collator support is being done in a new method DVF.verifyCollatorSupport and this method gets called both during database create time and during subsequent database boot  times, it gets called when the Collator object is accessed for the first time.\r\n\r\nI have added a new error message for unavailability of Collator and the message reads as follows\r\nCollator support not available from the JVM for the database's locale '{0}'.\r\nIf anyone has any other suggestion for the error message, please let me know.\r\n\r\nLastly, I could use some help in coming up with test cases for database recovery such that the Collator support is available during create time, then the database is crashed and during next boot time, store will try to recover the database but should run into the situation that the Collator support is no more available. This kind of test case will make sure that Collator unavailability exception is thrown properly to the user even in case of store recovery.\r\n\r\nAs for the non-recovery database case, I think we have test cases already(CollationTest and CollationTest2) in place which run into problem on phoneME. With revision 618507, we changed those tests to first check if the collation support is available or not and run the tests only if the support is available. These tests can be modified to not do the check. Instead let database create fail with the new error message on phoneME and other platforms that do not support the Collator for locales required by CollationTest and CollationTest2. I can go ahead and make those changes to the test once I know that the attached patch looks good to the community.\r\n\r\nPlease send in your comments, if any, on the attached patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-21T20:32:02.520+0000","updated":"2008-03-21T20:32:02.520+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12581580","id":"12581580","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Mike Matrigali had following comment on derby list\r\n\r\nDo you have some way of creating a database, but then making the\r\nCollator not available when you next try to boot the database.  I am\r\ntrying to think of the recovery test case, but need to be able to create\r\nthe db using a territory based sorting and then the next test case needs\r\nto boot the db and find that collator not available.\r\n\r\nI assume you have the simple test case for creating the db with just\r\npicking a territory that does not exist anywhere.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-24T16:03:45.128+0000","updated":"2008-03-24T16:03:45.128+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12581583","id":"12581583","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Mike asked, \"I assume you have the simple test case for creating the db with just picking a territory that does not exist anywhere. \" I do not have a territory which I know will not exist anymore. I will work on writing a standalone Java program to see if it is possible to determine a missing territory on a given JVM with some while loop. In the meantime, if anyone has any ideas on how to find such a territory, please share them.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-24T16:06:05.513+0000","updated":"2008-03-24T16:06:05.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12581593","id":"12581593","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"You can always just make up a locale that doesn't exist, xx_zz","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-24T16:34:46.222+0000","updated":"2008-03-24T16:34:46.222+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12581597","id":"12581597","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"That worked, I tried it with my changes for catching requested locale that does not exist at database create time.Thanks, Dan.\r\n\r\n$ java org.apache.derby.tools.ij\r\nij version 10.5\r\nij> connect 'jdbc:derby:c:/dellater/dbTerritory;create=true;territory=xx_zz;collation=TERRITORY_BASED';\r\nERROR XJ041: Failed to create database 'c:/dellater/dbTerritory', see the next exception for details.\r\nERROR XBM04: Collator support not available from the JVM for the database's locale 'xx_ZZ'.\r\nij> exit;","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-24T16:39:20.813+0000","updated":"2008-03-24T16:39:20.813+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12581799","id":"12581799","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I have added a test suite in CollationTest to test for a locale that does not have support from JVM. The test suite added is as follows (in CollationTest.suite())\r\n        suite.addTest(collatedSuite(\"xx\", \"testNorwayCollation\"));\r\nThe 2nd argument really does not make a difference in this test case because locale \"xx\" is not supported by the JVM and hence we expect to get an error during database creation. When I run CollationTest, I get expected error for unsupported locale \"xx\" but I am not able to catch that exception. Apparently, the create database code path is taken through following path\r\n2008-03-25 06:17:34.033 GMT Thread[TestRunner-Thread,6,main] Cleanup action starting\r\nERROR XBM04: Collator support not available from the JVM for the database's locale 'xx'.\r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:286)\r\n\tat org.apache.derby.iapi.types.DataValueFactoryImpl.verifyCollatorSupport(DataValueFactoryImpl.java:1160)\r\n\tat org.apache.derby.iapi.types.DataValueFactoryImpl.boot(DataValueFactoryImpl.java:156)\r\n\tat org.apache.derby.iapi.types.J2SEDataValueFactory.boot(J2SEDataValueFactory.java:45)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1999)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:553)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:189)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1999)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1836)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.createPersistentService(BaseMonitor.java:1024)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.createPersistentService(Monitor.java:596)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.createDatabase(EmbedConnection.java:2319)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:363)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection30.<init>(EmbedConnection30.java:73)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection40.<init>(EmbedConnection40.java:54)\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)\r\n\tat org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:478)\r\n\tat org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:422)\r\n\tat org.apache.derbyTesting.junit.Decorator$2.setUp(Decorator.java:185)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:18)\r\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:59)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:59)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\r\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\r\n\tat junit.swingui.TestRunner$16.run(TestRunner.java:623)\r\n\r\nI thought I could overwrite the run() method in CollaitonTest as follows and I would be able to trap the unavailable Collator exception and move on to the next test. But the code in catch block never gets executed.\r\n  public final void run(junit.framework.TestResult result) {\r\n\t  try {\r\n\t\t  super.run(result);\r\n\t  } catch (Exception ex) {\r\n\t\t  if (ex instanceof SQLException){\r\n\t\t\t  SQLException sqle = (SQLException)ex; \r\n\t          assertEquals(\"Unexpected error when connecting to database \",\r\n\t                  \"XBM04\",\r\n\t                  sqle.getSQLState());\r\n\t\t  } \r\n      }\r\n  }\r\n\r\nAnyone has any tips on how I can successfully catch the exception thrown at the database create time and assert that it is XBM04.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-25T06:59:14.396+0000","updated":"2008-03-25T06:59:14.396+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12582013","id":"12582013","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"It appears that database creation happens through junit.extensions.TestSetup heirarchy. CollationTest on the other hand does not extend TestSetup. It extends  junit.framework.TestCase and I think that is why my run() method in CollationTest does not really get the exception thrown through the TestSetup class hierarchy. I will keep looking but if anyone has any ideas, please pass them along. Basically, what I am looking for is catching the exception thrown during the database creation time in CollationTest so that I can ignore Collator support not available exception.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-03-25T16:47:07.345+0000","updated":"2008-03-25T16:57:19.650+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12582028","id":"12582028","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Why not just attempt to create the database directly in the text fixture. The decorator for collated database is intended to provide a working database for collation tests, it's not intended as a general test fixture.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-25T18:20:37.587+0000","updated":"2008-03-25T18:20:37.587+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12584028","id":"12584028","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Committed changes into trunk with revision 643292. At the top level, following describes the changes that went in as 643292.\r\n\r\nDERBY-3320 This commit will ensure that if the Collator support does not exist during a territory based database creation, then we will throw an exception saying Collator support does not exist. In case of subsequent boot of a successfully created territory based database, we will check for the Collator support from JVM at the time first collation related operation is run on the database. This can happen if the database recovery needs to be done at the boot time or it can happen after the database has booted and user has issued a SQL which requires Collator support. \r\n\r\nThe details of the changes that went into different classes can be seen in the commit comments.\r\n\r\nI added a test case for a territory based database creation with a locale for which Collator support does not exist. There is no test case for database recovery and missing Collator support yet. There is also no test for successful territory based database boot but detecting no Collator support when a SQL is issued which requires Collator support.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-01T06:18:10.162+0000","updated":"2008-04-01T06:18:10.162+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12585205","id":"12585205","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I am researching into how support for a Collator can be removed from a JVM. What I am hoping to accomplish is create a territory based database with say Norwegian locale. Then shutdown the database and remove the support for Norwegian locale from the JVM in such a way that the Collator object for Nrowegian local can not be instantiated for that JVM. Then boot the database again and issue a SQL which requires collation operation and that SQL should fail because Collator could not be found for Norwegian. If anyone has any ideas on removal of Collator, please post a comment here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-03T17:42:08.837+0000","updated":"2008-04-03T17:42:08.837+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12585564","id":"12585564","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"body":"I'm not sure if there is any easy way to accomplish what you want. \r\n\r\nWhat comes to mind is that I think you could write your own CollatorProvider. This CollatorProvider could be written in a way that allows you to instrument it to behave the way you want. This CollatorProvider would extend the support in the jdk/jre with some dummy Collator for a made up Locale when you want it to. Then, when you want it to no longer provide support for that Locale, you just tell it not to by setting a property or something. Basically you could just tell it to support any Locale, the jre will call a method:\r\n\r\npublic abstract Collator getInstance(Locale locale)\r\n\r\nthat you implement yourself in your CollatorProvider.\r\n\r\nThe javadoc for LocaleServiceProvider says a bit about how to package such an extension. I don't know if this is a feasible path but it might be worth looking into.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"created":"2008-04-04T15:00:00.136+0000","updated":"2008-04-04T15:00:00.136+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12585566","id":"12585566","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"body":"Now that suites.All is running again on Java ME, I discovered that the new test in CollationTest fails on this platform. I tested on phoneME advanced and saw:\r\n\r\nThere was 1 failure:\r\n1) testMissingCollatorSupport(org.apache.derbyTesting.functionTests.tests.lang.CollationTest)junit.framework.AssertionFailedError: could not instantiate driver\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.CollationTest.loadDriver()V(CollationTest.java:1320)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.CollationTest.testMissingCollatorSupport()V(CollationTest.java:1250)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare()V(BaseTestCase.java:103)\r\n\tat sun.misc.CVM.runMain()V(CVM.java:514)\r\n\r\nAFAIK java.sql.Driver and DriverManager is not supported with JSR169, only DataSource.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vemund","name":"vemund","emailAddress":"vemund at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vemund Østgaard","active":true},"created":"2008-04-04T15:05:25.036+0000","updated":"2008-04-04T15:05:25.036+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12585639","id":"12585639","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Vemund thanks for your comments. I will further investigate into what you suggested. I will also look into DriverManager vs DataSource issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-04T17:13:04.949+0000","updated":"2008-04-04T17:13:04.949+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12585641","id":"12585641","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I have migrated the revision 643292 from trunk into 10.4 codeline with revision 644779. I will work on migrating it to 10.3 codeline as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-04T17:14:04.470+0000","updated":"2008-04-04T17:14:04.470+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12586523","id":"12586523","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Checked in a fix for DriverManager vs DataSource issue with the newly added test. JSR169 does not support DriverManager. I changed the test to use TestUtil.getConnection rather than getting the Connection directly through DriverManager.getConnection. The change went in as 645665 into trunk. I will merge this into 10.4 codeline later. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-07T20:29:39.657+0000","updated":"2008-04-07T20:29:39.657+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12586554","id":"12586554","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Migrated test changes into 10.4 codeline with revision 645706.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-07T21:44:30.561+0000","updated":"2008-04-07T21:44:30.561+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12586677","id":"12586677","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Merged 643292 and 645665 from trunk into 10.3 codeline. The revision for 10.3 merge is 645775.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-08T06:38:22.085+0000","updated":"2008-04-08T06:38:22.085+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12586921","id":"12586921","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The only item remaining on this issue is adding 2 test cases. The test cases that will be nice to have are 1)create a territory based database, then  crash it, then make sure that the Collator support for the database's locale is not available anymore and then try to reboot the database, This should make the database go through the recovery and the recovery code should fail because Collator support does not exist 2)create a territory based database, then shut it down, then make sure that the Collator support for the database's locale is not available anymore and then reboot the database. The database reboot should succeed because it did not need access to Collator. Now, issue a SQL which will do a collation operation and then collation operation should fail because Collator is not available.\r\n\r\nThe manual steps in ij for test case 1 would be \r\nconnect 'jdbc:derby:c:/dellater/dbTerritory;create=true;territory=no;collation=TERRITORY_BASED';\r\ncreate table t1(c11 int, c12 char(4));\r\ncreate index i1 on t1(c12);\r\nautocommit off;\r\ninsert into t1 values (1,'11'),(2,'22');\r\ninsert into t1 values (3,'33'),(4,'44');\r\ndelete from t1 where c11=1;\r\n--IMPORTANT STEP. Ctrl-C out of ij. ie do not exit but instead, force a database crash by doing Ctrl-C\r\nNow, remove the Collator support for Norway and restart ij again and following reboot of the db should fail\r\nconnect 'jdbc:derby:c:/dellater/dbTerritory';\r\n\r\nThe manual steps in ij for test case 2 would be\r\nconnect 'jdbc:derby:c:/dellater/dbTerritory;create=true;territory=no;collation=TERRITORY_BASED';\r\ncreate table t1(c11 int, c12 char(4));\r\ninsert into t1 values (1,'11'),(2,'22');\r\nexit;\r\n--IMPORTANT STEP Remove the Collator support for Norway and restart ij and connect to the database\r\nconnect 'jdbc:derby:c:/dellater/dbTerritory';\r\n--following SQL will fail because it requires acces to Collator\r\nselect * from t1;\r\n\r\n\r\nI have not spent the time on Vemund's suggestion about creating and adding a custom Collator and removing it. I will go ahead and enter a new jira entry for exploring custom Collator and then using it to add the 2 test cases mentioned above. In the mean time, I did hand tweaked the Derby code to make sure that the above 2 test cases fail in my client as expected. \r\n\r\nIn both the test cases above, before we restart the ij, I changed DataValueFactoryImpl.verifyCollatorSupport code to always throw an exception that Collator is not found. So, my changes in DataValueFactoryImpl.verifyCollatorSupport  would look as follows\r\n    \tLocale[] availLocales =  Collator.getAvailableLocales();\r\n    \t//Verify that Collator can be instantiated for the given locale.\r\n    \tboolean localeFound = false;\r\n    \tfor (int i=0; i<availLocales.length;i++)\r\n    \t{\r\n    \t\tif (availLocales[i].equals(databaseLocale)) {\r\n    \t\t\tlocaleFound = true;\r\n    \t\t\tbreak;\r\n    \t\t}\r\n    \t}\r\n    \tif (1==1) // THIS IS WHAT i CHANGED. RATHER THAN CHECKING FOR LOCALEFOUND, I DO 1==1 SO THE EXCEPTION WILL BE THROWN\r\n    \t//if (!localeFound)\r\n\t\t\tthrow StandardException.newException(\r\n\t\t\t\t\tSQLState.COLLATOR_NOT_FOUND_FOR_LOCALE, \r\n\t\t\t\t\tdatabaseLocale.toString());\r\n    \t\r\n    \treturn (RuleBasedCollator) Collator.getInstance(databaseLocale);\r\n\r\nBut as we can see, this code obviously can't be checked in. I just did it in my local codeline to simulate missing Collator support during database recovery or during subsequent database boot with first SQL with collation support requirement. I will go ahead and enter a jira entry for a more graceful way of removing Collator in order for us to have the 2 test cases in our junit test suite.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-08T18:18:48.695+0000","updated":"2008-04-08T18:18:48.695+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12386270/comment/12586933","id":"12586933","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I have added jira entry DERBY-3608 for 2 additional test cases that could be added.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-04-08T19:20:55.095+0000","updated":"2008-04-08T19:20:55.095+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3320/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06r9b:"}}