{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12328887","self":"https://issues.apache.org/jira/rest/api/latest/issue/12328887","key":"DERBY-960","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-02-16 04:10:16.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22220","customfield_12310222":"1_*:*_1_*:*_740560000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_7861744000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-02-22T05:07:06.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-960/watchers","watchCount":0,"isWatching":false},"created":"2006-02-13T15:24:26.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2006-05-24T04:56:10.000+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11690","id":"11690","name":"Network Client"}],"timeoriginalestimate":null,"description":"\nClient xa prepare returns XA_OK instead of  XA_RDONLY for a read only transaction\n\nThe code below checks the return value of XaResource.prepare to decide whether to commit the transaction.   The prepare return value is XA_OK ( 0)  for client when it should be XA_RDONLY(3)\n\nD>java ReadOnlyTran derbycli\n10.2.0.0 alpha\nApache Derby\nApache Derby Network Client JDBC Driver\ntable already exists\n==>: 1\nXAResource.XA_RDONLY3\nXAResource.XA_OK0\nprp1 is: 0\nException in thread \"main\" org.apache.derby.client.am.XaException: XAER_NOTA : Error executing a XAResource.commit(), Server returned XAER_NOTA\n        at org.apache.derby.client.net.NetXAResource.throwXAException(NetXAResource.java:728)\n        at org.apache.derby.client.net.NetXAResource.commit(NetXAResource.java:216)\n        at ReadOnlyTran.main(ReadOnlyTran.java:94)\nCaused by: org.apache.derby.client.am.SqlException: Error executing a XAResource.commit(), Server returned XAER_NOTA\n        at org.apache.derby.client.net.NetXAResource.xaRetValErrorAccumSQL(NetXAResource.java:976)\n        at org.apache.derby.client.net.NetXAResource.commit(NetXAResource.java:204)\n        ... 1 more\nD>\n\nimport java.sql.Connection;\nimport java.sql.DatabaseMetaData;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\nimport javax.sql.XAConnection;\nimport javax.transaction.xa.XAException;\nimport javax.transaction.xa.XAResource;\nimport javax.transaction.xa.Xid;\n\nimport com.ibm.db2.jcc.DB2Xid;\n\nclass ReadOnlyTran  \n{\n\n   \n    public static void main (String args [])throws Exception \n    {\n    \t//org.apache.derby.jdbc.ClientConnectionPoolDataSource ds = new org.apache.derby.jdbc.ClientConnectionPoolDataSource();\n    \torg.apache.derby.jdbc.ClientXADataSource ds = new \n\t\torg.apache.derby.jdbc.ClientXADataSource();\n    \t//org.apache.derby.jdbc.EmbeddedXADataSource ds = new \n\t\t//org.apache.derby.jdbc.EmbeddedXADataSource();\n    \tConnection conn = null;\n    \tds.setDatabaseName(\"sample\");\n\t\tds.setTraceFile(\"trace.out\");\n    \tds.setConnectionAttributes(\"create=true\");\n\n         conn = ds.getConnection();\n        PreparedStatement ps1 = null;\n         try\n         {\n             DatabaseMetaData md = conn.getMetaData() ;\n             \nSystem.out.println(md.getDatabaseProductVersion());\n             System.out.println(md.getDatabaseProductName());\n             ps1 = conn.prepareStatement(\"CREATE TABLE TAB1(COL1 INT NOT NULL)\");\n             ps1.executeUpdate();\n        \t System.out.println(\"done creating  table\");\n             conn.commit ();\n         } catch (SQLException x)\n         {\n             System.out.println (\"table already exists\");\n         }                 \n        \n        XAConnection pc1 = ds.getXAConnection();\n        XAResource xar1 = pc1.getXAResource();\n        Xid xid1 = createXid(11);\n        xar1.start(xid1, XAResource.TMNOFLAGS);\n        Connection conn1 = pc1.getConnection();             \n        doSelect(conn1, 50);\n\t\t//doInsert(conn1);\n        conn1.close();\n        xar1.end(xid1, XAResource.TMSUCCESS);\n\n        int prp1 = xar1.prepare(xid1);\n\n        System.out.println(\"XAResource.XA_RDONLY\" + \nXAResource.XA_RDONLY);\n        System.out.println(\"XAResource.XA_OK\" + \nXAResource.XA_OK);\n        System.out.println(\"prp1 is: \" + prp1);\n        // Commit transaction\n        if (prp1 == XAResource.XA_OK)\n           xar1.commit(xid1, false);\n\n        // Close physical connection\n        pc1.close();\n      }\n  \n    \n    private static void doSelect(Connection conn, int deptno) \nthrows SQLException \n    {\n        Statement stmt = conn.createStatement();\n        ResultSet rset1 = stmt.executeQuery(\"select * from tab1\");\n        while (rset1.next())\n        {\n        \tSystem.out.println(\"==>: \" + rset1.getString(1));\n        }\n        \n        stmt.close();\n        stmt = null;\n    }\n\n\tprivate static void doInsert(Connection conn) throws SQLException\n\t{\n        Statement stmt = conn.createStatement();\n\t\tstmt.executeUpdate(\"Insert into tab1 values(1)\");\n\t\tstmt.close();\n\t}\n    \n    static Xid createXid(int bids) throws XAException {\n        byte[] gid = new byte[1];\n        gid[0] = (byte) 9;\n        byte[] bid = new byte[1];\n        bid[0] = (byte) bids;\n        byte[] gtrid = new byte[64];\n        byte[] bqual = new byte[64];\n        System.arraycopy(gid, 0, gtrid, 0, 1);\n        System.arraycopy(bid, 0, bqual, 0, 1);\n        Xid xid = new DB2Xid(0x1234, gtrid, bqual);\n        return xid;\n    }\n}\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"40673","summary":"Client xa prepare returns XA_OK instead of  XA_RDONLY for a read only transaction","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":9,"total":9,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12366153","id":"12366153","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"looking at this briefly I noticed the following.\r\n\r\n1) Runs ok with EmbeddedXADAtaSource\r\n\r\n2) The protocol flows from the client for prepare and commit with and without the insert are just the same, and  setting derby.drda.debug=true it looks like everything is going through the right path,  xid and flags are set correctly until we get this exception  on commit.  \r\n\r\njavax.transaction.xa.XAException\r\n\tat org.apache.derby.jdbc.EmbedXAConnection.commit(EmbedXAConnection.java:425)\r\n\tat org.apache.derby.impl.drda.DRDAXAProtocol.commitXATransaction(DRDAXAProtocol.java:310)\r\n\tat org.apache.derby.impl.drda.DRDAXAProtocol.commitTransaction(DRDAXAProtocol.java:267)\r\n\tat org.apache.derby.impl.drda.DRDAXAProtocol.parseSYNCCTL(DRDAXAProtocol.java:139)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:906)\r\n\tat org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:238)\r\nSending data\r\ntotal memory: 2465792 free: 1340328 Sun Feb 12 22:25:07 PST 2006\r\n\r\nAttaching repro and some traces in ReadOnlyTran.zip\r\n\r\nReadOnlyTran.java - repro for this issue\r\n\r\nreadonly.trace.out - client trace output with testcase and exception.\r\nwithinsert.trace.out - client trace outputwith insert added\r\n\r\nnsreadonly.out -  Network Server output with derby.drda.debug=true with the testcase and exception.\r\n\r\nnswithinsert.out - Network Server output with derby.drda.debug=true with the insert added \r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-02-13T15:38:57.000+0000","updated":"2006-02-13T15:38:57.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12366154","id":"12366154","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Repro and some traces per previous comment.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-02-13T15:40:56.000+0000","updated":"2006-02-13T15:40:56.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12366296","id":"12366296","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Changed the summary and description to more accurately describe the problem.  From the description, for a while I was focussed on the commit, where in fact the problem is the return value from the prepare.\r\n\r\nThe source of the problem appears to be in DRDAXAProtocol.java  in prepareXATransaction where the return value is not properly returned.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-02-14T14:13:09.000+0000","updated":"2006-02-14T14:13:09.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12366334","id":"12366334","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is a preliminary patch for this issue.\r\nFor Network Server\r\n- Changed DRDAXAProtocol prepareXATransaction to return the return value of prepare in the SYNCCRD\r\nThe server was always returning XA_OK if prepare did not throw an error instead of passing the return value to the client.\r\n\r\nFor Network Client\r\n- Changed NetXAResource()  prepare to handle XA_RDONLY returned from the server.  It was throwing an exception for any value returned from the server other than XA_OK.\r\n\r\n\r\nISSUE and QUESTION:\r\nThis patch is against the trunk, but the fix needs to go to 10.1\r\n\r\nWith this fix,  older clients working with newer servers will now throw an XAException when prepare returns XA_RDONLY because the client side fix is not in place.  This is potentially worse than the previous symptom of returning  XA_OK.  Should we bump the DRDA maintenance id and continue to return XA_OK with older clients, or just put this fix in place and require upgrade of client to the latest 10.1 to get the fix?\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-02-14T22:34:42.000+0000","updated":"2006-02-14T22:34:42.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12366437","id":"12366437","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attaching a new diff. The first one had some residual cruft in it that was not needed.\r\nThe relevant client change is this:\r\n\r\n--- java/client/org/apache/derby/client/net/NetXAResource.java  (revision 377480)\r\n+++ java/client/org/apache/derby/client/net/NetXAResource.java  (working copy)\r\n@@ -413,7 +413,7 @@\r\n         } finally {\r\n             conn_.pendingEndXACallinfoOffset_ = -1; // indicate no pending calli\r\nnfo\r\n         }\r\n-        if (rc != XAResource.XA_OK) {\r\n+        if ((rc != XAResource.XA_OK ) && (rc != XAResource.XA_RDONLY)) {\r\n             throwXAException(rc, false);\r\n         }\r\n         if (conn_.agent_.loggingEnabled()) {\r\n\r\n\r\nPerhaps the backward compatibility issue is not really as much of an issue as I first thought. \r\nWith just the server fix  an unpatched client, the repro for this bug actually passes, but the read only case in xaSimplePositive  prints an  IJ ERROR: XA_RDONLY on the prepare.  I don't understand the difference in the two cases.\r\n\r\n\r\nRegardless, I am a little conflicted about bumping the DRDA maintenance version and putting code in Network Server to continue returning the wrong return value, just because the client can't handle it.\r\n\r\nBelow is the case in xaSimplePositive that fails with an  unpatched cient and a patched server.\r\nThe IJ ERROR: XA_RDONLY does not occur  with both unpatched client and server and does not occur with the full patch.\r\n\r\nThe case looks just the same, xa_prepare on a read only transaction, so I am not sure what\r\nxa_start xa_noflags 3;\r\nij(XA)> select * from APP.global_xactTable where gxid is not null order by gxid;\r\nGXID |STATUS |READ& |USERNAME |TYPE\r\n-----\r\n(3 |IDLE |NULL |SKU |UserTransaction\r\nij(XA)> select * from APP.foo;\r\nA\r\n-----\r\n0\r\n1\r\n3\r\nij(XA)> xa_end xa_success 3;\r\nij(XA)> xa_prepare 3;\r\nIJ ERROR: XA_RDONLY\r\nij(XA)> -- should fail with XA_NOTA because we prepared a read only transaction\r\nxa_commit xa_1Phase 3;\r\nIJ ERROR: XAER_NOTA\r\n\r\nSo what do you think, do we bump the DRDA id for this or no?   I am ready to vote no as I think really anyone using client xa is just really going to need the client fix anyway.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-02-15T14:39:27.000+0000","updated":"2006-02-15T14:39:27.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12366524","id":"12366524","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":">  Should we bump the DRDA maintenance id and continue to return XA_OK with older clients, \r\n> or just put this fix in place and require upgrade of client to the latest 10.1 to get the fix?\r\n\r\nI think we should require clients to upgrade. If I'm understanding this issue correctly, continuing to return XA_OK for a prepare of a read-only transaction is of little value to the client, because if they then proceed to try to commit that prepared-read-only branch of the global transaction, they'll get an exception from the commit, right?\r\n\r\nSo it seems like the client really needs to know the correct information, thus we need to just fix it in both places and ask users to get the fix.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-02-16T04:10:16.000+0000","updated":"2006-02-16T04:10:16.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12366843","id":"12366843","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Checked this fix into 10.2\r\nThe test for this issue was checked in (accidentally) in patch2 of DERBY-435.\r\nI will add an appropriate comment to that test.\r\n\r\nDate: Fri Feb 17 11:44:47 2006\r\nNew Revision: 378613\r\n\r\nURL: http://svn.apache.org/viewcvs?rev=378613&view=rev\r\n\r\nLeaving this issue open for port to 10.1\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-02-18T05:03:31.000+0000","updated":"2006-02-18T05:03:31.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12367188","id":"12367188","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Suresh pointed out to me that this change caused the following new failures testing derbynetclientmats with 10.1 client and 10.2 server:\r\n\r\n (jdk15/IBM131/IBM142 client 10.1) derbynetclientmats: \r\n    derbynetclientmats/derbynetclientmats.fail:jdbcapi/xaSimplePositive.sql \r\n    derbynetclientmats/derbynetclientmats.fail:jdbcapi/xaStateTran.sql \r\n    both tests failed with following diff:\r\n     \r\n    > IJ ERROR: XA_RDONLY\r\n\r\nI will port this fix to 10.1 which will resolve the failures on the latest version of 10.1 but it will continue to fail with older clients.    There was a discussion about whether to bump the DRDA maintenance version to make this work with older clients but the consensus was that anyone using XA will need both the client and server changes.\r\n(see earlier comments in this issue).\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-02-21T22:36:30.000+0000","updated":"2006-02-21T22:36:30.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328887/comment/12367249","id":"12367249","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Checked in fix to 10.1\r\n\r\nAuthor: kmarsden\r\nDate: Tue Feb 21 08:19:30 2006\r\nNew Revision: 379513\r\n\r\nURL: http://svn.apache.org/viewcvs?rev=379513&view=rev\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-02-22T05:07:06.000+0000","updated":"2006-02-22T05:07:06.000+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-960/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i07brr:"}}