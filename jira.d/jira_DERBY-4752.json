{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12469809","self":"https://issues.apache.org/jira/rest/api/latest/issue/12469809","key":"DERBY-4752","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315564","id":"12315564","description":"First release on the 10.7 branch.","name":"10.7.1.1","archived":false,"released":true,"releaseDate":"2010-12-14"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2010-07-22 13:29:25.875","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24445","customfield_12310222":"3_*:*_1_*:*_2930238086_*|*_1_*:*_1_*:*_81945876_*|*_6_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-08-25T08:26:02.365+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4752/watchers","watchCount":0,"isWatching":false},"created":"2010-07-21T11:42:58.403+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315564","id":"12315564","description":"First release on the 10.7 branch.","name":"10.7.1.1","archived":false,"released":true,"releaseDate":"2010-12-14"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12342504","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12342504","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12520243","key":"DERBY-5391","self":"https://issues.apache.org/jira/rest/api/2/issue/12520243","fields":{"summary":"The syscs_diag.error_log_reader() and syscs_diag.statement_duration() vtis do not work on derby error logs created since 10.7.1","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-08-26T15:29:10.146+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11415","id":"11415","name":"Services"}],"timeoriginalestimate":null,"description":"CheapDateFormatter has multiple problems. These are the ones I'm aware of:\r\n\r\n1) On the boundary between non-leap years and leap years it will return first day of thirteenth month in previous year (for instance, 2011-13-01 instead of 2012-01-01)\r\n\r\n2) It treats all years divisible by four as leap years. Those divisible by 100 and not by 400 are not leap years. It attempts to adjust for that (see the snippet below) but it always ends up setting leapYear=true if (year%4)==0.\r\n\r\n\t\t// It's a leap year if divisible by 4, unless divisible by 100,\r\n\t\t// unless divisible by 400.\r\n\t\tif ((year % 4L) == 0) {\r\n\t\t\tif ((year % 100L) == 0) {\r\n\t\t\t\tif ((year % 400L) == 0) {\r\n\t\t\t\t\tleapYear = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tleapYear = true;\r\n\t\t}\r\n\r\n3) More leap year trouble. To find out which year it is, it calculates the number of four year periods that have elapsed since 1970-01-01. A four year period is considered 365*3+366 days. Although most four year periods are of that length, some are shorter, so we'll get one day off starting from year 2100, two days off from year 2200, and so on.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"36315","summary":"CheapDateFormatter returns incorrect and invalid date strings","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":15,"total":15,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12890707","id":"12890707","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Examples:\r\n\r\nIssue 1:\r\n\r\nCheapDateFormatter.formatDate(1325376000000L) returns \"2011-13-01 00:00:00.000 GMT\", expected: \"2012-01-01 00:00:00.000 GMT\"\r\n\r\nThe returned date is wrong and invalid because there is no month 13.\r\n\r\nIssue 2:\r\n\r\nCheapDateFormatter.formatDate(4114195200000L) returns \"2100-05-16 00:00:00.000 GMT\", expected: \"2100-05-17 00:00:00.000 GMT\"\r\n\r\nThe returned date is one day off.\r\n\r\nIssue 3:\r\n\r\nCheapDateFormatter.formatDate(4107542400000L) returns \"2100-02-29 00:00:00.000 GMT\", expected \"2100-03-01 00:00:00.000 GMT\"\r\n\r\nThe returned date is invalid because there is no February 29 in the year 2100.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-21T12:30:44.545+0000","updated":"2010-07-21T12:30:44.545+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12890803","id":"12890803","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Instead of trying to fix the algorithm, I think it would be better to rely on java.util.Calendar to do these calculations for us. That would require allocating a Calendar object each time the method is called (in addition to all the String objects the method already allocates), but it won't instantiate any ResourceBundles or Locales, which was the reason why CheapDateFormatter was written in the first place, according to the comments. I haven't found that CheapDateFormatter is used in any performance critical section of the code, so I'm not sure if that's much of a concern in any case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-21T18:14:21.599+0000","updated":"2010-07-21T18:14:21.599+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891086","id":"12891086","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Here's a patch that makes CheapDateFormatter.formatDate() use a Calendar object to calculate the components of the date. The patch also adds a unit test for the method. Running the full regression test suite now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-22T10:31:55.826+0000","updated":"2010-07-22T10:31:55.826+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891088","id":"12891088","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Whoops! I meant to fix a typo in a comment before I uploaded the patch. 1b fixes the typo and removes an unintended blank line.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-22T10:41:02.352+0000","updated":"2010-07-22T10:41:02.352+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891092","id":"12891092","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Sigh... More typos... I had the wrong JIRA number in the test comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-22T10:52:59.316+0000","updated":"2010-07-22T10:52:59.316+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891137","id":"12891137","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"All the regression tests passed with the 1c patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-22T12:48:21.907+0000","updated":"2010-07-22T12:48:21.907+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891147","id":"12891147","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I am not really sure if this is at all relevant at this time, but this issue brought back memories because it touched on my first ever technical conversation regarding what was at that time Cloudscape with Jeff Lichtman.  I seem to recall he had implemented CheapDateFormatter because it was found just printing the date to the log was taking huge amounts of time.  Of course Calendar did not exist at that time, so I don't know if the performance is acceptable. Also I think any performance impact was probably more closely related to being able to test performance with statement logging, etc turned on than a typical user scenario, but I thought I would mention this bit of history in case performance of the new CheapDateFormatter needs to be measured.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2010-07-22T13:29:25.875+0000","updated":"2010-07-22T13:29:25.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891220","id":"12891220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for providing the historical background for the CheapDateFormatter class, Kathey.\r\n\r\nI wrote a small performance test (see the attached CheapFormatterPerfTest.java) to see the impact of the fix. On my laptop, running Java 6u21 with default options, the old implementation managed to format about 280000 timestamps per second. The new implementation only manages about 190000 timestamps per second, which is slower, but I cannot imagine that it would be noticed in any realistic scenario.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-22T15:36:34.352+0000","updated":"2010-07-22T15:36:34.352+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891355","id":"12891355","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"body":"I am not totally understand the performance impact for this issue. However, (280000-190000)/280000 is 32% slower. If we apply that to a big amount of timestamp implementation store procedure. Will that be a slower scenario case? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"created":"2010-07-22T21:48:39.599+0000","updated":"2010-07-22T21:48:39.599+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891365","id":"12891365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I think 190000 timestamps per second seems totally reasonable.  #:) I don't know why it was an issue back then.  I remember being surprised,  but didn't pursue it in more detail.\r\n  \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2010-07-22T22:20:25.327+0000","updated":"2010-07-22T22:20:25.327+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891515","id":"12891515","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I committed the 1c patch to trunk with revision 967000.\r\n\r\nLily: This class is only used for formatting timestamps when writing messages to derby.log, so it's not part of normal query processing unless statement logging is turned on. And even in the cases where logging is turned on, the 32% slow-down is only for the generation of the timestamp, which is just a small part of the total query cost, so the overall performance impact will probably more like 1% than 30% (depending on the complexity of the query, of course). I think that in environments where performance is critical, statement logging is almost certainly turned off, and that's why I don't worry too much about it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-23T08:15:19.337+0000","updated":"2010-07-23T08:15:19.337+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891520","id":"12891520","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Out of curiosity, I changed the implementation of CheapDateFormatter.formatDate() to\r\n\r\n    public static String formatDate(long time) {\r\n        return new Date(time).toString();\r\n    }\r\n\r\nand to\r\n\r\n    public static String formatDate(long time) {\r\n        return new Date(time).toGMTString();\r\n    }\r\n\r\nThe toString() variant (which localizes the timestamp) managed 390000 timestamps per second, whereas the toGMTString() variant managed 500000.\r\n\r\nSo it seems like the performance of java.util.Date has improved a lot over these years and it's now way faster than CheapDateFormatter. Perhaps now it's time to remove the CheapDateFormatter class altogether and use java.util.Date instead?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-23T08:34:08.631+0000","updated":"2010-07-23T08:34:08.631+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12891691","id":"12891691","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"body":"+1 \r\nUse java.util.Date insteads of CheapDateFormatter. I was googleing the performance issue for java.util.Date. There are some issues before 2008. After 2008, I could not find people report performance issue related to java.util.Date. Also, with 500000 timestamps per second testing result, it looks very promise to me.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"created":"2010-07-23T17:59:59.945+0000","updated":"2010-07-23T17:59:59.945+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12899829","id":"12899829","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Here's a patch that removes CheapDateFormatter and makes the callers\r\nuse java.util.Date instead. CheapDateFormatter used to convert the\r\ntimestamps to GMT, whereas Date.toString() will use the local time\r\nzone. Date.toString() also formats the timestamp differently. So,\r\nwhere CheapDateFormatter produces a timestamp like\r\n\r\n  2010-08-18 11:38:59.755 GMT\r\n\r\nwe will now print something like this instead:\r\n\r\n  Wed Aug 18 13:38:59 CEST 2010\r\n\r\nI think either one of these two formats works just as well as the\r\nother for logging purposes, but others may disagree.\r\n\r\nFull list of changes made by the patch:\r\n\r\nM       java/engine/org/apache/derby/impl/services/monitor/BaseMonitor.java\r\n\r\nRemoved unused imports, including CheapDateFormatter. No actual use of\r\nCheapDateFormatter in this class.\r\n\r\nM       java/engine/org/apache/derby/impl/services/locks/Timeout.java\r\n\r\nUse Date.toString() instead of CheapDateFormatter to format the\r\ntimestamp included in timeout exceptions when\r\nderby.locks.deadlockTrace has been set.\r\n\r\nM       java/engine/org/apache/derby/impl/services/stream/BasicGetLogHeader.java\r\n\r\nUse Date.toString() to produce the timestamp in the log stream header.\r\n\r\nM       java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java\r\n\r\nUse Date.toString() instead of CheapDateFormatter when writing the\r\nstartup and shutdown messages to derby.log. Also removed unused\r\nimports, including CheapDateFormatter.\r\n\r\nM       java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java\r\n\r\nUse Date instead of CheapDateFormatter when server prints console\r\nmessages.\r\n\r\nD       java/engine/org/apache/derby/iapi/util/CheapDateFormatter.java\r\nD       java/testing/org/apache/derbyTesting/unitTests/junit/CheapDateFormatterTest.java\r\nM       java/testing/org/apache/derbyTesting/unitTests/junit/_Suite.java\r\n\r\nRemoved CheapDateFormatter class and its unit tests.\r\n\r\nA       java/testing/org/apache/derbyTesting/functionTests/tests/tools/derbyrunjartest_sed.properties\r\nM       java/testing/org/apache/derbyTesting/functionTests/master/derbyrunjartest.out\r\n\r\nFilter out a line with a timestamp from derbyrunjartest since the\r\nformat of the timestamp has changed and isn't caught by the old\r\nfilters.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-08-18T12:43:02.901+0000","updated":"2010-08-18T12:43:02.901+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12469809/comment/12902342","id":"12902342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed revision 988874.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-08-25T08:26:02.144+0000","updated":"2010-08-25T08:26:02.144+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4752/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06kvb:"}}