{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12360006","self":"https://issues.apache.org/jira/rest/api/latest/issue/12360006","key":"DERBY-2220","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312251","id":"12312251","description":"Head of 10.2 branch","name":"10.2.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-02-12 19:35:01.696","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22949","customfield_12310222":"3_*:*_1_*:*_4201234323_*|*_1_*:*_1_*:*_1225500576_*|*_6_*:*_2_*:*_12183739_*|*_5_*:*_3_*:*_8517112819_*|*_4_*:*_2_*:*_131910246","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-03-23T07:37:54.432+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2220/watchers","watchCount":2,"isWatching":false},"created":"2007-01-08T13:16:40.501+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"14.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2008-07-25T17:36:41.410+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"}],"timeoriginalestimate":null,"description":"Using this piece of code derby will not release a table lock of 'dummy' table.\n\n            String query = \"insert into dummy (field1) values ('\" + Integer.toString(value) + \"')\";\n            XAConnection xaConnection = createXAConnection(\"jdbc:derby://localhost:1527/TestDB\", \"\", \"\");\n            XAResource xaResource = xaConnection.getXAResource();\n            conn = xaConnection.getConnection();\n            \n            Xid xid = createXid(value);        \n\n            xaResource.setTransactionTimeout(10);\n            xaResource.start(xid, XAResource.TMNOFLAGS);\n            \n            Statement statement = conn.createStatement();\n            statement.execute(query);        \n            \n            // terminate the client application\n            // this will not release any locks\n            System.exit(0);\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"39429","summary":"Uncommitted transactions executed throught XAResource will held locks after the application terminates (or crashes during the transaction).","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Solaris Nevada build 49, Sun's JDK1.6","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":44,"total":44,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12463032","id":"12463032","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"The way how to reproduce the error:\r\n\r\nRun the derby server on localhost (pass these options to java: -Dderby.locks.monitor=true -Dderby.locks.deadlockTrace=true). Execute a code in xxx.sql, run the XATransactionTest.java. Use ij tool to connect to a TestDB database on localhost. Execute the query 'select * from dummy;' After a couple of seconds you will get a message\r\n\r\nij> select * from dummy;\r\nERROR 40XL2: A lock could not be obtained within the time requested.  The lockTable dump is:\r\n2007-01-08 13:12:52.610 GMT\r\nXID       |TYPE         |MODE|LOCKCOUNT|LOCKNAME                                                                        |STATE|TABLETYPE / LOCKOBJ                   |INDEXNAME / CONTAINER_ID / (MODE for LATCH only)  |TABLENAME / CONGLOM_ID                |\r\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n*** The following row is the victim ***\r\n131       |ROW          |S   |0        |(1,7)                                                                           |WAIT |T                             |NULL                                              |DUMMY                                 |\r\n*** The above row is the victim ***\r\n130       |ROW          |X   |1        |(1,7)                                                                           |GRANT|T                             |NULL                                              |DUMMY                                 |\r\n130       |TABLE        |IX  |1        |Tablelock                                                                       |GRANT|T                             |NULL                                              |DUMMY                                 |\r\n131       |TABLE        |IS  |1        |Tablelock                                                                       |GRANT|T                             |NULL                                              |DUMMY                                 |\r\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-01-08T13:22:08.621+0000","updated":"2007-01-08T13:22:08.621+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12463055","id":"12463055","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"The problem is in the org.apache.derby.impl.drda.Database class.\r\n\r\nThe function close() contains the following code:\r\n\r\n\t\t\tif ((conn != null) && !conn.isClosed())\r\n\t\t\t{\r\n\t\t\t\tif (! forXA)\r\n\t\t\t\t{\r\n\t\t\t\t\tconn.rollback();\r\n\t\t\t\t}\r\n\t\t\t\tconn.close();\t\t\t\t\t\r\n\t\t\t}\r\n\r\nThus, the rollback() is not executed for XA connection. Anybody knows the reason why?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-01-08T15:27:22.048+0000","updated":"2007-01-08T15:27:22.048+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12466753","id":"12466753","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"A discussion about the issue at derby-dev could be found at:\r\n\r\nhttp://www.nabble.com/Rollback-is-not-executed-only-for-XA-sessions-after-the-socket-is-closed.-tf2940001.html#a8220033","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-01-23T15:27:48.734+0000","updated":"2007-01-23T15:27:48.734+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12466760","id":"12466760","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"I spent more time trying to dig out something... There is a good description about the derby implementation in the source of org.apache.derby.iapi.jdbc.ResourceAdapter interface.\r\n\r\nThere exist a 1:1 mapping between XAConnection instance and XAResource instance.\r\n\r\nThe behaviour how the driver should behave if the connection willl be closed is not covered by the JTA specification at all. The XAResource could be in the following states:\r\n\r\n  * Not Associated with global transaction\r\n  * Associated with global transaction\r\n  * Association Suspended\r\n\r\nAccording the JTA Specification if the transaction is suspended, it have to be only resumed, finished with success or error on the same XAResource instance. At least transaction association table shows that the XAResource instance could not be used for something else than calling end(TMRESUME), end(TMFAIL) and end(TMSUCCESS). I found somewhere in code that the derby implements this in the same way (can not find the comment again, still trying ;-).\r\n\r\nIt seems that it should be fairly easy and safe to roll back an XA transaction when the logicall connection will be closed by the client and the transaction was in Associated state on that connection.\r\n\r\nHowever, there is still the case when all the transaction branches are dissassociated from the connections but the application had not done commit or roll back yet and will never do that in the future (wrong code, or application crash). It seems to me that the only one solution to this is to implement some sort of configurable time out for inactivity for global transaction on XAResource instances. Any other suggestions?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-01-23T16:16:14.201+0000","updated":"2007-01-23T16:16:14.201+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12472356","id":"12472356","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"I have created a proposal for the patch.\r\n\r\nIt covers only the simple case (for the network driver) when the global transaction is associated with the connection and the application closes the socket. The last transaction associated with the connection will be aborted. I ran the derbyall and suites.All without any failures.\r\n\r\nI would add one more line to DRDAXAProtocol.endXA\r\n    \"this.xid = null;\"\r\nto do rollback only for transactions in unit of work.\r\n\r\nPlease, provide any comments.\r\n\r\nFinally, I will write also a test.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-12T17:35:28.858+0000","updated":"2007-02-12T17:35:28.858+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12472394","id":"12472394","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Julius, I went through the patch and it looks good and well commented. I was curious though if the existing method rollbackTransaction(Xid xid) in DRDAXAProtocol can be used to do some/all of the work done by the new method abortCurrentTransaction()","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-02-12T19:35:01.696+0000","updated":"2007-02-12T19:35:01.696+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12472407","id":"12472407","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I agree with Mamta that the patch looks good. I have one questions, though:\r\n\r\nThe xid field in DRDAXAProtocol is only reset to null in abortCurrentTransaction(). Should it also be reset in other methods, for instance in endXA()? It seems to me that abortCurrentTransaction() will always be called when the client disconnects, even when it has done the required cleanup first.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-02-12T20:38:50.463+0000","updated":"2007-02-12T20:38:50.463+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12472571","id":"12472571","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"Mamta: The existing method will send also some DRDA stuff to the socket so the existing one can not be used. I can create a new method to do the common stuff for both methods but I decided that the code for it would be too simple.\r\n\r\nKnut: Yes, I agree with you but currently I am not quite sure in which methods I can disassociate the transaction to be aborted. To clear the xid in endXA() is quite safe but I would like to consider also to clear it only during commit. The question is whether the global transaction might be committed on a different connection. I will try to dig this out.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-13T08:35:24.906+0000","updated":"2007-02-13T08:35:24.906+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12472796","id":"12472796","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"What about the second patch?\r\n\r\nI changed the code to maintain the list of all uncommitted transactions and rollback all of them. This should cover the whole problem not only the previous simple case.\r\n\r\nThe patch will forbid using the code like this one\r\n\r\n            XAConnection xaConnection = createXAConnection(\"jdbc:derby://localhost:1526/TestDB\", \"\", \"\");\r\n            XAResource xaResource = xaConnection.getXAResource();\r\n            conn = xaConnection.getConnection();           \r\n            XAConnection xaConnection2 = createXAConnection(\"jdbc:derby://localhost:1526/TestDB\", \"\", \"\");\r\n            XAResource xaResource2 = xaConnection2.getXAResource();\r\n            Xid xid = createXid(value);        \r\n            xaResource.start(xid, XAResource.TMNOFLAGS);\r\n            Statement statement = conn.createStatement();\r\n            statement.execute(query);            \r\n            xaResource.end(xid, XAResource.TMSUCCESS);\r\n            \r\n            // commiting a transaction on different resource\r\n            xaResource2.prepare(xid);\r\n            xaResource2.commit(xid, false);\r\n\r\nIt will force the user to commit or rollback the transaction on a same connection as it was executed. I went through JTA API and have not found anything that will state that the JTA implementation have to allow commit/rollback of a transaction on different connection than the unit of work was executed on. At least the specification forbids resuming a suspended transaction on different connection than it was started on. Then I think made also no sense to require to commit or rollback the transaction on the different connection than the unit of work was executed on.\r\n\r\nThere exists 1:1 mapping between XAConnection instance and XAResource instance. The XAResource methods use the corresponding logical connection to pass commands to a database.\r\n\r\nPlease provide any further comments on this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-13T17:50:31.796+0000","updated":"2007-02-13T17:50:31.796+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12472822","id":"12472822","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"JDBC spec is very clear on this (JDBC 3.0 section 12.4.1)\r\n\r\n\"The transaction manager is not required to use the same XAResource object to\r\ncommit/rollback a transaction branch as was used to execute the branch. If different\r\nXAResource objects are used, however, they must be associated with\r\nXAConnection objects that connect to the same resource manager.\"\r\n\r\nThus you cannot  force the application to commit using the same XAResource.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-02-13T18:38:56.187+0000","updated":"2007-02-13T18:38:56.187+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12472838","id":"12472838","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Hi Julo,\r\n\r\nI don't know enough about XA to answer your questions, but I have some general comments to the patch:\r\n\r\nI might be missing something, but doesn't this part of abortTransactions() cause a NullPointerException?\r\n\r\n+        Xid[] xids = null;\r\n+        Collection coll = this.xids.values();\r\n+        if (coll != null && coll.size() > 0) {\r\n+            xids = (Xid []) coll.toArray(xids);\r\n\r\nWhen calling coll.toArray(xids), xids is always null, isn't it? Also, I think abortTransactions() would be simpler if it used xids.values().iterator() directly instead of converting the collection to an array.\r\n\r\nI'm not sure I see the value of the removeXid parameter to rollbackTransaction(). It might micro-optimize abortTransactions(), but given that abortTransaction() is only invoked in exceptional situations, I don't think it justifies the extra complexity.\r\n\r\nThe patch makes some of the lines in DRDAXAProtocol exceed 80 characters, which should be avoided.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-02-13T19:21:30.896+0000","updated":"2007-02-13T19:21:30.896+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12473075","id":"12473075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"Dan: Thank you for explanation. It seems that I was reading a wrong book. ;-)\r\n\r\nKnut: Yes, you are absolutely right - it will not work at all.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-14T12:59:32.883+0000","updated":"2007-02-14T12:59:32.883+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12474106","id":"12474106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"I implemented a change as it was in first proposal. I added the same behaviour also to embedded connection and implemented a test. I added a JDBCXADataSource similar to JDBCDataSource to be able to obtain a XAConnection and XAResource instances.\r\n\r\nbtw: Does anybody knows the use case for XADataSourceConnector? I think it is useless for XA transaction since it does not provide a way how to obtain a corresponding XAResource object.\r\n\r\nComments are welcomed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-19T09:57:33.594+0000","updated":"2007-02-19T09:57:33.594+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12474210","id":"12474210","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"Forgot to add that I ran derbyall and Suites.All with two failures in Suites.All. Both of these failures appear to me also on trunk without any modifications.\r\n\r\nThe failing tests are:\r\norg.apache.derbyTesting.functionTests.tests.jdbcapi.JDBCHarnessJavaTest\r\norg.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-19T15:52:26.036+0000","updated":"2007-02-19T15:52:26.036+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12474222","id":"12474222","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Could you confirm what the patch does. Your first proposal seems to say that if the socket is closed the connection is rolled back,\r\nbut then you add the same behaviour for embedded, but embedded doesn't use sockets, so I'm not clear what you intend the\r\nembedded behaviour to be. Thanks.\r\n\r\n\r\nRe XADataSourceConnector;\r\n.\r\nAs its javadoc says \"Returns a connection in local mode obtained from getXAConnection().getConnection()\"\r\nIt probably could be named better, unless it could be expanded to also provide global transaction support)\r\n\r\nI think it's there to allow tests to run using a connection object from an XADataSource that remains in local mode.\r\nThus allowing increased coverage.\r\nE.g. one could imagine running all the jdbcapi & jdbc4 tests in multiple connection modes to ensure complete testing:\r\n  DriverManager.getConnection\r\n  DataSource\r\n  XADataSource (local & global)\r\n  ConnectionPoolDataSource","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-02-19T16:23:40.812+0000","updated":"2007-02-19T16:23:40.812+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12474230","id":"12474230","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Looking at the patch I think you describe the same situation in three different ways:\r\n  1) global transaction in unit of work   [ not sure if unit of work is the correct description here]\r\n  2) XA transaction if it was not disassociated from the connection  [ double negative ] \r\n  3) global/local transaction associated with the connetion [ local transactions are not associated]\r\n\r\nI think this makes the code confusing for later readers who will not have the benefit of seeing all three together.\r\nI think the correct terminology would be (I assume this is what the patch intends):\r\n  - If the global transaction is associated with the XAResource and the physical connection is closed then rollback the\r\nglobal transaction.\r\n\r\nFor the changes to EmbedXAConnection I think two changes are needed:\r\n    - end the transaction with TMFAIL (resource manager will mark it as rollback-only)\r\n    - do not print the XAException to System.err. The embedded driver must throw its exceptions to\r\n      the calling program, in this case you need to wrap it in a SQLException\r\n\r\nI didn't look at the network code, but can local transactions use the new abortCurrentTransaction method DRDAXAProtocol?\r\nUsing the term associated here with local connection is confusing, since associated is for XA global transactions..\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-02-19T17:06:26.537+0000","updated":"2007-02-19T17:06:26.537+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12474689","id":"12474689","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"Dan, I agree with your comments and I will update the patch.\r\n\r\n> I didn't look at the network code, but can local transactions use the new abortCurrentTransaction method DRDAXAProtocol?\r\n> Using the term associated here with local connection is confusing, since associated is for XA global transactions..\r\n\r\nI call the existing method DRDAXAProtocol.rollbackTransaction method in a new abortCurrentTransaction. Since the rollbackTransaction could be used for local transactions abortCurrentTransaction could be also used.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-21T12:51:49.187+0000","updated":"2007-02-21T12:51:49.187+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12474776","id":"12474776","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"I tried this simple test program to run against trunk to find out whether it is possible to join a global transaction after a connection is closed from a different connection and recover in this way. The following code stopped in endless wait on xaResource2.start(xid, XAResource.TMJOIN) waiting for a transaction to be disassociated from the connection already closed.\r\n\r\n            xaResource.start(xid, XAResource.TMNOFLAGS);           \r\n            Statement statement = conn.createStatement();\r\n            statement.execute(query);\r\n            xaConnection.close();\r\n            \r\n            xaResource2.start(xid, XAResource.TMJOIN);\r\n            xaResource2.end(xid, XAResource.TMSUCCESS);\r\n            xaResource2.commit(xid, true);\r\n\r\n            System.exit(0);\r\n-------\r\nDan: I applied your comments except that in Embedded driver I do not used the TMFAIL flag because handling a one more exception separately would make the code a bit worse readable. I think there is no difference in this since the transaction is rollbacked on the following line. It will be explained in a comment. The only difference is a case when the rollback fails, but I am not sure what else we can do with a transaction which cannot be committed and fails to rollback.\r\n\r\nI am running test suites now and I will post a new patch tomorrow.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-21T17:55:47.519+0000","updated":"2007-02-21T17:55:47.519+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12475027","id":"12475027","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"The test suites finished successfully except the junit JDBCHarnessJavaTest which fails me also on trunk.\r\n\r\nJust for explanation of changes to embedded driver:\r\nWhen I wrote a test I tried it to run also using the embedded driver and it fails with the XAER_PROTO exception. However, I do not see any reason why this test should not succeed since closing the socket on network connection and closing an embedded connection should behave the same from this point of view.\r\n\r\nAny comments?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-22T14:39:19.007+0000","updated":"2007-02-22T14:39:19.007+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12475048","id":"12475048","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Julius wrote: \"When I wrote a test I tried it to run also using the embedded driver and it fails with the XAER_PROTO exception. However, I do not see any reason why this test should not succeed since closing the socket on network connection and closing an embedded connection should behave the same from this point of view. \"\r\n\r\nI'm a little lost here as I'm still unclear of what you intend the patch to do (see my first comment on 19th feb).\r\nFor the network server I thought this was addressing the case when the socket became closed due to unexpected behaviour, like the client application quitting, or the network link going down.\r\nFor embedded however, the physical connection cannot break that way (?), so the code seems to be addressing the case where an explicit close is performed by the application or the transaction manager. Is this the intention? Does the network client work the same way? Should this infact be a protocol error as it is a violation of the api by the transaction manager?\r\n\r\nA quick summary of what you intend the patch to do would be great.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-02-22T15:44:42.394+0000","updated":"2007-02-22T15:44:42.394+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12475065","id":"12475065","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"On the test changes in the patch:\r\n\r\nJ2EEDataSource already has methods to get XADataSources, so I don't think you need to add JDBCXADataSource.\r\n\r\nThis comment in the test concerns me:\r\n\r\n+        // We need to do such a special setup for the test\r\n+        // because if the locks are not released when the\r\n+        // XAConnection object is closed the database\r\n+        // can not be cleaned by CleanDatabaseSetup (throught defaultSuite)\r\n+        // but DropDatabaseSetup (throught singelUseDatabaseDecorator)\r\n+        // have to be used instead. This will ensures that the database\r\n+        // will be cleaned after the test\r\n\r\nIsn't this bug trying to address those issue? Having this style of cleanup will surely lead to bugs being hidden?\r\nA safer approach would seem to be use the standard database and address/report issues as they appear.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-02-22T16:10:41.445+0000","updated":"2007-02-22T16:10:41.445+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12475075","id":"12475075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"> Isn't this bug trying to address those issue? Having this style of cleanup will surely lead to bugs being hidden?\r\n> A safer approach would seem to be use the standard database and address/report issues as they appear.\r\n\r\nYes, the bug addresses exactly this issue.\r\n\r\nHowever, If I will use CleanDatabaseTesetSetup instead of the DropDatabaseTestSetup and the bug will appear again the test will lock for a while in CleanDatabaseTestSetup (need to timeout 5 times in CleanDatabaseTestSetup.removeObjects trying to obtain lock). I tried to run a test also on a code not fixied yet.\r\n\r\nIf the lock is not released the following select statement raise an exception. The engine is shutted down afterwards and the database is dropped which is much faster and also detects the bug.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-22T16:28:02.611+0000","updated":"2007-02-22T16:28:02.611+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12475081","id":"12475081","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"The more worrying case is when locks are held on objects for which asserts do not exist on the test. Such a cleanup approach will hide those bugs.\r\n\r\nI personally would not optimize tests for the time that they fail.\r\n\r\nI also think that you've found an issue in the clean database decorator and as such it would be good to fix it centrally there, rather than in a single test. for example, if the clean database decorator failed to cleanup the database, it could report the failure and then blow away the database. This would not need to be part of this issue or addressed urgently, as your test would not rely on it as it will be passing, right :-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-02-22T16:51:04.919+0000","updated":"2007-02-22T16:51:04.919+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12475103","id":"12475103","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"From the XA Transaction Specification from the OpenGroup:\r\n---\r\nIt is an error, [XAER_PROTO], for a transaction manager to call xa_close () within a\r\nthread of control that is associated with a transaction branch (that is, the transaction\r\nmanager must call xa_end() before calling xa_close ()).\r\n---\r\n\r\nSo a change proposed in a patch is against this spec. It should be possible to close a xa network connection on the trunk but not the ebedded one. To implement this according a spec should be:\r\n1.) undo any changes made to embedded connection\r\n2.) check in the network client code (ClientXAConnection) when closing a connection to a database whether it is already associated with the global transaction. If so, do not allow a connection to be closed.\r\n\r\nHowever, from my point of view it would be clearer to allow a connection to be closed and rollback the associated transactions. I do not know whether it would be possible to even make the behavior against the spec in some cases but I would like to discuss the difference.\r\n\r\nI would expect that a transaction manager or an application would call the XAConnection.close when it is associated with a transaction only in a exceptional case when it 'does not know what else to do'. This could happen after throwing an unpredictable exceptions which do not have to be handled - like NullPointerException. The handling of such an exception usually propagates through couple of functions in the call stack. Usually, in this case the application do not have to know the valid xid of the transaction or it do not have to know even whether the xa connection is associated with the transaction or not. What the application should do?\r\n\r\n1.) If it uses a transaction manager, the xid is stored in a transaction manager and if it has a reference to transaction manager it can do some work with the transaction - probably roll back\r\n\r\n2.) If it uses XAResource and XAConnection directly, it may happen that the application will loose xid and not the XAResource or XAConnection references (these might be shared across the application). What to do in this case?\r\n\r\nI am trying to think of an application with not the optimal design. This leads me what happens if all the objects would be garbage collected? ;-)\r\n\r\n---\r\nNow I think that the best approach is to implement XAConnection.close according the specs and to provide the cleanup with rollback of transactions in XAConnectionImpls.finalize methods (as it is implemented now in close methods of the patch). I checked the code for this fastly and it looks like it is not handled this way. I'll check this in more detail and I'll create a new jira issue to address this separately.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-02-22T17:49:11.609+0000","updated":"2007-02-22T17:49:11.609+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12475370","id":"12475370","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Patch (as comments show) does not implement the spec for close() correctly so unsetting the patch available flag.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-02-23T15:49:53.697+0000","updated":"2007-02-23T15:49:53.697+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12477222","id":"12477222","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"This patch implements the following:\r\n\r\n1.) Rollback the global transaction on a derby server when the network socket is closed.\r\n2.) Forbid the call to XAConnection.close when there is a global transaction associated with the corresponding resource. Similar code is added to the embedded driver and client driver as well. The state of the connection is not changed at all.\r\n3.) Test for 2.) is added. I did not write a test for 1.) because I find it a bit more difficult since a test does not have an access to the underlying code to close the socket.\r\n\r\nBecause the XAConnection is a subclass of PooledConnection object the close method throws only SQLException and not XAException. According DTP XA Spec the xa_close should return XAER_PROTO which should map to XAException. This is not possible and the same SQLException is thrown now as the embedded driver did before. I added the code for embedded driver to handle XA case separately because the connection was left in a state when it could not be used anymore.\r\n\r\nAny comments?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-02T08:18:34.073+0000","updated":"2007-03-02T08:18:34.073+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12478208","id":"12478208","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=prashantbhagat","name":"prashantbhagat","emailAddress":"prashant dot bhagat at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Prashant Bhagat","active":true},"body":"Hi Lance,\r\nI'm working for the BPEL Service Engine team in the Alaska project. \r\nJulius (from Java DB support team) has fixed a bug that I reported in \r\nDerby and has created a patch. We would like to know\r\n1. How and when do new releases of Derby get integrated in glassfish?\r\n2. How do patches, such as this one, get integrated in glassfish?\r\n\r\nBinod from the glassfish team gave me your reference and said that you \r\nmight know this. If not, do you know who the right person is who can \r\ngive this information.\r\n\r\nThanks\r\nPrashant\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=prashantbhagat","name":"prashantbhagat","emailAddress":"prashant dot bhagat at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Prashant Bhagat","active":true},"created":"2007-03-05T23:37:03.444+0000","updated":"2007-03-05T23:37:03.444+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12478794","id":"12478794","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Is point 2 (Forbid the call to XAConnection.close when there is a global transaction associated with the corresponding resource) a necessary part of this bug fix, or would it be better to discuss/fix it under a separate issue?\r\n\r\nIt seems to me the patch correctly implements what you have described. I'm a little confused after reading the discussion. Was there ever consensus that the described approach was correct? It does sound correct to me, but I haven't studied all the different standards mentioned.\r\n\r\nSome small questions and comments to the try4 patch:\r\n  - could NetXAResource.currentXid have been private?\r\n  - abortCurrentTransaction() checks (e.errorCode != XAException.XA_RBOTHER && e.errorCode != XAException.XA_RBROLLBACK). Would it make sense to test (errorCode < XA_RBBASE || errorCode > XA_RBEND) instead?\r\n  - ClientPooledConnection (super class of ClientXAConnection) calls close() in its finalize method (existing code). With the new exception thrown by ClientXAConnection.close(), could that cause a problem when an active XAConnection is garbage collected?\r\n  - should XATransactionTest have been added to jdbcapi._Suite so that it runs under suites.All?\r\n  - I think the suite() method could be simplified to \"return TestConfiguration.defaultSuite(...)\"\r\n  - the Statement objects in testXAConnection() are not closed\r\n  - in previous discussions about JUnit tests it has been mentioned that referencing constants in org.apache.derby.shared.common.reference.SQLState in tests is not recommended. Instead one should hard code the SQL state (in this case \"25000\") in the test. Also, I would recommend using BaseJDBCTestCase.assertSQLState() instead of assertTrue(ex.getSQLState().equals...).\r\n  - there is a test for XAConnection.close() that is supposed to fail. What about adding a test case where it doesn't fail?\r\n  - I'm not a big fan of finally clauses in the tests, since exceptions in them might hide the original error. Putting the cleanup code outside the finally clause would only be a problem if the test fails, and I agree with Dan's previous comment about not optimizing tests for the time when they fail.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-03-07T15:17:02.800+0000","updated":"2007-03-07T15:17:02.800+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12479343","id":"12479343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"> Is point 2 (Forbid the call to XAConnection.close when there is a global transaction\r\n> associated with the corresponding resource) a necessary part of this bug fix,\r\n> or would it be better to discuss/fix it under a separate issue?\r\n\r\nOk Knut, to make thinks simpler for discussion I have created a separate issue for this - DERBY-2420. I will move the discussion there...\r\n\r\n> abortCurrentTransaction() checks (e.errorCode != XAException.XA_RBOTHER && e.errorCode != XAException.XA_RBROLLBACK).\r\n> Would it make sense to test (errorCode < XA_RBBASE || errorCode > XA_RBEND) instead? \r\n\r\nYes, it would. Thanks, I have not noticed that fields in XAException.\r\n\r\n> - there is a test for XAConnection.close() that is supposed to fail. What about adding a test case where it doesn't fail?\r\n\r\nI think, this case is already covered by xaSimplePositive.sql and xaSimpleNegative.sql and other XA tests.\r\n\r\nAnd I completely agree with all your other comments. I'll prepare a patch for those under the new issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-08T15:52:50.683+0000","updated":"2007-03-08T15:52:50.683+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12479348","id":"12479348","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"This patch covers only the case when the socket from the client's connection is closed and the global transaction was associated with the connection. In this case, the global transaction will be rolled back. The test for this behavior is not written yet and I plan to cover this in DERBY-2421 with a test for the proper garbage collection.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-08T16:19:07.215+0000","updated":"2007-03-08T16:19:07.215+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12479422","id":"12479422","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"Knut, sorry I forgot to explain your important comment:\r\n\r\n> It seems to me the patch correctly implements what you have described. I'm a little confused after reading the discussion.\r\n> Was there ever consensus that the described approach was correct? It does sound correct to me, but I haven't studied\r\n> all the different standards mentioned.\r\n\r\nIn Derbby XAConnection and XAResource instances are mapped 1:1. The methods of XAResource instance in network driver use the XAConnection instance to send all the DRDA commands throught the socket. Thus if the socket will be closed when the transaction is associated with the connection, there is no way how to continue the work on that transaction. You can not join that transaction, you can not end the association of that transaction, you can not rollback nor commit the transaction. The locks held by the transaction will not be released. This is not covered by the any of these specs and the proposed behavior can be only done because of the way how derby implements the spec - it uses the same socket for both - XAConnection and XAResource.\r\n\r\nIf derby would use a different socket for the XAResource object than the XAConnection, this would not be possible because if the connection would be closed you could still end the association of the transaction with the resource, but this is not possible in derby.\r\n\r\nI think all these facts are mentioned in the discussion but there is no summary explaining it.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-08T20:43:21.616+0000","updated":"2007-03-08T20:43:21.616+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12479537","id":"12479537","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for the explanation and for splitting the patch. It's much clearer to me now. I have started the regression tests. If they pass and no one objects to this approach within a couple of days, I will commit the try5 patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-03-09T08:45:45.002+0000","updated":"2007-03-09T08:45:45.002+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12480012","id":"12480012","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed revision 517131. Should this fix be back-ported to the 10.2 branch?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-03-12T08:42:15.381+0000","updated":"2007-03-12T08:42:15.381+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12480101","id":"12480101","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"Thanks, Knut.\r\n\r\nYes, I would like to back-port the patch also. I applied the patch committed to trunk to 10.2 branch and it succeeded. I checked the sources and everything looks alright. Now, I am running the tests and once they will finish without failures, I will submit a patch against 10.2 branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-12T14:12:58.668+0000","updated":"2007-03-12T14:12:58.668+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12480106","id":"12480106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I don't think a new patch is required. The fix merged cleanly to 10.2 with this command:\r\n  svn merge -c 517131 ../trunk","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-03-12T14:28:15.842+0000","updated":"2007-03-12T14:28:15.842+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12480115","id":"12480115","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"Oohhh, great. Thanks, Knut.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-12T15:09:01.101+0000","updated":"2007-03-12T15:09:01.101+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12480162","id":"12480162","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Reopening to port to 10.2.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-03-12T18:32:39.214+0000","updated":"2007-03-12T18:32:39.214+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12480163","id":"12480163","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Tests finished successfully on the 10.2 branch. Committed to 10.2 with revision 517320.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-03-12T18:36:44.588+0000","updated":"2007-03-12T18:36:44.588+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12480166","id":"12480166","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Changing affects version from 10.2.3.0 to 10.2.2.0 since there is no 10.2.3.0 yet.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-03-12T18:40:06.191+0000","updated":"2007-03-12T18:40:06.191+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12480421","id":"12480421","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"I am sorry, Knut, I misunderstood the comment about merging to 10.2, so I thought It was also committed. Thanks again! ;-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-13T14:55:44.720+0000","updated":"2007-03-13T14:55:44.720+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12482876","id":"12482876","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"I found an error in the patch. The fix will follow immediately.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-21T19:03:29.569+0000","updated":"2007-03-21T19:03:29.569+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12482880","id":"12482880","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"In DRDAXAProtocol the null value was assigned to a local variable instead of the global one. This causes the last transaction to be rolled back after the connection will be closed even if the XAResource.end was called before.\r\n\r\nLesson learned: Better, do not use the same names for arguments and class members.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-21T19:09:33.160+0000","updated":"2007-03-21T19:09:33.160+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12483050","id":"12483050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"body":"Forgot to add that I ran derbyall and suites.All without failures except DERBY-2434.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=julo","name":"julo","emailAddress":"julo at stroffek dot cz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Julius Stroffek","active":true},"created":"2007-03-22T08:12:11.582+0000","updated":"2007-03-22T08:12:11.582+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12360006/comment/12483447","id":"12483447","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for the fix, Julo!\r\nCommitted to trunk with revision 521609.\r\nCommitted to 10.2 with revision 521610.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-03-23T07:37:54.424+0000","updated":"2007-03-23T07:37:54.424+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-2220/votes","votes":2,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0743b:"}}