{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12513038","self":"https://issues.apache.org/jira/rest/api/latest/issue/12513038","key":"DERBY-5317","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324243","id":"12324243","description":"First release on the 10.11 branch","name":"10.11.1.1","archived":false,"released":true,"releaseDate":"2014-08-26"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2013-09-06 21:20:26.326","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24770","customfield_12310222":"1_*:*_1_*:*_71428043821_*|*_5_*:*_2_*:*_12200518494_*|*_4_*:*_1_*:*_256103268","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2014-03-03T18:34:47.467+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-5317/watchers","watchCount":4,"isWatching":false},"created":"2011-07-06T21:17:01.919+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":["derby_backport_reject_10_10","derby_triage10_11"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"7.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316344","id":"12316344","description":"First release on the 10.9 branch","name":"10.9.1.0","archived":false,"released":true,"releaseDate":"2012-06-25"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12340640","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12340640","type":{"id":"10032","name":"Blocker","inward":"is blocked by","outward":"blocks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"},"outwardIssue":{"id":"12512461","key":"DERBY-5308","self":"https://issues.apache.org/jira/rest/api/2/issue/12512461","fields":{"summary":"Investigate if largeData/LobLimits.java  can be run for client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12377158","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12377158","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12674894","key":"DERBY-6386","self":"https://issues.apache.org/jira/rest/api/2/issue/12674894","fields":{"summary":"Errors in jdbc4.LobStreamTest if derbyclient.jar is first in the classpath","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12341137","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12341137","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12352050","key":"DERBY-1903","self":"https://issues.apache.org/jira/rest/api/2/issue/12352050","fields":{"summary":"Convert  largedata/LobLimits.java to junit","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png","name":"Sub-task","subtask":true}}}},{"id":"12374875","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12374875","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12354260","key":"DERBY-2017","self":"https://issues.apache.org/jira/rest/api/2/issue/12354260","fields":{"summary":"Client driver can insert and commit partial data when a LOB stream throws IOException or does not match the specified length","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12340934","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12340934","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12512461","key":"DERBY-5308","self":"https://issues.apache.org/jira/rest/api/2/issue/12512461","fields":{"summary":"Investigate if largeData/LobLimits.java  can be run for client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-01-21T00:22:56.825+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11690","id":"11690","name":"Network Client"}],"timeoriginalestimate":null,"description":"Investigating DERBY-5308, I found that the LobLimits.java test run with client fails with a NullPointerException.\r\n \r\nEND setup\r\n========================================\r\nSTART ClobTest #1  -insertClob of size = 2147483647\r\nRows inserted with clob of size (2147483647) = 2\r\n========================================\r\n========================================\r\nSTART ClobTest #2 - SELECT CLOB of size = 2147483647\r\nMatched rows selected with clob of size(2147483647) =1\r\n========================================\r\n========================================\r\nSTART ClobTest #3 - SELECT CLOB of size = 2147483647\r\nMatched rows selected with clob of size(2147483647) =1\r\n========================================\r\n========================================\r\nSTART ClobTest #4 - select and then update clob of size= 2147483647 - Uses setClob api\r\nFAIL -- Unexpected exception:\r\njava.lang.NullPointerException\r\n        at org.apache.derby.client.net.Request.sendBytes(Unknown Source)\r\n        at org.apache.derby.client.net.Request.flushScalarStreamSegment(Unknown Source)\r\n        at org.apache.derby.client.net.Request.padScalarStreamForError(Unknown Source)\r\n        at org.apache.derby.client.net.Request.writePlainScalarStream(Unknown Source)\r\n        at org.apache.derby.client.net.Request.writeScalarStream(Unknown Source)\r\n        at org.apache.derby.client.net.Request.writeScalarStream(Unknown Source)\r\n        at org.apache.derby.client.net.NetStatementRequest.buildEXTDTA(Unknown Source)\r\n        at org.apache.derby.client.net.NetStatementRequest.writeExecute(Unknown Source)\r\n        at org.apache.derby.client.net.NetPreparedStatement.writeExecute_(Unknown Source)\r\n        at org.apache.derby.client.am.PreparedStatement.writeExecute(Unknown Source)\r\n        at org.apache.derby.client.am.PreparedStatement.flowExecute(Unknown Source)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdateX(Unknown Source)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdate(Unknown Source)\r\n        at org.apache.derbyTesting.functionTests.tests.largedata.LobLimits.selectUpdateClob(LobLimits.java:115\r\n7)\r\n        at org.apache.derbyTesting.functionTests.tests.largedata.LobLimits.clobTests(LobLimits.java:313)\r\n        at org.apache.derbyTesting.functionTests.tests.largedata.LobLimits.runTests(LobLimits.java:177)\r\n        at org.apache.derbyTesting.functionTests.tests.largedata.LobLimits.main(LobLimits.java:151)\r\n========================================\r\nSTART ClobTest #12.1  -insertClob of size = 104857600\r\nNEGATIVE TEST - Expected Exception:\r\nEXPECTED SQL Exception: (08003) No current connection.\r\n========================================\r\nSTART ClobTest #12.2 - SELECT CLOB of size = 104857600\r\nFAIL -- Unexpected exception:\r\njava.sql.SQLNonTransientConnectionException: No current connection.\r\n        at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)\r\n        at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)\r\n        at org.apache.derby.client.am.PreparedStatement.setInt(Unknown Source)\r\n        at org.apache.derbyTesting.functionTests.tests.largedata.LobLimits.selectClob(LobLimits.java:1007)\r\n\r\n\r\nIn the derby.log I see\r\n\r\nderby.system.home=/local0/kmarsden/repro/largeData/testtrunkdnc/DerbyNetClient/LobLimits\r\nDatabase Class Loader started - derby.database.classpath=''\r\nTue Jul 05 17:50:01 PDT 2011 Thread[DRDAConnThread_11,5,main] (DATABASE = wombat), (DRDAID = .-580681567053183\r\n269{2}), Execution failed because of a Distributed Protocol Error:  DRDA_Proto_SYNTAXRM; CODPNT arg  = 200d; E\r\nrror Code Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\nTue Jul 05 17:50:01 PDT 2011 : Execution failed because of a Distributed Protocol Error:  DRDA_Proto_SYNTAXRM;\r\n CODPNT arg  = 200d; Error Code Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\norg.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of a Distributed Protocol Error:  D\r\nRDA_Proto_SYNTAXRM; CODPNT arg  = 200d; Error Code Value = 1d. Plaintext connection attempt from an SSL enable\r\nd client?\r\n        at org.apache.derby.impl.drda.DRDAConnThread.throwSyntaxrm(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.invalidCodePoint(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(Unknown Source)\r\nTue Jul 05 17:50:01 PDT 2011 Thread[DRDAConnThread_11,5,main] (DATABASE = wombat), (DRDAID = .-580681567053183\r\n269{2}), Execution failed because of a Distributed Protocol Error:  DRDA_Proto_SYNTAXRM; CODPNT arg  = 200d; E\r\nrror Code Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\nTue Jul 05 17:50:01 PDT 2011 : Execution failed because of a Distributed Protocol Error:  DRDA_Proto_SYNTAXRM;\r\n CODPNT arg  = 200d; Error Code Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\norg.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of a Distributed Protocol Error:  D\r\nRDA_Proto_SYNTAXRM; CODPNT arg  = 200d; Error Code Value = 1d. Plaintext connection attempt from an SSL enable\r\nd client?\r\n        at org.apache.derby.impl.drda.DRDAConnThread.throwSyntaxrm(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.invalidCodePoint(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(Unknown Source)\r\n----------------------------------------------------------------\r\nTue Jul 05 17:50:07 PDT 2011: Shutting down Derby engine\r\n----------------------------------------------------------------\r\nTue Jul 05 17:50:07 PDT 2011:\r\n\r\nTo run the test, you have to remove largeData from DerbyNetClient.exclude and run\r\njava -Dframework=DerbyNetClient org.apache.derbyTesting.functionTests.harness.RunTest  org.apache.derbyTesting.functionTests.tests.lageData.LobLimits.\r\nIt took about 3.5 hours to occur.\r\n\r\nI will work on a smaller reproduction.\r\n\r\n                                                                                            5,9           36%","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10365","value":"Crash","id":"10365"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10363","value":"Embedded/Client difference","id":"10363"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"36026","summary":" NullPointerException in org.apache.derby.client.net.Request.sendBytes()  with client","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10422","value":"High Value Fix","id":"10422"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10051","value":"Urgent","id":"10051"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":32,"total":32,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13061482","id":"13061482","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is a short running reproduction for the issue.\r\nIt is just an excerpt from LobLimits.java and uses just 2MB Clobs, so the problem is not associated with large data but rather the case that is being tested, which is described as:\r\n\r\n  /*\r\n    * Basically this test will do an update using setClob api -\r\n    *  select row from clobtbl and then update a row in clobtbl \r\n    * and verify updated data in clobtbl \r\n    */    \r\n\r\n\r\n\r\nHere is the output. The server is started by the program and  output goes to the console so is here as well:\r\n$java Repro5317\r\n\r\nThu Jul 07 11:39:02 PDT 2011 : Apache Derby Network Server - 10.9.0.0 alpha - (1\r\n143485) started and ready to accept connections on port 1527\r\n========================================\r\nSTART insert 2M clob  -insertClob of size = 2097152\r\nInsert Clob (2097152) rows= 2 = 3188\r\nRows inserted with clob of size (2097152) = 2\r\n========================================\r\n========================================\r\nSTART ClobTest #4 - select and then update clob of size= 2097152 - Uses setClob\r\napi\r\nThu Jul 07 11:39:11 PDT 2011 : Execution failed because of a Distributed Protoco\r\nl Error:  DRDA_Proto_SYNTAXRM; CODPNT arg  = 200d; Error Code Value = 1d. Plaint\r\next connection attempt from an SSL enabled client?\r\norg.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of a\r\nDistributed Protocol Error:  DRDA_Proto_SYNTAXRM; CODPNT arg  = 200d; Error Code\r\n Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\n        at org.apache.derby.impl.drda.DRDAConnThread.throwSyntaxrm(DRDAConnThrea\r\nd.java:517)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.invalidCodePoint(DRDAConnTh\r\nread.java:8205)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAC\r\nonnThread.java:4324)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThre\r\nad.java:4133)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThr\r\nead.java:1021)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:294\r\n)\r\nThu Jul 07 11:39:11 PDT 2011 : Execution failed because of a Distributed Protoco\r\nl Error:  DRDA_Proto_SYNTAXRM; CODPNT arg  = 200d; Error Code Value = 1d. Plaint\r\next connection attempt from an SSL enabled client?\r\norg.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of a\r\nDistributed Protocol Error:  DRDA_Proto_SYNTAXRM; CODPNT arg  = 200d; Error Code\r\n Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\n        at org.apache.derby.impl.drda.DRDAConnThread.throwSyntaxrm(DRDAConnThrea\r\nd.java:517)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.invalidCodePoint(DRDAConnTh\r\nread.java:8205)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAC\r\nonnThread.java:4324)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThre\r\nad.java:4133)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThr\r\nead.java:1021)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:294\r\n)\r\nException in thread \"main\" java.lang.NullPointerException\r\n        at org.apache.derby.client.net.Request.sendBytes(Request.java:1212)\r\n        at org.apache.derby.client.net.Request.flushScalarStreamSegment(Request.\r\njava:604)\r\n        at org.apache.derby.client.net.Request.padScalarStreamForError(Request.j\r\nava:660)\r\n        at org.apache.derby.client.net.Request.writePlainScalarStream(Request.ja\r\nva:323)\r\n        at org.apache.derby.client.net.Request.writeScalarStream(Request.java:24\r\n7)\r\n        at org.apache.derby.client.net.Request.writeScalarStream(Request.java:50\r\n0)\r\n        at org.apache.derby.client.net.NetStatementRequest.buildEXTDTA(NetStatem\r\nentRequest.java:1043)\r\n        at org.apache.derby.client.net.NetStatementRequest.writeExecute(NetState\r\nmentRequest.java:152)\r\n        at org.apache.derby.client.net.NetPreparedStatement.writeExecute_(NetPre\r\nparedStatement.java:174)\r\n        at org.apache.derby.client.am.PreparedStatement.writeExecute(PreparedSta\r\ntement.java:1800)\r\n        at org.apache.derby.client.am.PreparedStatement.flowExecute(PreparedStat\r\nement.java:2030)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdateX(PreparedS\r\ntatement.java:417)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedSt\r\natement.java:403)\r\n        at Repro5317.selectUpdateClob(Repro5317.java:163)\r\n        at Repro5317.main(Repro5317.java:35)\r\n\r\n\r\nI ran with IBM 1.6.\r\n\r\njava version \"1.6.0\"\r\nJava(TM) SE Runtime Environment (build pwi3260sr9fp1-20110208_03(SR9 FP1))\r\nIBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Windows XP x86-32 jvmwi3260sr9-201102\r\n03_74623 (JIT enabled, AOT enabled)\r\nJ9VM - 20110203_074623\r\nJIT  - r9_20101028_17488ifx3\r\nGC   - 20101027_AA)\r\nJCL  - 20110203_01\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-07-07T18:48:18.548+0000","updated":"2011-07-07T18:48:18.548+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13061528","id":"13061528","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"It appears this was a regression with 10.3.1.4.  The small test case passes with 10.2.2.0 and the latest on the 10.2 and 10.1 branches.  10.3.1.4 introduced  lob locators,  DERBY-208 and more specifically for clobs DERBY-2604, so that might be a likely suspect.  I could not verify the exact checkin  for the regression.  I tried synching back to 535318 just before the checkin below but had trouble building.\r\n\r\n\t#535319 \tFri May 04 16:32:39 UTC 2007 \trhillegas \tDERBY-2604: Commit Naryayan's ClobLocatorWork_v1.diff, adding locator support to clobs. \r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-07-07T19:35:01.779+0000","updated":"2011-07-07T19:35:01.779+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13061613","id":"13061613","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I will take a look at this and see if it is something simple. I Since it is a regression it would be good to get it into 10.8.2.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-07-07T21:44:06.533+0000","updated":"2011-07-07T21:44:06.533+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13061656","id":"13061656","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Looking at the traces on 10.2 and trunk I see the following:\r\n\r\nIn the 10.2 trace on execution of the prepared update statement with the stream selected from the table we have:\r\n\r\n[derby][Time:1310077705922][Thread:main][Clob@4d7784be] getCharacterStream () called\r\n[derby][Time:1310077705922][Thread:main][Clob@4d7784be] getCharacterStream () returned java.io.StringReader@459484be\r\n\r\nFollowed by an EXCSQLSTT, SQLDTA and then EXTDTA to send the data.  I believe in this case the entire Clob has been materialized on the client.\r\n\r\n\r\nWith trunk we get an UpdateSensitiveClobLocater reader on the select instead of a regular StringReader:\r\n\r\n[derby][Time:1310076968203][Thread:main][Clob@19981998] getCharacterStream () called\r\n[derby][Time:1310076968203][Thread:main][Clob@19981998] getCharacterStream () returned org.apache.derby.client.am.UpdateSensitiveClobLocatorReader@dfe0dfe\r\n\r\nfollowed by EXCSQLSTT, SQLDTA and then instead of the  EXTDTA a stored procedure call is attempted:\r\nderby]        SEND BUFFER: PRPSQLSTT              (ASCII)           (EBCDIC)\r\n[derby]        0 1 2 3 4 5 6 7   8 9 A B C D E F   0123456789ABCDEF  0123456789ABCDEF\r\n[derby] 0000   0068D05100010062  200D005E21130026  .h.Q...b ..^!..&  ..}........;....\r\n[derby] 0010   776F6D6261743B74  7261636546696C65  wombat;traceFile  .?_./..../....%.\r\n[derby] 0020   3D74726163652E6F  75743B6372656174  =trace.out;creat  .../...?....../.\r\n[derby] 0030   653D747275650012  4E554C4C49442020  e=true..NULLID    ........+.<<....\r\n[derby] 0040   2020202020202020  202000125359534C            ..SYSL  ...............<\r\n[derby] 0050   4E30303020202020  2020202020205359  N000          SY  +...............\r\n[derby] 0060   534C564C30310004                    SLVL01..          .<.<....        \r\n[derby] \r\n[derby]        SEND BUFFER: SQLSTT                 (ASCII)           (EBCDIC)\r\n[derby] 0000   0039D04300010033  241400000000293F  .9.C...3$.....)?  ..}.............\r\n[derby] 0010   203D2043414C4C20  53595349424D2E43   = CALL SYSIBM.C  .....<<......(..\r\n[derby] 0020   4C4F424745545355  42535452494E4728  LOBGETSUBSTRING(  <|...........+..\r\n[derby] 0030   3F2C203F2C203F29  FF                ?, ?, ?).         .........       \r\n\r\n\r\nWhat seems to be happening is that we are all set up to stream the parameter data and that is what the server is expecting, but in order to get that  data from the stream  we need to make this stored procedure call, so we are stuck. Any thoughts on how to resolve this?  I don't see how we could interrupt the sending of the data to retrieve more with a stored procedure call. The current traces are too large to attach.  I will scale down the reproduction more to attach them.\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-07-07T23:10:46.833+0000","updated":"2011-07-07T23:10:46.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13061688","id":"13061688","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is an updated repro and the trace  file output with the clob at 31K.  It fails at even smaller sizes like 2K  but with a different error.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-07-08T00:09:23.542+0000","updated":"2011-07-08T00:09:23.542+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13062081","id":"13062081","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I think the description of the test, that it uses the setClob() api is incorrect.  It actually uses getClob() to get the Clob, as value, but then passes value.getCharacterStream() to the parameter.\r\n       psUpd.setCharacterStream(1, value.getCharacterStream(), (int) l);\r\n\r\nIf I change the test to actually use setClob,  changing the above statement to:\r\n       psUpd.setClob(1, value);\r\n\r\nThe statement completes, presumably sending the locator as the parameter instead of having to network the stream both directions (I need to double check that this is what is happening).\r\n\r\n\r\nThe only simple solution I can think of  if an unmaterialized stream is passed as a parameter is one that I am loathe to implement.   That would be that if an unmaterialized character stream or binary stream are set as a parameter, that we materialize it as soon as the parameter is set, before starting execution of the statement.  Since we only have one channel of communication between client and server, we just can't stream the value from the server and back to it at the same time.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-07-08T17:52:00.078+0000","updated":"2011-07-08T17:52:00.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13065232","id":"13065232","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"A good solution to this issue is not clear to me without materializing the  stream parameter  so unassigning myself from this issue.\r\n\r\nUsers can work around the issue by using setClob instead of setCharacterStream()  on clob.getCharacterStream()\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-07-14T13:08:06.942+0000","updated":"2011-07-14T13:08:06.942+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13066279","id":"13066279","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"With revision 1147335 this can be reproduced by removing the if(usingDerbyNetClient()  LobLimitsTest and running largedata.LobLimitsLiteTest in the following code:\r\n\r\n       // DERBY-5317 cannot use setCharacterStream with value from\r\n        // Clob.getCharacterStream because server will try to stream\r\n        // lob to and from server at the same time. setClob can be\r\n        // used as a work around.\r\n        if (!usingDerbyNetClient()) {\r\n            PreparedStatement psUpd =\r\n                    conn.prepareStatement(\"update CLOBTBL set content=?, \" +\r\n                            \"dlen =? where id = ?\");\r\n            psUpd.setCharacterStream(1, value.getCharacterStream(), (int) l);\r\n            psUpd.setLong(2, l);\r\n            psUpd.setInt(3, updateId);\r\n\r\n            assertEquals(1, psUpd.executeUpdate());\r\n            psUpd.close();\r\n        }\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-07-15T22:40:19.434+0000","updated":"2011-07-15T22:40:19.434+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13210413","id":"13210413","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Triaged for 10.9.  Keeping urgency as urgent as it is a client crash and has a simple reproduction.\r\n\r\nI confirmed the issue reproduces with Repro5317.java  attached and very quickly (in case someone has been shying away from this issue because I mentioned it takes a long time to reproduce with LobLimitsTest.\r\n\r\n\r\n$ java Repro5317\r\nFri Feb 17 09:49:50 PST 2012 : Apache Derby Network Server - 10.9.0.0 alpha - (1242867M) started and ready to accept con\r\nnections on port 1527\r\n========================================\r\nSTART insert  clob  -insertClob of size = 31744\r\nInsert Clob (31744) rows= 2 = 382\r\nRows inserted with clob of size (31744) = 2\r\n========================================\r\n========================================\r\nSTART ClobTest #4 - select and then update clob of size= 31744 - Uses setClob api\r\nFri Feb 17 09:49:52 PST 2012 : Execution failed because of a Distributed Protocol Error:  DRDA_Proto_SYNTAXRM; CODPNT ar\r\ng  = 200d; Error Code Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\norg.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of a Distributed Protocol Error:  DRDA_Proto_\r\nSYNTAXRM; CODPNT arg  = 200d; Error Code Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\n        at org.apache.derby.impl.drda.DRDAConnThread.throwSyntaxrm(DRDAConnThread.java:537)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.invalidCodePoint(DRDAConnThread.java:8295)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAConnThread.java:4366)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:4175)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:1063)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:295)\r\nFri Feb 17 09:49:52 PST 2012 : Execution failed because of a Distributed Protocol Error:  DRDA_Proto_SYNTAXRM; CODPNT ar\r\ng  = 200d; Error Code Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\norg.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of a Distributed Protocol Error:  DRDA_Proto_\r\nSYNTAXRM; CODPNT arg  = 200d; Error Code Value = 1d. Plaintext connection attempt from an SSL enabled client?\r\n        at org.apache.derby.impl.drda.DRDAConnThread.throwSyntaxrm(DRDAConnThread.java:537)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.invalidCodePoint(DRDAConnThread.java:8295)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAConnThread.java:4366)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:4175)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:1063)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:295)\r\nException in thread \"main\" java.lang.NullPointerException\r\n        at org.apache.derby.client.net.Request.sendBytes(Request.java:1212)\r\n        at org.apache.derby.client.net.Request.flushScalarStreamSegment(Request.java:604)\r\n        at org.apache.derby.client.net.Request.padScalarStreamForError(Request.java:660)\r\n        at org.apache.derby.client.net.Request.writePlainScalarStream(Request.java:323)\r\n        at org.apache.derby.client.net.Request.writeScalarStream(Request.java:247)\r\n        at org.apache.derby.client.net.Request.writeScalarStream(Request.java:500)\r\n        at org.apache.derby.client.net.NetStatementRequest.buildEXTDTA(NetStatementRequest.java:1042)\r\n        at org.apache.derby.client.net.NetStatementRequest.writeExecute(NetStatementRequest.java:151)\r\n        at org.apache.derby.client.net.NetPreparedStatement.writeExecute_(NetPreparedStatement.java:174)\r\n        at org.apache.derby.client.am.PreparedStatement.writeExecute(PreparedStatement.java:1806)\r\n        at org.apache.derby.client.am.PreparedStatement.flowExecute(PreparedStatement.java:2036)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdateX(PreparedStatement.java:417)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:403)\r\n        at Repro5317.selectUpdateClob(Repro5317.java:170)\r\n        at Repro5317.main(Repro5317.java:42)\r\n\r\nkmarsden@IBM-JDPM42DBIO2 ~/repro/derby-5317\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nthink Urgent is correct as ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2012-02-17T17:53:12.681+0000","updated":"2012-02-17T17:53:12.681+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13699030","id":"13699030","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Confirmed this still reproduces on trunk 10.11\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2013-07-03T14:39:24.864+0000","updated":"2013-07-03T14:39:24.864+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13760642","id":"13760642","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Linking to DERBY-2017 which added an extra message back to the server in case of certain errors to ensure that LOB-transactions were not \"partly\" committed. In this case the client attempts to send the extra message after a DisconnectException has been thrown. This does not work since the DisconnectException constructor will close and null the agent's stream objects, so that writing the extra message triggers an NPE when attempting to access the output stream.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-09-06T21:20:26.326+0000","updated":"2013-09-06T21:20:26.326+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13760665","id":"13760665","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"There are a couple of issues here: \r\n\r\n1) That the DisconnectException's constructor closes down the connection, so that the connection is closed even if the exception is never thrown. And any caller wanting to catch this exception cannot prevent the connection from being closed.\r\n\r\n2) It is not clear to me that Reply.doSyntaxrmSemantics() should throw a DisconnectException at all. If it only has detected a protocol error it would make more sense to throw some other exception and leave the connection intact. That would make it possible to send a cleanup message, such as the one added in DERBY-2017, to the server as part of handling the exception. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-09-06T21:41:30.758+0000","updated":"2013-09-06T21:41:30.758+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13761798","id":"13761798","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"I think it is possible (but ugly) to avoid the NPE by checking if the output stream is null, and then just rethrow the IOException from the Reader. When doing that you're left with the \"Bad codepoint\" error thrown by the server when encountering a PRPSQLSTT cp when reading the EXTDTA objects in the prepare message. That is better than getting an NPE, but it is still difficult to identify the cause of the problem (calling setClob() with a Reader that is a really an UpdateSensitiveClobLocatorReader() tied to the same agent as the ps). \r\n\r\nI think a reasonable first step would be to throw (some form of) UnsupportedException when attempting to use setX() with a Locator-backed Reader/Stream value. If the user is willing to incur the overhead of materializing the object in the client, they can always force that by reading the lob into a buffer and use setX with a Reader/Stream referencing that buffer.\r\n\r\nTo make this efficient I guess we need to identify Locator-backed Readers/streams and somehow bind the locator value in place of the Reader/Stream, and only convert the locator value into the actual Reader/Stream value when required on the server. Don't know if that is feasible...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-09-09T12:31:55.313+0000","updated":"2013-09-09T12:31:55.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13765535","id":"13765535","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"I have concluded that identifying Locator-based Readers/Streams is not really possible since the argument passed to setX() may be wrapped in any number of non-Locator Streams/Readers. So I think we must allow such values to be set, and instead intercept their use when generating the DRDA commands for executing the PS. To me it looks like we can trap this situation in Request.initialize() by detecting an un-ended writeChain for which data has been sent to the server. But as we are using the Stream interface we cannot signal this in any way other than throwing an exception. It is not really feasible to use a checked exception for this as it will be wrapped in SqlExceptions and IOExceptions on its way up the callstack, so I plan to throw a (new) subclass of Error and then catching that at the point where we read the Lob-parameter from the top-level stream and then throw a more informative checked exception.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-09-12T15:33:35.299+0000","updated":"2013-09-12T15:33:35.299+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13770776","id":"13770776","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Attaching patch which tries to identify this situation and provide a better error. Modifies test case accordingly. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-09-18T13:45:24.502+0000","updated":"2013-09-18T13:45:24.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13771819","id":"13771819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks, Dyre. The approach looks reasonable to me. Some comments:\r\n\r\n- The license header for WriteChainAlreadyInUseError has the wrong class name.\r\n\r\n- Since the resulting exception is a DisconnectException, which takes down the connection, I think it should have session severity instead of statement severity. That is, its message id should end with \".C\" instead of \".S\".\r\n\r\n- Can we be sure that WriteChainAlreadyInUseError is only thrown when there is a corresponding catch block higher up in the call chain? Is there a way to make sure it won't escape to the application without being properly wrapped in the appropriate checked exception type (SQLException or IOException)?\r\n\r\n- We might want to internationalize WriteChainAlreadyInUseError's hard-coded error message, as it is chained to the DisconnectException and will be visible externally.\r\n\r\n- It would be good to have a code comment explaining the purpose of writeChainIsLocked_ and grabWriteChain().","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-09-19T12:04:11.214+0000","updated":"2013-09-19T12:04:11.214+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13778573","id":"13778573","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Thanks for the review Knut. I'll create another patch to address your comments.\r\n\r\nWrt. WriteChainAlreadyInUseError being caught: No I don't think we can guarantee that. And even if we analysed the code and concluded that it is safe, there is no guarantee that it will remain so if the code is modified later. My thoughts about this is that starting another writeChain without finishing the previous one, when you already have sent data to server, usually indicates a bug, in much the same way as an NPE or ArrayIndexOutOfBoundsException does. I'm fairly certain that whenever this situation occurs the result would be some kind of hard-to-understand syntax/parsing error from the server, and my reasoning was that even an uncaught WriteChainAlreadyInUseError was a preferable.\r\n\r\nIt is always possible to make it checked and let it be wrapped in SqlExceptions and IOExceptions on its way up the callstack, but then we need to traverse the cause-chain to trap the situation where you're setting a stream backed by your own connection.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-09-26T08:31:19.660+0000","updated":"2013-09-26T08:31:19.660+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13778675","id":"13778675","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"New patch which incorporates review comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-09-26T11:30:21.527+0000","updated":"2013-09-26T11:30:21.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13781717","id":"13781717","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for the new patch, Dyre. I'm mostly fine with it. I'm still a little worried that applications might get confused if the WriteChainAlreadyInUseError escapes out to them. Although it's similar to the NPE or ArrayIndexOutOfBoundsException that would have been thrown without the fix, I think an application is more likely to have reasonable handlers for Exception than for Error. So I think I would feel more comfortable if it had been a sub-class of RuntimeException, as that would make me more confident that if it should escape, the consequences for the application would be no worse than today (either the application handles RuntimeException and doesn't care whether it's a NullPointerException or WriteChainAlreadyInUseException, or it doesn't handle it and will get into trouble either way).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-09-30T09:50:03.772+0000","updated":"2013-09-30T09:50:03.772+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13786078","id":"13786078","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Knut also told me (offline) that he would have preferred WriteChainAlreadyInUse to be checked.\r\n\r\nI decided to try that (I actually replaced WriteChainAlreadyInUse with a DisconnectExecption with SQLState.NET_WRITE_CHAIN_IS_DIRTY) just to see how it would work. When doing so, it occurred to me that there really are three different situations that need to be handled when reading from the InputStream (in Request.writePlainScalarStream()):\r\n\r\n#  in.read() throws an exception but leaves the connection intact. This case is handled correctly by the existing code (the exception is saved and the stream value is padded with 0 and sent to the server to finish the request).\r\n# in.read() throws an exception which renders the connection unusable (closed):\r\n## in.read() throws SQLState.NET_WRITE_CHAIN_IS_DIRTY. Inform the user that she cannot use setX with a locator stream from the same connection.\r\n## in.read() throws some other exception. Since the connection is closed we cannot continue the request as in 1) (that would give an NPE when accessing the output stream), but must throw an SqlException, which should probably be a .C version of XN014.S wrapping the IOException from in.read(). \r\n\r\n2.1 is really just a special case of 2.2 which lets us provide a better error message to the user, but in order to provide it we need to traverse the cause chain to see if it contains SQLState.NET_WRITE_CHAIN_IS_DIRTY. \r\n\r\nAs an experiment, I tried running the repro without special handling of case 2.1:\r\n {quote}\r\nSTART ClobTest #4 - select and then update clob of size= 31744 - Uses setClob api\r\nException in thread \"main\" java.sql.SQLNonTransientConnectionException: Encountered an exception which terminated the connection, while reading from the stream specified by parameter #1. The Exception had this message: `org.apache.derby.client.am.DisconnectException: A write chain that has transmitted \r\n                    data to the server cannot be reset until the request\r\n                    is finished and the chain terminated.'.\r\n\tat org.apache.derby.client.am.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:104)\r\n\tat org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:321)\r\n\tat org.apache.derby.client.am.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:404)\r\n\tat Repro5317.selectUpdateClob(Repro5317.java:172)\r\n\tat Repro5317.main(Repro5317.java:43)\r\nCaused by: org.apache.derby.client.am.SqlException: Encountered an exception which terminated the connection, while reading from the stream specified by parameter #1. The Exception had this message: `org.apache.derby.client.am.DisconnectException: A write chain that has transmitted \r\n                    data to the server cannot be reset until the request\r\n                    is finished and the chain terminated.'.\r\n\tat org.apache.derby.client.net.Request.writePlainScalarStream(Request.java:332)\r\n\tat org.apache.derby.client.net.Request.writeScalarStream(Request.java:244)\r\n\tat org.apache.derby.client.net.Request.writeScalarStream(Request.java:515)\r\n\tat org.apache.derby.client.net.NetStatementRequest.buildEXTDTA(NetStatementRequest.java:1070)\r\n\tat org.apache.derby.client.net.NetStatementRequest.writeExecute(NetStatementRequest.java:166)\r\n\tat org.apache.derby.client.net.NetPreparedStatement.writeExecute_(NetPreparedStatement.java:156)\r\n\tat org.apache.derby.client.am.ClientPreparedStatement.writeExecute(ClientPreparedStatement.java:1832)\r\n\tat org.apache.derby.client.am.ClientPreparedStatement.flowExecute(ClientPreparedStatement.java:2047)\r\n\tat org.apache.derby.client.am.ClientPreparedStatement.executeUpdateX(ClientPreparedStatement.java:409)\r\n\tat org.apache.derby.client.am.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:395)\r\n\t... 2 more\r\nCaused by: java.io.IOException: org.apache.derby.client.am.DisconnectException: A write chain that has transmitted \r\n                    data to the server cannot be reset until the request\r\n                    is finished and the chain terminated.\r\n\tat org.apache.derby.client.am.ClobLocatorReader.readCharacters(ClobLocatorReader.java:233)\r\n\tat org.apache.derby.client.am.ClobLocatorReader.read(ClobLocatorReader.java:152)\r\n\tat java.io.BufferedReader.fill(BufferedReader.java:154)\r\n\tat java.io.BufferedReader.read1(BufferedReader.java:205)\r\n\tat java.io.BufferedReader.read(BufferedReader.java:279)\r\n\tat org.apache.derby.client.am.UpdateSensitiveClobLocatorReader.read(UpdateSensitiveClobLocatorReader.java:152)\r\n\tat org.apache.derby.client.net.EncodedInputStream.reEncode(EncodedInputStream.java:121)\r\n\tat org.apache.derby.client.net.EncodedInputStream.read(EncodedInputStream.java:180)\r\n\tat java.io.InputStream.read(InputStream.java:170)\r\n\tat org.apache.derby.client.net.Request.writePlainScalarStream(Request.java:316)\r\n\t... 11 more\r\nCaused by: org.apache.derby.client.am.DisconnectException: A write chain that has transmitted \r\n                    data to the server cannot be reset until the request\r\n                    is finished and the chain terminated.\r\n\tat org.apache.derby.client.net.NetAgent.verifyWriteChainIsClean(NetAgent.java:488)\r\n\tat org.apache.derby.client.net.NetAgent.beginWriteChain(NetAgent.java:500)\r\n\tat org.apache.derby.client.am.ClientPreparedStatement.flowPrepareDescribeInputOutput(ClientPreparedStatement.java:1966)\r\n\tat org.apache.derby.client.am.ClientPreparedStatement.prepare(ClientPreparedStatement.java:314)\r\n\tat org.apache.derby.client.am.ClientConnection.prepareCallX(ClientConnection.java:2003)\r\n\tat org.apache.derby.client.am.CallableLocatorProcedures.clobGetSubString(CallableLocatorProcedures.java:892)\r\n\tat org.apache.derby.client.am.ClobLocatorReader.readCharacters(ClobLocatorReader.java:223)\r\n\t... 20 more\r\n{quote}\r\n\r\nSo it is not strictly necessary to traverse the cause chain, but the resulting error message is undoubtedly harder to parse. So unless I'm told otherwise, I'll keep the cause-chain traversal and the special error for locator streams from the same connection.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-10-04T11:25:41.638+0000","updated":"2013-10-04T11:25:41.638+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13786132","id":"13786132","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Sounds like a good approach. I think it's an improvement (no NPE!) even with no special handling of 2.1, but having a more specific error message will make it much clearer what the problem is, so +1 to that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-10-04T13:30:13.696+0000","updated":"2013-10-04T13:30:13.696+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13789015","id":"13789015","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Patch using only checked exceptions, as described.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-10-08T07:40:09.015+0000","updated":"2013-10-08T07:40:09.015+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13790249","id":"13790249","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks, Dyre! The patch looks fine to me. I found some tiny nits, but nothing that blocks the patch.\r\n\r\nThe nits:\r\n\r\n- When checking the SQLState of the nested exception, maybe use ExceptionUtil.getSQLStateFromIdentifier(SQLState.NET_WRITE_CHAIN_IS_DIRTY) instead of the magic string \"XN022\"? (And maybe use equals() instead of contentEquals()? I think they are equivalent, and equals() is shorter and more familiar (to me, at least).)\r\n\r\n- The XN024.C message uses different characters for opening and closing quotes. I think most existing messages use a single-quote (') character both for opening and closing. I didn't find any existing message that used the backtick (`) character. It would be good to make the style of the new message consistent with the existing messages.\r\n\r\n- The (Object[]) null argument to DisconnectException's constructor in verifyWriteChainIsClean() is probably not needed, since it's a vararg.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-10-09T11:03:13.097+0000","updated":"2013-10-09T11:03:13.097+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13790284","id":"13790284","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Good suggestions, thanks.\r\n\r\nWrt. contentEquals - I thought the more specific method should be preferred - contentEquals(CharSquence) over equals(Object). I naively assumed that since someone has gone through the trouble of providing the former, it was because there is some benefit (performance or other) to be had if you already know that you are comparing to a CharSequence...\r\n\r\nWrt. backtick - Changed - but see \r\nhttp://programmers.stackexchange.com/questions/75349/why-do-nix-y-folks-single-quote-like-this-instead-of-like-this\r\nif you're bored :)\r\n\r\nWrt. (Object[]) cast - Changed. However, I shamelessly blame Netbeans for this :) I think I used Netbeans to refactor away the local var which was used as the last arg, which then became null, (or maybe I added the null myself just to make it compile). Then NB gives a warning and suggests \"cast to Object for a varargs call\" or \"cast to (Object[]) for a non-varargs call and to suppress this warning\".  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-10-09T12:06:13.713+0000","updated":"2013-10-09T12:06:13.713+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13790441","id":"13790441","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"New patch including all suggested changes. I have been persuaded that there is, in fact, no benefit to using contentEquals... quite the opposite.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2013-10-09T15:08:33.461+0000","updated":"2013-10-09T15:08:33.461+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13790595","id":"13790595","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1530704 from [~dyret] in branch 'code/trunk'\r\n[ https://svn.apache.org/r1530704 ]\r\n\r\nDERBY-5317: Detect attempts to reuse a connection that in the middle of sending a request to the server. Use this to provide a better error message and avoid the NPE.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-09T16:40:32.344+0000","updated":"2013-10-09T16:40:32.344+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13916223","id":"13916223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"opening for backport to 10.10.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2014-02-28T19:26:24.204+0000","updated":"2014-02-28T19:26:24.204+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13917507","id":"13917507","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1573334 from mikem@apache.org in branch 'code/branches/10.10'\r\n[ https://svn.apache.org/r1573334 ]\r\n\r\nDERBY-5317: Detect attempts to reuse a connection that in the middle of sending a request to the server. Use this to provide a better error message and avoid the NPE.\r\nDERBY-6386 - Errors in jdbc4.LobStreamTest if derbyclient.jar is first in the classpath\r\n\r\nbackported change #1530704 to fix DERBY-5317 from trunk to 10.10, needed some\r\n   hand merging to fix difference in argument ordering between 10.10 and trunk.\r\nbackported change #1534425 to fix DERBY-6386 which was caused by DERBY5317 fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-03-02T18:05:50.049+0000","updated":"2014-03-02T18:05:50.049+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13918292","id":"13918292","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1573624 from mikem@apache.org in branch 'code/branches/10.10'\r\n[ https://svn.apache.org/r1573624 ]\r\n\r\nDERBY-5317: Detect attempts to reuse a connection that in the middle of sending a request to the server. Use this to provide a better error message and avoid the NPE.\r\nDERBY-6386 - Errors in jdbc4.LobStreamTest if derbyclient.jar is first in the classpath\r\n\r\nbacking out change #1573334 which caused problems in nightly 10.10 test runs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-03-03T17:27:27.334+0000","updated":"2014-03-03T17:27:27.334+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13918380","id":"13918380","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"issue does not backport cleanly to 10.10.  Also causes build problems in 10.10 in some environments.   Also it adds some exceptions that may not be appropriate for existing \r\napplications on a released product, better to introduce these only in a new release.\r\nMarking not appropriate for backport.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2014-03-03T18:33:21.422+0000","updated":"2014-03-03T18:37:31.967+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/13918382","id":"13918382","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"reassigning original owner.  Looked at backporting, but ran into both merge and build problems.  Marked not appropriate for backport at this time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2014-03-03T18:34:47.497+0000","updated":"2014-03-03T18:34:47.497+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12513038/comment/14284717","id":"14284717","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"bulk change to close all issues resolved but not closed and not changed since June 1, 2014.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2015-01-21T00:22:56.791+0000","updated":"2015-01-21T00:22:56.791+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-5317/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06j33:"}}