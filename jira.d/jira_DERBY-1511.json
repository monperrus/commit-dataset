{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12346012","self":"https://issues.apache.org/jira/rest/api/latest/issue/12346012","key":"DERBY-1511","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315564","id":"12315564","description":"First release on the 10.7 branch.","name":"10.7.1.1","archived":false,"released":true,"releaseDate":"2010-12-14"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-07-20 00:07:09.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22548","customfield_12310222":"3_*:*_1_*:*_8116730502_*|*_1_*:*_1_*:*_123627544205_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-09-16T12:58:40.707+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1511/watchers","watchCount":1,"isWatching":false},"created":"2006-07-14T17:20:46.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":["LOB"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"8.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12310615","id":"12310615","description":"","name":"10.1.2.1","archived":false,"released":true,"releaseDate":"2005-11-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12320818","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12320818","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12399400","key":"DERBY-3749","self":"https://issues.apache.org/jira/rest/api/2/issue/12399400","fields":{"summary":"in holdable cursor selecting multiple rows with streaming blobs and clobs a commit may cause later row's streams to be broken","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12325451","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12325451","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12429122","key":"DERBY-4294","self":"https://issues.apache.org/jira/rest/api/2/issue/12429122","fields":{"summary":"java.lang.OutOfMemoryError from mailjdbc test after running for one hour from select * from REFRESH.INBOX","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12333921","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12333921","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12474281","key":"DERBY-4800","self":"https://issues.apache.org/jira/rest/api/2/issue/12474281","fields":{"summary":"Allow bulk scan of LOB tables with holdable cursors","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-06-17T09:19:11.533+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11412","id":"11412","name":"Store"}],"timeoriginalestimate":null,"description":"An exception occurs when extracting a Blob from a database. \r\n\r\nThe following code, will ALWAYS fail with the Exception:\r\n\r\njava.io.IOException: ERROR 40XD0: Container has been closed\r\n        at org.apache.derby.impl.store.raw.data.OverflowInputStream.fillByteHold\r\ner(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.data.BufferedByteHolderInputStream.re\r\nad(Unknown Source)\r\n        at java.io.DataInputStream.read(Unknown Source)\r\n        at java.io.FilterInputStream.read(Unknown Source)\r\n        at java.io.ObjectInputStream$PeekInputStream.read(Unknown Source)\r\n        at java.io.ObjectInputStream$PeekInputStream.readFully(Unknown Source)\r\n        at java.io.ObjectInputStream$BlockDataInputStream.readDoubles(Unknown So\r\nurce)\r\n        at java.io.ObjectInputStream.readArray(Unknown Source)\r\n        at java.io.ObjectInputStream.readObject0(Unknown Source)\r\n        at java.io.ObjectInputStream.readObject(Unknown Source)\r\n        at BlobTest.readRows(BlobTest.java:82)\r\n        at BlobTest.main(BlobTest.java:24)\r\n\r\nCODE:\r\n\r\nimport java.io.*;\r\nimport java.sql.*;\r\nimport java.util.*;\r\n\r\npublic class BlobTest\r\n{\r\n  private static final String TABLE1 = \"CREATE TABLE TABLE_1 ( \"\r\n                                     + \"ID INTEGER NOT NULL, \"\r\n                                     + \"COL_2 INTEGER NOT NULL, \"\r\n                                     + \"PRIMARY KEY (ID) )\";\r\n\r\n  private static final String TABLE2 = \"CREATE TABLE TABLE_2 ( \"\r\n                                     + \"ID INTEGER NOT NULL, \"\r\n                                     + \"COL_BLOB BLOB, \"\r\n                                     + \"PRIMARY KEY (ID) )\";\r\n\r\n  public static void main(String... args) {\r\n    try {\r\n      createDBandTables();\r\n      Connection con = getConnection();\r\n\r\n      addRows(con, 10000, 1);\r\n      addRows(con, 10000, 2);\r\n      readRows(con, 1);\r\n\r\n      con.close();\r\n    }\r\n    catch(Exception exp) {\r\n      exp.printStackTrace();\r\n    }\r\n  }\r\n\r\n  private static void addRows(Connection con, int size, int id) \r\n                                                         throws Exception\r\n  {\r\n    String sql = \"INSERT INTO TABLE_1 VALUES(?, ?)\";\r\n\r\n    PreparedStatement pstmt = con.prepareStatement(sql);\r\n    pstmt.setInt(1, id);\r\n    pstmt.setInt(2, 2);\r\n    pstmt.executeUpdate();\r\n    pstmt.close();\r\n\r\n    double[] array = new double[size];\r\n    array[size-1] = 1.23;\r\n\r\n    sql = \"INSERT INTO TABLE_2 VALUES(?, ?)\";\r\n\r\n    pstmt = con.prepareStatement(sql);\r\n    pstmt.setInt(1, id);\r\n\r\n    ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\r\n    ObjectOutputStream objStream = new ObjectOutputStream(byteStream);\r\n    objStream.writeObject(array);         // Convert object to byte stream \r\n    objStream.flush();\r\n    objStream.close();\r\n\r\n    byte[] bytes = byteStream.toByteArray();\r\n\r\n    ByteArrayInputStream inStream = new ByteArrayInputStream(bytes);\r\n\r\n    pstmt.setBinaryStream(2, inStream, bytes.length);\r\n    pstmt.executeUpdate();\r\n    pstmt.close();\r\n  }\r\n\r\n  private static void readRows(Connection con, int id) throws Exception\r\n  {\r\n    String sql = \"SELECT * FROM TABLE_2\";\r\n//    String sql = \"SELECT * FROM TABLE_2 WHERE ID > 0\";\r\n\r\n    Statement stmt = con.createStatement();\r\n\r\n    ResultSet rs = stmt.executeQuery(sql);\r\n\r\n    while (rs.next()) {\r\n      rs.getInt(1);\r\n\r\n      InputStream stream = rs.getBinaryStream(2);\r\n\r\n      ObjectInputStream objStream = new ObjectInputStream(stream);\r\n\r\n      Object obj = objStream.readObject();\r\n\r\n      double[] array = (double[]) obj;\r\n\r\n      System.out.println(array.length);\r\n\r\n      readTable1(con, id);\r\n    }\r\n    rs.close();\r\n    stmt.close();\r\n  }\r\n\r\n  private static void readTable1(Connection con, int id) throws Exception {\r\n    String sql = \"SELECT ID FROM TABLE_1 WHERE ID=\" + id;    \r\n\r\n    Statement stmt = con.createStatement();\r\n\r\n    ResultSet rs = stmt.executeQuery(sql);\r\n\r\n    if (rs.next()) {\r\n    }\r\n    rs.close();\r\n    stmt.close();\r\n  }\r\n  \r\n  private static Connection getConnection() throws Exception {\r\n    String driver=\"org.apache.derby.jdbc.EmbeddedDriver\";\r\n\r\n    Properties p = System.getProperties();\r\n    p.put(\"derby.system.home\", \"C:\\\\databases\\\\sample\");\r\n    \r\n    Class.forName(driver);\r\n\r\n    String url = \"jdbc:derby:derbyBlob\";\r\n    Connection con = DriverManager.getConnection(url);\r\n\r\n    return con;\r\n  }\r\n\r\n  private static void createDBandTables() throws Exception {\r\n    String driver=\"org.apache.derby.jdbc.EmbeddedDriver\";\r\n\r\n    Properties p = System.getProperties();\r\n    p.put(\"derby.system.home\", \"C:\\\\databases\\\\sample\");\r\n    \r\n    Class.forName(driver);\r\n\r\n    String url = \"jdbc:derby:derbyBlob;create=true\";\r\n    Connection con = DriverManager.getConnection(url);\r\n\r\n    Statement stmt = con.createStatement();\r\n\r\n    stmt.execute(TABLE1);\r\n    stmt.execute(TABLE2);\r\n\r\n    stmt.close();\r\n    con.close();\r\n  }\r\n}\r\n\r\nHowever if the selection clause is changed from:\r\n\r\n    String sql = \"SELECT * FROM TABLE_2\";\r\nTO\r\n    String sql = \"SELECT * FROM TABLE_2 WHERE ID > 0\";\r\n\r\nThe code works without Exception.\r\n\r\n\r\nOutput from: java org.apache.derby.tools.sysinfo \r\n------------------ Java Information ------------------ \r\nJava Version: 1.5.0_05 \r\nJava Vendor: Sun Microsystems Inc. \r\nJava home: C:\\Program Files\\Java\\jre1.5.0_05 \r\nJava classpath: C:\\tools\\derby\\db-derby-10.1.2.1-bin\\lib\\derby.jar;C:\\tools\\der \r\nby\\db-derby-10.1.2.1-bin\\lib\\derbytools.jar; \r\nOS name: Windows XP \r\nOS architecture: x86 \r\nOS version: 5.1 \r\nJava user name: David \r\nJava user home: C:\\Documents and Settings\\David \r\nJava user dir: C:\\david\\novice\\derby \r\njava.specification.name: Java Platform API Specification \r\njava.specification.version: 1.5 \r\n--------- Derby Information -------- \r\nJRE - JDBC: J2SE 5.0 - JDBC 3.0 \r\n[C:\\tools\\derby\\db-derby-10.1.2.1-bin\\lib\\derby.jar] 10.1.2.1 - (330608) \r\n[C:\\tools\\derby\\db-derby-10.1.2.1-bin\\lib\\derbytools.jar] 10.1.2.1 - (330608) \r\n------------------------------------------------------ \r\n----------------- Locale Information ----------------- \r\n------------------------------------------------------ \r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10365","value":"Crash","id":"10365"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37796","summary":"SELECT clause without a WHERE, causes an Exception when extracting a Blob from a database","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=heath_david","name":"heath_david","emailAddress":"david at transformsw dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Heath","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10422","value":"High Value Fix","id":"10422"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10427","value":"Workaround attached","id":"10427"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=heath_david","name":"heath_david","emailAddress":"david at transformsw dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Heath","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Windows XP","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":20,"total":20,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12422298","id":"12422298","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Do you see this issue with autocommit off?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-07-20T00:07:09.000+0000","updated":"2006-07-20T00:07:09.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12422368","id":"12422368","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andreask","name":"andreask","emailAddress":"andreas dot korneliussen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andreas Korneliussen","active":true},"body":"Yes.\r\n\r\nIf you modify the code, and replace readTable1(..) with con.commit(), you will see this issue with autocommit off:\r\n\r\nThe problem seems to be related to BulkTableScanResultSet. On the first call to next() it builds an array of rows (rowArray), and feeds the result set with rows from that array. However, after a commit, the Conglomerate is closed. The BulkTableScanResultSet will continue to feed rows from the rowArray, and the BLOB columns in these rows depend on reading data from the Conglomerate (which is closed).\r\n\r\nWhen adding a WHERE clause, the engine will not use BulkTableScanResultSet. Also if the statement has concurrency CONCUR_UPDATABLE, the engine will not use BulkTableScanResultSet.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andreask","name":"andreask","emailAddress":"andreas dot korneliussen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andreas Korneliussen","active":true},"created":"2006-07-20T09:17:26.000+0000","updated":"2006-07-20T09:17:26.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12542903","id":"12542903","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Would it make sense to force the use of TableScanResultSet instead of BulkTableScanResultSet when the result contains long columns? I ran the test case successfully with this diff applied (BulkTableScanResultSet with rowsPerRead==1 means that it behaves exactly like TableScanResultSet):\r\n\r\n--- BulkTableScanResultSet.java\t(revision 593240)\r\n+++ BulkTableScanResultSet.java\t(working copy)\r\n@@ -128,7 +128,7 @@\r\n \t\t\tlockMode,\r\n \t\t\ttableLocked,\r\n \t\t\tisolationLevel,\r\n-\t\t\trowsPerRead,\r\n+\t\t\t  /*rowsPerRead*/ 1,\r\n \t\t\toneRowScan,\r\n \t\t\toptimizerEstimatedRowCount,\r\n \t\t\toptimizerEstimatedCost);","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-11-15T22:37:45.921+0000","updated":"2007-11-15T22:37:45.921+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12797364","id":"12797364","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tna","name":"tna","emailAddress":"tna at sharanet dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomislav Nakic-Alfirevic","active":true},"body":"I'm not sure if it's the same issue but I've consistently running into \"ERROR 40XD0: Container has been closed \"\r\n\r\nI can't provide SQL code to reproduce the problem because I wrote the code in groovy and it generates the SQL, but I'm basically running something along these lines:\r\n\r\nfor each row in (select * from tableA)\r\n  ...\r\n  select count(id) > 0 from tableB where name = 'somename'\r\n  insert into tableB (...) values...\r\n  insert into tableC (...) values...\r\nend\r\n\r\ntableB has ~140k rows with a varchar(32000) field which is sometimes completely full.\r\nThe loop would always break on row with id X, but it's not the row that's the problem. if I replace (select * from tableA) with (select * from tableA where id = X), it works just fine. It seems that derby only breaks after a certain number of iterations. I wanted to get a better feeling of what the problem was and I believe there were no errors when I commented out the insert statements.\r\n\r\nNow, I have tried embedded mode and network client mode as well as different derby versions (10.3 and 10.5.3), but I have seen no difference in behaviour. I've also attempted to set autocommit to false and explicitly commit after inserts (someone suggested it as a workaround somewhere) without result.\r\nI've spent a day and a half debugging this and finally migrated the data to PostgreSQL where it now works flawlessly.\r\n\r\nThis is the definition of tableA:\r\n\r\ncreate table article (\r\nid int,\r\nid_article_type int,\r\nsummary varchar(1024),\r\ncontent varchar(32672), -- need a lot of space\r\n)\r\n\r\nThat's about it...I can't re-run the application any more without a significant effort so I can't provide the exact stack trace, but hope this is detailed enough.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tna","name":"tna","emailAddress":"tna at sharanet dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tomislav Nakic-Alfirevic","active":true},"created":"2010-01-06T22:37:42.977+0000","updated":"2010-01-06T22:37:42.977+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12797602","id":"12797602","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks for documenting this, Tomislav. Hopefully, your information can help us make a repro of this issue.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2010-01-07T11:46:33.698+0000","updated":"2010-01-07T11:46:33.698+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12877487","id":"12877487","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I'm attaching a JUnit regression test case that exposes this bug.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-06-10T16:59:25.317+0000","updated":"2010-06-10T16:59:25.317+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12878591","id":"12878591","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I'm attaching a patch that disables bulk fetch if the table scan returns BLOBs or CLOBs. This makes the repro run cleanly. I haven't run any other tests yet.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-06-14T14:27:50.640+0000","updated":"2010-06-14T14:27:50.640+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12878614","id":"12878614","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"The attached patch looks good to me. It will be interesting to how/if performance is affected by this (I think I'm aware of an internal test that would reveal this).\r\n\r\nJust as a side note, I guess another option would be to hide locators that aren't ready for deallocation. This does however sound like an error-prone approach, adding further complexity in this area.\r\n\r\nGiven that the tests run without failure, and that the performance for selecting LOBs doesn't degrade too much, +1 to commit.\r\nI think a small performance degradation is to prefer over a non-working query, especially since bulk fetch is disabled for other types of queries anyway.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-06-14T15:21:02.791+0000","updated":"2010-06-14T15:21:02.791+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12878924","id":"12878924","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for looking at the patch, Kristian. I'll see if I can come up with some numbers that describe the performance impact. Speaking of performance, disabling bulk-fetch is probably only necessary when using holdable cursors (the default), since non-holdable cursors won't even allow you to execute next() after a commit. But, as far as I can tell, the compiled plans can be shared between statements that produce holdable cursors and statements that produce non-holdable cursors, so I don't think it's possible to predict the holdability of the cursor at compile time.\r\n\r\nThe previous patch made two test cases in BlobClob4BlobTest fail: testNegativeTestDerby265Blob and testNegativeTestDerby265Clob. In both cases the tests failed because they expected a \"container closed\" exception in queries similar to the one reported here. I'm uploading a new patch (1b) that makes BlobClob4BlobTest expect these test cases to execute cleanly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-06-15T10:34:11.356+0000","updated":"2010-06-15T10:34:11.356+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12887697","id":"12887697","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I ran some tests which performed table scans on a table with 100MB of BLOB data. The attached graph shows the results for various record sizes. In short, disabling bulk fetch seems to have a large impact on small records (~75% reduction with record size 100 bytes), whereas there's little difference for records > ~30K. In fact, for large records, disabling bulk fetch seems to improve the performance marginally.\r\n\r\nReduced table scan performance for small LOBs would probably be acceptable because (a) full table scan should be avoided in the first place if performance is important, and (b) for that small records VARCHAR and VARCHAR FOR BIT DATA should be preferred to CLOB and BLOB. But since this fix is only needed for holdable cursors, we could delay the disabling of bulk fetching to runtime so that we can check the holdability first, and only disable it if the cursor is holdable. Then the users would be given an option (use a non-holdable cursor) that didn't require changes to their queries or database schema if some of their queries slow down. We could document this in a release note. How does that sound?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-13T09:12:43.708+0000","updated":"2010-07-13T09:12:43.708+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12887704","id":"12887704","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks for obtaining hard facts, Knut :)\r\n\r\nI'm +0.9 for the current approach, since I agree most users shouldn't be affected, and +1 for the even better approach you suggested in your last comment (assuming the decision can be taken easily at runtime).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-07-13T09:49:31.658+0000","updated":"2010-07-13T09:49:31.658+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12887709","id":"12887709","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"There is of course also the option of trying to make the pre-fetched LOBs survive the commit, which wouldn't affect anyone at all, but I suspect that's somewhat more involved, so I haven't looked into that option. But if we just get a fix in for the bug first, with a documented workaround for those who see an unacceptable performance hit, we could always revisit the issue to improve the performance for the holdable case later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-07-13T10:15:57.286+0000","updated":"2010-07-13T10:15:57.286+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12887814","id":"12887814","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"+1 to fixing the current bug as described (if you can do it only for holdable case that would be best),\r\nas it best to get a fix in that makes queries run, even at cost of some performance loss.\r\nBut do log a linked improvement JIRA to fix this issue in some way that does not require disabling\r\nbulk fetch.  The blob holders should be improved to withstand the closing of the underlying containers,\r\nbut this is best approached as a feature level task in a new release.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2010-07-13T15:55:30.305+0000","updated":"2010-07-13T15:55:30.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12907220","id":"12907220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Here's an updated patch that only disables bulk fetch if the table contains LOB columns and the cursor is holdable. I've only run BLOBTest on it yet. Will start the full regression test suite.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-09-08T13:58:36.031+0000","updated":"2010-09-08T13:58:36.031+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12907591","id":"12907591","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Many of the tests failed with the 1c patch. I'll investigate and come up with a new patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-09-09T11:00:25.296+0000","updated":"2010-09-09T11:00:25.296+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12908000","id":"12908000","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"It looks like all the failures with the 1c patch were caused by NullPointerExceptions in FromTable.hasLargeObjectColumns(). The tests failed when the FromBaseTable was located below an IndexRowToBaseRowResultSet. The problem was that the last column of the FBT will have a CurrentRowLocationNode, which is not an SQL type and hence getType() returns null. A value that doesn't have a type cannot be a large object column, so I think this can be fixed simply by skipping the columns that don't have a type.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-09-10T12:34:33.242+0000","updated":"2010-09-10T12:34:33.242+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12908044","id":"12908044","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Uploading a new patch 1d which fixes the NPE in the previous patch.\r\n\r\nThe patch adds a boolean parameter to BulkTableScanResultSet which tells whether bulk fetch must be disabled for holdable cursor. At runtime, BulkTableScanResultSet will check that flag and, if requested, disable bulk fetching (by setting bulk fetch size to 1) if the cursor is holdable.\r\n\r\nAll the regression tests ran cleanly with this patch. I've also tested some table scans with small (10 bytes) BLOBs and verified that there's no performance hit with non-holdable cursors. Holdable cursors still see a performance degradation with small LOBs in the cases where it used bulk scans before.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-09-10T14:52:12.698+0000","updated":"2010-09-10T14:52:12.698+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12909305","id":"12909305","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attaching a release note.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-09-14T16:21:18.635+0000","updated":"2010-09-14T16:21:18.635+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/12910137","id":"12910137","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed revision 997722.\r\n\r\nI've filed DERBY-4800 for the improvements needed in order to re-enable bulk scans with holdable cursors.\r\n\r\nMarking this issue as resolved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2010-09-16T12:58:40.600+0000","updated":"2010-09-16T12:58:40.600+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12346012/comment/13685154","id":"13685154","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"[bulk update] Close all resolved issues that haven't been updated for more than one year.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-06-17T09:19:11.505+0000","updated":"2013-06-17T09:19:11.505+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1511/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06u0f:"}}