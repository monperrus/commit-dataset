{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12601170","self":"https://issues.apache.org/jira/rest/api/latest/issue/12601170","key":"LUCENE-4280","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2012-08-02 13:13:47.195","customfield_12312323":null,"customfield_12310420":"243690","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4280/watchers","watchCount":2,"isWatching":false},"created":"2012-08-02T06:46:26.706+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[{"id":"12355726","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12355726","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12550943","key":"LUCENE-3985","self":"https://issues.apache.org/jira/rest/api/2/issue/12550943","fields":{"summary":"Refactor support for thread leaks","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-08-06T16:38:17.150+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"components":[],"timeoriginalestimate":null,"description":"{code}\r\n-ea\r\n-Dtests.seed=9449688B90185FA5\r\n-Dtests.iters=100\r\n{code}\r\nreproduces 100% for me, multiple thread leak out from newSearcher's internal threadfactory:\r\n{code}\r\nAug 02, 2012 8:46:05 AM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\r\nSEVERE: 6 threads leaked from SUITE scope at org.apache.lucene.index.TestReaderClosed: \r\n   1) Thread[id=13, name=LuceneTestCase-1-thread-1, state=WAITING, group=TGRP-TestReaderClosed]\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n   2) Thread[id=15, name=LuceneTestCase-3-thread-1, state=WAITING, group=TGRP-TestReaderClosed]\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n   3) Thread[id=17, name=LuceneTestCase-5-thread-1, state=WAITING, group=TGRP-TestReaderClosed]\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n   4) Thread[id=18, name=LuceneTestCase-6-thread-1, state=WAITING, group=TGRP-TestReaderClosed]\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n   5) Thread[id=16, name=LuceneTestCase-4-thread-1, state=WAITING, group=TGRP-TestReaderClosed]\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n   6) Thread[id=14, name=LuceneTestCase-2-thread-1, state=WAITING, group=TGRP-TestReaderClosed]\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n{code}","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"23744","summary":"TestReaderClosed leaks threads","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":7,"total":7,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12601170/comment/13427296","id":"13427296","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Do we know if the problem happens from the method 'test' or from 'testReaderChaining'?\r\n\r\nhere are my notes basically for 'test'. I think we could apply the same logic to 'testReaderChaining',\r\nbut I want Uwe's opinion:\r\n\r\n{noformat}\r\n@@ -65,6 +66,17 @@\r\n       searcher.search(query, 5);\r\n     } catch (AlreadyClosedException ace) {\r\n       // expected\r\n+    } finally {\r\n+      // we may have wrapped the reader1 in newSearcher, meaning we created reader2(reader1)\r\n+      // but we only closed the inner reader1, not the reader2 which is the one with the\r\n+      // close hook to shut down the executor service.\r\n+      //\r\n+      // a better general solution is probably to fix LuceneTestCase.newSearcher to add \r\n+      // the close hook to the underlying reader that was passed in (reader1), however\r\n+      // if we do that, is this test still just as good? we will get an exception from\r\n+      // IndexSearcher instead?\r\n+      IOUtils.close(searcher.getIndexReader());\r\n     }\r\n{noformat}\r\n\r\nI think we need Uwe to review :)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-08-02T13:13:47.195+0000","updated":"2012-08-02T13:13:47.195+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12601170/comment/13427882","id":"13427882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"bq. Do we know if the problem happens from the method 'test' or from 'testReaderChaining'?\r\n\r\nI encourage you to use this for finding out (rr branch at https://github.com/dweiss/lucene_solr/) :)\r\n{code}\r\n@ThreadLeakScope(Scope.TEST)\r\n@Repeat(iterations = 10)\r\npublic class TestReaderClosed extends LuceneTestCase {\r\n{code}\r\n\r\nIn short: it's just the testReaderChaining method. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-03T07:34:51.824+0000","updated":"2012-08-03T07:34:51.824+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12601170/comment/13427884","id":"13427884","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"I'm talking about this particular seed though:\r\n{code}\r\n-Dtests.seed=9449688B90185FA5\r\n{code}\r\n\r\nWith thread leak detection and warnings only:\r\n{code}\r\n@ThreadLeakScope(Scope.TEST)\r\n@ThreadLeakLingering(linger = 1000)\r\n@ThreadLeakAction(value = {Action.WARN})\r\n@Repeat(iterations = 1000)\r\npublic class TestReaderClosed extends LuceneTestCase {\r\n{code}\r\nthe 'test' method passes all 1000 iterations, the testReaderChaining fails about 20 times (2% failure rate).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-03T07:41:30.135+0000","updated":"2012-08-03T07:41:30.135+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12601170/comment/13427890","id":"13427890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Ok, I think this indeed affects other tests too. Last night's logs from the build server:\r\n{code}\r\nERROR   0.00s J0 | TestLazyProxSkipping (suite)\r\n   > Throwable #1: com.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE scope at org.apache.lucene.index.TestLazyProxSkipping: \r\n   >    1) Thread[id=183, name=LuceneTestCase-40-thread-1, state=WAITING, group=TGRP-TestLazyProxSkipping]\r\n   >         at sun.misc.Unsafe.park(Native Method)\r\n   >         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n   >         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)\r\n   >         at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)\r\n   >         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)\r\n   >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n   >         at java.lang.Thread.run(Thread.java:619)\r\n   > \tat __randomizedtesting.SeedInfo.seed([A3DFB2B2B64B7FB2]:0)\r\n   > Throwable #2: com.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:\r\n   >    1) Thread[id=183, name=LuceneTestCase-40-thread-1, state=WAITING, group=TGRP-TestLazyProxSkipping]\r\n   >         at sun.misc.Unsafe.park(Native Method)\r\n   >         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n   >         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)\r\n   >         at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)\r\n   >         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)\r\n   >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n   >         at java.lang.Thread.run(Thread.java:619)\r\n   > \tat __randomizedtesting.SeedInfo.seed([A3DFB2B2B64B7FB2]:0)\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-03T07:46:52.998+0000","updated":"2012-08-03T07:46:52.998+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12601170/comment/13427893","id":"13427893","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"That TestLazyProxSkipping test failed three builds last night so it's probably frequent.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-03T07:50:44.182+0000","updated":"2012-08-03T07:50:44.182+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12601170/comment/13429227","id":"13429227","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"TestLazyProxSkipping again.\r\n{code}\r\n[junit4:junit4] Suite: org.apache.lucene.index.TestLazyProxSkipping\r\n[junit4:junit4] OK      0.01s J0 | TestLazyProxSkipping.testSeek\r\n[junit4:junit4] OK      1.05s J0 | TestLazyProxSkipping.testLazySkipping\r\n[junit4:junit4]    > (@AfterClass output)\r\n[junit4:junit4]   2> Aug 06, 2012 3:47:18 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\r\n[junit4:junit4]   2> WARNING: Will linger awaiting termination of 1 leaked thread(s).\r\n[junit4:junit4]   2> Aug 06, 2012 3:47:38 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\r\n[junit4:junit4]   2> SEVERE: 1 thread leaked from SUITE scope at org.apache.lucene.index.TestLazyProxSkipping: \r\n[junit4:junit4]   2>    1) Thread[id=116, name=LuceneTestCase-18-thread-1, state=WAITING, group=TGRP-TestLazyProxSkipping]\r\n[junit4:junit4]   2>         at sun.misc.Unsafe.park(Native Method)\r\n[junit4:junit4]   2>         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n[junit4:junit4]   2>         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n[junit4:junit4]   2>         at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n[junit4:junit4]   2>         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n[junit4:junit4]   2>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n[junit4:junit4]   2>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n[junit4:junit4]   2>         at java.lang.Thread.run(Thread.java:722)\r\n[junit4:junit4]   2> Aug 06, 2012 3:47:38 PM com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\r\n[junit4:junit4]   2> INFO: Starting to interrupt leaked threads:\r\n[junit4:junit4]   2>    1) Thread[id=116, name=LuceneTestCase-18-thread-1, state=WAITING, group=TGRP-TestLazyProxSkipping]\r\n[junit4:junit4]   2> Aug 06, 2012 3:47:41 PM com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\r\n[junit4:junit4]   2> SEVERE: There are still zombie threads that couldn't be terminated:\r\n[junit4:junit4]   2>    1) Thread[id=116, name=LuceneTestCase-18-thread-1, state=WAITING, group=TGRP-TestLazyProxSkipping]\r\n[junit4:junit4]   2>         at sun.misc.Unsafe.park(Native Method)\r\n[junit4:junit4]   2>         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n[junit4:junit4]   2>         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n[junit4:junit4]   2>         at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n[junit4:junit4]   2>         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n[junit4:junit4]   2>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n[junit4:junit4]   2>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n[junit4:junit4]   2>         at java.lang.Thread.run(Thread.java:722)\r\n[junit4:junit4]   2> NOTE: test params are: codec=Lucene40: {tokens=PostingsFormat(name=MockRandom)}, sim=RandomSimilarityProvider(queryNorm=false,coord=false): {tokens=DFR I(n)B3(800.0)}, locale=sl, timezone=America/Resolute\r\n[junit4:junit4]   2> NOTE: Windows 7 6.1 amd64/Oracle Corporation 1.7.0_03 (64-bit)/cpus=8,threads=2,free=130600992,total=261095424\r\n[junit4:junit4]   2> NOTE: All tests run in this JVM: [TestBooleanOr, TestDirectory, TestMultiTermConstantScore, TestIndexFileDeleter, TestSetOnce, Nested1, TestStressIndexing2, TestRegexpRandom2, TestStressAdvance, TestSpansAdvanced, TestAssertions, TestFieldCacheRewriteMethod, TestPrefixInBooleanQuery, TestMultiPhraseQuery, TestMatchAllDocsQuery, TestLock, TestSimilarity2, TestNamedSPILoader, TestSort, TestBytesRefHash, TestOmitTf, TestVirtualMethod, TestLazyProxSkipping]\r\n[junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLazyProxSkipping -Dtests.seed=55A3CB2FF25AC1A5 -Dtests.slow=true -Dtests.locale=sl -Dtests.timezone=America/Resolute -Dtests.file.encoding=ISO-8859-1\r\n[junit4:junit4]   2> \r\n[junit4:junit4] ERROR   0.00s J0 | TestLazyProxSkipping (suite)\r\n[junit4:junit4]    > Throwable #1: com.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE scope at org.apache.lucene.index.TestLazyProxSkipping: \r\n[junit4:junit4]    >    1) Thread[id=116, name=LuceneTestCase-18-thread-1, state=WAITING, group=TGRP-TestLazyProxSkipping]\r\n[junit4:junit4]    >         at sun.misc.Unsafe.park(Native Method)\r\n[junit4:junit4]    >         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n[junit4:junit4]    >         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n[junit4:junit4]    >         at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n[junit4:junit4]    >         at java.lang.Thread.run(Thread.java:722)\r\n[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([55A3CB2FF25AC1A5]:0)\r\n[junit4:junit4]    > Throwable #2: com.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:\r\n[junit4:junit4]    >    1) Thread[id=116, name=LuceneTestCase-18-thread-1, state=WAITING, group=TGRP-TestLazyProxSkipping]\r\n[junit4:junit4]    >         at sun.misc.Unsafe.park(Native Method)\r\n[junit4:junit4]    >         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n[junit4:junit4]    >         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\r\n[junit4:junit4]    >         at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1043)\r\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1103)\r\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n[junit4:junit4]    >         at java.lang.Thread.run(Thread.java:722)\r\n[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([55A3CB2FF25AC1A5]:0)\r\n[junit4:junit4]    >\r\n[junit4:junit4] Completed on J0 in 24.19s, 2 tests, 2 errors <<< FAILURES!\r\n[junit4:junit4]  \r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-06T16:16:32.596+0000","updated":"2012-08-06T16:16:32.596+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12601170/comment/13429244","id":"13429244","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"I committed a fix for TestLazyProxSkipping (it wasn't closing the reader).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-08-06T16:38:17.136+0000","updated":"2012-08-06T16:38:17.136+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4280/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04fav:"}}