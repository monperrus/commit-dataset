{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12381670","self":"https://issues.apache.org/jira/rest/api/latest/issue/12381670","key":"DERBY-3172","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-11-07 19:50:23.997","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23475","customfield_12310222":"1_*:*_1_*:*_2224852936_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_5023840346","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-11-27T19:26:55.362+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3172/watchers","watchCount":0,"isWatching":false},"created":"2007-11-02T01:26:02.426+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2008-01-24T22:57:35.705+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"}],"timeoriginalestimate":null,"description":"The attached program demonstrates the problem.  Using the ClientConnectionPoolDataSource40 with a connectionEventListener the defined method connectionErrorOccurred is not executed after the Network Server is shutdown and activity is performed on a previously established pooled connection.\n\nProgram also demonstrates that the connectionClosed method is executed when the connection is closed.\n\nTo run the reproduction:\n1) start network server (listening on default host/port and  -noSecurityManager specified)\n2) run the program\n\nOutput is:\n > java DerbyNotification2\n10.3.1.5 - (579866)\n\nApache Derby\n .got connection...check if connectionClosed method is called\nEVENT CALLED: Connection closed happened\n . . .\n . . .Get connection and issue test SQL statement\n . . .AS EXPECTED: no table exists\n . SHUTDOWN Network server and check if connectionErrorOccurred is called\nnow try to use the connection after the NS is STOPPED\nSQLState is: 08006\nError is: -4499\nMessage is: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only -1 bytes.  The connection has been terminated.\nException in thread \"main\" java.sql.SQLNonTransientConnectionException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only -1 bytes.  The connection has\n been terminated.\n        at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)\n        at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)\n        at org.apache.derby.client.am.Connection.prepareStatement(Unknown Source)\n        at org.apache.derby.client.am.LogicalConnection.prepareStatement(Unknown Source)\n        at DerbyNotification2.runTest(DerbyNotification2.java:64)\n        at DerbyNotification2.main(DerbyNotification2.java:87)\nCaused by: org.apache.derby.client.am.DisconnectException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only -1 bytes.  The connection has been termina\nted.\n        at org.apache.derby.client.net.Reply.fill(Unknown Source)\n        at org.apache.derby.client.net.Reply.ensureALayerDataInBuffer(Unknown Source)\n        at org.apache.derby.client.net.Reply.readDssHeader(Unknown Source)\n        at org.apache.derby.client.net.Reply.startSameIdChainParse(Unknown Source)\n        at org.apache.derby.client.net.NetStatementReply.readPrepareDescribeOutput(Unknown Source)\n        at org.apache.derby.client.net.StatementReply.readPrepareDescribeOutput(Unknown Source)\n        at org.apache.derby.client.net.NetStatement.readPrepareDescribeOutput_(Unknown Source)\n        at org.apache.derby.client.am.Statement.readPrepareDescribeOutput(Unknown Source)\n        at org.apache.derby.client.am.PreparedStatement.readPrepareDescribeInputOutput(Unknown Source)\n        at org.apache.derby.client.am.PreparedStatement.flowPrepareDescribeInputOutput(Unknown Source)\n        at org.apache.derby.client.am.PreparedStatement.prepare(Unknown Source)\n        at org.apache.derby.client.am.Connection.prepareStatementX(Unknown Source)\n        ... 4 more\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"39587","summary":"ConnectionEventListener.connectionErrorOccurred not being executed when SQLState 08006 Error is thrown","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stan","name":"stan","emailAddress":"Stan dot Bradbury at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stan Bradbury","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stan","name":"stan","emailAddress":"Stan dot Bradbury at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stan Bradbury","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":17,"total":17,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12540862","id":"12540862","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I investigated this Jira issue and following is what I found along with a proposed solution at the end.\r\n\r\nConsider following piece of code In embedded mode, \r\n      EmbeddedConnectionPoolDataSource ds =\r\n         new EmbeddedConnectionPoolDataSource();\r\n      ((EmbeddedConnectionPoolDataSource)ds).setDatabaseName(\"c:/dellater/derby_3172_embedded;create=true\");\r\n\r\n        PooledConnection pooledCon = ds.getPooledConnection();\r\n        pooledCon.addConnectionEventListener(this);\r\n        Connection conn = pooledCon.getConnection();\r\n\r\n        try\r\n        {\r\n                Class.forName(\"org.apache.derby.jdbc.EmbeddedDriver\"); \r\n                String url = \"jdbc:derby:c:/dellater/derby_3172_embedded;shutdown=true\";\r\n                Connection c = DriverManager.getConnection(url);        \t\t\r\n        }\r\n        catch (Exception e)\r\n        {\r\n               System.out.println(\"Exception shutting down Network Server\");\r\n        }\r\n\r\nThe shutdown above throws\"Database 'c:/dellater/derby_3172_embedded' shutdown.\" exception but the connection event listener does not get any events at this point. Continuing the eg above with following \r\n        PrepareStatement ps1 = conn.prepareStatement(\"CREATE TABLE TAB1(COL1 INT NOT NULL)\");\r\nThe above statement throws an exception(SQLState 08003 No current connection.). But before throwing the exception, the connection event listener gets an event about connection error. This part is missing when similar code is tried in Network Server.\r\n\r\nConsider similar eg for Network Server code\r\n        ClientConnectionPoolDataSource ds =\r\n             new ClientConnectionPoolDataSource();\r\n         ((ClientConnectionPoolDataSource)ds).setDatabaseName(\"c:/dellater/derby_3172_embedded;create=true\");\r\n\r\n        PooledConnection pooledCon = ds.getPooledConnection();\r\n        pooledCon.addConnectionEventListener(this);\r\n        Connection conn = pooledCon.getConnection();\r\n\r\n        NetworkServerControl server = new NetworkServerControl();\r\n        server.shutdown();        \t\t\r\n        PrepareStatement ps1 = conn.prepareStatement(\"CREATE TABLE TAB1(COL1 INT NOT NULL)\");\r\nWhen the code above is run in Network Server mode, shutdown of Network Server does not throw any exception to the client. But when the program gets to conn.prepareStatement, following exception(SQLState 08006) is thrown as expected\r\n\tA communications error has been detected: Software caused connection abort: recv failed.\r\n*****But no connection event error is received by the connection event listener. *****\r\n\r\nThe difference in code that I find between client driver and embedded driver is following\r\niapi.jdbc.BrokeredConnection in embedded catches the exception about no current connection and notifies the listeners as follows\r\n\tpublic final PreparedStatement prepareStatement(String sql)\r\n\t    throws SQLException \r\n\t{\r\n\t\ttry {\r\n\t\t\treturn control.wrapStatement(getRealConnection().prepareStatement(sql), sql, null);\r\n\t\t} catch (SQLException sqle) {\r\n\t\t\tnotifyException(sqle);\r\n\t\t\tthrow sqle;\r\n\t\t}\r\n\t}\r\n\r\nBut on the client side in client.am.LogicalConnection has following code (ie it does not do anything with SQLException that it receives)\r\n    synchronized public java.sql.PreparedStatement prepareStatement(String sql) throws SQLException {\r\n        checkForNullPhysicalConnection();\r\n        return physicalConnection_.prepareStatement(sql);\r\n    }\r\n\r\nI think to solve the problem, we need to have try catch in prepareStatement method on the client side and send event to the listeners through pooledConnection_. We do something similar in close() method on the client side. I think this needs to be done for all JDBC methods implemented in client.am.LogicalConnection. Let me know if anyone has any thoughts on this approach. I will start looking at implementing this soon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-07T19:50:23.997+0000","updated":"2007-11-07T19:50:23.997+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12540896","id":"12540896","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I was thinking about junit testing for the proposed fix and having 2 test cases. 1)For Network Server, shutdown the database and see if listener gets the connection error event when the user tries to communicate to Network Server 2)Shutdown Derby engine and see if the listener gets the connection error event when the user tries to talk to Derby engine.\r\n\r\nI was wondering how would I shut down the Network server and Derby engine inside junit framework. Maybe some of the existing junit tests do that already. I will try to hunt them down. But in the mean time, if someone knows how to shut down the Network server and Derby engine inside junit framework, I would appreciate that information.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-07T21:06:19.917+0000","updated":"2007-11-07T21:06:19.917+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12540925","id":"12540925","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mkutty","name":"mkutty","emailAddress":"mkutty at remulak dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manjula Kutty","active":true},"body":"There is this test called ShutdownDatabaseTest.java in lang which does the shutdown of derby engine.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mkutty","name":"mkutty","emailAddress":"mkutty at remulak dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manjula Kutty","active":true},"created":"2007-11-07T23:21:57.295+0000","updated":"2007-11-07T23:21:57.295+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12540934","id":"12540934","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Thanks, Manjula. I will look at it for embedded test case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-08T00:19:22.597+0000","updated":"2007-11-08T00:19:22.597+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12541091","id":"12541091","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"While working on this issue, I found that when a JCBC Connection is already closed and user attempts to close it again, in embedded mode, the driver simply returns from the method **without** sending a notification to the ConnectionEventListener. Following is the code for close() in iapi.jdbc.BrokeredConnection\r\npublic final void close() throws SQLException \r\n{ \r\n\tif (isClosed)\r\n\t\treturn;\r\n\ttry {\r\n\t\tif (!control.closingConnection()) {\r\n\t\t\tisClosed = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tisClosed = true;\r\n\r\n\t\tgetRealConnection().close();\r\n\t} catch (SQLException sqle) {\r\n\t\tnotifyException(sqle);\r\n\t\tthrow sqle;\r\n\t}\r\n}\r\n\r\nBut in the client driver side, if a Connection object is already closed, then next attempt to close it send connectionErrorOccurred to the listeners.  Following is the code for close() in client.am.LogicalConnection\r\n    synchronized public void close() throws SQLException {\r\n        try\r\n        {\r\n            // we also need to loop thru all the logicalStatements and close them\r\n            if (physicalConnection_ == null) {\r\n                return;\r\n            }\r\n            if (physicalConnection_.agent_.loggingEnabled()) {\r\n                physicalConnection_.agent_.logWriter_.traceEntry(this, \"close\");\r\n            }\r\n\r\n            if (physicalConnection_.isClosed()) // connection is closed or has become stale\r\n            {\r\n                pooledConnection_.trashConnection(new SqlException(null, \r\n                    new ClientMessageId(\r\n                        SQLState.PHYSICAL_CONNECTION_ALREADY_CLOSED)));\r\n            } else {\r\n                physicalConnection_.closeForReuse();\r\n                if (!physicalConnection_.isGlobalPending_()) {\r\n                    pooledConnection_.recycleConnection();\r\n                }\r\n            }\r\n            physicalConnection_ = null;\r\n            pooledConnection_.nullLogicalConnection();\r\n        }\r\n        catch ( SqlException se )\r\n        {\r\n            throw se.getSQLException();\r\n        }\r\n    }\r\n\r\n\r\nI am not sure why we have this difference in behavior between the 2 drivers. I will make the client driver match the behavior of embedded driver ie do not send any events if close is being called on a closed Connection object. Please let me know if anyone has objections to this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-08T17:49:20.178+0000","updated":"2007-11-08T17:49:20.178+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12541095","id":"12541095","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"After a quick talk with Dan, I realize that the embedded driver behavior is correct. The JDBC api for close() says \"Calling the method close on a Connection object that is already closed is a no-op.\" And that is what the embedded driver is doing. \r\n\r\nI will go ahead and change the client's behavior so that we do not send any connection error event when close is called on a closed connection object.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-08T18:19:16.283+0000","updated":"2007-11-08T18:19:16.283+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12541161","id":"12541161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"On further investigation, it seems that in client server mode, we are changing the exception's severity code from session severity to some DRDA severity and that causes the connection error event to not trigger even with my local code changes. \r\n\r\nThe exception that gets thrown when Network Server is down is \r\n    String COMMUNICATION_ERROR                                  = \"08006.C.3\";\r\nderby,shared.common.error.ExceptionUtil.java uses 08006 and determines the severity code to be session severity. So far so good. But later derby.client.am.SqlException changes the severity code to  disconnectError which is defined as new SqlCode(-4499) in client,am.SqlCode\r\n\r\n    public SqlException(LogWriter logWriter, ClientMessageId msgid, Object[] args,\r\n        SqlCode sqlcode, Throwable t) {\r\n        this(logWriter, msgid, args, t);\r\n        this.errorcode_ = sqlcode.getCode();\r\n    }\r\n\r\nSo the cause of the problem is this change of severity code. Does anyone know why do we overwrite the severity code determined based on 08006 to a completely different value.\r\n\r\nI need to run pickup my daughter so if this information looks incomplete or if I can provide further information, let me know and I will post something later tonight.,","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-08T22:38:56.406+0000","updated":"2007-11-08T22:38:56.406+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12541170","id":"12541170","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I had thought in 10.2 we had changed the client error codes to match embedded but apparently not.  The code -4499 I don't believe has anything to do with DRDA, but is just the code used by client for disconnect exceptions.  Options are:\r\n1) To change that code to match embedded SESSION_LEVEL severity\r\n2) To trigger a connectionError event for the -4499 exception.\r\n\r\nI tend to think 1 might be a good option for trunk but is too risky for the 10.3 branch. There I think 2 would be more appropriate.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-11-08T23:13:33.167+0000","updated":"2007-11-08T23:13:33.167+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12541383","id":"12541383","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Thanks for your input Kathey. I am leaning more towards option 1 in both trunk and 10.3 codeline to keep the codeline consistent as much as possible. Let me know if anyone feels strongly about not using option 2 or some other solution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-09T17:27:42.755+0000","updated":"2007-11-09T17:27:42.755+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12542592","id":"12542592","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Commited(revision 595047) the changes into trunk codeline with following commit comments\r\n\r\nDERBY-3172\r\n\r\nChange the Network Server code so that when the Network Server is shutdown, any api on Connection object will raise a Connection error event (similar to what is done in embedded mode). This also required me changing the disconnectError from -4999 to 40000(to match embedded). This change was made client.am.SqlCode. I have added tests for all the apis on Connection object in DataSourceTest. Had to change couple tests which were testing for -4999. Now they look for 40000. I will merge this change into 10.3 and run tests there before committing the changes in 10.3 codeline.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-14T20:53:53.446+0000","updated":"2007-11-14T20:53:53.446+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12542716","id":"12542716","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Seems like the Tinderbox was broken by this commit. http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-595050.html","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-11-15T09:16:16.654+0000","updated":"2007-11-15T09:16:16.654+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12542805","id":"12542805","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The test runs fine on my machine, not sure why it failed on Tinderbox. I am looking into it. Thanks for the headsup, Knut.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-15T15:42:50.536+0000","updated":"2007-11-15T15:42:50.536+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12542824","id":"12542824","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"It appears that the test fails in Sun's jdk16 but passes on Sun's jdk142. I am not sure why. I will keep looking into it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-15T17:25:08.847+0000","updated":"2007-11-15T17:25:08.847+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12543190","id":"12543190","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Just committed a change into trunk through 595803 which should take care of DataSourceTest failure. The commit comments are as follows\r\n\r\nThis is a followup checkin to checkin(595047) was committed for DERBY-3172. The DataSourceTest had started failing under JDK1.6 after 595047. The particular test case that was failing was for Connection.getTypeMap The reason for failure was that this method was overridden in a subclass which kicks in only when JDBC4.0 is available. The overriden method was not sending the correct connection error event as expected by the test and hence the failure. While fixing this, I realized that there are several new JDBC4.0 apis that need to send the correct events to ConnectionEventListeners. This checkin takes care of those apis. More info on what was changed in this commit is as follows.\r\n\r\nNew JDBC4.0 api, setClientInfo, wraps SQLException inside SQLClientInfoException but we were not copying the error code of SQLException into SQLClientInfoException. Without the correct error code, we would not send connection error event because the severity has to be fatal for us to send connection error event. Because of this, I had to change several places where SQLException is wrapped inside SQLClientInfoException to pass SQLException's error code to SQLClientInfoException. The classes changed because of this are EmbedConnection40, BrokeredConnection40, NetConnection40.\r\n\r\nFor methods that throw SQLClientInfoException, we were not notifying the connection error events. I made changes to fix this.\r\n\r\nSeveral of new JDBC4 apis on connection object were not sending error events so I changed those methods in BrokeredConnection40 and LogicalConnection40. \r\n\r\nBrokeredConnection40 implements new JDBC4 methods on Connection object but these new methods did not follow the same logic as the other existing pre-JDBC4 methods to check for connection close and that caused the events to be not sent correctly. The problematic apis were createBlob, createClob, isWrapperFor, unwrap and I fixed those.\r\n\r\nNot all the new JDBC4 apis have been implemented (they throw not implemented exception) so the tests written for those apis just catch the unimplemented exception. These methods include createArrayOf, createNClob, createSQLXML, createStruct.\r\n\r\nIn JDBC4, Connection object has two methods isWrapperFor and unwrap which do not go to the server when Derby is being accessed in client server mode and because of this, we never detect that the server is down and hence no connection error event is thrown in client server mode for these 2 apis. But when the same apis are called in embedded Derby after the engine is shutdown, we get connection error event. I have added the test for these 2 apis to count for the different in behavior but I am not sure if this is the expected behavior difference between the 2 configurations of Derby. I will enter a Jira entry for this.\r\n\r\nAnd lastly, the new JDBC4 api isValid on Connection object has different behavior in client server mode and embedded mode. They both throw exception that the connection is down but the connection close and error events are not dealt the same way in the 2 configurations. In embedded mode, after the engine is shutdown, an isValid call on Connection object raises a connection closed event and no connection error event. In client server mode, after the Network Server is shutdown, an isValid call on Connection object does not raise any event. In both the configurations, we do get a SQLException stating that connection is down. Again, I am not sure if this is expected bahavior difference between the 2 configurations of Derby. I will enter a Jira entry for this too. In addition, as per Connection.isValid api Java specification, a SQLException is thrown under following condition which is not being followed in embedded and client-server mode\r\nThrows: \r\nSQLException - if the value supplied for timeout is less then 0\r\nBased on this, I am not sure if our behavior is correct to throw an SQLException if the server/engine is down. I will include this information in the Jira entry that I will make.\r\n\r\nThe tests for all these new JDBC4 apis are in jdbc4/DataSourceTest.  \r\n\r\nI moved the AssertEventCatcher class implementation from jdbcapi/DataSourceTest into a class of it's own. This way, it can be shared by jdbcapi/DataSourceTest and jdbc4/DataSourceTest.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-16T20:12:27.649+0000","updated":"2007-11-27T07:01:00.204+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12545979","id":"12545979","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Merged changes into 10.3 codeline with revision 598712 and the commit comments were as follows\r\n\r\n\r\nThis commit merges into 10.3 codeline the 2 changes that went into trunk (595047 and 595803) for DERBY-3172.\r\n\r\nI had to modify the merged code for the 2 test files by adding code to start and stop network server in jdbcapi.DataSourceTest and jdbc4.DataSourceTest.\r\n\r\nIn the trunk, these 2 functionalities of start and stop of network server are already available in the TestConfiguration.java. This functionalities were added into trunk as part of checkin 574053 for DERBY-2855. I could merge the changes that went into  TestConfiguration to introduce these 2 functionalities in 10.3 codeline but there is an outstanding jira issue about this functionality causing derbynet.jar dependency. The jira issue is DERBY-3151 \"Reduce dependency on NetworkServerControl in TestConfiguration\" Because of this, I opted to add start and stop network server functionality in jdbcapi.DataSourceTest and jdbc4.DataSourceTest. I have updated DERBY-3151 requesting that once we reach a resolution, we should migrate the changes into 10.3 codeline too so that individual tests requiring start and stop network server do not have to write the code themselves, instead they can depend on the TestConfiguration.java or some other class to provide that functionality. Once that work is done, jdbcapi.DataSourceTest and jdbc4.DataSourceTest should be modified. I think in addition to these 2 tests, OutBufferedStream.java and TestConnectionMethods.java also have start and stop network server code in 10.3 codeline.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-27T19:26:55.319+0000","updated":"2007-11-27T19:26:55.319+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12546886","id":"12546886","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Entered jira entry DERBY-3237 for difference in behavior between network server and embedded for 3 JDBC4.0 apis on Connection object.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-11-29T20:53:30.933+0000","updated":"2007-11-29T20:53:30.933+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12381670/comment/12562277","id":"12562277","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stan","name":"stan","emailAddress":"Stan dot Bradbury at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stan Bradbury","active":true},"body":"Catching up on Closing my reported issues.  Thanks to Dyre for the workflow reminder today.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stan","name":"stan","emailAddress":"Stan dot Bradbury at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stan Bradbury","active":true},"created":"2008-01-24T22:57:35.693+0000","updated":"2008-01-24T22:57:35.693+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3172/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0752f:"}}