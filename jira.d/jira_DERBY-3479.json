{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12389818","self":"https://issues.apache.org/jira/rest/api/latest/issue/12389818","key":"DERBY-3479","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2008-03-04 10:26:52.131","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23660","customfield_12310222":"1_*:*_1_*:*_614677560_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_2475234092","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-03-06T22:50:55.889+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3479/watchers","watchCount":0,"isWatching":false},"created":"2008-02-28T20:06:18.329+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12319412","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319412","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12352048","key":"DERBY-1902","self":"https://issues.apache.org/jira/rest/api/2/issue/12352048","fields":{"summary":"Intermittent failures in predicatePushdown.sql","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12319355","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319355","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12373154","key":"DERBY-2911","self":"https://issues.apache.org/jira/rest/api/2/issue/12373154","fields":{"summary":"Implement a buffer manager using java.util.concurrent classes","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-06-29T22:58:07.121+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11413","id":"11413","name":"Test"}],"timeoriginalestimate":null,"description":"Seen in tinderbox since r631930.\n\nSee e.g. http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/testlog/SunOS-5.10_i86pc-i386/631932-derbyall_diff.txt :\n\n*** Start: predicatePushdown jdk1.6.0_04 derbyall:derbylang 2008-02-28 14:02:49 ***\n9285 del\n< \t\tRows seen from the left = 20\n9285a9285\n> \t\tRows seen from the left = 10\n9297 del\n< \t\t\tRows seen from the right = 20\n9297a9297\n> \t\t\tRows seen from the right = 10\n9299 del\n< \t\t\tRows returned = 20\n9299a9299\n> \t\t\tRows returned = 10\n.\n.\n.\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38910","summary":"Changed/unexpected query plan when running test 'lang/predicatePushdown.sql'","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"OS: Solaris 10 6/06 s10x_u2wos_09a X86 64bits - SunOS 5.10 Generic_118855-14\nJVM: Sun Microsystems Inc., java version \"1.6.0_04\", Java(TM) SE Runtime Environment (build 1.6.0_04-b12), Java HotSpot(TM) Client VM (build 10.0-b19, mixed mode)\n","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":11,"total":11,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12573767","id":"12573767","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"body":"http://www.nabble.com/Re%3A-failures-in-org.apache.derbyTesting.functionTests.tests.lang.LangScripts-p15759641.html\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"created":"2008-02-29T14:42:49.262+0000","updated":"2008-02-29T14:42:49.262+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12574917","id":"12574917","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I also see this failure in my sandbox, but only intermittently. The predicatePushdown test is known to be unstable due to varying query plans (see for instance DERBY-1902). Unless someone can tell that one of the query plans is wrong, I think we should regard it as a test issue, not as a product defect. Rewriting the unstable parts of the test in JUnit and only check the relevant parts of the query plan (that is, whether or not the predicates are pushed down) sounds like a reasonable approach to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-03-04T10:26:52.131+0000","updated":"2008-03-04T10:26:52.131+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575050","id":"12575050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> The predicatePushdown test is known to be unstable due to varying query plans\r\n\r\nTrue, though I don't think this particular difference has ever shown up before?  Usually the diffs are rather large, but this one is relatively small--the join order of two tables for a single query has been switched, and that's it.\r\n\r\n> Rewriting the unstable parts of the test in JUnit and only check the relevant parts\r\n> of the query plan sounds like a reasonable approach to me.\r\n\r\nI agree.  Probably not a trivial task, but one worth doing if anyone is so inclined.\r\n\r\nThe question of *why* we intermittently get different plans even though the \"noTimeout\" property is set to true remains a mystery.  And in particular, how does the buffer manager come into play for optimizer path decisions?  But that's probably a separate issue; fixing the predicatePushdown test by converting it to JUnit seems like a good move regardless.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-03-04T16:54:45.116+0000","updated":"2008-03-04T16:54:45.116+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575373","id":"12575373","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I noticed that other tests that depend on stable query plans (wisconsin and StalePlansTest) set derby.storage.checkpointInterval=100000. I tried to add this property to predicatePushdown_derby.properties, and that seemed to stabilize the test.\r\n\r\nStalePlansTest contains some magic to flush the row count for the tables. I don't understand exactly what it does, in particular I don't understand why \"select count(c1) from flusher\" is needed to make the row count for other tables than flusher visible. Perhaps changing the concurrency/timing in the buffer manager somehow changes when the row count is flushed, and thereby it makes the optimizer choose a different plan?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-03-05T14:47:15.096+0000","updated":"2008-03-05T14:47:15.096+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575441","id":"12575441","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> I noticed that other tests that depend on stable query plans (wisconsin and StalePlansTest)\r\n> set derby.storage.checkpointInterval=100000.\r\n\r\nThis is an interesting observation.  When I read it I assumed that this number was greater than the default and that by setting it we were avoiding checkpoints.  But it turns out that the opposite is true: the default checkpoint interval is 10*1024*1024, while 100000 is the *minimum* checkpoint interval allowed (see raw/LogToFile.java).  With the default interval we will not do any checkpoints during the running of predicatePushdown.sql; but with the minimum interval of 100000, we do THREE checkpoints (at least on my machine).\r\n\r\nSo I wonder if the checkpoint does something which updates the row counts and/or statistics for the tables, thus affecting the optimizer's decisions?  I have no idea what the answer to that might be...\r\n\r\n> Perhaps changing the concurrency/timing in the buffer manager somehow changes when\r\n> the row count is flushed\r\n\r\nWhile scanning LogToFile.java for the default checkpoint interval, I noticed the following:\r\n\r\n        /////////////////////////////////////////////////////////////\r\n        // setup checkpoint daemon and cache cleaner\r\n        /////////////////////////////////////////////////////////////\r\n        checkpointDaemon = rawStoreFactory.getDaemon();\r\n        if (checkpointDaemon != null)\r\n        {\r\n            myClientNumber =\r\n                checkpointDaemon.subscribe(this, true /*onDemandOnly */);\r\n\r\n            // use the same daemon for the cache cleaner\r\n            dataFactory.setupCacheCleaner(checkpointDaemon);\r\n        }\r\n\r\nNote how the *same* daemon service is used for checkpointing and for cleaning the cache.  The call to \"setupCacheCleaner\" ultimately ends up at CacheManager.java, which was modified by DERBY-2911.  So I wonder if this daemon \"sharing\" could explain a) why a different cache manager has an effect on predicatePushdown.sql, and/or b) why changing the checkpoint interval seems to alleviate the effect?\r\n\r\nNot sure if that's useful info or not, as I'm completely out of my knowledge base here.  But I thought I'd mention it.\r\n\r\nIn the meantime, do you think it would be worth it set checkpointInterval to 100000 to see if that gets predicatePushdown passing in the tinderbox again?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-03-05T18:05:46.021+0000","updated":"2008-03-05T18:05:46.021+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575456","id":"12575456","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Some feedback from Mike:\r\n\r\n  http://article.gmane.org/gmane.comp.apache.db.derby.devel/56229","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-03-05T18:51:39.265+0000","updated":"2008-03-05T18:51:39.265+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575465","id":"12575465","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Per Mike's suggestion in the above email, namely:\r\n\r\n\"solutions include [...] call compress table on all tables before query which will update all statistics and remove dependency on any outstanding per page row count updates\"\r\n\r\nI updated predicatePushdown.sql to compress all test tables before running any of the queries which expect a specific query plan.  When I did that a lot of diffs showed up for predicatePushdown.out in the form of:\r\n\r\n  - Number of pages visited=1\r\n  + Number of pages visited=2\r\n\r\nI.e. seems we now visit one more page than we did without the compress.  That seems a tad counter-intuitive to me (I figured compression would make it so that we visited fewer pages), but given my lack of knowledge here I'm assuming that's an okay diff.\r\n\r\nWith this change I ran predicatePushdown.sql 10 times using ibm15 and it passed every time.  I'm not sure how useful that is, though, since this same machine ran 6 times in a row without failing even without this change...\r\n\r\nNonetheless, I'm posting the change as d3479_1.diff in case anyone has comments.  I'll probably commit the patch sometime pretty soon since, even if it doesn't resolve this particular issue, it sounds like it's a good idea to compress the tables anyway (per Mike's email)...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-03-05T19:15:44.793+0000","updated":"2008-03-05T19:15:44.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575474","id":"12575474","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The buffer manager from DERBY-2911 delegates more of the page cleaning to the background thread. This could perhaps explain why the row count statistics are different. Where the old buffer manager cleans a page synchronously in the user thread and thereby updates the statistics, the new buffer manager may have given the page to the background thread and therefore doesn't update the statistics until a moment later.\r\n\r\nCompressing the tables sounds like a good idea, but it does indeed look strange with the extra page. Aren't all of these tables so small that they should fit on a single page?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-03-05T19:45:53.053+0000","updated":"2008-03-05T19:45:53.053+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575514","id":"12575514","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thanks for the insight, Knut.  I don't know much about how it all works, but your theory seems reasonable to me...for what very little that may be worth.\r\n\r\n> Aren't all of these tables so small that they should fit on a single page?\r\n\r\nI would think so, at least for the first part of the test.  I have no idea why that's not the case--nor why compression appears to lead to an *extra* page...\r\n\r\nI went ahead and committed d3479_1.diff with svn # 634064:\r\n\r\n  URL: http://svn.apache.org/viewvc?rev=634064&view=rev\r\n\r\nIf it turns out the extra page is undesirable and/or the change is not a good one, then the commit can always be backed out.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-03-05T22:31:15.434+0000","updated":"2008-03-05T22:31:15.434+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575619","id":"12575619","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks Army! Compressing the tables seems to have fixed the problem. I've run the test more than 20 times without seeing the failure (before I would see it perhaps 50% of the times).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-03-06T09:07:39.457+0000","updated":"2008-03-06T09:07:39.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12389818/comment/12575939","id":"12575939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Compressing the tables seems to have fixed the problem.  I've run the test more\r\n> than 20 times without seeing the failure.\r\n\r\nGreat, thanks for testing it out, Knut Anders.  Based on that feedback, along with the fact that a) the test has not failed in the past several tinderbox runs, and b) it appears the extra page after compression is \"odd\" but explainable[1], I'm marking this as resolved.  Please feel to re-open if the diff shows up again...\r\n\r\n[1] http://article.gmane.org/gmane.comp.apache.db.derby.devel/56253","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-03-06T22:50:55.808+0000","updated":"2008-03-06T22:53:01.962+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3479/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i070vz:"}}