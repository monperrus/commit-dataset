{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12353786","self":"https://issues.apache.org/jira/rest/api/latest/issue/12353786","key":"LUCENE-693","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2006-10-23 23:07:17.0","customfield_12312323":null,"customfield_12310420":"13059","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_34194297615_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-11-23T17:01:53.615+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-693/watchers","watchCount":1,"isWatching":false},"created":"2006-10-23T22:36:56.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12310854","id":"12310854","description":"","name":"2.1","archived":false,"released":true,"releaseDate":"2007-02-17"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2007-11-23T17:01:53.611+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310235","id":"12310235","name":"core/search","description":"issues with search code"}],"timeoriginalestimate":null,"description":"(See also: #LUCENE-443)\nI did some profile testing with the new ConjuctionScorer in 2.1 and discovered a new bottleneck in ConjunctionScorer.sortScorers. The java.utils.Arrays.sort method is cloning the Scorers array on every sort, which is quite expensive on large indexes because of the size of the 'norms' array within, and isn't necessary. \n\nHere is one possible solution:\n\n  private void sortScorers() {\n// squeeze the array down for the sort\n//    if (length != scorers.length) {\n//      Scorer[] temps = new Scorer[length];\n//      System.arraycopy(scorers, 0, temps, 0, length);\n//      scorers = temps;\n//    }\n    insertionSort( scorers,length );\n    // note that this comparator is not consistent with equals!\n//    Arrays.sort(scorers, new Comparator() {         // sort the array\n//        public int compare(Object o1, Object o2) {\n//          return ((Scorer)o1).doc() - ((Scorer)o2).doc();\n//        }\n//      });\n  \n    first = 0;\n    last = length - 1;\n  }\n  private void insertionSort( Scorer[] scores, int len)\n  {\n      for (int i=0; i<len; i++) {\n          for (int j=i; j>0 && scores[j-1].doc() > scores[j].doc();j-- ) {\n              swap (scores, j, j-1);\n          }\n      }\n      return;\n  }\n  private void swap(Object[] x, int a, int b) {\n    Object t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n \nThe squeezing of the array is no longer needed. \nWe also initialized the Scorers array to 8 (instead of 2) to avoid having to grow the array for common queries, although this probably has less performance impact.\n\nThis change added about 3% to query throughput in my testing.\n\nPeter\n","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"27355","summary":"ConjunctionScorer - more tuneup","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pkeegan","name":"pkeegan","emailAddress":"peter dot keegan at charter dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Keegan","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pkeegan","name":"pkeegan","emailAddress":"peter dot keegan at charter dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Keegan","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Windows Server 2003 x64, Java 1.6, pretty large index","customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":20,"total":20,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444150","id":"12444150","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=paul.elschot%40xs4all.nl","name":"paul.elschot@xs4all.nl","emailAddress":"paul dot j dot elschot at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=paul.elschot%40xs4all.nl&avatarId=23180","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paul.elschot%40xs4all.nl&avatarId=23180"},"displayName":"Paul Elschot","active":true},"body":"As just discussed on java-dev, the creation of an object during the call to sort could well be due to the creation\r\nof a new comparator for each call to sort This might be fixed by keeping a single comparator around.\r\nI wouldn't expect any java library sort to create a copy of its argument, but I'm not sure.\r\n\r\nAnyway, when sorting code is going to be inlined here, I'd prefer to have it non quadratic.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=paul.elschot%40xs4all.nl","name":"paul.elschot@xs4all.nl","emailAddress":"paul dot j dot elschot at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=paul.elschot%40xs4all.nl&avatarId=23180","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paul.elschot%40xs4all.nl&avatarId=23180"},"displayName":"Paul Elschot","active":true},"created":"2006-10-23T23:07:17.000+0000","updated":"2006-10-23T23:07:17.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444174","id":"12444174","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"It occures to me that we shouldn't even need to sort anything!\r\nStay tuned... I'm coming up with a patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T02:46:45.000+0000","updated":"2006-10-24T02:46:45.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444193","id":"12444193","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Here's a patch that:\r\n1) nails things down in the constructor (removes incremental add code)\r\n2) removes sorting\r\n3) always skips to the highest docid seen as opposed to \"target\"\r\n\r\nIt should be faster in almost all cases, but I'll make a performance test to verify tomorrow.\r\n\r\nNotes: the docs[] array could be removed... I started out with it because you can't currently depend on doc() to tell you the position because the javadoc says it's undefined at first (as opposed to -1).  So I switched to using a docs[] array and initialized that to -1, but then learned that calling skipTo() before calling next() doesn't always work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T05:16:25.000+0000","updated":"2006-10-24T05:16:25.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444317","id":"12444317","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pkeegan","name":"pkeegan","emailAddress":"peter dot keegan at charter dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Keegan","active":true},"body":"Yonik,\r\n\r\nI tried out your patch, but it causes an exception on some boolean queries.\r\nThis one occurred on a boolean query with 3 required terms:\r\n\r\njava.lang.ArrayIndexOutOfBoundsException: 2147483647\r\n    at org.apache.lucene.search.TermScorer.score(TermScorer.java:129)\r\n    at org.apache.lucene.search.ConjunctionScorer.score(\r\nConjunctionScorer.java:97)\r\n    at org.apache.lucene.search.BooleanScorer2$2.score(BooleanScorer2.java\r\n:186)\r\n    at org.apache.lucene.search.BooleanScorer2.score(BooleanScorer2.java\r\n:318)\r\n    at org.apache.lucene.search.BooleanScorer2.score(BooleanScorer2.java\r\n:282)\r\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:132)\r\n    at org.apache.lucene.search.Searcher.search(Searcher.java:116)\r\n    at org.apache.lucene.search.Searcher.search(Searcher.java:95)\r\n\r\nIt looks like the doc id has the sentinel value (Integer.MAX_VALUE).\r\nNote: one of the terms had no occurrences in the index.\r\n\r\nPeter\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pkeegan","name":"pkeegan","emailAddress":"peter dot keegan at charter dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Keegan","active":true},"created":"2006-10-24T14:02:33.000+0000","updated":"2006-10-24T14:02:33.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444319","id":"12444319","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Thanks for trying it out Peter.\r\nOdd it could fail after passing all the Lucene unit tests... I assume this was the lucene trunk you were trying?\r\nSo the query was just a boolean query with three required term queries?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T14:16:48.000+0000","updated":"2006-10-24T14:16:48.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444320","id":"12444320","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Ah, I see the problem... in the constructor I have\r\n      boolean more = scorers[i].next();\r\nfor each scorer... but note that the local \"more\" is masking the member \"more\".  Doh!\r\nYou can just remove \"boolean\" from \"boolean more\" in the ConjunctionScorer constructor, and I'll try to see why this was never reproduced by any test cases in the meantime.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T14:24:25.000+0000","updated":"2006-10-24T14:24:25.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444334","id":"12444334","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"I'm not sure how it's possible, but my version is *solwer* in the performance test I came up with.\r\nVery odd... I'm not sure why.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T15:11:52.000+0000","updated":"2006-10-24T15:11:52.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444336","id":"12444336","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Here is my current patch and test code (which currently seems to be slower with this patch).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T15:24:16.000+0000","updated":"2006-10-24T15:24:16.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444408","id":"12444408","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pkeegan","name":"pkeegan","emailAddress":"peter dot keegan at charter dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Keegan","active":true},"body":"Well, I'm seeing a good 7% increase over the trunk version. Conjunction\r\nscorer time is mostly in 'skipto' now, which seems reasonable.\r\n\r\nDo the test cases try queries with non-existent terms? My failed query\r\ncontained 3 required terms, but one of the terms was misspelled and didn't\r\nexist in the index.\r\n\r\nPeter\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pkeegan","name":"pkeegan","emailAddress":"peter dot keegan at charter dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Keegan","active":true},"created":"2006-10-24T16:22:36.000+0000","updated":"2006-10-24T16:22:36.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444411","id":"12444411","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"> Well, I'm seeing a good 7% increase over the trunk version.\r\n\r\nYay!  Now only if I could get my random synthetic tests to show an improvement too...\r\nWere you testing with -server?  My -client showed a speedup and -server showed a slowdown.\r\n\r\nI think the difference is on *which* scorers I'm skipping on, even though I'm always skipping to the highest doc yet seen.  Skipping on denser scorers will be a waste of time, and if the list is sorted one is more likely to be skipping on the sparse scorers.  My code is optimal when the density of the scorers is similar.\r\n\r\nThink of the case of two sparse scorers and a dense scorer... you really want to be skipping on the two sparse scorers until they happen to agree.  Until they agree, skipping on the dense scorer is a waste.  My code round robins and throws the dense scorer into the mix.\r\n\r\nThe question is, what are the real world usecases like, and what is important to speed up.\r\nI'd argue that the case of all dense scorers, while more rare, is more important (sparse scorers\r\nwill cause the queries to be faster anyway).\r\n\r\n> Do the test cases try queries with non-existent terms? \r\n\r\nThey will.... I was able to reproduce by earlier bug with the new TestScorerPerf.testConjunctions() included in the last patch.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T16:38:51.000+0000","updated":"2006-10-24T16:38:51.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444427","id":"12444427","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"This version removes the docs[] array and seems to be slightly faster.\r\nStill slower on the synthetic random ConstantScoreQuery tests though.\r\n\r\nIf anyone else as real-world benchmarks they can try, I'd appreciate the data.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T17:17:02.000+0000","updated":"2006-10-24T17:17:02.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444436","id":"12444436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pkeegan","name":"pkeegan","emailAddress":"peter dot keegan at charter dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Keegan","active":true},"body":"fwiw, my tests were done using 'real world' queries and index. Most queries\r\nhave several required clauses. The jvm is 1.6 beta2 with -server. I would be\r\ninterested to see results from others, too.\r\n\r\nthanks Yonik!\r\n\r\nPeter\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pkeegan","name":"pkeegan","emailAddress":"peter dot keegan at charter dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Keegan","active":true},"created":"2006-10-24T17:52:33.000+0000","updated":"2006-10-24T17:52:33.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444487","id":"12444487","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=paul.elschot%40xs4all.nl","name":"paul.elschot@xs4all.nl","emailAddress":"paul dot j dot elschot at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=paul.elschot%40xs4all.nl&avatarId=23180","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paul.elschot%40xs4all.nl&avatarId=23180"},"displayName":"Paul Elschot","active":true},"body":"Yonik,\r\n\r\nyou wrote: \r\n> but then learned that calling skipTo() before calling next() doesn't always work.\r\n\r\nCould you describe a case in which skipTo() before next()  does not work?\r\n\r\nskipTo() as first call on a scorer should work. ReqExclScorer and ReqOptSumScorer depend on that for the excluded and optional scorers.\r\n\r\nRegards,\r\nPaul Elschot\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=paul.elschot%40xs4all.nl","name":"paul.elschot@xs4all.nl","emailAddress":"paul dot j dot elschot at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=paul.elschot%40xs4all.nl&avatarId=23180","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paul.elschot%40xs4all.nl&avatarId=23180"},"displayName":"Paul Elschot","active":true},"created":"2006-10-24T20:13:52.000+0000","updated":"2006-10-24T20:13:52.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444496","id":"12444496","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"> Could you describe a case in which skipTo() before next() does not work?\r\n\r\nI don't recall, but my attempt to speed up ConjunctionScorer flushed them out.\r\nI'll move back to an older version of that to see what failed and put\r\ndetails here: http://issues.apache.org/jira/browse/LUCENE-696","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-24T20:34:33.000+0000","updated":"2006-10-24T20:34:33.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12444770","id":"12444770","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"conjunction.patch.nosort1 is a slightly more elegant solution that does\r\nnot require any initial setup of the scorers (no calling next() in the constructor).\r\nIt's one of the fastest yet, but still slower in some cases, and I've figured out why.\r\n\r\nWith a conjunction at the top-level only (like my synthetic tests), only next() is called, so the sort is only done once.  The existing next() logic is simpler, and hence faster.  If a conjunction is nested somewhere, skipTo may be called on it, and that's when the current version is much faster since it avoids the sort.\r\n\r\nnosort1_time / trunk_time for certain tests (relative perf, lower is better)\r\ntestConjunctionPerf : 1.22   (slower, only next is called)\r\ntestNestedConjunctionPerf: 0.35 (much faster, skipTo() is exercized)\r\ntestConjunctionTerms: 1.00 (only next() called, but term scorer dominates time anyway)\r\ntestNestedConjunctionTerms: 0.97 (slight improvement, masked by term scorer time)\r\n\r\nThis may not be the final version, but I think it's good to have it available anyway.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-10-26T03:03:43.000+0000","updated":"2006-10-26T03:03:43.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12540913","id":"12540913","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"body":"Paul wrote:\r\n> As just discussed on java-dev, the creation of an object during the call to sort could well be due to the creation\r\n> of a new comparator for each call to sort This might be fixed by keeping a single comparator around.\r\n> I wouldn't expect any java library sort to create a copy of its argument, but I'm not sure.\r\n\r\nAccording to http://java.sun.com/j2se/1.5.0/docs/api/java/util/Arrays.html#sort(java.lang.Object[]) , java is using mergesort for this method.  I can't imagine it copying the individual _elements_, but mergesort does require 2N space in general and so some array copying takes place.\r\n\r\nUnfortunately, top-level conjunctions are an important case.\r\n\r\nPerhaps one way to proceed is to incorporate some of the refactoring improvements (namely, determining all scorers at constructor-time) and do some trivial optimizations to the existing sortScorers method (lift out the ad-hoc Comparator, use insertion sort for N < 5, etc.).  It might be worthwhile to code versions for common cases, like N=2, with a factory to choose among them.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"created":"2007-11-07T22:28:40.635+0000","updated":"2007-11-07T22:28:40.635+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12544177","id":"12544177","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Whew... I'd forgotten about this issue.  I brushed up one of the last versions I had lying around from a year ago (see lastest conjunction.patch), fixed up my synthetic tests a bit, and got some decent results:\r\n\r\n1% faster in top level term conjunctions (wheee)\r\n49% faster in a conjunction of nested term conjunctions (no sort per call to skipTo)\r\n5% faster in a top level ConstantScoreQuery conjunction\r\n144% faster in a conjunction of nested ConstantScoreQuery conjunctions\r\n\r\nA sort is done the first time, and the scorers are ordered so that the highest will skip first (the idea being that there may be a little info in the first skip about which scorer is most sparse).\r\n\r\nMichael Busch recently brought up a related idea... that one could skip on low df terms first... but that would of course require some terms in the conjunction.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2007-11-21T07:15:29.290+0000","updated":"2007-11-21T07:15:29.290+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12544630","id":"12544630","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"body":"Yonik: this is great!  I applied and tested the patch and everything looks good.\r\n\r\nRunning the tests on my system (FC5/java 6.0.01), I got\r\n\r\ntestConjunctionPerf: 20% faster\r\ntestNestedConjunction: 60% faster / 2.5x speed up\r\ntestConjunctionTerms: 18% faster\r\ntestNestedConjunction: 50% faster / 2x speed up\r\n\r\n(where XX% faster = (difference in times/old time*100))","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=klaasm","name":"klaasm","emailAddress":"mike dot klaas at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Klaas","active":true},"created":"2007-11-21T23:04:32.640+0000","updated":"2007-11-21T23:04:32.640+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12545082","id":"12545082","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Cool, I guess the differences are probably  due to a different processor type (I was using a P4).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2007-11-23T17:01:31.899+0000","updated":"2007-11-23T17:01:31.899+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12353786/comment/12545083","id":"12545083","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"committed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2007-11-23T17:01:53.604+0000","updated":"2007-11-23T17:01:53.604+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-693/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i051lb:"}}