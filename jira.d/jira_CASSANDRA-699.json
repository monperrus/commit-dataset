{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12445500","self":"https://issues.apache.org/jira/rest/api/latest/issue/12445500","key":"CASSANDRA-699","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png","name":"New Feature","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310865","id":"12310865","key":"CASSANDRA","name":"Cassandra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310865&avatarId=12034","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310865&avatarId=12034","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310865&avatarId=12034","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310865&avatarId=12034"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11961","id":"11961","description":"Apache Cassandra related projects","name":"Cassandra"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314533","id":"12314533","description":"","name":"0.7 beta 1","archived":false,"released":true,"releaseDate":"2010-08-13"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2010-01-14 20:21:50.32","customfield_12312322":null,"customfield_12312323":null,"customfield_12310222":"10002_*:*_3_*:*_7359817867_*|*_1_*:*_3_*:*_871719994_*|*_5_*:*_1_*:*_0","customfield_12310420":"27690","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-04-19T18:25:43.927+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-699/watchers","watchCount":20,"isWatching":false},"created":"2010-01-14T11:53:26.066+0000","customfield_10022":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12311124":null,"customfield_12312334":null,"customfield_12310310":"7.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2010-08-17T12:59:52.369+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312978","id":"12312978","name":"Core"}],"timeoriginalestimate":null,"description":"Allow to attach an expiration time to a column. \r\nAn expired column would act much like a 'markedForDelete' one. ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12445037","id":"12445037","filename":"699-1-cassandra_0.6.1-Add-DeletedColumn-class.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-05-20T09:20:47.880+0000","size":14222,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12445037/699-1-cassandra_0.6.1-Add-DeletedColumn-class.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12445038","id":"12445038","filename":"699-2-cassandra_0.6.1-Add-optional-expiration-for-column.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-05-20T09:20:47.943+0000","size":24751,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12445038/699-2-cassandra_0.6.1-Add-optional-expiration-for-column.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12445039","id":"12445039","filename":"699-3-cassandra_0.6.1-Update-system-test-for-expiring-column.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-05-20T09:20:48.030+0000","size":24672,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12445039/699-3-cassandra_0.6.1-Update-system-test-for-expiring-column.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12445040","id":"12445040","filename":"699-4-cassandra_0.6.1-Changes-to-thrift-generated-files.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-05-20T09:21:10.192+0000","size":289712,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12445040/699-4-cassandra_0.6.1-Changes-to-thrift-generated-files.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12441966","id":"12441966","filename":"ASF.LICENSE.NOT.GRANTED--699-1-Add-DeletedColumn-class.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-04-16T15:17:40.218+0000","size":14016,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12441966/ASF.LICENSE.NOT.GRANTED--699-1-Add-DeletedColumn-class.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12441967","id":"12441967","filename":"ASF.LICENSE.NOT.GRANTED--699-2-Add-optional-expiration-for-columns.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-04-16T15:17:40.245+0000","size":22019,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12441967/ASF.LICENSE.NOT.GRANTED--699-2-Add-optional-expiration-for-columns.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12441968","id":"12441968","filename":"ASF.LICENSE.NOT.GRANTED--699-3-Update-system-test-for-expiring-column.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-04-16T15:17:40.269+0000","size":24197,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12441968/ASF.LICENSE.NOT.GRANTED--699-3-Update-system-test-for-expiring-column.patch"}],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"91517","summary":"Add (optional) expiration time for column ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"customfield_12311420":null,"customfield_12311421":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":27,"total":27,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12800340","id":"12800340","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kelvin","name":"kelvin","emailAddress":"kakugawa at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kelvin Kakugawa","active":true},"body":"I think an interesting place to start would be to look at these interfaces:\r\nIColumn\r\nIColumnContainer\r\n\r\nand, specifically, this method:\r\ngetMarkedForDeleteAt()\r\n\r\nThe implementing classes are:\r\nColumn\r\nSuperColumn\r\nColumnFamily\r\n\r\nas a start.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kelvin","name":"kelvin","emailAddress":"kakugawa at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kelvin Kakugawa","active":true},"created":"2010-01-14T20:21:50.320+0000","updated":"2010-01-14T20:21:50.320+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12801487","id":"12801487","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"I attach a bunch of patches. The first one, add a new ExpiringColumn class.\r\nThis new class extends Column and thus make use of the recent #706.  (It could\r\nalso be done without subclassing by adding a new interface (say ISimpleColumn)\r\nthat extends IColumn and be implemented by Column and ExpiringColumn. I've\r\nruled for subclassing for now to avoid code duplication but I had implemented\r\nthe interface solution at first, so I could go both ways).\r\n\r\nThen there's the question of the API. I attach as a second patch what seems a\r\ngood option to me. Basically, it adds an optional ttl to Column and changes\r\ninsert() to take a ColumnParent and a Column. Just adding a new argument to\r\ninsert() doesn't work well as it cannot be made optional. That is, I believe\r\nthat if we want to just add a new argument to insert, the ttl field in Column\r\nneed to be required.\r\n\r\nThird patch plugs the changes in thrift to the ExpiringColumn class. \r\nFourth patch changes test_server.py to accommodate the change in insert(). I\r\nalso add a few (very) basic test for column with ttl. \r\n\r\nThis obviously needs more testing but any comments/suggestions appreciated.\r\n\r\nPS: The attached patches do not update the thrift generated code.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-01-17T19:46:22.668+0000","updated":"2010-01-17T19:46:22.668+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12801772","id":"12801772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Right now, if someone provide a ttl <=0, the code just do as if they had provided no ttl.\r\nNot sure it's smart. Maybe it would be better to either\r\n  * not check the ttl and let people deal with what happens\r\n  * throw an InvalideRequestException\r\n\r\nAny preferences ? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-01-18T13:11:11.898+0000","updated":"2010-01-18T13:11:11.898+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12802060","id":"12802060","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"reviewing","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-01-19T03:09:21.446+0000","updated":"2010-01-19T03:09:21.446+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12802081","id":"12802081","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jaakko","name":"jaakko","emailAddress":"rosvopaallikko at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jaakko Laine","active":true},"body":"personally I'm not a big fan of adding another class for this purpose. If we add new types for all new features in this compartment, we'll very soon end up having our code littered with \"if (foo instanceof This) do this, else if (foo instanceof That) do that, else if ...\"\r\n\r\nCurrent vector clock work (#580, full patch not yet in jira) includes two more column classes, which would mean the total amount of column types would be five. That will be a mess. With Kelvin we've recently talked about the possibility of refactoring timestamp \"out of the view\". That is, instead of exposing Column internals (timestamp), the API should have relevant methods the clients need (timestamp is mostly about priority, conflict resolution etc anyway), and then internally do-the-right-thing based on if the column is standard, expiring, vector, super or whatever.\r\n\r\nObviously this is a big refactoring as timestamp is so far spread and used, but having new type for every new need is going to get us into trouble sooner or later. Don't know if this would work, though, have not yet actually tried the refactoring.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jaakko","name":"jaakko","emailAddress":"rosvopaallikko at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jaakko Laine","active":true},"created":"2010-01-19T04:02:51.307+0000","updated":"2010-01-19T04:02:51.307+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12802155","id":"12802155","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Yes I agree that having type test all over the place is a bad thing. I'm not\r\nsure it's really the fault of the addition of a new class though (especially\r\nconsidering it's actually a subtype). It is more a sign that, as you say, the\r\ncode for Column exposes too much internals. \r\nThere is two places where 'instanceof ExpiringColumn' is used: \r\n 1) In ColumnSerializer. We could consider that it's not really client code of\r\n    Column. We also could add a serialize() method to Column directly if we\r\n    really don't like instanceof. Btw, ColumnSerializer.serialize() assumes\r\n    silently that its IColumn argument is actually a Column. Maybe we could\r\n    add a comment at least ?\r\n 2) In CassandraServer, when we convert a Column to a Thrift Column. It\r\n    could make sense to add a toThriftColumn() method to Column (but it would\r\n    create a dependency from Column to the thrift generated Column class).\r\n\r\nMy point being that the burden on client code that the ExpiringColumn of this\r\npatch add is light and easily removable.  \r\n\r\nThat being said, if the timestamp refactoring you propose is done, I'm sure we\r\ncould use such design to include the TTL. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-01-19T09:25:21.292+0000","updated":"2010-01-19T09:25:21.292+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12802294","id":"12802294","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jaakko","name":"jaakko","emailAddress":"rosvopaallikko at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jaakko Laine","active":true},"body":"Sorry I was a bit careless with my wording. I was not blaming this patch in any way, just thinking perhaps now would be right time to consider timestamp refactoring to make it easier to add these new variants.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jaakko","name":"jaakko","emailAddress":"rosvopaallikko at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jaakko Laine","active":true},"created":"2010-01-19T15:08:19.631+0000","updated":"2010-01-19T15:08:19.631+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12802464","id":"12802464","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kelvin","name":"kelvin","emailAddress":"kakugawa at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kelvin Kakugawa","active":true},"body":"Jaakko and I are working through a couple strategies, right now.  Sub-classing vs. a new Clock class to encapsulate \"priority\".\r\n\r\nAt the moment, we have a working (but, not completely tested) patch that sub-classes Column/SuperColumn.  However, timestamp/version really just encompasses one concept: priority.  So, we're trying to see if we can come up w/ a more concise patch that just abstracts out timestamp.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kelvin","name":"kelvin","emailAddress":"kakugawa at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kelvin Kakugawa","active":true},"created":"2010-01-19T20:47:00.820+0000","updated":"2010-01-19T20:47:00.820+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12804599","id":"12804599","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Just realize there was a bug in the previous patch introducting ExpiringColumn. \r\nThis new patch just change a intSize -> boolSize in the serialiazed size of \r\nan ExpiringColumn. \r\n\r\nJaako and Kelvin: if you come up with a patch that abstract the timestamp, \r\nI'll be happy to have a look and try to fit this patch into it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-01-25T17:16:00.294+0000","updated":"2010-01-25T17:16:00.294+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12846815","id":"12846815","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"I attach the same patch updated to work against 0.6beta2 for people that \r\nwould want to test it (actually the current svn revision at the time of this \r\nmessage, which almost is 0.6beta3).\r\n\r\nThere is no avro support at all though (and it may very well break it actually). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-03-18T09:35:58.894+0000","updated":"2010-03-18T09:35:58.894+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12846939","id":"12846939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"Would your use case be covered by adding a TTL to CF?  Because that seems like the natural level of granularity for this to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-03-18T14:46:43.101+0000","updated":"2010-03-18T14:46:43.101+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12847021","id":"12847021","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Well, I have one use case for which it would be hard to go without TTL. For\r\nthis one, I could almost go with a TTL to CF. It would be less convenient\r\ntough, as I would need a few CF (not all the TTL for this use case are the\r\nthem) and thus would need to know the kind of TTL when I request which would\r\nbe a big complicated. So that would be better than nothing but not ideal.\r\n\r\nApart from that, I have multiple small places where I'm using or plan to use\r\nTTL (all of this is still under development). For those, I again thinks that\r\nto have TTL to column is more useful. An example I may use is the creation of \r\ntemporary user account that will be deleted after a few day if not validated.\r\nI'm sure there is other way to do it than TTL but it is convenient with it\r\n(you read everything and write it back without TTL upon validation) and if you\r\nhave 2 CFs, one for your temporary user (not yet validated) and one for the\r\nvalidated ones, it's a bit annoying for the requests again since you don't\r\nknow a priori which CF to query. More generally, I have informations (log of \r\nuser activities, connection logs, ...), some of which I need to keep for some time \r\nfor legal reason, that are just not useful anymore after 6 month, or after a year, \r\n2 years, .... Having a column family for each one of those infos is just not \r\nconvenient.\r\n\r\nSo I guess my answer to your question is no, it would be covered, at least not\r\nas naturally. And truthfully, it seems to me that expiring column is really\r\neasy and efficient to do with Cassandra and virtually free for people that \r\ndoesn't use them. That doesn't mean that having whole CF with a TTL would be \r\na bad idea per se. \r\nBut anyway I'm open to discussion and always curious of the opinion of others. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-03-18T17:46:34.677+0000","updated":"2010-03-18T17:46:56.243+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12852834","id":"12852834","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"We shouldn't mix client-provided timestamps (we cannot rely on them being a specific meaning) with server-side ones.  so getMarkedForDeleteAt should just return localExpirationTime.\r\n\r\nShouldn't we allow explicitly deleting an expiring column?\r\n\r\nI think most of the deserialize code shouldn't need to be copy/pasted in both if blocks.\r\n\r\nOther than that, looks pretty good to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-04-02T14:28:30.088+0000","updated":"2010-04-02T14:28:30.088+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12852851","id":"12852851","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"> We shouldn't mix client-provided timestamps (we cannot rely on them being a\r\n> specific meaning) with server-side ones. so getMarkedForDeleteAt should just\r\n> return localExpirationTime. \r\n\r\nI agree with you about not mixing. But I'm not fan of returning localExpirationTime\r\nas for superColumn and columnFamily, the getMarkedForDeleteAt() returns a\r\nclient-provided timestamp. That's why initially I put it that way. \r\n\r\nBut looking it right now, it seems that for columns (and thus ExpiringColumn),\r\nthe value of getMarkedForDeleteAt() is never actually used. Maybe we could\r\nthen return simply the timestamp (and add a comment!).\r\n\r\n> Shouldn't we allow explicitly deleting an expiring column? \r\n\r\nWhat do you mean ? An expiring column could be deleted the usual way, or am I\r\nmissing something ?\r\n\r\n> I think most of the deserialize code shouldn't need to be copy/pasted in both\r\n> if blocks. \r\n\r\nI agree. Not sure why I didn't do it. To avoid to have to retest at the end if\r\nwe return a Column or an ExpiringColumn I guess. But that was more lazy of me\r\nthan anything else.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-04-02T15:38:41.963+0000","updated":"2010-04-02T15:38:41.963+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12854039","id":"12854039","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"> Maybe we could then return simply the timestamp\r\n\r\nthat would make the most sense, yes.\r\n\r\nas long as we're sure the rest of the code can handle isMarkedForDelete being true, while the client has not yet set a deletion time (which getMarkedForDeleteAt would return).\r\n\r\n> An expiring column could be deleted the usual way, or am I missing something ?\r\n\r\nisMarkedForDelete only checks localExpirationTime, not a deletion explicitly set by client.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-04-06T16:12:34.266+0000","updated":"2010-04-06T16:12:34.266+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12854381","id":"12854381","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"> as long as we're sure the rest of the code can handle isMarkedForDelete being true, while the client has not yet set a deletion time (which getMarkedForDeleteAt would return).\r\n\r\nIt seems like getMarkedForDeleteAt() is called on non-superColumns only in the\r\nisRelevant() function in QueryFilter. To return the timestamp will make\r\nthe test \r\n  maxChange > column.getMarkedForDeleteAt()\r\nto always return false, which is fine. \r\n\r\nAs far as I understand things, getMarkedForDeleteAt() is only useful for\r\ncontainers that can be marked for deletion but still have live subColumns. \r\n\r\n> isMarkedForDelete only checks localExpirationTime, not a deletion explicitly set by client.\r\n\r\nRight. But deleting an ExpiringColumn explicitely just amounts to insert a new\r\n'tombstone' Column with a greater timestamp. No needs for an expiring column\r\nhere with explicit deletion for that.\r\n\r\nHowever that made me remember one of the not so clean part of this code.\r\nExpiringColumn extends Column. I've done that because this has a few\r\nadvantages: it avoids a bit of code duplication; there is no needs for any\r\nchange in the few parts of the code where there is an explicit cast of an\r\nIColumn to a Column; and in principle, it doesn't seems completely crazy to\r\nhave ExpiringColumn inherit from Column. \r\nBut it has the drawback that ExpiringColumn inherits of the isMarkedForDelete\r\nfield of Column but never uses it.\r\n\r\nAnyway, looking at that, I spotted a bug in the patch. In the function\r\ncomparePriority() of Column, we should call the isMarkedForDelete() function\r\ninstead of just getting the value of the variable. \r\n\r\nI attached a new patch that correct this bug, but also packed a small\r\noptimization in the deserialization code (and cleans it a bit). When an\r\nexpired column is deserialized, it is returned as simple tombstone (which has\r\nexactly the behavior of an expired column but save more space). The patch is\r\nalso rebased against 0.6-rc1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-04-07T08:40:35.143+0000","updated":"2010-04-07T08:40:35.143+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12855426","id":"12855426","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"> However that made me remember one of the not so clean part of this code.\r\nExpiringColumn extends Column. I've done that because this has a few\r\nadvantages: it avoids a bit of code duplication; there is no needs for any\r\nchange in the few parts of the code where there is an explicit cast of an\r\nIColumn to a Column; and in principle, it doesn't seems completely crazy to\r\nhave ExpiringColumn inherit from Column.\r\nBut it has the drawback that ExpiringColumn inherits of the isMarkedForDelete\r\nfield of Column but never uses it.\r\n\r\nDid you look into extracting the common parts into AbstractColumn, that both C and EC could inherit from?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-04-09T15:04:04.065+0000","updated":"2010-04-09T15:04:04.065+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12857843","id":"12857843","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Added new patches (rebased on trunk).\r\nThese patches tries an approach slightly different from the AbstractColumn idea. \r\nIt changes the Column class to be only non deleted column and add a \r\nDeletedColumn class. That way ExpiringColumn can subclass Column without \r\nhaving the unecessary isMarkedForDelete boolean. I do believe this is much cleaner\r\n(even though this add the new DeletedColumn class, we only have to change the \r\nfew small places where Column are instanciated). \r\n\r\nAnyway, the first attached patch only do the change towards this DeletedColumn \r\nidea. Then the second patches add the ExpiringColumn on top of that. I went over \r\nthe code and made a few small modification to make it cleaner, but no major changes\r\nfrom the previous patches here). \r\n\r\nThe third patch update the system tests and add a few for expiring columns (same tests\r\nas in previous version of the patch).\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-04-16T15:17:40.304+0000","updated":"2010-04-16T15:17:40.304+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12858029","id":"12858029","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"I like that approach.\r\n\r\nCommitted, with minor changes to DeletedColumn to move a little more logic there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-04-16T22:10:50.145+0000","updated":"2010-04-16T22:10:50.145+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12858290","id":"12858290","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=riffraff","name":"riffraff","emailAddress":"rff dot rff at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gabriele renzi","active":true},"body":"I think this issue was forgotten open, but I'll take advantage of this for a tiny comment: can we raise errors when TS is below zero? in ExpiringColumn, the asserts should IMVHO be\r\n\r\n\r\n-        assert timeToLive != 0;\r\n-        assert localExpirationTime != 0;\r\n+        assert timeToLive > 0;\r\n+        assert localExpirationTime > 0;\r\n\r\n(and possibly ColumnFamily.addColumn could possibly throw an error if ttl is below zero.. while the thrift interface should enforce this, java does not and this seems a more exact assertion)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=riffraff","name":"riffraff","emailAddress":"rff dot rff at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gabriele renzi","active":true},"created":"2010-04-18T10:47:33.974+0000","updated":"2010-04-18T10:47:33.974+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12858296","id":"12858296","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"> while the thrift interface should enforce this, java does not and this seems a more exact assertion\r\n\r\nthat's something you could add to ThriftValidation, right?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-04-18T13:22:46.939+0000","updated":"2010-04-18T13:22:46.939+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12858622","id":"12858622","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"created CASSANDRA-1003 for validation of ttl field","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-04-19T18:25:43.907+0000","updated":"2010-04-19T18:25:43.907+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12868254","id":"12868254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Removed old patches and adding up to date backported version of what was included in \r\ntrunk for 0.6.1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-05-17T15:29:04.415+0000","updated":"2010-05-17T15:29:04.415+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12869292","id":"12869292","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=omerhj","name":"omerhj","emailAddress":"omerhj at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Omer van der Horst Jansen","active":true},"body":"I've applied the three latest patches to the downloadable 0.6.1 source code from http://cassandra.apache.org/download/ . The patches apply without any issue but running ant release generates several compilation errors in class org.apache.cassandra.thrift.Column. \r\n\r\nAm I missing a step in the build process?\r\n\r\nThe patches won't apply to the current 0.6 branch from svn.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=omerhj","name":"omerhj","emailAddress":"omerhj at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Omer van der Horst Jansen","active":true},"created":"2010-05-19T19:50:42.181+0000","updated":"2010-05-19T19:50:42.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12869309","id":"12869309","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"{quote}\r\nI've applied the three latest patches to the downloadable 0.6.1 source code from http://cassandra.apache.org/download/ . The patches apply without any issue but running ant release generates several compilation errors in class org.apache.cassandra.thrift.Column.\r\n{quote}\r\n\r\nYou'll need to run ant gen-thrift-java to regenerate the thrift bindings (You'll need \r\nto have the thrift compiler installed for that).\r\n\r\nAlso, there is a small bug in the patch attached here (see CASSANDRA-1109). I'll upload a \r\nnew version tomorrow with the fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-05-19T20:15:59.360+0000","updated":"2010-05-19T20:15:59.360+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12869533","id":"12869533","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Attaching patch for 0.6.1 with fix from CASSANDRA-1109 added.\r\nAlso attaching a 4th patch with the thrift generated file so that those that may \r\nwant to use the patch don't need the thrift compiler.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2010-05-20T09:20:48.093+0000","updated":"2010-05-20T09:20:48.093+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12445500/comment/12899393","id":"12899393","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"body":"Integrated in Cassandra #516 (See [https://hudson.apache.org/hudson/job/Cassandra/516/])\r\n    mention CASSANDRA-699 in changes\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"created":"2010-08-17T12:59:52.342+0000","updated":"2010-08-17T12:59:52.342+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-699/votes","votes":13,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0g0jb:"}}