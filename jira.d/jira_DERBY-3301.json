{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12385521","self":"https://issues.apache.org/jira/rest/api/latest/issue/12385521","key":"DERBY-3301","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2008-01-04 00:29:23.493","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23556","customfield_12310222":"1_*:*_1_*:*_3677468155_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-02-15T08:23:01.504+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3301/watchers","watchCount":2,"isWatching":false},"created":"2008-01-03T18:51:53.349+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"29.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12318725","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12318725","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"inwardIssue":{"id":"12354628","key":"DERBY-2034","self":"https://issues.apache.org/jira/rest/api/2/issue/12354628","fields":{"summary":"Tracking of bugs that lead to incorrect results being stored or returned to the client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.png","name":"Trivial","id":"5"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/task.png","name":"Task","subtask":false}}}},{"id":"12318937","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12318937","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12387028","key":"DERBY-3349","self":"https://issues.apache.org/jira/rest/api/2/issue/12387028","fields":{"summary":"Nested WHERE EXISTS queries need improved testing","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12331056","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12331056","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12459261","key":"DERBY-4585","self":"https://issues.apache.org/jira/rest/api/2/issue/12459261","fields":{"summary":"IndexChanger.doDelete throws NullPointerException","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12318878","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12318878","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12386370","key":"DERBY-3321","self":"https://issues.apache.org/jira/rest/api/2/issue/12386370","fields":{"summary":"NullPointerException for 'NOT EXISTS' with nested subquery","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12318753","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12318753","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"inwardIssue":{"id":"12353092","key":"JDO-435","self":"https://issues.apache.org/jira/rest/api/2/issue/12353092","fields":{"summary":"Query with projected variables returns duplicates and extra results that do not satisfy filter","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-02T02:29:11.765+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"Derby returns unexpected results from a query with embedded EXIST clauses. The query SQL is generated by the JPOX jdo implementation and is supposed to return all of the PERSONS and PROJECTS where there is an entry in the join table. This query works as expected when using MySQL.\n\nHere's the query:\n\nSELECT UNBOUND_E.PERSONID, UNBOUND_P.PROJID \nFROM applicationidentity0.DEPARTMENTS THIS, \n     applicationidentity0.PERSONS UNBOUND_E, \n     applicationidentity0.PROJECTS UNBOUND_P \nWHERE EXISTS ( \n    SELECT 1 FROM applicationidentity0.PERSONS THIS_EMPLOYEES_E \n    WHERE EXISTS ( \n        SELECT 1 FROM applicationidentity0.PROJECT_MEMBER THIS_EMPLOYEES_E_PROJECTS_P \n        WHERE THIS_EMPLOYEES_E_PROJECTS_P.\"MEMBER\" = THIS_EMPLOYEES_E.PERSONID \n        AND THIS_EMPLOYEES_E_PROJECTS_P.\"MEMBER\" = THIS_EMPLOYEES_E.PERSONID \n        AND THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID \n        AND THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID \n        AND UNBOUND_P.PROJID = THIS_EMPLOYEES_E_PROJECTS_P.PROJID \n        AND UNBOUND_E.PERSONID = THIS_EMPLOYEES_E.PERSONID) \n    );\nPERSONID   |PROJID     \n-----------------------\n3          |1          \n5          |3          \n4          |3          \n2          |1          \n1          |1          \n5 rows selected\n\nI'm expecting 7 rows to be returned here, one row for each row in the join table. \n\nHere's the schema:\nCREATE TABLE departments (\n    ID INTEGER NOT NULL,\n    NAME VARCHAR(32) NOT NULL,\n    EMP_OF_THE_MONTH INTEGER,\n    COMPANYID INTEGER,\n    DISCRIMINATOR VARCHAR(255),\n    CONSTRAINT DEPTS_COMP_FK FOREIGN KEY (COMPANYID) REFERENCES companies,\n    CONSTRAINT DEPTS_PK PRIMARY KEY (ID)\n);\n\nCREATE TABLE persons (\n    PERSONID INTEGER NOT NULL,\n    FIRSTNAME VARCHAR(32) NOT NULL,\n    LASTNAME VARCHAR(32) NOT NULL,\n    MIDDLENAME VARCHAR(32),\n    BIRTHDATE TIMESTAMP NOT NULL,\n    ADDRID INTEGER,\n    STREET VARCHAR(64),\n    CITY VARCHAR(64),\n    STATE CHAR(2),\n    ZIPCODE CHAR(5),\n    COUNTRY VARCHAR(64),\n    HIREDATE TIMESTAMP,\n    WEEKLYHOURS REAL,\n    DEPARTMENT INTEGER,\n    FUNDINGDEPT INTEGER,\n    MANAGER INTEGER,\n    MENTOR INTEGER,\n    HRADVISOR INTEGER,\n    SALARY REAL,\n    WAGE REAL,\n    DISCRIMINATOR varchar(255) NOT NULL,\n    CONSTRAINT PERS_DEPT_FK FOREIGN KEY (DEPARTMENT) REFERENCES departments,\n    CONSTRAINT PERS_FUNDDEPT_FK FOREIGN KEY (FUNDINGDEPT) REFERENCES departments,\n    CONSTRAINT PERS_MANAGER_FK FOREIGN KEY (MANAGER) REFERENCES persons,\n    CONSTRAINT PERS_MENTOR_FK FOREIGN KEY (MENTOR) REFERENCES persons,\n    CONSTRAINT PERS_HRADVISOR_FK FOREIGN KEY (HRADVISOR) REFERENCES persons,\n    CONSTRAINT EMPS_PK PRIMARY KEY (PERSONID)\n);\n\nCREATE TABLE projects (\n    PROJID INTEGER NOT NULL,\n    NAME VARCHAR(32) NOT NULL,\n    BUDGET DECIMAL(11,2) NOT NULL,\n    DISCRIMINATOR VARCHAR(255),\n    CONSTRAINT PROJS_PK PRIMARY KEY (PROJID)\n);\nCREATE TABLE project_member (\n    PROJID INTEGER REFERENCES projects NOT NULL,\n    MEMBER INTEGER REFERENCES persons NOT NULL\n);\n\nij> connect 'jdbc:derby:/Users/clr/apache/jdo/trunk/tck2/target/database/derby/jdotckdb';\nij> set schema applicationidentity0;\n0 rows inserted/updated/deleted\nij> select * from persons;\nPERSONID   |FIRSTNAME                       |LASTNAME                        |MIDDLENAME                      |BIRTHDATE                 |ADDRID     |STREET                                                          |CITY                                                            |STA&|ZIPC&|COUNTRY                                                         |HIREDATE                  |WEEKLYHOURS  |DEPARTMENT |FUNDINGDEPT|MANAGER    |MENTOR     |HRADVISOR  |SALARY       |WAGE         |DISCRIMINATOR                                                                                                                   \nn1          |emp1First                       |emp1Last                        |emp1Middle                      |1970-06-09 21:00:00.0     |NULL       |NULL                                                            |NULL                                                            |NULL|NULL |NULL                                                            |1998-12-31 21:00:00.0     |40.0         |NULL       |NULL       |NULL       |NULL       |NULL       |20000.0      |NULL         |org.apache.jdo.tck.pc.company.FullTimeEmployee                                                                                  \n2          |emp2First                       |emp2Last                        |emp2Middle                      |1975-12-21 21:00:00.0     |NULL       |NULL                                                            |NULL                                                            |NULL|NULL |NULL                                                            |2003-06-30 21:00:00.0     |40.0         |NULL       |NULL       |NULL       |NULL       |NULL       |10000.0      |NULL         |org.apache.jdo.tck.pc.company.FullTimeEmployee                                                                                  \n3          |emp3First                       |emp3Last                        |emp3Middle                      |1972-09-04 21:00:00.0     |NULL       |NULL                                                            |NULL                                                            |NULL|NULL |NULL                                                            |2002-08-14 21:00:00.0     |19.0         |NULL       |NULL       |NULL       |NULL       |NULL       |NULL         |15.0         |org.apache.jdo.tck.pc.company.PartTimeEmployee                                                                                  \n4          |emp4First                       |emp4Last                        |emp4Middle                      |1973-09-05 21:00:00.0     |NULL       |NULL                                                            |NULL                                                            |NULL|NULL |NULL                                                            |2001-04-14 21:00:00.0     |0.0          |NULL       |NULL       |NULL       |NULL       |NULL       |NULL         |13.0         |org.apache.jdo.tck.pc.company.PartTimeEmployee                                                                                  \n5          |emp5First                       |emp5Last                        |emp5Middle                      |1962-07-04 21:00:00.0     |NULL       |NULL                                                            |NULL                                                            |NULL|NULL |NULL                                                            |1998-08-14 21:00:00.0     |0.0          |NULL       |NULL       |NULL       |NULL       |NULL       |45000.0      |NULL         |org.apache.jdo.tck.pc.company.FullTimeEmployee                                                                                  \n\n5 rows selected\nij> select * from projects;\nPROJID     |NAME                            |BUDGET       |DISCRIMINATOR                                                                                                                   \n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n1          |orange                          |2500000.99   |org.apache.jdo.tck.pc.company.Project                                                                                           \n2          |blue                            |50000.00     |org.apache.jdo.tck.pc.company.Project                                                                                           \n3          |green                           |2000.99      |org.apache.jdo.tck.pc.company.Project                                                                                           \n\n3 rows selected\nij> select * from project_member;\nPROJID     |MEMBER     \n-----------------------\n2          |3          \n1          |3          \n2          |2          \n3          |5          \n3          |4          \n1          |2          \n1          |1          \n\n7 rows selected\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37355","summary":"Incorrect result from query with nested EXIST","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10101","value":"Release Note Needed","id":"10101"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10051","value":"Urgent","id":"10051"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":98,"total":98,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12555725","id":"12555725","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"I just tried this with 10.3.2.1 and the same error occurs.\r\n\r\nI changed the fix version from 10.2.1.6 to unknown (oops).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-04T00:02:13.990+0000","updated":"2008-01-04T00:02:13.990+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12555739","id":"12555739","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Any chance you could a) post a fully reproducing script or Java program, and/or b) try it out\r\nwith the 10.1.3.1 release?  I'm wondering if this might be the same underlying issue as\r\nDERBY-3288--if it is, then it should work with 10.1.3.1.  Trying it out there might help\r\ndetermine when the problem was introduced...(esp. is it a regression?)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-04T00:29:23.493+0000","updated":"2008-01-04T00:29:23.493+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12555985","id":"12555985","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"Reproduced also on 10.1.3.1. There is a slight difference in behavior (of a similar query) that I will have to check into, and update this report.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-04T17:03:16.573+0000","updated":"2008-01-04T17:03:16.573+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12556033","id":"12556033","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"There is a similar query that sometimes returns the expected result and sometimes returns a single row.\r\n\r\nThe difference in the query is that there is an extra clause in the WHERE clause: \r\nAND UNBOUND_P.NAME = 'orange'\r\n\r\nThis query is expected to return three rows\r\nPERSONID |PROJID \r\n----------------------- \r\n3 |1 \r\n2 |1 \r\n1 |1 \r\n3 rows selected\r\n\r\nbut sometimes only one row is returned\r\nPERSONID |PROJID \r\n----------------------- \r\n1 |1 \r\n1 rows selected\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-04T19:42:29.850+0000","updated":"2008-01-04T19:43:13.328+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12556637","id":"12556637","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"The attached patch demonstrates the problem.\r\n\r\nThe expected result of the last query in the file is the 7 rows corresponding to the rows in the join table.\r\n\r\nTo duplicate the problem, run ij < derby-3301.sql\r\n\r\nAny suggestions are welcome.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-07T17:51:03.434+0000","updated":"2008-01-07T17:51:03.434+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560280","id":"12560280","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"body":"Linking issue to DERBY-3321: NPE if 'exists' is followed by a nested subquery.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jorgenlo","name":"jorgenlo","emailAddress":"jorgen dot loland at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jørgen Løland","active":true},"created":"2008-01-18T08:06:42.923+0000","updated":"2008-01-18T08:06:42.923+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560326","id":"12560326","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Took the liberty to generate and attach the queryplan for the reproscript.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-18T10:14:41.734+0000","updated":"2008-01-18T10:14:41.734+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560330","id":"12560330","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"I'm not very familiar with tracking down these bugs, but it seems to me that the RH side of the \r\n\"Hash Exists Join ResultSet\", a \"Hash Scan ResultSet\" for PROJECT_EMPLOYEES see (returns) only 3 rows, \r\neven though the underlying scan produces 7 rows?\r\n\r\n--- snip --\r\n                                        Rows seen = 3\r\n                                        Rows filtered = 0\r\n\r\n...\r\n                                        scan information:\r\n                                                Bit set of columns fetched=All\r\n                                                Number of columns fetched=2\r\n                                                Number of pages visited=1\r\n                                                Number of rows qualified=7\r\n                                                Number of rows visited=7\r\n--- snip ---\r\n\r\nHopefully this will help the well versed to track this one down :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-18T10:34:59.409+0000","updated":"2008-01-18T10:34:59.409+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560414","id":"12560414","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"A little further investigation shows that HashScanResultSet.getNextRowCore() is acutally doing what it is supposed to do.\r\n\r\nThe underlying ResultSets build a HashMap based on a key, and puts all rows matching this key into the map with that key.\r\nFor the repro this means a HashMap with 3 keys with 3, 2 and 3 rows for the map entries respectively as seen in the debugger.\r\n\r\nIn getNextRow() we pick the first element for a given key from the map, then move on to the next key, even though \r\nthere are unfetched entries left in the map. This is where the code is flawed at the moment.\r\n\r\nFor each invocation of getNextRowCore(), a call is done to reopenCore() as well. This looks suspicious. reopenCore() is a good citizen \r\nand resets any reference variables with a call to resetProbeVariables(). This call resets the indexing we use in getNextRowCore() to \r\nkeep track of the index into the map entries, and force us to move on to the next key in the HashMap instead of the next entry in the HashMap. \r\n\r\nIt's right there in the queryplan as well with \"Number of opens = 3\" for the lower HashScanResultSet :)\r\nThere's the reason for the three, and not seven, rows.\r\n\r\nThe big question right now is who calls, and why is, reopenCore() called twice? \r\n\r\nI probably won't have time to investigate until Monday. If someone else feels like fixing this, please go ahead.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-18T14:47:25.551+0000","updated":"2008-01-18T14:52:40.722+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560462","id":"12560462","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Thomas, thanks for having a look at this.\r\n\r\nI agree with your analysis of that portion of the query plan: there are\r\n7 total rows that are seen in the project_employees table, but they\r\nare being organized into 3 hash buckets based on the projid field.\r\nThe rows in the table have projid values 101, 102, and 103, so this seems ok.\r\n\r\nWhat seems to be happening to me is that we are \"collapsing\" the\r\nresults. The actual values that the query returns (with the current trunk) are:\r\n\r\nEMPID      |PROJID\r\n-----------------------\r\n13         |101\r\n13         |102\r\n15         |103\r\n\r\nNote that we are getting *one* of the employees for *each* of the 3 projects,\r\nwhereas I think Craig expects us to be fetching *all* of the employees for\r\n*each* of the projects.\r\n\r\nI suspect this means that the flattening of the exists queries was performed\r\nincorrectly, but beyond that I don't have anything brilliant to say. I looked at\r\nsome of this logic when I was studying DERBY-3033, but I don't think that\r\nissue is extremely relevant to this issue.\r\n\r\nStill, you might spend some time stepping through FromList.preprocess()\r\nand FromList.flattenFromTables() for the query in question, and see if\r\nyou notice any logic that seems particularly relevant for this query.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-01-18T16:59:46.229+0000","updated":"2008-01-18T16:59:46.229+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560582","id":"12560582","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Thanks for the pointers Bryan.\r\n\r\nAbove the HashScanResultSet, there is a NestedLoopJoinResultSet pulling rows from both left and right childs in getNextRowCore().\r\nNesteLoopJoinResultSet.getNextRowCore() will stop pulling rows if its member oneRowRightSide is true. oneRowRightSide is supplied to the constructor, so it's set at ResultSet generation time.\r\n\r\nNestedLoopJoinResultSet is generated by GenericResultSetFactory.getNestedLoopJoinResult(), which again is only called from JoinNode.generate().\r\nTo see this you first have to find the getter to the NestedLoopJoinResultSet in GenericResultSetFactory, then do a text(!) search for use of the getter method. In this case it's only used once - in \r\nNesteLoopJoinStrategy.joinResultSetMethodName(), which again is only used in JoinNode.generate.\r\n\r\nSo why is it setting oneRowRightSide to true?\r\n\r\nThe arguments to the NestedLoopJoinResultSet constructor is pushed to the stack by JoinNode.getJoinArguments(), where one calls JoinNode.oneRowRightSide().\r\noneRowRightSide() simply pushes rightResultSet.isOneRowResultSet() to the stack and continues along merrily (JoinNode.java @ 1691)\r\n\r\nIn the debugger we see that the first hit of a breakpoint in JoinNode.java @1691 is the interesting one.\r\nrightResultSet is a ProjectRestrictNode over a FromBaseTable. That is the select we want to look at.\r\n\r\nProjectRestrictNode.isOneRowResult() simply calls its childResult.isOneRowResult(), so we end up in FromBaseTable.isOneRowResult().\r\n\r\nFromBaseTable.isOneRowResult() start off with this comment and code: \r\n   // EXISTS FBT will only return a single row\r\n   if (existsBaseTable)\r\n   {\r\n       return true;\r\n    }\r\n\r\nexistsBaseTable is true in the failing query.\r\n\r\nexistsBaseTable is only set in FromBaseTable.setExistsBaseTable(), and this method is only called form FromList.genExistsBaseTables()\r\nwhere it is explicitly set to true.\r\n\r\nIt seems to me that the assumption made in FromBaseTable.isOneRowResultI() is wrong?\r\nIt's been there ever since derby code was donated. That's most likely the reason for all previous versions showing identical behaviour.\r\n\r\nWith those 4 lines making the single row assumption for exists commented out, and letting the rest of the isOneRowResult() logic make the decision, \r\nit returns false as expected in this case. The query returns 7 rows as Craig expects.\r\n\r\nEMPID      |PROJID     \r\n-----------------------\r\n13         |101        \r\n12         |101        \r\n11         |101        \r\n13         |102        \r\n12         |102        \r\n15         |103        \r\n14         |103        \r\n\r\nAny one care to comment on my analysis and especially on the exists assumption made?\r\n\r\nIf this is correct, any query involving and EXISTS *potentially* will produce wrong results, and this could be the root cause for a couple of the other EXISTS issues?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-18T22:49:40.052+0000","updated":"2008-01-18T22:53:31.294+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560592","id":"12560592","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Too late to keep working - EXIST should return only one row.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-18T23:09:08.502+0000","updated":"2008-01-18T23:09:08.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560732","id":"12560732","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Hi Thomas, looks like you've been busy (even though it is the weekend). \r\nAre you saying that the query behaves correctly? \r\n\r\nSELECT <something> FROM <tables> WHERE EXISTS <subquery>\r\n\r\nmust still evaluate subquery for all rows, right? And just return those for which the subquery produces at least one row? Or am I totally mis-understanding?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-19T21:38:13.315+0000","updated":"2008-01-19T21:38:13.315+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560902","id":"12560902","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"> Too late to keep working - EXIST should return only one row.\r\nThere are many ways to evaluate the query, depending on the strategy. Yes, each of the EXISTS clauses should return either zero or one row, depending on whether the EXISTS condition is true for the specific row of the outermost FROM clause.\r\n\r\nFor each row of the outer product of the outermost FROM clause (DEPARTMENTS, EMPLOYEES, PROJECTS), the middle WHERE EXISTS should return true when there is a match between the EMPLOYEES and PROJECTS in the join table. As an optimization, you could invert the scan and look at all of the rows of the join table. It's hard to tell from the analysis here whether Derby is inverting the scan.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-20T23:44:20.630+0000","updated":"2008-01-20T23:44:20.630+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12560953","id":"12560953","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Dyre> Are you saying that the query behaves correctly?\r\nNo, it does not on the current trunk. And your understanding of how this should be evaluated is correct I believe. Also see Craigs comment above.\r\n\r\nCraig> As an optimization, you could invert the scan and look at all of the rows of the join table. \r\nLooking at the queryplan I think this is what Derby does, and during this optimization something goes wrong.\r\n\r\nAs Bryan suggests, flattening of the exists query could be what goes wrong. I didn't see any obvious errors in the methods he suggested though.\r\n\r\nThe problem appears since the NestedLoopJoinResultSet above the HashScanResultSet that returns 3 out of 7 rows, incorrectly has its right side \r\n\"optimized\" to expect a single row since it's flagged as an EXISTS query. This causes NestedLoopJoinResultSet to retrieve 1 row, then close and reopen the \r\nHashScanResultSet subquery which then returns from the next hash bucket like it's supposed to. This way we continue through the 3 hash buckets returning 3 out of 7 rows.\r\n\r\nAs I stated in my last comment (the long one), if the NestedLoopJoinResultSet has it's right child (correctly) flagged as *not* being an EXISTS query \r\nand expected to return a single row, the query returns the expected 7 rows. So we need to figure out the root cause of why the NesteLoopJoinResultSet \r\nthinks its right child will return only one row.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-21T08:35:09.874+0000","updated":"2008-01-21T08:35:09.874+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561036","id":"12561036","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Perhaps there are some clues in this section of the manual:\r\nhttp://db.apache.org/derby/docs/10.3/tuning/ctuntransform13699.html\r\nIn particular, this section:\r\nhttp://db.apache.org/derby/docs/10.3/tuning/ctuntransform36368.html\r\n\r\nI find it interesting that there are two levels of subquery flattening\r\ngoing on here; that is, we have a subquery in the where clause of\r\na subquery which is itself in the where clause of the top-level query.\r\nPerhaps the flattening logic is evaluating the correctness rules properly\r\nfor a single level of flattening but isn't handling flattening-within-flattening?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-01-21T15:26:24.145+0000","updated":"2008-01-21T15:26:24.145+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561037","id":"12561037","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"This slight variation of the query seems to return the correct 7 rows. The\r\nchange is that I removed the extra join of this_employees_e, and just\r\nused unbound_e throughout:\r\n\r\nij> select unbound_e.empid, unbound_p.projid\r\nfrom departments this,\r\n     employees unbound_e,\r\n     projects unbound_p\r\n    where exists (\r\n        select 1 from project_employees this_employees_e_projects_p\r\n        where this_employees_e_projects_p.empid = unbound_e.empid\r\n        and unbound_e.department = this.id\r\n        and unbound_p.projid = this_employees_e_projects_p.projid\r\n        and unbound_e.empid = unbound_e.empid) ;\r\n\r\nEMPID      |PROJID\r\n-----------------------\r\n11         |101\r\n12         |101\r\n12         |102\r\n13         |101\r\n13         |102\r\n14         |103\r\n15         |103\r\n\r\n7 rows selected\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-01-21T15:39:58.661+0000","updated":"2008-01-21T15:39:58.661+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561054","id":"12561054","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"Bryan> This slight variation of the query seems to return the correct 7 rows. \r\n\r\nSo the intermediate flattening of the query is probably causing the problem. Note that for more complex mappings from JDOQL to SQL, there will be even more intermediate EXISTS expressions.\r\n\r\nI also found http://db.apache.org/derby/docs/10.3/tuning/ctuntransform25868.html that goes into some detail of the EXISTS join flattening.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-21T16:41:10.368+0000","updated":"2008-01-21T16:41:10.368+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561073","id":"12561073","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"bryan> Perhaps the flattening logic is evaluating the correctness rules properly\r\nbryan> for a single level of flattening but isn't handling flattening-within-flattening? \r\n\r\nWithout having done any explicit tracing myself, this is what I would guess is the \r\nproblem.  Perhaps the inner-most EXISTS subquery can be considered an \"exists \r\nbase table\" (and thus only returns a single row) w.r.t. it's parent query, but if it is then \r\nflattened _again_ to the outer-most query, maybe it should no longer be marked as \r\nan \"exists base table\"?  I don't if that's actually true, I'm just speculating.\r\n\r\ncraig> I also found http://db.apache.org/derby/docs/10.3/tuning/ctuntransform25868.html that\r\ncraig> goes into some detail of the EXISTS join flattening\r\n\r\nSomething from that page which stands out to me is the following condition:\r\n\r\n  \"None of the predicates in the subquery, including the additional one formed\r\n  between the left side of the subquery operator and the column in the subquery's\r\n  SELECT list (for IN or ANY subqueries), include any subqueries, method calls,\r\n  or field accesses.\"\r\n\r\nIf an EXISTS clause is considered a \"predicate\", then the query \r\n\r\n  select <...>  from <...>\r\n  where exists (\r\n    select 1 from <...>\r\n    where exists (\r\n        select 1 from <...>\r\n          ...\r\n\r\nseems to violate the condition quoted above from the documentation.  That is, the\r\nsubquery for the first EXISTS has a predicate (in this case another EXISTS query) \r\nwhich includes another subquery (\"select 1 from ...\"), and therefore the first \r\nsubquery should not be flattened.  If this is the correct reading then the bug would \r\nappear to be in the logic that checks for the aforementioned condition--presumably \r\nbecause that check occurs after the inner-most subquery has itself been flattened?  \r\nAgain, I'm just guessing, I haven't done much examination of the actual codepath...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-21T17:21:53.628+0000","updated":"2008-01-21T17:35:33.561+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561138","id":"12561138","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Thanks a lot for all the pointers folks. I think both Army and Bryan nailed it on where/why this query fails on the trunk.\r\n\r\nTo check the hypothesis, I tried marking any subquery in the wherePredicates as such and skip flattening if this is a subquery in a whereClause. \r\nThe happens to be exactly what Kathey did in DERBY-3257 for havingSubqueries. With the mark-and-skip fix the correct 7 rows are returned as the flattening is skipped.\r\n\r\nMy approach is possibly too brute, and might be relaxed, but I'll post a proper patch tomorrow morning.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-21T21:54:18.328+0000","updated":"2008-01-21T21:55:20.697+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561141","id":"12561141","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"Great! I'm looking forward to trying the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-21T21:58:07.705+0000","updated":"2008-01-21T21:58:07.705+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561262","id":"12561262","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"The attached diff 'derby-3301-1.diff' works in similar fashion as Katheys diff for DERBY-3257 by\r\n- marking any subquery in a WHERE clause as such\r\n- skip flattening of the subquery on the where subquery condition\r\n\r\nThis diff produces the correct results:\r\n---- snip ---\r\nij(CONNECTION1)> select unbound_e.empid, unbound_p.projid \r\nfrom departments this, \r\n     employees unbound_e, \r\n     projects unbound_p \r\nwhere exists ( \r\n    select 1 from employees this_employees_e \r\n    where exists ( \r\n        select 1 from project_employees this_employees_e_projects_p \r\n        where this_employees_e_projects_p.empid = this_employees_e.empid \r\n        and this_employees_e.department = this.id \r\n        and unbound_p.projid = this_employees_e_projects_p.projid \r\n        and unbound_e.empid = this_employees_e.empid) \r\n    );\r\nEMPID      |PROJID     \r\n-----------------------\r\n11         |101        \r\n12         |101        \r\n13         |101        \r\n12         |102        \r\n13         |102        \r\n14         |103        \r\n15         |103        \r\n\r\n7 rows selected\r\n---- snip ---\r\n\r\nEven though the diff works, the condition for skipping flattening should be relaxed to only apply to EXISTS subqueries in a WHERE clause, not *all* subqueries in a where clause as is done in 'derby-3301-1.diff'.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-22T08:48:35.951+0000","updated":"2008-01-22T08:48:35.951+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561383","id":"12561383","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Even though the diff works, the condition for skipping flattening should be relaxed\r\n> to only apply to EXISTS subqueries in a WHERE clause\r\n\r\nI think the condition may need to be narrowed down even further: EXISTS\r\nsubqueries _are_ allowed to be flattened from a WHERE clause _if_ that \r\nsubquery's WHERE clause does not itself contain another subquery.  As an \r\nexample, take a look at the last query on the doc page mentioned above,\r\nnamely:\r\n\r\n  SELECT t1.* FROM t1, t2\r\n  WHERE EXISTS (SELECT * FROM t3 WHERE t1.c1 = t3.c1)\r\n\r\n    gets flattened into\r\n\r\n  SELECT t1.* FROM t1, t2, t3 WHERE t1.c1 = t3.c1\r\n\r\nIf changes are made to completely avoid flattening of EXISTS subqueries in \r\nWHERE clauses, then the above query will *not* be flattened into an exists join,\r\neven though it's perfectly valid to perform flattening in that case.  With the approach \r\nthat you've outlined the exists join optimization as a whole will be disabled (I think?).  \r\nI think that has the potential to cause a performance regression for users whose \r\nqueries benefit from the EXISTS join optimization today.\r\n\r\nA similar discussion was held for DERBY-3231 and in that case a decision was \r\nmade to deliberately remove an optimization for the sake of correctness.  But the \r\nuse cases affected by that particular optimization were (most likely) few and far\r\nbetween.  With this issue, though, I think removing EXISTS subquery flattening \r\nacross the board will affect far more users, so I worry about committing such a fix.\r\n\r\nThe patch as posted does not apply to the current trunk, but from what I can tell, if \r\nyou run a query like the one mentioned in the documentation, ex.:\r\n\r\ncreate table t1 (c1 int, c2 int, c3 int);\r\ncreate table t2 (i int, j int);\r\ncreate table t3 (c1 int, vc varchar(10));\r\n\r\ninsert into t1 values (1, -1, 1), (3, -3, 9), (2, -2, 4);\r\ninsert into t2 values (2, 4);\r\ninsert into t3 values (1, 'one'), (3, 'three');\r\n\r\nselect t1.* from t1, t2 where exists (select * from t3 where t1.c1 = t3.c1);\r\n\r\nI think derby-3301-1.diff will cause the SELECT to skip flattening of the EXISTS\r\nsubquery.  Is that correct?\r\n\r\nThe core problem for this issue appears to be the specific case where we have a\r\nsubquery SQ1 that appears in the whereClause of *another* subquery SQ0.  In that\r\ncase disabling the flattening of SQ0 would be appropriate--as the documentation\r\nstates.  But if subquery SQ1 appears in the whereClause of an *OUTER* query--as\r\nshown above--I don't think we should disable flattening altogether.\r\n\r\nIf at all possible, I think it'd be better to fix the flattening condition for the specific\r\nsituation of nested subqueries than to completely disable WHERE clause flattening\r\nfor EXISTS subqueries.\r\n\r\nOr put differently: if the documentation is correct, the _intent_ is to skip flattening of\r\nan EXISTS subquery that has predicates which in turn contain other subqueries.\r\nBut the current code does not correctly implement that intent.  So I think it'd be\r\ngood to figure out _why_ the current code is wrong for the case of nested \r\nsubqueries, and then try to make a change that addresses that specific problem.\r\n\r\nOn a slightly different note, have you had a chance to run the regression suites\r\nwith this change?  I'm curious to know if any of the existing tests actually test\r\nfor EXISTS join flattening--and if so, do those tests still pass with the proposed\r\nchange?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-22T17:20:55.943+0000","updated":"2008-01-22T17:39:06.490+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561614","id":"12561614","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Attaching updated patch 'derby-3301-2.diff'.\r\n\r\nThe condition for skipping flattening should be even more specific than what is implemented in 'derby-3301-2.diff' as per the discussion, so I'm still not marking this with patch available. This updated patch will skip flattening if the WHERE EXISTS subquery is a select with a where subquery. \r\n\r\nThe issue I'm facing is that flatteing of the lower/child WHERE EXISTS removes it from the whereSubquerys as it's supposed to. When we later preprocess the upper/parent WHERE EXISTS we lack information about what the lower whereSubquery originally was. It seems a similar issue was once seen for a normal whereClause as a copy of the original clause is kept in the SelectNode.originalWhereClause member.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-23T09:13:27.332+0000","updated":"2008-01-23T09:13:27.332+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561634","id":"12561634","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Running the query on a faster, dual-core machine actually produce the correct results *without* running down the path provided by the last patch.\r\nThe queryplan looks totally different on the faster machine. Need to verify it still runs the problematic path with a slower machine.\r\nEither different statistics cause the change in queryplan, or (more likely as we still are in preprocessing) something else has changed on trunk as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-23T11:08:18.996+0000","updated":"2008-01-23T11:08:18.996+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561811","id":"12561811","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Attaching updated patch with correct condition checks for skipping flattening of WHERE EXISTS subquerys with nested WHERE EXISTS subqueries.\r\n'derby-3301-3.diff' also takes SubqueryNodes in the where clause, not only where subqueries into consideration.\r\n\r\nWill run derbyAll and suites.All on this patch and report the results.\r\n\r\nChecking patch available, and assigning it to me.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-23T20:34:33.696+0000","updated":"2008-01-23T20:34:33.696+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561813","id":"12561813","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"I should probably add that I got it reproduced on the faster box as well. Environmental issue caused breakpoints to not trigger.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-23T20:37:24.848+0000","updated":"2008-01-23T20:37:24.848+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561825","id":"12561825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"'derby-3301-3b.diff' fixes NPE seen in suites.All with the last patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-23T21:32:19.922+0000","updated":"2008-01-23T21:32:19.922+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12561998","id":"12561998","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"suites.All and derbyall passes with 'derby-3301-3b.diff'","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-24T10:06:58.140+0000","updated":"2008-01-24T11:39:28.595+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562021","id":"12562021","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Created DERBY-3349 for improved testing for nested WHERE EXISTS clauses","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-24T11:52:27.624+0000","updated":"2008-01-24T11:52:27.624+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562029","id":"12562029","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"I would like commit this fairly soon, but given the complexity of the issue, I would feel more at ease if someone else could also look at the 3b patch.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-24T12:10:53.921+0000","updated":"2008-01-24T12:10:53.921+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562090","id":"12562090","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Does the 3b patch contain new regression tests?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-01-24T15:06:01.021+0000","updated":"2008-01-24T15:06:01.021+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562095","id":"12562095","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"No, 3b does not include any new regression tests or extentions.\r\n\r\nAn email comment from Army on derby-dev suggested I create a separate jira flagging the need for testing this issue. DERBY-3349 was filed for this.\r\nMaybe I misinterpreted his comment?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-24T15:20:52.710+0000","updated":"2008-01-24T15:20:52.710+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562097","id":"12562097","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I think that we should at least include the basic repro script\r\nas a regression test in this patch, then as part of DERBY-3349\r\nwe could construct additional tests in this area.\r\n\r\nCraig, you mentioned that your O/R tool generates lots of\r\nqueries like this; is it possible for you to contribute some\r\nadditional test cases, so that we can explore some other\r\nvarieties of flattenable and non-flattenable subqueries?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-01-24T15:25:29.944+0000","updated":"2008-01-24T15:25:29.944+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562106","id":"12562106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"I can make the attached repro into a junit test that can be extended by DERBY-3349 later. \r\nOr is there an existing junit test the repro should go into?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-24T15:44:40.086+0000","updated":"2008-01-24T15:44:40.086+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562121","id":"12562121","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Maybe I misinterpreted his comment?\r\n\r\nYes, I think so.  But probably more my fault than anything.\r\n\r\nWhat I meant to say was that I expect any patch which completely disables EXISTS\r\nsubquery flattening to theoretically cause at least one test in the regression suite\r\nto fail.  If that's not true--i.e. if all tests pass with such a patch--then it means that\r\nthere are no existing test cases to verify that EXISTS subquery flattening is actually\r\noccuring, and that would warrant a separate (testing) issue.\r\n\r\nBut for your 3b patch, you are *NOT* disabling EXISTS subquery flattening altogether (as\r\ndiscussed earlier), so it's not surprising that existing tests run without error.  That said,\r\nI do think it would be good to add a new regression test to correspond to the specific\r\npatch that you've posted--ex. a new test case based on the attached repro would be\r\ngood.\r\n\r\nIf that's still unclear, then the short version is \"Yes, I think a new test case (or set of\r\ntest cases) should be added for this issue\".  A JUnit test based on the repro would be\r\nideal.\r\n\r\nApologies for any confusion cause by my earlier comment.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-24T16:26:23.961+0000","updated":"2008-01-24T16:26:23.961+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562135","id":"12562135","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Attaching 'derby-3301-test-1.diff', a junit version of Craigs original 'derby-3301.sql' reproscript.\r\nThe new regression test called WhereExistsTest.java can be used as a starting point for DERBY-3349.\r\nThe test-1 patch also adds the new test to functionTests/tests/lang/_Suite.java.\r\n\r\nThe test-1 patch runs successfully with the 3b patch applied, both as a single test and when run through the lang-suite.\r\n \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-24T17:14:39.081+0000","updated":"2008-01-24T17:22:34.397+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562169","id":"12562169","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Two comments on the 3b patch.\r\n\r\n1) The additional comments in SubqueryNode that describe the new condition for a flattenable\r\nsubquery seem like they might be slightly inverted.  The comments say:\r\n\r\n   /* Values subquery is flattenable if:\r\n    * ...\r\n    *  o It is not a nested WHERE EXISTS subquery in a WHERE EXISTS clause (DERBY-3301)\r\n    */\r\n\r\nIgnoring the conditions which were already there, I read this as:\r\n\r\n  \"A subquery SQ1 is flattenable if it is not a nested WHERE EXISTS subquery in the WHERE\r\n  EXISTS clause of another subquery, SQ2\".\r\n\r\nIs that a correct reading?  If so, I think that if SQ1 *is* a nested WHERE EXISTS subquery in\r\nthe WHERE EXISTS clause of SQ2, then it's technically _SQ2_ that is not flattenable, not SQ1.\r\nThat said, the actual code changes in the new \"hasNestedWhereExistsClause()\" look correct,\r\nso I think this is just a comment issue, not a code one.  Maybe a better condition would be:\r\n\r\n  o Either a) it (the subquery) does not appear within a WHERE clause, or b) it appears within\r\n    a WHERE clause but does not itself contain a WHERE clause with other subqueries in it.\r\n\r\nThis definition is quite a bit more wordy, but it matches the documentation and it also matches\r\nthe code in hasNestedWhereExistsClause a bit more closely--though not exactly.  See #2\r\ncomment below...\r\n\r\n2) The logic that exists in hasNestedWhereExistsClause() does exactly what its name implies,\r\ni.e. it checks specifically for \"nested WHERE EXISTS clauses\".  That in itself is good since it\r\naddresses the issue reported.  But I did notice that the documentation for EXISTS join flattening\r\nsuggests a slightly more general condition:\r\n\r\n http://db.apache.org/derby/docs/10.3/tuning/ctuntransform25868.html\r\n\r\nNamely, it seems like a more complete approach would be check to see if the subquery's\r\nWHERE clause \"includes _any_ subqueries\"--not just WHERE EXISTS subqueries.  For\r\nexample: if the inner-most WHERE EXISTS query was replaced with a WHERE IN or WHERE\r\nANY clause, would we still get the correct results?\r\n\r\nAs an example, I re-wrote the inner-most WHERE EXISTS subquery from derby-3301.sql to use a\r\nWHERE IN clause that effectively duplicates one of the (already-existing) equality predicate, and\r\nso should in theory return the same results...I think? (I could be wrong here):\r\n\r\nselect unbound_e.empid, unbound_p.projid\r\nfrom departments this,\r\n     employees unbound_e,\r\n     projects unbound_p\r\nwhere exists (\r\n    select 1 from employees this_employees_e\r\n    where this_employees_e.empid in (                           -- *** Army changed this\r\n        select this_employees_e_projects_p.empid        -- *** Army changed this\r\n        from project_employees this_employees_e_projects_p\r\n        where this_employees_e_projects_p.empid = this_employees_e.empid\r\n        and this_employees_e.department = this.id\r\n        and unbound_p.projid = this_employees_e_projects_p.projid\r\n        and unbound_e.empid = this_employees_e.empid)\r\n\r\nThis returns three rows:\r\n\r\nEMPID      |PROJID\r\n-----------------------\r\n13         |101\r\n13         |102\r\n15         |103\r\n\r\nIs that correct?  Or should that query be returning 7 rows, as well?  What about if\r\nthe first WHERE EXISTS query is changed to a \"WHERE IN\" query, as well--will\r\nthat behave correctly?\r\n\r\nIf it should return seven rows, as well, then perhaps the new method in SubqueryNode\r\ncould be expanded to check for the existence of _any_ subquery, not just a WHERE\r\nEXISTS subquery?\r\n\r\nOne way to do that might be to use a CollectNodesVisitor to collect all instances of\r\nSubqueryNode.class that appear in \"sn.originalWhereSubquerys\" and/or in\r\n\"sn.originalWhereClause()\"--and if that visitor returns any matches, then the method\r\nreturns \"false\".  I'm not entirely sure that will work, but it seems like it could...?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-24T18:58:58.310+0000","updated":"2008-01-24T18:58:58.310+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562427","id":"12562427","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Thanks for the input Army.\r\n\r\nAd 1)\r\nI agree, the 3b comments miss the point slightly, and may be seen as 'inverted'.\r\n>\r\n> I think that if SQ1 *is* a nested WHERE EXISTS subquery in the WHERE EXISTS clause of SQ2, then it's technically _SQ2_ that is not flattenable, not SQ1.\r\n>\r\nThis is correct, to my understanding. Your comment suggestion is a lot better, even if it is more elaborate.\r\n\r\nAd 2)\r\nTrue, 3b only takes the actual problem reported into consideration.\r\nI reread the last bullet on the flattening criteria list (http://db.apache.org/derby/docs/10.3/tuning/ctuntransform25868.html) again. You are once again correct Army. \r\nIf SQ2 a has *any* subquery SQ1 in its WHERE EXISTS clause, flattening of SQ2 should be skipped. Not flattening in the case where SQ2 is an ANY or IN query\r\nis already handled in the existing code.\r\n\r\nI'll look into CollectNodesVisitor and post an updated patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-25T10:34:15.444+0000","updated":"2008-01-25T10:34:15.444+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562492","id":"12562492","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Attaching 'derby-3301-4.diff' \r\n- comments changed\r\n- condition for flattening changed to exclude all where subquerys in a WHERE EXISTS subquery from flattening and renamed the helper method accordingly.\r\n\r\nI have not touched flattening of IN at all with derby-3301-4.diff.\r\n\r\nsuites.All and derbyall pass \r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-25T13:35:32.860+0000","updated":"2008-01-25T13:35:32.860+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562582","id":"12562582","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for your continued work on this, Thomas, and for your patience with my feedback.\r\nA couple of follow-up comments...\r\n\r\n-- 1 --\r\n\r\n> Not flattening in the case where SQ2 is an ANY or IN query\r\n> is already handled in the existing code.\r\n\r\nCan you point me to the place in the code where this check currently occurs?  Note how if I replace\r\nall occurrences of \"WHERE EXISTS\" from derby-3301.sql with \"WHERE ... IN\", the query returns 5 rows\r\nafter applying your patch--but I think it should return 7 like the others?  So it seems the existing\r\ncode to handle ANY or IN queries may be incorrect, as well...\r\n\r\nij> select unbound_e.empid, unbound_p.projid\r\nfrom departments this,\r\n     employees unbound_e,\r\n     projects unbound_p\r\nwhere this.id in (\r\n    select this_employees_e.department from employees this_employees_e\r\n    where this_employees_e.empid in (\r\n        select this_employees_e_projects_p.empid\r\n          from project_employees this_employees_e_projects_p\r\n        where this_employees_e_projects_p.empid = this_employees_e.empid\r\n        and this_employees_e.department = this.id\r\n        and unbound_p.projid = this_employees_e_projects_p.projid\r\n        and unbound_e.empid = this_employees_e.empid)\r\n    );\r\n\r\nEMPID      |PROJID\r\n-----------------------\r\n11         |101\r\n12         |102\r\n13         |102\r\n14         |103\r\n15         |103\r\n\r\n5 rows selected\r\n\r\nIf I make the following change w.r.t your patch:\r\n\r\n-        if ( isWhereSubquery() && isEXISTS() ) {\r\n+        if ( isWhereSubquery() && (isEXISTS() || isANY() || isIN()) ) {\r\n\r\nthen the above query returns 7 rows, as I think it should.\r\n\r\n-- 2 --\r\n\r\nWith respect to derby-3301-4.diff, I noticed that we still check for an EXISTS WHERE subquery for the\r\nsecond if statement, i.e.: at line 2382 (with your patch applied):\r\n\r\n                if (sn.originalWhereClause != null &&\r\n                    sn.originalWhereClause instanceof SubqueryNode){\r\n                        SubqueryNode tmp = (SubqueryNode) sn.originalWhereClause;\r\n                        if ( tmp.isWhereSubquery() && tmp.isEXISTS() ) { -- *** Note the \"isExists()\" check...\r\n\r\nIs there any reason not to remove \"tmp.isEXISTS()\" from inner \"if\" statement, similar to what you\r\ndid in the first half of this method?    Note how the query I posted yesterday with \"WHERE ... IN\" still\r\nlooks to return incorrect results (3 rows, when I think it should return 7?)--but if I remove the\r\n\"tmp.isEXISTS()\" check from the \"if\" statement, that query returns 7 rows.  I.e.\r\n\r\n                        SubqueryNode tmp = (SubqueryNode) sn.originalWhereClause;\r\n-                       if ( tmp.isWhereSubquery() && tmp.isEXISTS() ) {\r\n+                       if ( tmp.isWhereSubquery() ) {\r\n\r\nYields:\r\n\r\nij> select unbound_e.empid, unbound_p.projid\r\nfrom departments this,\r\n     employees unbound_e,\r\n     projects unbound_p\r\nwhere exists (\r\n    select 1 from employees this_employees_e\r\n    where this_employees_e.empid in (\r\n        select this_employees_e_projects_p.empid\r\n          from project_employees this_employees_e_projects_p\r\n        where this_employees_e_projects_p.empid = this_employees_e.empid\r\n        and this_employees_e.department = this.id\r\n        and unbound_p.projid = this_employees_e_projects_p.projid\r\n        and unbound_e.empid = this_employees_e.empid)\r\n    );\r\n\r\nEMPID      |PROJID\r\n-----------------------\r\n11         |101\r\n12         |101\r\n13         |101\r\n12         |102\r\n13         |102\r\n14         |103\r\n15         |103\r\n\r\n7 rows selected\r\n\r\nFrom what I can tell, the two modifications to your patch mentioned above make the method\r\nagree fully with the documentation, and appear to make all of the queries in question return\r\nthe correct number of rows.  Do they seem like reasonable modifications to you?\r\n\r\nOf course this entire comment is based on the assumption that the two queries I wrote above\r\nwith \"WHERE ... IN\" are in fact supposed to return 7 rows.  If that's not true, then you can pretty\r\nmuch ignore everything in this particular comment...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-25T17:11:10.796+0000","updated":"2008-01-25T17:11:10.796+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562907","id":"12562907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"I'm the one to thank for your continued comments Army :)\r\n\r\nAd 1) \r\nThe IN variant of the query should return 7 rows as well I think. To verify I checked with another opensource database, and it does indeed return 7 rows too.\r\n\r\n>> Not flattening in the case where SQ2 is an ANY or IN query\r\n>> is already handled in the existing code.\r\n>\r\n>Can you point me to the place in the code where this check currently occurs?\r\n\r\nThere are checks in SubqueryNode @698, @757 that I at writing thought would handle this - obviously not so.\r\n\r\nAd 2)\r\nThe inner most tmp.isEXISTS() was not intentional :/ Thanks for spotting that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-26T19:05:05.401+0000","updated":"2008-01-26T19:05:05.401+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12562909","id":"12562909","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Attaching 'derby-3301-4b.diff' based on Armys latest comments.\r\nI renamed the helper function to better describe what it checks.\r\n\r\nAttaching 'derby-3301-test-2.diff' which includes the IN variant of the query.\r\n\r\nderbyall passes. \r\nsuites.All has 7 errors off todays head of trunk, but they seem unrelated (StringIndexOutOfBounds in SecureServerTest). I'll look into it on monday.\r\nThe new WhereExistsTest pass with 4b applied.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-26T19:20:40.714+0000","updated":"2008-01-26T19:20:40.714+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563214","id":"12563214","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for the 4b patch, Thomas.\r\n\r\nFrom what I can tell, the changes now look functionally good to me--thank you for incorporating\r\nmy feedback.\r\n\r\nI did notice that some of the code comments still reference \"WHERE EXISTS\" predicates only,\r\nwhen in fact the new method (now) coveres IN and ANY predicates, as well.  But that's just a\r\nnit--it shouldn't block commit of the patch.\r\n\r\nMy only remaining minor comment is that I think it would be good to add test cases for\r\nthe various IN, ANY, and EXISTS combinations that are not currently tested.  As an example,\r\nthe query I posted previously that replaces _both_ instances of \"EXISTS\" with \"IN\" would be a\r\ngood test case to add.  I see that you added a new test case for \"EXISTS ... IN\", which was\r\ngreat--thanks for doing that.  I think a minimal list of combinations to check should be:\r\n\r\n  * WHERE EXISTS ... WHERE EXISTS (done with test-1.diff -- thanks!)\r\n  * WHERE EXISTS ... WHERE IN (done with test-2.diff -- thanks!)\r\n  * WHERE EXISTS .. WHERE ANY\r\n  * WHERE IN ... WHERE IN (I posted an example in my previous post, but it's not included in the tests)\r\n  * WHERE ANY ... WHERE ANY\r\n\r\nBut again, the additional test cases could come as a separate patch later, or perhaps even\r\nas a patch for DERBY-3349.  I.e. I don't think this should block commit of the 4b patch nor the\r\ntest-2 patch.\r\n\r\n> suites.All has 7 errors off todays head of trunk\r\n\r\nI haven't seen these errors in the tinderbox runs.  Do you see them in a clean codeline?  And\r\nif so, were you able to track down the cause?\r\n\r\nThank you for all of your work on this, Thomas!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-28T17:29:51.321+0000","updated":"2008-01-28T17:29:51.321+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563227","id":"12563227","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"I agree that all the listed combinations should be tested, but let's leave the test extension to DERBY-3349.\r\n\r\nReran suites.All with the 4b and test-2 patches on two different machines, and it passed on both. Most likely the failure was caused by test folder that wasn't clean before starting the test.\r\n\r\nAttaching derby-3301-4c with updated comments in SubqueryNode.isWhereExistsAnyInWithWhereSubquery() according to Armys commnets.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-28T18:19:38.612+0000","updated":"2008-01-28T18:19:38.612+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563231","id":"12563231","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Would it be a good idea to rename the new test in test-2 from WhereExistsTest.java to something like WhereExistsAnyInTest.java?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-28T18:28:03.728+0000","updated":"2008-01-28T18:28:03.728+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563241","id":"12563241","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Would it be a good idea to rename the new test in test-2 from\r\n> WhereExistsTest.java to something like WhereExistsAnyInTest.java?\r\n\r\nOr maybe NestedWhereSubqueryTest.java would be a more general but still appropriate name?\r\n\r\nDyre, if you're still looking to commit the changes for this issue, I have no further comments\r\nto make on the 4c nor the test-2 patch.  Many thanks again to Thomas for his persistence on\r\nthis one...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-28T18:46:22.482+0000","updated":"2008-01-28T18:46:22.482+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563254","id":"12563254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Attaching 'derby-3301-test-3.diff' with renamed test.\r\n\r\nTest passes when run standalone, and is running as part of the lang suite now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-28T19:22:50.530+0000","updated":"2008-01-28T19:22:50.530+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563266","id":"12563266","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"test-3 passed as part of the suite as well.\r\n\r\nThanks a lot for all your guidance Army!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-28T19:56:55.592+0000","updated":"2008-01-28T19:56:55.592+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563280","id":"12563280","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Reattaching derby-3301-test-3.diff","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-28T20:37:54.383+0000","updated":"2008-01-28T20:37:54.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563476","id":"12563476","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"AB> Dyre, if you're still looking to commit the changes for this issue,\r\n\r\nAnyone should feel free to commit it :) But yes, I do think it is an important and complex fix which will benefit from being run in the nightly regression tests for a while before the next release. \r\nI have applied the patches successfully and I'm running the tests. I plan to commit them later this afternoon. \r\n\r\nOn a related note; this is not a regression, but would it still make sense to merge it to 10.3. ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-29T11:46:08.474+0000","updated":"2008-01-29T11:46:08.474+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563566","id":"12563566","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"With the two patches I get a failure in lang/subqueryFlattening.sql. \r\nFrom a quick look at the diff it seems like the test dumps a query plan that is different with the patch. I guessing that the master file needs to be updated, \r\nbut it would be nice if someone could confirm it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-29T16:30:19.778+0000","updated":"2008-01-29T16:30:19.778+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563575","id":"12563575","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"I'd like to summarize my understanding of the patch.\r\n\r\nIf you have an EXISTS nested inside an EXISTS, the optimized inversion of the query execution plan does not occur. Instead, the natural execution plan is performed. That is, the outer tables are iterated and for each candidate tuple of the joined tables, the EXISTS is performed. \r\n\r\nFor each EXISTS check, the scans are reinitialized and there might not be any clues as to exactly where in the outer scan the EXISTS is being invoked. This might yield sub-optimal performance compared to an optimized inverted scan.\r\n\r\nAlso, I'm trying to get some more test cases by putting additional criteria into the EXISTS and running the query in debug mode and filtering the output. It's slower than I expected but I'll continue if it will help.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-29T17:10:09.234+0000","updated":"2008-01-29T17:10:09.234+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563581","id":"12563581","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> With the two patches I get a failure in lang/subqueryFlattening.sql. \r\n\r\nGood catch, Dyre.  I was operating on the assumption that derbyall ran cleanly with\r\nthe 4c patch; I hadn't run it myself.\r\n\r\n> From a quick look at the diff it seems like the test dumps a query plan that is different\r\n> with the patch\r\n\r\nI confirmed that there is one query for which the query plan is different--and for that specific query,\r\nI think the difference is correct.  Namely, the query has nested WHERE EXISTS subqueries and so,\r\naccording to the findings for this issue, cannot be safely flattened.  So that part seems okay.\r\n\r\nI then noticed that another query further down in the test _also_ has nested WHERE EXISTS\r\nsubqueries, but that query _is_ in fact flattened into an exists join--which runs counter to the\r\nfindings so far for this issue (i.e. it shouldn't be flattened into an EXISTS due to the nested\r\nEXISTS subqueries).  The fact that the query in subqueryFlattening still returns correct rows\r\nsuggests that maybe there are cases where flattening of EXISTS subqueries is \"safe\"--but\r\nthat seems beyond the scope of this issue.\r\n\r\nI played around with the repro for this issue and was able to write the following query:\r\n\r\nselect unbound_e.empid, unbound_p.projid\r\nfrom departments this,\r\n     employees unbound_e,\r\n     projects unbound_p\r\nwhere exists (\r\n    select 1 from employees this_employees_e\r\n    where 1 = 1 and exists (\r\n        select 1 from project_employees this_employees_e_projects_p\r\n        where this_employees_e_projects_p.empid = this_employees_e.empid\r\n        and this_employees_e.department = this.id\r\n        and unbound_p.projid = this_employees_e_projects_p.projid\r\n        and unbound_e.empid = this_employees_e.empid)\r\n    );\r\n\r\nThe only difference between this query and the one in derby-3301.sql is that I've\r\nadded a (no-op) predicate \"1 = 1\" alongside the inner-most EXISTS clause.\r\nSince this creates an AndNode whose left operand is a relational op (\"1 = 1\") and\r\nwhose right operand is a SubqueryNode, the code in the 4c patch that checks\r\nspecifically for a SubqueryNode will not detect it:\r\n\r\n+               if (sn.originalWhereClause != null &&\r\n+                   sn.originalWhereClause instanceof SubqueryNode)  {\r\n+                       ...\r\n\r\nSince whereClause here is actually an AndNode, not a SubqueryNode, the \"if\" statement\r\nabove is not triggered, thus the query is incorrectly flattened into an EXISTS joins.  The\r\nend result is that the query only returns 5 rows when it should return 7 (the extra \"1 = 1\"\r\npredicate shouldn't affect the results).\r\n\r\nI think I mentioned a few comments ago that it might be possible to use a CollectNodesVisitor\r\nto search the whereClause for any SubqueryNodes.  The above example demonstrates why\r\nsuch a visitor would be helpful, as opposed to just checking directly for a SubqueryNode...\r\n\r\nSo to answer Dyre's question, yes, I think a master update will be needed.  But further\r\ninspection of subqueryFlattening.sql shows that the 4c patch may need a few more\r\ntweaks, after all...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-29T17:26:30.524+0000","updated":"2008-01-29T17:26:30.524+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563660","id":"12563660","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"Here are more queries, just slightly modified from the original queries. I've done little editing of the queries to avoid introducing copy/paste errors. \r\n\r\nThis one works:\r\nSELECT UNBOUND_E.PERSONID FROM applicationidentity0.DEPARTMENTS THIS , applicationidentity0.PERSONS UNBOUND_E \r\n  WHERE EXISTS (\r\n    SELECT 1 FROM applicationidentity0.PERSONS THIS_EMPLOYEES_E \r\n      WHERE THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID AND UNBOUND_E.PERSONID = THIS_EMPLOYEES_E.PERSONID AND THIS.ID = <2>)\r\n\r\nThis fails, returns 5 rows where 7 are expected. The difference between this and the original query is that THIS.ID is also returned in the outer select:\r\nSELECT THIS.ID,UNBOUND_E.PERSONID,UNBOUND_P.PROJID FROM applicationidentity0.DEPARTMENTS THIS , applicationidentity0.PERSONS UNBOUND_E , applicationidentity0.PROJECTS UNBOUND_P \r\n  WHERE EXISTS (\r\n    SELECT 1 FROM applicationidentity0.PERSONS THIS_EMPLOYEES_E \r\n      WHERE EXISTS (\r\n        SELECT 1 FROM applicationidentity0.PROJECT_MEMBER THIS_EMPLOYEES_E_PROJECTS_P \r\n         WHERE THIS_EMPLOYEES_E_PROJECTS_P.\"MEMBER\" = THIS_EMPLOYEES_E.PERSONID \r\n           AND UNBOUND_P.PROJID = THIS_EMPLOYEES_E_PROJECTS_P.PROJID \r\n           AND THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID \r\n           AND UNBOUND_E.PERSONID = THIS_EMPLOYEES_E.PERSONID\r\n))\r\n\r\nThis fails, returns 3 rows where 5 are expected. \r\nSELECT UNBOUND_E.PERSONID,UNBOUND_P.PROJID FROM applicationidentity0.DEPARTMENTS THIS , applicationidentity0.PERSONS UNBOUND_E , applicationidentity0.PROJECTS UNBOUND_P \r\n  WHERE EXISTS (\r\n    SELECT 1 FROM applicationidentity0.PERSONS THIS_EMPLOYEES_E \r\n      WHERE EXISTS (\r\n        SELECT 1 FROM applicationidentity0.PROJECT_MEMBER THIS_EMPLOYEES_E_PROJECTS_P \r\n          WHERE THIS_EMPLOYEES_E_PROJECTS_P.\"MEMBER\" = THIS_EMPLOYEES_E.PERSONID \r\n          AND UNBOUND_P.PROJID = THIS_EMPLOYEES_E_PROJECTS_P.PROJID \r\n          AND THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID \r\n          AND UNBOUND_E.PERSONID = THIS_EMPLOYEES_E.PERSONID \r\n          AND THIS.ID = <1>))\r\n\r\nThis fails, returning 5 rows where 7 are expected.\r\nSELECT UNBOUND_E.PERSONID,UNBOUND_P.PROJID FROM applicationidentity0.DEPARTMENTS THIS , applicationidentity0.PERSONS UNBOUND_E , applicationidentity0.PROJECTS UNBOUND_P \r\n  WHERE EXISTS (\r\n    SELECT 1 FROM applicationidentity0.PERSONS THIS_EMPLOYEES_E \r\n      WHERE EXISTS (\r\n        SELECT 1 FROM applicationidentity0.PROJECT_MEMBER THIS_EMPLOYEES_E_PROJECTS_P \r\n          WHERE THIS_EMPLOYEES_E_PROJECTS_P.\"MEMBER\" = THIS_EMPLOYEES_E.PERSONID \r\n          AND UNBOUND_P.PROJID = THIS_EMPLOYEES_E_PROJECTS_P.PROJID \r\n          AND THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID \r\n          AND UNBOUND_E.PERSONID = THIS_EMPLOYEES_E.PERSONID \r\n          AND THIS.COMPANYID = <1>))\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-29T20:50:42.136+0000","updated":"2008-01-29T20:50:42.136+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12563914","id":"12563914","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"AB> I was operating on the assumption that derbyall ran cleanly with the 4c patch; I hadn't run it myself.\r\n\r\nI talked to Thomas offline yesterday and he was adamant that he HAD run derbyall with 0 failed tests. Which was true, except that when he looked closer at derbyall_report.txt it turned out that\r\nan environment problem also had caused 0 tests to be run...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-30T09:12:20.803+0000","updated":"2008-01-30T09:12:20.803+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564157","id":"12564157","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Very sorry for the derbyall hickup :|\r\n\r\nAttaching \r\n- updated patch 'derby-3301-5.diff'  which uses a CollectNodesVisitor to find all lower SubqueryNodes as pointed out by Army.\r\n- extra sql script in 'derby-3301-extra.sql' containig Craigs additional queries modified to work with the original repro script schema sql'.\r\n\r\nWith the 5 patch applied both the original query and the additional queries Craig posted return as expected. See output below.\r\nI still need to \r\n- have another look at Armys latest variant, as it doesn't seem to end up with a similar querytree to the others (i.e no SubqueryNodes in the WHERE clause).\r\n- modify the master output for lang/subqueryFlattening.sql.\r\n\r\nij> \r\nselect unbound_e.empid, unbound_p.projid \r\nfrom departments this, \r\n     employees unbound_e, \r\n     projects unbound_p \r\nwhere exists ( \r\n    select 1 from employees this_employees_e \r\n    where exists ( \r\n        select 1 from project_employees this_employees_e_projects_p \r\n        where this_employees_e_projects_p.empid = this_employees_e.empid \r\n        and this_employees_e.department = this.id \r\n        and unbound_p.projid = this_employees_e_projects_p.projid \r\n        and unbound_e.empid = this_employees_e.empid) \r\n    ); \r\n\r\nEMPID      |PROJID     \r\n-----------------------\r\n11         |101        \r\n12         |101        \r\n13         |101        \r\n12         |102        \r\n13         |102        \r\n14         |103        \r\n15         |103        \r\n\r\n7 rows selected\r\n\r\n---\r\n\r\nCraigs additional queries:\r\nij>\r\nSELECT UNBOUND_E.empid FROM DEPARTMENTS THIS , employees UNBOUND_E\r\n  WHERE EXISTS (\r\n    SELECT 1 FROM employees THIS_EMPLOYEES_E\r\n      WHERE THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID AND UNBOUND_E.empid = THIS_EMPLOYEES_E.empid AND THIS.ID = 2);\r\nEMPID      \r\n-----------\r\n14         \r\n15         \r\n\r\n2 rows selected \r\nij> \r\nSELECT THIS.ID,UNBOUND_E.empid,UNBOUND_P.PROJID FROM DEPARTMENTS THIS , employees UNBOUND_E , projects UNBOUND_P\r\n  WHERE EXISTS (\r\n    SELECT 1 FROM employees THIS_EMPLOYEES_E\r\n      WHERE EXISTS (\r\n        SELECT 1 FROM project_employees THIS_EMPLOYEES_E_PROJECTS_P\r\n         WHERE THIS_EMPLOYEES_E_PROJECTS_P.\"EMPID\" = THIS_EMPLOYEES_E.empid\r\n           AND UNBOUND_P.PROJID = THIS_EMPLOYEES_E_PROJECTS_P.PROJID\r\n           AND THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID\r\n           AND UNBOUND_E.empid = THIS_EMPLOYEES_E.empid\r\n));\r\nID         |EMPID      |PROJID     \r\n-----------------------------------\r\n1          |11         |101        \r\n1          |12         |101        \r\n1          |13         |101        \r\n1          |12         |102        \r\n1          |13         |102        \r\n2          |14         |103        \r\n2          |15         |103        \r\n\r\n7 rows selected\r\nij> \r\nSELECT UNBOUND_E.empid,UNBOUND_P.PROJID FROM DEPARTMENTS THIS , employees UNBOUND_E , PROJECTS UNBOUND_P\r\n  WHERE EXISTS (\r\n    SELECT 1 FROM employees THIS_EMPLOYEES_E\r\n      WHERE EXISTS (\r\n        SELECT 1 FROM project_employees THIS_EMPLOYEES_E_PROJECTS_P\r\n          WHERE THIS_EMPLOYEES_E_PROJECTS_P.\"EMPID\" = THIS_EMPLOYEES_E.empid\r\n          AND UNBOUND_P.PROJID = THIS_EMPLOYEES_E_PROJECTS_P.PROJID\r\n          AND THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID\r\n          AND UNBOUND_E.empid = THIS_EMPLOYEES_E.empid\r\n          AND THIS.ID = 1));\r\nEMPID      |PROJID     \r\n-----------------------\r\n11         |101        \r\n12         |101        \r\n13         |101        \r\n12         |102        \r\n13         |102        \r\n\r\n5 rows selected\r\nij>\r\nSELECT UNBOUND_E.empid,UNBOUND_P.PROJID FROM DEPARTMENTS THIS , employees UNBOUND_E , PROJECTS UNBOUND_P\r\n  WHERE EXISTS (\r\n    SELECT 1 FROM employees THIS_EMPLOYEES_E\r\n      WHERE EXISTS (\r\n        SELECT 1 FROM project_employees THIS_EMPLOYEES_E_PROJECTS_P\r\n          WHERE THIS_EMPLOYEES_E_PROJECTS_P.\"EMPID\" = THIS_EMPLOYEES_E.empid\r\n          AND UNBOUND_P.PROJID = THIS_EMPLOYEES_E_PROJECTS_P.PROJID\r\n          AND THIS_EMPLOYEES_E.DEPARTMENT = THIS.ID\r\n          AND UNBOUND_E.empid = THIS_EMPLOYEES_E.empid\r\n          AND THIS.COMPANYID = 1));\r\nEMPID      |PROJID     \r\n-----------------------\r\n11         |101        \r\n12         |101        \r\n13         |101        \r\n12         |102        \r\n13         |102        \r\n14         |103        \r\n15         |103        \r\n\r\n7 rows selected\r\nij>","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-30T19:57:21.281+0000","updated":"2008-01-30T19:57:21.281+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564176","id":"12564176","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Attaching updated master file for lang/subqueryFlattening. Diffs only in qyeryplans, so the changes in patch 5 produce identical results for the tested queries. \r\nWhen run standalone the updated lang/subqueryFlattening test pass.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-30T21:31:26.936+0000","updated":"2008-01-30T21:31:26.936+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564224","id":"12564224","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> I still need to have another look at Armys latest variant, as it doesn't seem to end\r\n> up with a similar querytree to the others\r\n\r\nActually, I think the query does fit the general shape. In your v5 patch you iterate through each of\r\nthe SubqueryNode's that are found by CollectNodesVisitor and check to see if any of them was\r\nmarked as a \"whereSubquery()\". For some reason that check fails in the query that I posted--i.e.\r\nthe one where I include the \"1 = 1\" predicate. While I don't know why the call to whereSubquery()\r\nreturns false, I also don't think that it's necessary at this particular point.\r\n\r\nThe code that calls CollectNodesVisitor is this line:\r\n\r\n          sn.originalWhereClause.accept(cnv);\r\n\r\nSince we're visiting the original WHERE clause, any SubqueryNodes that we find are necessarily\r\ngoing to be \"WHERE subqueries\" because we found them in a WHERE clause. So it seems like\r\nwe shouldn't have to call \"isWhereSubquery()\" on any of them--we just need to check to see if the\r\nCollectNodesVisitor found at least one, and if so, we're done. I changed your version 5 patch to\r\nlook like this:\r\n\r\n  ....\r\n                if (sn.originalWhereClause != null)\r\n                {\r\n                    /* Second instance of SubqueryNode.class effectively means \"don't bother\r\n                     * searching beneath SubqueryNodes since if we found one, we're done.\"\r\n                     */\r\n                    CollectNodesVisitor cnv =\r\n                        new CollectNodesVisitor(\r\n                            SubqueryNode.class, SubqueryNode.class);\r\n\r\n                    sn.originalWhereClause.accept(cnv);\r\n                    return cnv.getList().isEmpty();\r\n                }\r\n  ....\r\n               \r\nand with that change (everything else the same), the query with \"1 = 1\" returns 7 rows, as it should. The\r\nother queries mentioned by Craig also return the correct results (assuming the first one is supposed to\r\nreturn 2 rows, which I assume it is...?)\r\n\r\nSo it looks like the use of CollectNodesVisitor does help. As for the issue of why the SubqueryNode's\r\nfound in originalWhereClause return false for \"isWhereSubquery()\", I haven't looked at that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-30T23:42:49.801+0000","updated":"2008-01-30T23:42:49.801+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564225","id":"12564225","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"On a complete unrelated note, I think the preference for Derby codeline is to keep lines\r\nshorter than 80 characters (where possible).  Some of the lines in the latest patch look\r\nto exceed that.  Not a big deal, but thought I'd mention it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-30T23:46:03.542+0000","updated":"2008-01-30T23:46:03.542+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564256","id":"12564256","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"> and with that change (everything else the same), the query with \"1 = 1\" returns 7 rows, as it should. The other queries mentioned by Craig also return the correct results (assuming the first one is supposed to return 2 rows, which I assume it is...?) \r\n\r\nYes, it is supposed to return 2 rows. It's not a particularly interesting query since it works with or without the patch, but I included it because it also uses the EXISTS pattern.\r\n\r\nAnd let me say again I appreciate all the effort you all are putting into this.\r\n\r\nCraig","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-31T01:19:06.373+0000","updated":"2008-01-31T01:19:06.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564312","id":"12564312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"I've applied the patch derby-3301-5.diff and rebuilt the derby and derbytools jars.\r\n\r\nThe JDO TCK tests that fail on the released jars now pass with the patch applied.\r\n\r\nThanks so much for getting this bug resolved to this point. This is no longer a blocker for me, assuming that the changes can be committed to the code line and a patch release made in due course.\r\n\r\nCraig\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-01-31T06:11:40.173+0000","updated":"2008-01-31T06:11:40.173+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564337","id":"12564337","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Reattaching the derby-3301-extra.sql script with Armys 1=1 variant included as well.\r\n\r\nAttaching derby-3301-6.diff with Armys latest comments\r\n- fixed length of some lines\r\n- CollectNodesVisitor stops when finding the first SubqueryNode.\r\n- no need to check for isWhereSubquery() when using the CNV on the original where clause, we already know it is\r\n\r\nAll reported queries work as expected with the 6 patch.\r\n\r\nsuites.All and derbyall are running.\r\n\r\nThanks for all your help Army, and to Craig for the positive feedback!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-31T08:32:22.470+0000","updated":"2008-01-31T08:32:22.470+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564441","id":"12564441","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Hi Thomas,\r\n\r\nI really hate to keep bringing up more issues, but as I was about to sign off on patch 6, the\r\nfollowing caught my eye:\r\n\r\n                   /*\r\n                    * This WHERE EXISTS | ANY | IN subquery has another\r\n                    * subquery in its own WHERE *clause* if the CNV is not\r\n                    * empty.\r\n                    */\r\n                   return cnv.getList().isEmpty();\r\n\r\nNote how the code comments don't match the code--there's a missing \"!\" operator in the\r\nactual code.  This is how I wrote it in my previous comment, but that was wrong.  The\r\nmethod is supposed to return \"true\" if the SubqueryNode has a WHERE clause with\r\nanother subquery in it--which will be true if cnv.getList() is NOT empty.  So I missed\r\nthe negation (sorry).\r\n\r\nWith this fix in place all of Craigs queries still run correctly--but the queries with\r\n\"1 = 1\" in them start failing again.  In tracing it turns out that, for those cases,\r\nthe CollectNodesVisitor does not find the SubqueryNodes in \"sn.originalWhereClause\".\r\nI think it comes down to something you mentioned earlier, namely:\r\n\r\n> I still need to have another look at [the \"1 = 1\"] variant, as it doesn't seem\r\n> to end up with a similar querytree to the others\r\n\r\nUpon further inspection, I think you are right about this.\r\n\r\nFor reference, this is the query in question.  Note the tags on the right for\r\nthe sake of discussion, where \"SN\" implies \"SelectNode\":\r\n\r\nselect unbound_e.empid, unbound_p.projid                             -- SN_OUTER\r\nfrom departments this,\r\n     employees unbound_e,\r\n     projects unbound_p\r\nwhere exists (\r\n    select 1 from employees this_employees_e                         -- SN_INNER_1\r\n    where 1 = 1 and exists (\r\n        select 1 from project_employees this_employees_e_projects_p  -- SN_INNER_2\r\n        where this_employees_e_projects_p.empid = this_employees_e.empid\r\n        and this_employees_e.department = this.id\r\n        and unbound_p.projid = this_employees_e_projects_p.projid\r\n        and unbound_e.empid = this_employees_e.empid)\r\n    );\r\n\r\nBy the time we reach SubqueryNode.isWhereExistsAnyInWithWhereSubquery() for the\r\nSubqueryNode wrapping SN_INNER_1, the clause:\r\n\r\n  where 1 = 1 and exists ( ... )\r\n\r\nends up as an AndNode whose left operand is \"1 = 1\" but whose right operand is the\r\nconstant literal TRUE--which is not what we expect.  We expect the AndNode's right\r\noperand to be the SubqueryNode corresponding to SN_INNER_2.  That is, if \"sn\" is the\r\nSelectNode for SN_INNER_1 then sn.originalWhereClause should include the SubqueryNode\r\nthat wraps SN_INNER_2.  That is true when we first set sn.originalWhereClause in the\r\ninit() method of SelectNode--but by the time we get to preprocessing for the SubqueryNode\r\nwrapping SN_INNER_1, the SubqueryNode for SN_INNER_2 is no longer in SN_INNER_1's\r\noriginalWhereClause.\r\n\r\nFrom what I can tell, this is because sn.originalWhereClause for SN_INNER_1 points to\r\nthe same object as sn.whereClause.  So when sn.whereClause is itself transformed due to\r\nflattening of the subquery SN_INNER_2 (which is legal), sn.originalWhereClause() sees\r\nthe same transformation.  Thus the SubqueryNode wrapping SN_INNER_2 disappears from\r\nsn.whereClause, which is good--but it also disappears from sn.originalWhereClause(),\r\nwhich is bad.  The fact that it disappears means that CollectNodesVisitor for SN_INNER_1\r\nwill not find it, and thus SN_INNER_1 will be flattened, which is not legal.\r\n\r\nWith the negation operator gone (as in patch 6), the fact that we can't find the SubqueryNode\r\nfor SN_INNER_2 causes the method to incorrectly return \"true\" (because CNV's list is empty),\r\nwhich is then negated by the caller and thus flattening of SN_INNER_1 is accidentally (but\r\ncorrectly) avoided.  I think it's clear that the negation operator should be there, though.\r\n\r\nI'm not sure what the best way to address that would be--but before you go there,\r\ncan you double-check these findings to see if you agree?  Maybe I'm just missing\r\nsomething obvious...\r\n\r\nApologies for the negation slip-up to begin with.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-31T18:14:03.043+0000","updated":"2008-01-31T18:14:03.043+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564465","id":"12564465","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Another excellent catch Army! I'm very glad you're helping out, so do not feel bad about bringing these things up!\r\n\r\nI didn't report back on the testing of the 6 patch - due to fact that my updated derbyall test failed. It fails for that exact reason - missing negation on \r\n   return cnv.getList().isEmpty();\r\n\r\nFixed the missing negation in derby-3301-7.diff.\r\n\r\nWith the 7 patch\r\n- all of Craigs queries work as expected\r\n- updated lang/subqueryFlattening.sql (part of derbyall) pass\r\n- new NestedWhereSubqueryTest (part of suites.All)\r\n\r\nI'll rerun derbyall and suites.All with the 7 patch to verify nothing else broke.\r\n\r\nWith the 7 patch the 1=1 variant returns only 3 rows, and I'll need to have a further look into this. From what I found at last glance, I think you are onto it with your explaination. If I remember correctly I had the \r\nAndNode in the whereClause with the 1=1 as its left node and a TRUE as its right node (as you describe). The where subqueries had ended up in the wherePredicates list. But this needs a more thorough look.\r\n\r\nGiven Craigs urgency with getting this fixed, do you think we can commit the 7 patch, and leave the 1=1 for a later commit?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-31T19:21:46.436+0000","updated":"2008-01-31T19:21:46.436+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564474","id":"12564474","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> With the 7 patch the 1=1 variant returns only 3 rows, and I'll need to have a further\r\n> look into this. \r\n\r\nOne thing that occurred me: would it be possible to replace the originalWhereSubquerys field\r\nin SelectNode with a simple boolean, something like origWhereClauseHadSubqueries.  Then\r\nin the init() method of SelectNode you could invoke the CollectNodeVisitor on whereClause\r\nand set the boolean to true if you find any SubqueryNodes.  That way the boolean would not\r\nbe affected by subsequent binding/preprocessing transformations.  If you do that, then the code\r\nin SubqueryNode.isWhereExistsAnyInWithWhereSubquery() could theoretically replace the\r\nsn.origWhereClause and sn.origWhereSubquerys processing with a simple check of\r\nsn.origWhereClauseHadSubqueries.  I haven't actually tried it, but I wonder if that might be\r\na simple way to get things working...\r\n\r\n> With the 7 patch\r\n> - updated lang/subqueryFlattening.sql (part of derbyall) pass\r\n> - new NestedWhereSubqueryTest (part of suites.All) \r\n\r\nAre these intended to be part of the 7 patch, or are these going to be attached separately?\r\n\r\n> Given Craigs urgency with getting this fixed, do you think we can commit the 7 patch, and\r\n> leave the 1=1 for a later commit?\r\n\r\nIf the 7 patch passes the regression tests, and if you understand all of the updates that were necessary\r\nfor subqueryFlattening.sql, then yes, I think this would be fine.  Incremental development is a good thing :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-31T19:45:01.329+0000","updated":"2008-01-31T19:45:01.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564481","id":"12564481","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"That sounds like a doable approach Army - I'll give it a go and let you know how it works out.\r\n\r\n>> - updated lang/subqueryFlattening.sql (part of derbyall) pass\r\n>> - new NestedWhereSubqueryTest (part of suites.All)\r\n>\r\n> Are these intended to be part of the 7 patch, or are these going to be attached separately?\r\n\r\nThey are already attached derby-3301-master.diff and derby-3301-test-4.diff respectively :) I agree the names of the test patches could be a lot better...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-31T20:11:27.775+0000","updated":"2008-01-31T20:11:27.775+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564509","id":"12564509","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Armys suggestion of flagging the SelectNode as having subqueries in its where clause in init() using a ColletNodesVisitor seems to work like a charm :)\r\nAttaching 'derby-3301-8.diff' which implements this change to the 7 diff.\r\n\r\nHad to revisit my subqueryFlattening.sql master diff with this change though, so I'm attaching an updated master in 'derby-3301-test-master-2.diff. The changes to the master are correct to my knowledge - replace some of the PRNs and Hash Exists Joins with subqueries and Index Scan nodes. Just what we want :)\r\n\r\nThe 8 patch works for\r\n- all reported queries, including the 1=1 variant.\r\n- new NestedWhereSubqueryTest with test-4 patch applied\r\n- lang/subqueryFlattening.sql with test-master-2 patch applied\r\n\r\nI'll rerun derbyall and suites.All on the 8 patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-01-31T21:32:02.479+0000","updated":"2008-01-31T21:32:02.479+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564722","id":"12564722","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Updated derbyall pass and lang._Suite runs successfully with the 8 code patch, and the master-2 and test-4 test patches applied.\r\n\r\nI still get some unrelated errors in SecureServerTest in suites.All on Windows, but not on Solaris - I believe it's an environment issue and has nothing to do with the code patch.\r\n\r\nPatches should hopefully be ready for final review, and commit :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-02-01T11:02:01.528+0000","updated":"2008-02-01T11:02:01.528+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564885","id":"12564885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Hi Thomas, thank you for your continued hard work on this. \r\nJust to clarify: In your last comment you mention a test-4 patch, but there is no test-4 patch, only a test-3 patch (dated 28. Jan). I can apply the test-3 patch, but it results\r\nin compilation errors:\r\n\r\ncompilet1:\r\n    [javac] Compiling 95 source files to /export/home/tmp/derby/derby-scratch/classes\r\n    [javac] /export/home/tmp/derby/derby-scratch/java/testing/org/apache/derbyTesting/functionTests/tests/lang/NestedWhereSubqueryTest.java:229: class or interface expected\r\n    [javac] package org.apache.derbyTesting.functionTests.tests.lang;\r\n    [javac] ^\r\n    [javac] /export/home/tmp/derby/derby-scratch/java/testing/org/apache/derbyTesting/functionTests/tests/lang/NestedWhereSubqueryTest.java:231: class or interface expected\r\n    [javac] import java.sql.ResultSet;\r\n    [javac] ^\r\n\r\n...\r\n\r\n \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-02-01T19:10:45.284+0000","updated":"2008-02-01T19:10:45.284+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12564955","id":"12564955","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Oh dear... test-4 is a typo, it should say test-3 in my latest comments.\r\n\r\nThe new test in test-3 is only 209 lines long, and your build error happens at 229.\r\nI think your environment managed to duplicate the contents of the new file? NB 6.0 seems to do that if you apply a diff with a newly created file twice btw.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-02-01T22:08:24.254+0000","updated":"2008-02-01T22:08:24.254+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12565419","id":"12565419","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"I applied patch 8 and verified that the reported queries return correct results.\r\n\r\nI haven't applied the test/master patches, nor have I run the regression tests, but based on\r\ninspection, I think it might be nice to update the comments preceding the affected query plans\r\nin derby-3301-test-master-2.diff so that they agree with the new results--i.e. indicate which parts\r\nof the query should/should not be flattened, and explain why.  But that can come as cleanup,\r\nit doesn't need to block commit of the current patches.\r\n\r\nNo other comments to make; thanks again, Thomas!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-04T16:50:35.897+0000","updated":"2008-02-04T16:50:35.897+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12565671","id":"12565671","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Committed revision 618586.\r\n\r\nYes Thomas, the test-3 patch compiled cleanly when i manually deleted the old version of that file. (svn revert will not delete added files). All tests passed too.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-02-05T09:32:30.691+0000","updated":"2008-02-05T09:32:30.691+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12565805","id":"12565805","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"Hooray. Thanks everyone for your efforts on this.\r\n\r\nCraig","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-02-05T16:49:05.718+0000","updated":"2008-02-05T16:49:05.718+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12566742","id":"12566742","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Army> I think it might be nice to update the comments preceding the affected query plans\r\nArmy> in derby-3301-test-master-2.diff so that they agree with the new results\r\n\r\nAttaching derby-3301-test-master-3.diff with updates to the two comments preceeding the changed queryplans.\r\nThe updated test pass.\r\n\r\nCraig, can you confirm the current trunk works for you, and if so can we close the issue once the last comment patch has been comitted?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-02-07T18:54:35.138+0000","updated":"2008-02-07T18:54:35.138+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12566747","id":"12566747","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Attaching derby-3301-test-master-3.diff with updates to the two comments preceeding\r\n> the changed queryplans.\r\n\r\nThanks, Thomas.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-07T19:13:39.286+0000","updated":"2008-02-07T19:13:39.286+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12566752","id":"12566752","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Committed derby-3301-test-master-3.diff with svn # 619591.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-07T19:35:52.677+0000","updated":"2008-02-07T19:35:52.677+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12566805","id":"12566805","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Thanks for committing, Army.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-02-07T21:27:43.623+0000","updated":"2008-02-07T21:27:43.623+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12569203","id":"12569203","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Marking as resolved for 10.4.0.0.\r\n\r\nThis fix should probably be merged to 10.3 too?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-02-15T08:23:01.239+0000","updated":"2008-02-15T08:23:01.239+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12569506","id":"12569506","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"I'm convinced that this issue is resolved. I think it should stay open until a release containing the fix is made. Is that correct?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-02-16T03:57:05.569+0000","updated":"2008-02-16T03:57:05.569+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12569508","id":"12569508","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":"I think you can find more information about what to do here\r\n\r\nhttp://wiki.apache.org/db-derby/DerbyCommitProcess","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2008-02-16T04:07:40.706+0000","updated":"2008-02-16T04:07:40.706+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12569559","id":"12569559","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Thanks for confirming Craig. I'm planning to merge it to 10.3. I just need to run the tests before I can commit the merge. After that I think it is OK to close it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-02-16T13:33:33.153+0000","updated":"2008-02-16T13:33:33.153+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12569820","id":"12569820","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Merged main fix to 10.3 in revision 628661.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-02-18T09:26:54.494+0000","updated":"2008-02-18T09:26:54.494+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12569825","id":"12569825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Merged the subqueryFlattening fix to 10.3 with revision 628669.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-02-18T09:43:46.632+0000","updated":"2008-02-18T09:43:46.632+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12569829","id":"12569829","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Thanks Dyre","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-02-18T09:51:34.507+0000","updated":"2008-02-18T09:51:34.507+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580135","id":"12580135","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"This issue has fix version 10.4 and is marked with either 'Release note needed' or 'Existing application impact', but does not have a releaseNote.html attached to it. Should it?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-03-18T22:13:20.888+0000","updated":"2008-03-18T22:13:20.888+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580146","id":"12580146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mcaisse","name":"mcaisse","emailAddress":"mcaisse at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michelle Caisse","active":true},"body":"I'm not sure. I forwarded the question to Craig. I was not following the \r\nimplication of this issue beyond the fact that if caused a JDO TCK test \r\nto fail.\r\n\r\n-- Michelle\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mcaisse","name":"mcaisse","emailAddress":"mcaisse at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michelle Caisse","active":true},"created":"2008-03-18T22:33:24.977+0000","updated":"2008-03-18T22:33:24.977+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580155","id":"12580155","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"Seems like a release note might be appropriate. I could try to put together a description from the body of this JIRA if someone can give me a clue as to the format of a releaseNote.html attachment.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-03-18T22:46:20.342+0000","updated":"2008-03-18T22:46:20.342+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580514","id":"12580514","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"The following Wiki page \r\nhttp://wiki.apache.org/db-derby/ReleaseNoteProcess\r\nhas some info about how to format releaseNote.html","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-03-19T19:40:45.895+0000","updated":"2008-03-19T19:40:45.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580572","id":"12580572","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"I've tried to summarize the issue with the attached release note.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-03-19T21:36:01.665+0000","updated":"2008-03-19T21:36:01.665+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580576","id":"12580576","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"I think the release note has its sections or tenses mixed up:\r\n\r\n> Applications that execute SQL statements containing nested EXISTS clauses can see fewer rows than satisfy the query.\r\n\r\nHopefully Derby returns the correct results, not fewer rows than the query is meant to return.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-19T21:44:27.990+0000","updated":"2008-03-19T21:44:27.990+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580578","id":"12580578","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I think also the file needs to be called releaseNote.html for it to work with the\r\nrelease note generator.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-03-19T21:53:23.653+0000","updated":"2008-03-19T21:53:23.653+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580580","id":"12580580","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"I've changed the description to address the tense issue, and changed the name of the file.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-03-19T21:58:44.601+0000","updated":"2008-03-19T21:58:44.601+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12580586","id":"12580586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Looks better, I think the \"Summary of the Change\" section is incorrect:\r\n\r\n> Derby can return fewer rows than expected.\r\n\r\nThat describes the old bug not a change, well it doesn't really describe anything since it's so vague. :-)\r\n\r\nIs the summary more along the lines of:\r\n\r\nQueries with nested EXIST clauses now return correct results.\r\n\r\n???\r\n\r\nMaybe someone more familiar with the issue could come up with the correct wording?\r\n\r\nI'm not really sure that such changes require release notes, looking at this:\r\n\r\n> Applications that depended on the previous incorrect behavior will need to be updated.\r\n\r\nwhat does that really mean? How would such an application be updated?\r\n\r\nMaybe a release note is good, but not suggesting application changes. More along the\r\nlines of:\r\n\r\n > Applications using nested EXISTS may have previously returned incorrect results.\r\n\r\nwhich is what the Symptoms section is for (and says) so maybe these two sections are\r\nnot required for wrong result fixes:\r\n\r\nIncompatibilities with Previous Release\r\nApplication Changes Required\r\n\r\nTo reduce to a simple case, if the expression x + 2 actually returned x + 3 for any x, then would it make sense\r\nto have a release note that effectively said \"applications that depended on the incorrect addition of 2 need to be updated\"?? \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-03-19T22:14:26.545+0000","updated":"2008-03-19T22:14:26.545+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12581854","id":"12581854","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Thanks for having a go at the RN Craig :)\r\n\r\nTaking the liberty to attach an updated version of the releaseNotes.html based on my knowledge of the issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2008-03-25T09:45:37.715+0000","updated":"2008-03-25T09:45:37.715+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12581994","id":"12581994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"body":"Thanks for the update, Thomas. I could feel death by a thousand cuts coming...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","emailAddress":"craig dot russell at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Craig L Russell","active":true},"created":"2008-03-25T16:03:21.146+0000","updated":"2008-03-25T16:03:21.146+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12584454","id":"12584454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Checking 'release note needed' so the release note filter can pick it up.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-04-02T08:28:26.601+0000","updated":"2008-04-02T08:28:26.601+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12385521/comment/12592422","id":"12592422","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"updating fix version to include 10.3.2.2 as this fix was ported to the 10.3 branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-04-25T16:13:12.305+0000","updated":"2008-04-25T16:13:12.305+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3301/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06raf:"}}