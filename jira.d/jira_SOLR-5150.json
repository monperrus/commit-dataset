{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12663652","self":"https://issues.apache.org/jira/rest/api/latest/issue/12663652","key":"SOLR-5150","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310230","id":"12310230","key":"SOLR","name":"Solr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310230&avatarId=22151","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310230&avatarId=22151","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310230&avatarId=22151","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310230&avatarId=22151"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324743","id":"12324743","description":"Major release after 4.4","name":"4.5","archived":false,"released":true,"releaseDate":"2013-10-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321664","id":"12321664","description":"Current trunk","name":"Trunk","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-08-14 13:33:09.365","customfield_12312323":null,"customfield_12310420":"343653","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_2858223714_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2013-09-16T15:20:37.334+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-5150/watchers","watchCount":8,"isWatching":false},"created":"2013-08-14T13:23:33.640+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324324","id":"12324324","description":"Major release after 4.3","name":"4.4","archived":false,"released":true,"releaseDate":"2013-07-23"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-10-05T10:19:16.566+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"Patrick Hunt noticed that our HdfsDirectory code was a bit behind Blur here - the read call we are using may not read all of the requested bytes - it returns the number of bytes actually written - which we ignore.\r\n\r\nBlur moved to using a seek and then readFully call - synchronizing across the two calls to deal with clones.\r\n\r\nWe have seen that really kills performance, and using the readFully call that lets you pass the position rather than first doing a seek, performs much better and does not require the synchronization.\r\n\r\nI also noticed that the seekInternal impl should not seek but be a no op since we are seeking on the read.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"343957","summary":"HdfsIndexInput may not fully read requested bytes.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":18,"total":18,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13739664","id":"13739664","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Nice catch! As there is a positioned readFully we can handle that in a good way without loosing performance. Otherwise I would have suggested to use an approach like done in NIOFSDir (we using chunking + a while (remaining) loop and update the position pointer).\r\n\r\nbq. I also noticed that the seekInternal impl should not seek but be a no-op since we are seeking on the read.\r\n\r\nRight! I dont know why seekInternal in the BufferedIndexInput is still there. IMHO, it should be removed from the base class, as it is no longer used anywhere (at least it should default to an empty method). No IndexInput in Lucene is implementing it anymore, because with positional reads it is not applicable and in the case of separate seek/read, the seek and read must be synchronized because of clones (unless every IndexInput has a separate file descriptor).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-08-14T13:33:09.365+0000","updated":"2013-08-14T13:33:09.365+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13742432","id":"13742432","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"I've held off on committing this because some performance tests indicate the upstream blur patch may have been more performant for merging/flushing while the current patch is *much* more performant for queries.\r\n\r\nWe might be able to use one or the other based on the IOContext.\r\n\r\nI'm waiting until I can get some more results and testing done though - I've seen lots of random deadlock situations in some of my testing with the upstream blur fix (synchronization around two calls).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2013-08-16T17:37:16.314+0000","updated":"2013-08-16T17:38:24.954+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13742433","id":"13742433","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"[~phunt] was on vacation, but is now back and may have some thoughts on this issue as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2013-08-16T17:37:45.919+0000","updated":"2013-08-16T17:37:58.544+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13742441","id":"13742441","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"To describe that more fully: not deadlock - just really long pauses - no cpu or harddrive usage by either hdfs processes or solr for a *long* time - threads hanging out in socket waits of some kind it seemed.\r\n\r\nThat is how I first saw the slowdown with the blur fix - I was running one of the HdfsDirectory tests on my mac and it took 10 min instead of 14 seconds. On linux, the test was still fast. Some other perf tests around querying took a nose dive on linux as well though. Meanwhile, some tests involving indexing sped up.\r\n\r\nThe current patch sped that test back up on my mac and fixed the query perf test.\r\n\r\nWe might be able to get the best of both worlds, or the synchronized version might not be worth it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2013-08-16T17:44:58.244+0000","updated":"2013-08-16T17:44:58.244+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13742465","id":"13742465","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Hi Mark,\r\nI think your version should be preferred in both cases. The Apache Blur upstream version looks like SimpleFSIndexInput (which has synchronization on the RandomAccessFile). The difference is here, that reading from a real file has no network involved (at least not for local filesystems) so the time spent in the locked code block is shorter. Still SimpleFSDir is bad for queries.\r\nWhen merging the whole stuff works single-threaded per file so you would see no difference in both approaches. If the positional readFully approach would be slower, then this would be clearly a bug in Hdfs.\r\nAnother alternative would be: When cloning a file also clone the underlying Hdfs connection. With RandomAccessFile we cannot do this in the JDK (we have no dup() for file descriptors), but if Hdfs supports some dup() like approach with delete on-last close semantics (the file could already be deleted when you dup the file descriptor) you could create 2 different connection for each thread.\r\nThe backside: Lucene never closes clones - one reason why I gave up on implementig a Windows-Optimized directory that would clone underlying file descriptor: The clone would never close the dup :(","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-08-16T17:59:30.271+0000","updated":"2013-08-16T18:00:02.840+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13742831","id":"13742831","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"bq. If the positional readFully approach would be slower, then this would be clearly a bug in Hdfs.\r\n\r\nRight - if that turns out to be the case, I'd raise an issue with the hdfs team. The performance difference actually looks fairly large on first glance though, so it might be worth working around for a while if possible. I don't really know yet.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2013-08-17T04:02:03.140+0000","updated":"2013-08-17T04:02:03.140+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13743168","id":"13743168","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","emailAddress":"phunt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true},"body":"Hi [~markrmiller@gmail.com], thanks for filing this while I was out. I was trying to track down another issue and happened across it while reviewing code (then noticed that blur had changed from the original).\r\n\r\nI realized the seekInternal change while on vacation, was going to mention that but it looks like you fixed it already. ;-)\r\n\r\nI reviewed the HDFS client code for readInternal with a member of our HDFS team before generating the original patch. Based on the feedback I got the understood was that doing the seek followed by the readFully should have been highest performance. It's interesting that the query performance was so negatively impacted. We should followup with those folks again, perhaps you could provide more insight (than I) into how lucene accesses the underlying filesystem for query based reads vs other access patterns? Might help get more insight from the HDFS devs. Perhaps there is some way to trace those accesses...\r\n\r\nWe have not yet tried \"short circuit local HDFS client reads\" (see 12.11.2 here http://hbase.apache.org/book/perf.hdfs.html) but we should at some point (soon) and that will further complicate things. Based on the results other clients have seen we should see significant performance benefits from that (at least when the blocks are indeed local).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","emailAddress":"phunt at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true},"created":"2013-08-18T07:02:43.139+0000","updated":"2013-08-18T07:02:43.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13743215","id":"13743215","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amccurry","name":"amccurry","emailAddress":"amccurry at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aaron McCurry","active":true},"body":"First off I'm really happy to see other people trying to improve performance of the HDFSDirectory.  So I will offer some reasons as to why I have landed on the current implementation in Blur.\r\n\r\nWhy Blur doesn't clone the HDFS file handle for clone in Lucene.\r\n - Mainly because since Lucene 4 cloned file handles don't seem to get closed all the time.  So I didn't want to have all those objects hanging around for long periods of time and not being closed.  Related: Also for those that are interested, Blur has Directory reference counter so that files that are deleted by Lucene stick around long enough for running queries to finish.\r\n\r\nWhy Blur doesn't use the read[Fully](position,buf,off,len) method instead of the seek plus read[Fully](buf,off,len).\r\n - When accessing the local file system with the call would take a huge amount of time because of some internal setup the Hadoop was doing for every call.  This didn't seem to be an issue when using HDFS, but if you start using short-circuit reads it might become a problem.  I have not tested this for 6 months, so this may have been improved in the newer versions of Hadoop.\r\n\r\nWhy Blur uses readFully versus read.\r\n - Laziness?  Not sure, I'm sure that I thought that a single call to seek + read from the filesystem would be better (even if it was more operations) than multiple calls with multiple seeks + reads.  Perhaps though it would be better to not use the readFully as you all are discussing because of the sync call.\r\n\r\nHow would I really like to implement it?\r\n - I would like to implement the file access system as a pool of file handles for each file.  So that each file would have up to N (configured by default to 10 or something like that) file handles open and all the accesses from the base file objects and clones would check out the handle and release it when finished.  So that way there is some limit to the number of handles but some parallel accesses are allowed.\r\n\r\nHope this helps to explain why Blur has the implementation that is does.\r\n\r\nAaron","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amccurry","name":"amccurry","emailAddress":"amccurry at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aaron McCurry","active":true},"created":"2013-08-18T14:12:45.515+0000","updated":"2013-08-18T14:12:45.515+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13743289","id":"13743289","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"bq. Based on the feedback I got the understood was that doing the seek followed by the readFully should have been highest performance.\r\n\r\nThat would go along with speed improvements we saw in indexing. As Uwe said, that does seem kind of weird or buggish, but the numbers seem to bear it out.\r\n\r\nI think the issue is, in the indexing case, it's one thread dong the reading - and our perf tests do show it to be faster quite a bit faster. But the sync simply *kills* concurrent query reads. We see qps drop from like 38 qps to 3 qps. Totally unacceptable performance.\r\n\r\nThis is why I've been looking at doing the synched seek + read or just the read based on the IO context.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2013-08-18T17:13:48.529+0000","updated":"2013-08-18T17:13:48.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13743306","id":"13743306","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amccurry","name":"amccurry","emailAddress":"amccurry at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aaron McCurry","active":true},"body":"Just as a FYI the IOContext won't give the expected behavior, because if the writer already has a index input open for searching it won't reopen the file.  If my memory is correct it will just clone the existing index input that was open with a IOContext of Default (or whatever it uses for searching).  So if you are doing NRT updates you may never see a IOContext of merge in the directory implementation.  I know this was true in 4.2ish but I haven't reviewed the code for this situation lately.\r\n\r\nAaron","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amccurry","name":"amccurry","emailAddress":"amccurry at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aaron McCurry","active":true},"created":"2013-08-18T17:54:46.240+0000","updated":"2013-08-18T17:54:46.240+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13743319","id":"13743319","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"[~mikemccand], do you have any insight into the above comment?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2013-08-18T18:20:31.336+0000","updated":"2013-08-18T18:20:31.336+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13743347","id":"13743347","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"That's correct: if IndexWriter already has a SegmentReader open on that segment because it's pooling readers, in turn because an NRT reader was pulled, then if that segment is merged it will re-use that already opened SegmentReader rather than open a new one.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2013-08-18T20:00:05.811+0000","updated":"2013-08-18T20:00:05.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13743814","id":"13743814","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"bq.  But the sync simply kills concurrent query reads. \r\n\r\nSorry, I was not being very careful with my words. The 'sync' option (with the seek + read) kills concurrent query reads - but I don't think it's the sync at all. The first perf tests I looked at with just a readFully had a sync as well - which seems to make sense because this is not an NRT test or anything. Everything seems to be related to the hdfs calls.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2013-08-19T13:38:00.061+0000","updated":"2013-08-19T13:38:00.061+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13768381","id":"13768381","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"I'm just going to commit the current fix and worry about any performance improvements in another issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2013-09-16T14:56:56.213+0000","updated":"2013-09-16T14:56:56.213+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13768387","id":"13768387","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1523693 from [~markrmiller@gmail.com] in branch 'dev/trunk'\r\n[ https://svn.apache.org/r1523693 ]\r\n\r\nSOLR-5150: HdfsIndexInput may not fully read requested bytes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-09-16T15:06:29.799+0000","updated":"2013-09-16T15:06:29.799+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13768393","id":"13768393","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1523694 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_4x'\r\n[ https://svn.apache.org/r1523694 ]\r\n\r\nSOLR-5150: HdfsIndexInput may not fully read requested bytes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-09-16T15:11:32.920+0000","updated":"2013-09-16T15:11:32.920+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13768400","id":"13768400","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1523698 from [~markrmiller@gmail.com] in branch 'dev/branches/lucene_solr_4_5'\r\n[ https://svn.apache.org/r1523698 ]\r\n\r\nSOLR-5150: HdfsIndexInput may not fully read requested bytes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-09-16T15:17:51.513+0000","updated":"2013-09-16T15:17:51.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12663652/comment/13787110","id":"13787110","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jpountz","name":"jpountz","emailAddress":"jpountz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jpountz&avatarId=16520","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jpountz&avatarId=16520","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jpountz&avatarId=16520","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jpountz&avatarId=16520"},"displayName":"Adrien Grand","active":true},"body":"4.5 release -> bulk close","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jpountz","name":"jpountz","emailAddress":"jpountz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jpountz&avatarId=16520","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jpountz&avatarId=16520","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jpountz&avatarId=16520","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jpountz&avatarId=16520"},"displayName":"Adrien Grand","active":true},"created":"2013-10-05T10:19:16.564+0000","updated":"2013-10-05T10:19:16.564+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-5150/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1n9j3:"}}