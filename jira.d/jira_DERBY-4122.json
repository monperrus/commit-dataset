{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12419563","self":"https://issues.apache.org/jira/rest/api/latest/issue/12419563","key":"DERBY-4122","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-03-26 21:50:26.485","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24039","customfield_12310222":"3_*:*_1_*:*_870417462_*|*_1_*:*_1_*:*_66036731_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-04-06T15:37:14.208+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4122/watchers","watchCount":1,"isWatching":false},"created":"2009-03-26T19:29:40.015+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.png","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"7.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12324062","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12324062","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"outwardIssue":{"id":"12421688","key":"DERBY-4135","self":"https://issues.apache.org/jira/rest/api/2/issue/12421688","fields":{"summary":"Failure in BlobClob4BlobTest due to wrong results being returned","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-07-01T16:21:13.514+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11413","id":"11413","name":"Test"}],"timeoriginalestimate":null,"description":"This bug was found when doing soft upgrade testing from Derby version 10.4.2.0 to 10.5.1.0 (RC1)\r\n\r\nSteps followed are as follows.\r\n\r\n1. Run setEmbeddedCP.bat from version 10.4.2.0's bin folder\r\n2. In a test folder run ij\r\n3. create system/wombat database.\r\n    ij> connect 'jdbc:derby:system/wombat;create=true';\r\n4. exit ij\r\n5. Copy the 10.5.1.0 derby jars (from lib folder) and the derbyTesting.jar from 10.4.2.0 to the test folder and set classpath with them (including junit and ORO)\r\n6. Run suites.All \r\n     java -Xmx512M -Xms512M -Dderby.tests.trace=true junit.textui.TestRunner org.apache.derbyTesting.functionTests.suites.All\r\n\r\nResult:\r\nTests run: 10479,  Failures: 56,  Errors: 34\r\n\r\nThe exception stack trace from a failed test follows.\r\n\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\n3) testClobInTriggerTable(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)java.sql.SQLException: Java exception: 'org.apache.derby.iapi.types.ReaderToUTF8Stream cannot be cast to org.apache.derby.iapi.types.Resetable: java.lang.ClassCastException'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(Unknown Source)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testClobInTriggerTable(TriggerTest.java:529)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testClobInTriggerTable(TriggerTest.java:451)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:102)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\nCaused by: java.sql.SQLException: Java exception: 'org.apache.derby.iapi.types.ReaderToUTF8Stream cannot be cast to org.apache.derby.iapi.types.Resetable: java.lang.ClassCastException'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\r\n\t... 39 more\r\nCaused by: java.lang.ClassCastException: org.apache.derby.iapi.types.ReaderToUTF8Stream cannot be cast to org.apache.derby.iapi.types.Resetable\r\n\tat org.apache.derby.iapi.types.SQLClob.rewindStream(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLClob.readExternal(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.getString(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.loadStream(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.UpdateResultSet.objectifyStream(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.UpdateResultSet.open(Unknown Source)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)\r\n\t... 32 more\r\n------------------------------------------------------------------------------------------------------------------\r\n\r\nWhen looking at the SVN revisions for SQLClob with Kathey Marsden, we found the following statement in revision # 738408, related to DERBY-3907, which might be related to this issue.\r\n\r\n\"NOTE: Databases created with this revision (or later) containing Clobs, cannot be accessed by earlier trunk revisions.\"\r\nPatch file: derby-3907-7a3-use_new_header_format.diff\r\n\r\n\r\n\r\n      ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38423","summary":"ClassCastException in SQLClob when running in soft upgrade mode (10.4.2.0 -> 10.5.1.0)","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suranjay","name":"suranjay","emailAddress":"suranjay at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suran Jayathilaka","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suranjay","name":"suranjay","emailAddress":"suranjay at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suran Jayathilaka","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Windows Vista 64, Sun JDK 1.6.0_10, Junit 3.8.2","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10050","value":"Blocker","id":"10050"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":25,"total":25,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12689623","id":"12689623","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suranjay","name":"suranjay","emailAddress":"suranjay at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suran Jayathilaka","active":true},"body":"This is the stack trace from another failed test in the same test run, which may be related to the same issue as above. Should be investigated and filed separately if this is caused by a different problem.\r\n\r\n13) testTriggersWithClobColumn(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)java.sql.SQLException: An IOException was thrown when reading a 'java.sql.String' from an InputStream.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source)\r\n\tat org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testTriggersWithClobColumn(BlobClob4BlobTest.java:397)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:102)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\nCaused by: java.sql.SQLException: An IOException was thrown when reading a 'java.sql.String' from an InputStream.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\r\n\t... 45 more\r\nCaused by: java.sql.SQLException: Java exception: ': java.io.EOFException'.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\r\n\t... 42 more\r\nCaused by: java.io.EOFException\r\n\tat org.apache.derby.iapi.types.SQLChar.readExternal(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLClob.readExternal(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.getString(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.loadStream(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.UpdateResultSet.open(Unknown Source)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)\r\n\t... 38 more","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suranjay","name":"suranjay","emailAddress":"suranjay at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suran Jayathilaka","active":true},"created":"2009-03-26T19:53:55.100+0000","updated":"2009-03-26T19:53:55.100+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12689688","id":"12689688","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I'm pretty sure DERBY-3907 introduced this bug. I'll have a look tomorrow.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-26T21:50:26.485+0000","updated":"2009-03-26T21:50:26.485+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12689896","id":"12689896","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Posting two small patches;\r\n 1a: makes a stream with a pre-10.5 header correctly positioned after the header has been investigated.\r\n 2a: makes BlobClob4BlobTest.testTriggersWithClobColumn() select from the correct tables (probably a typo in the original test).\r\n\r\nPatch 1a should fix some of the EOFExceptions reported during soft upgrade testing (reported by Suran), but it doesn't fix the class cast errors.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-27T13:50:07.335+0000","updated":"2009-03-27T13:50:07.335+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12689916","id":"12689916","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Regarsding patch 1a, It would be good to have a new upgrade test to test the fix and also to have a brief code comment to explain the fix and mention the JIRA number for reference.  Perhaps, since it is a different problem than the ClassCastException (or at least has a different fix), another Jira might be appropriate.\r\n\r\nSince the test patch is not really related.  It would be good to have it as a separate commit.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-03-27T14:32:12.282+0000","updated":"2009-03-27T14:32:12.282+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12689922","id":"12689922","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Sorry Kathey, I just committed the patches before I saw your comment.\r\nCommitted patch 1a to trunk with revision 759153, and patch 2a to trunk with revision 759155.\r\n\r\nRegarding tests, I believe our existing tests cover the issue *if* they are run against a 10.4 database. I must admit, it is not clear to me what will be run and tested as part of our default upgrade tests. I need to look into this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-27T14:47:18.928+0000","updated":"2009-03-27T14:47:18.928+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12689923","id":"12689923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"BTW, derbyall and suites.All passed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-27T14:51:41.684+0000","updated":"2009-03-27T14:51:41.684+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12689970","id":"12689970","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Patch 3a is the first revision for a fix. I haven't had time to run extensive tests yet.\r\nI found that the problem is that Derby tries to reset / rewind a stream that can't be reset.\r\nThese streams are coming directly from the user, wrapped in a ReaderToUTF8Stream. It would be best to avoid having to move backwards in the stream, but then we have to know we're dealing with a database in soft upgrade mode. This information hasn't been kept in SQLClob earlier.\r\nDERBY-4102 is a related issue that has been logged.\r\n\r\nThere is also a bug in the stream code to deal with the empty string (\"\").\r\nIn the patch I have chosen to materialize the value if it is very small instead of keeping the stream (see SQLClob.setObject()). The Clob is also materialized when a clone is created in the existing code.\r\nThis problem should be investigated further to understand the root cause.\r\n\r\nNote that the patch doesn't solve all the issues. When running BlobClob4BlobTest in soft upgrade mode, you still get two failures:\r\njunit.framework.ComparisonFailure: Unexpected SQL state. expected:<[XJ073]> but was:<[40XD0]>\r\nMy theory here is that the exception is being thrown in a different place in 10.5 than in 10.4, and in 10.5 there is no code wrapping the inner-most exception.\r\n\r\n\r\nI'm starting derbyall and suites.All now.\r\nPatch ready for review and comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-27T17:14:56.308+0000","updated":"2009-03-27T17:14:56.308+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12693495","id":"12693495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"derbyall and suites.All ran without failures (with freshly created test databases, not in soft upgrade mode).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-28T21:40:05.829+0000","updated":"2009-03-28T21:40:05.829+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12693802","id":"12693802","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Patch 3b also takes care of the incorrect SQLState errors seen during soft upgrade testing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-30T15:24:16.056+0000","updated":"2009-03-30T15:24:16.056+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694146","id":"12694146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"In patch 3b, there are some issues that need to be resolved:\r\n 1) How to best determine if a stream is resetable or not.\r\n 2) Is it okay to materialize small Clobs in SQLClob.setObject?\r\n    And what should the threshold for a small Clob be?\r\n\r\nThe problem in 1 is that no matter if the source stream is resetable or not, we wrap it in a FormatIdInputStream. This class implements the Resetable interface, and a test for instanceof Resetable will fail with the reported ClassCastException.\r\nSome options from the top of my head (I'll spend more time investigating, but would appreciate comments);\r\n a) Introduce yet another class (a \"non-resetable-FormatIdInputStream\")\r\n b) Add the method isResetable to the Resetable interface (kind of contradicting...)\r\n c) Try to reset / rewind, catch ClassCastException and fallback to passing along the \"bytes peeked at\".\r\n d) Add instance variable in SQLChar, which allows us to do the instanceof check before we wrap the stream in a FormatIdInputStream.\r\n e) Your suggestion?\r\n\r\nNote that I haven't had time to throughly investigate this yet, so I may have missed something that's simpler and easier to implement.\r\n\r\nA few comments on some of the options I mentioned so far:\r\n a) This adds to the overhead, but the fact that this problem arises suggests there is a design problem in the current implementation. It is not clear to me  what kind of changes this approach requires.\r\n c) Probably doable, but this makes exception catching part of the \"flow control\" for Clobs written with the old header format.\r\n d) Adds more state to a central data type, which has to be maintained. I think the maintenance costs should be modest, but I haven't investigated that. It may be possible to add this information to the CharacterStreamDescriptor-object, but again I don't know how this will play out.\r\n\r\nThat said, the current patch already works...\r\nFeedback appreciated!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-31T15:19:52.336+0000","updated":"2009-03-31T15:19:52.336+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694429","id":"12694429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Backported patches 1a and 2a to 10.5 with revision 760820.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-04-01T09:06:29.127+0000","updated":"2009-04-01T09:06:29.127+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694436","id":"12694436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"> 1) How to best determine if a stream is resetable or not.\r\n>\r\n> The problem in 1 is that no matter if the source stream is resetable\r\n> or not, we wrap it in a FormatIdInputStream. This class implements\r\n> the Resetable interface, and a test for instanceof Resetable will\r\n> fail with the reported ClassCastException.\r\n\r\nI'm not sure I understand. The patch solved the ClassCastException by\r\nchecking stream instanceof ReaderToUTF8Stream. Where does the\r\nFormatIdInputStream come into the picture?\r\n\r\n> 2) Is it okay to materialize small Clobs in SQLClob.setObject?\r\n>    And what should the threshold for a small Clob be?\r\n\r\nThat sounds OK to me. When we get the Clobs from store, isn't the\r\nlimit about 32K? Perhaps that could be used as a starting point.\r\n\r\nNit: SQLChar.EMPTY could be replaced by ReuseFactory.getZeroLenByteArray().","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-01T09:14:47.323+0000","updated":"2009-04-01T09:14:47.323+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694446","id":"12694446","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"> I'm not sure I understand. The patch solved the ClassCastException by\r\n> checking stream instanceof ReaderToUTF8Stream. Where does the\r\n> FormatIdInputStream come into the picture? \r\n\r\nThe instanceof ReaderToUTF8Stream happens in SQLClob.readExternal.\r\nFrom SQLChar.getString():\r\n\"\"\"\r\n            } else if (stream != null) {\r\n\r\n                // data stored as a stream\r\n                try {\r\n\r\n                    if (stream instanceof FormatIdInputStream) {\r\n                        readExternal((FormatIdInputStream) stream);\r\n                    } else {\r\n                        readExternal(new FormatIdInputStream(stream));\r\n                    }\r\n                    stream = null;\r\n\r\n                    // at this point the value is only in the char[]\r\n                    // so call again to convert to a String\r\n                    return getString();\r\n\r\n                } catch (IOException ioe) {\r\n\"\"\"\r\n\r\nIn the code above, the variable 'stream' will be a FormatIdInputStream if it\r\ncomes from store, and ReaderToUTF8Stream if the value hasn't been\r\ninserted into the store (i.e. we're working on this value from within a trigger,\r\nor a VALUES clause).\r\nAt this point, doing the more general check 'stream instanceof Resetable' is valid.\r\n\r\nAnd again, the reason why this was discovered during (soft) upgrade testing, is that\r\nin a fresh 10.5 database you won't have to reset / rewind the stream.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-04-01T09:34:39.471+0000","updated":"2009-04-01T09:34:39.471+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694475","id":"12694475","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Is it possible to implement mark()/reset()/markSupported() in ReaderToUTF8Stream? Then we could use stream.mark(MAX_STREAM_HEADER_LENGTH) before the read operation and stream.reset() + InputStreamUtil.skipFully(stream, hdrInfo.headerLenght()) after on. We would still need separate code for the Resetable case, though, but we wouldn't need to check for exact class match, checks for InputStream.markSupported() and instanceof Resetable would do.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-01T11:24:41.632+0000","updated":"2009-04-01T11:24:41.632+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694621","id":"12694621","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks for the comments, Knut Anders!\r\n\r\nI have implemented a first *draft* of the mark/reset approach. Please have a look.\r\nI'm also wondering what to do if we are still unable to reset the stream (i.e., that it doesn't support mark/reset nor Resetable).\r\nKeep the \"bytesPeekedAt\"-mechanism or just fail with an IOException?\r\n\r\nI think the mark/reset approach you suggested looks better than the bytesPeekedAt-approach, and it may also be useful in other settings. Keeping the latter clutters the code to some degree, and I don't think it's possible for a user to inject a stream that doesn't support mark/reset nor Resetable.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-04-01T17:07:18.469+0000","updated":"2009-04-01T17:07:18.469+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694908","id":"12694908","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I agree that it sounds better to remove the bytesPeekedAt code since we are able to control which streams are passed in and can make sure that they implement one of the reset interfaces.\r\n\r\nI haven't reviewed the full patch yet, only the ReaderToUTF8Stream part. Here are my comments:\r\n\r\n- Since the buffer is not of constant size, I think we should remove the BUFSIZE constant so that no one incorrectly uses it instead of buffer.length. In fact, I think the available() method will return the wrong result now because it uses BUFSIZE.\r\n\r\n- Do we need to separate between MARK_UNSET and EXCEEDED_MARK_LIMIT? Seems like we can get away with using MARK_UNSET in both cases and get slightly simpler code, and one less error message to internationalize (the message for the new IOException should be internationalized, shouldn't it?)\r\n\r\n- I think I would have removed the shrink logic in fillBuffer(). It's probably going to end up as code that's never called, so I don't think the benefit (potentially release memory earlier if mark() is called with a really large argument) justifies the extra code.\r\n\r\n- Should there be a comment and/or constant for the magic number 6 in fillBuffer()? I see that there is a comment in the existing code, but it is further down, so I scratched my head for a while trying to understand it before I got to that comment.\r\n\r\n- One potential optimization (not needed in the first increment, but it's so simple that it's probably worth adding it later): When we allocate a new buffer, we could check if buffer.length <= (readAheadLimit + 6), and if it is, we can just reuse the old buffer. If oldBuf and buffer point to the same array, the call to arraycopy() will just shift the bytes to the left and free space at the right side of the array.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-02T08:18:35.896+0000","updated":"2009-04-02T08:18:35.896+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694918","id":"12694918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"SQLClob.java:\r\n\r\nThe approach seems fine to me. Some more detailed comments:\r\n\r\n- Won't the code below throw NPE if ioe.getCause() returns null?\r\nInitializing rootCause to ioe would be safer, I think, and still do the right thing.\r\n\r\n+                Throwable rootCause = ioe.getCause();\r\n+                while (rootCause.getCause() != null) {\r\n+                    rootCause = rootCause.getCause();\r\n+                }\r\n\r\n- Perhaps we should remove the instanceof check in the code below and remove the else branch? I think the ClassCastException we would get then is more informative than \"Unable to reset stream\" (and it saves us one translation :)\r\n\r\n+                } else if (stream instanceof Resetable) {\r\n+                    // We have a store stream.\r\n+                    rewindStream(hdrInfo.headerLength());\r\n+                } else {\r\n+                    throw new IOException(\"Unable to reset stream\");\r\n+                }\r\n\r\n- In readExternal() we now subtract the header length from the byte length before we pass it to super.readExternal(). As far as I can see, this is a code path taken in normal operation too, not only in soft upgrade. Was this a bug that was possible to see when not running with a soft upgraded db?\r\n\r\n- Both SQLClob and ReaderToUTF8Stream have code where they use Math.max(0, x-y) to prevent that an argument goes negative. I'm not sure I see why the arguments will go negative, and isn't there a chance that we're hiding real bugs this way? It would be good if there at least was a comment stating which conditions that may make the result negative, so that it is easier to see that it is OK to use 0 in those cases.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-02T08:54:29.194+0000","updated":"2009-04-02T08:54:29.194+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12694932","id":"12694932","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Knut, I'm working on a new patch. The following items (taken from your comments) will be addressed:\r\n o remove BUFSIZE (and adjust code where required)\r\n o remove shrink logic\r\n o move and/or add more comments about the magic number 6\r\n o copy optimization\r\n o NPE possibility in root cause determination code\r\n o rewrite if in SQLClob\r\n \r\nThen some comments on some of the other items:\r\n> Do we need to separate between MARK_UNSET and EXCEEDED_MARK_LIMIT?\r\nNo, only for more specific error reporting, I think.\r\n\r\n> In readExternal() we now subtract the header length from the byte length before we pass it to super.readExternal(). As far as I can see, this is a code path taken in normal operation too, not only in soft upgrade. Was this a bug that was possible to see when not running with a soft upgraded db? \r\nNo, it should not happen in a fresh 10.5 database. It can happen in soft and hard upgrade.\r\nThe reason why it doesn't happen in a fresh database, is that all lengths are stored as character counts.\r\n\r\n> Both SQLClob and ReaderToUTF8Stream have code where they use Math.max(0, x-y) to prevent that an argument goes negative. I'm not sure I see why the arguments will go negative, and isn't there a chance that we're hiding real bugs this way?\r\nThe argument in SQLClob will go negative when the stored length in the byte header is 0. Since the header length is still two in this case, we get 0 - 2 = -2. There is a slight chance we may hide a bug with this, but the bug will be revealed when we actually try to read the value. In principle, what we're saying here is that if the length we obtained from the header is negative, assume it is unknown.\r\nI can try to rewrite the check so that it is easier to understand, and add some comments.\r\n\r\nIn ReaderToUTF8Stream, the variable blen will be -1 the first time we fill the buffer. Again, I'll rewrite or/and add a comment to make it easier to read the code.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-04-02T09:30:02.043+0000","updated":"2009-04-02T09:30:02.043+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12695772","id":"12695772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"New revision (4b) of the mark/reset fix.\r\n\r\nI'm rerunning tests, plan to commit tomorrow if they pass.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-04-04T17:37:43.153+0000","updated":"2009-04-04T17:37:43.153+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12695922","id":"12695922","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"4b looks good to me. Two minor comments:\r\n\r\n- SQLState.LANG_STREAM_MARK_UNSET_OR_EXCEEDED should be moved to MessageId, since it's not used in an SQLException\r\n\r\n- I don't think EOFException should be thrown by reset() when the stream is closed, as stream closed does not mean that EOF has been reached. What about a plain IOException with the message from SQLState.LANG_STREAM_CLOSED?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-05T21:39:44.401+0000","updated":"2009-04-05T21:39:44.401+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12696128","id":"12696128","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks for looking at the patch again, Knut Anders.\r\n\r\nI have moved the new message to MessageId. It wasn't immediately clear to me what to name the message and into which category it should be placed. We can move/rename it later if required.\r\n\r\nRegarding the EOFException, I have chosen to keep it as it is for now because other methods in the class use it too. It may be that it should be changed, but it must be tested. Since ReaderToUTF8Stream has been considered an \"internal stream class\" it is not clear to me whether Derby code expects the EOFException or not.\r\n\r\nI also want to improve the test a bit, by making the randomized test verify the content returned by the stream. Depending on when I get around to do it, I may do this under this issue or create a sub-issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-04-06T15:25:44.510+0000","updated":"2009-04-06T15:25:44.510+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12696129","id":"12696129","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attached the correct file this time (4c)...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-04-06T15:27:02.798+0000","updated":"2009-04-06T15:27:02.798+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12696134","id":"12696134","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Committed patch 4c to trunk with revision 762384, and to 10.5 with revision 762389.\r\n\r\nI'm marking this issue as resolved, but I may still add the last test improvement I have mentioned.\r\nI don't believe any more changes are required to fix the reported bug. I don't see the reported problem when running in soft upgrade with the fix, but please verify.\r\n\r\n(BTW, I'll be unavailable for a week from today)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-04-06T15:37:14.136+0000","updated":"2009-04-06T15:37:14.136+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12696135","id":"12696135","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks. Keeping the EOFException for consistency with the other methods in the class sounds OK to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-06T15:39:52.964+0000","updated":"2009-04-06T15:39:52.964+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12419563/comment/12697190","id":"12697190","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suranjay","name":"suranjay","emailAddress":"suranjay at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suran Jayathilaka","active":true},"body":"Verified the fix with Snapshot build 10.5.1.1_2009-04-07T20-30-19_SVN762838 by running suites.All on a soft upgrade.\r\nThe ClassCastException failures did not occur.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suranjay","name":"suranjay","emailAddress":"suranjay at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suran Jayathilaka","active":true},"created":"2009-04-08T20:49:28.046+0000","updated":"2009-04-08T20:49:28.046+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4122/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06xvr:"}}