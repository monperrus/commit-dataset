{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12596250","self":"https://issues.apache.org/jira/rest/api/latest/issue/12596250","key":"LUCENE-4177","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12322550","id":"12322550","description":"First major release of the 4.x series","name":"4.0","archived":false,"released":true,"releaseDate":"2012-10-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321663","id":"12321663","description":"Current trunk","name":"Trunk","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-08-01 20:46:33.897","customfield_12312323":null,"customfield_12310420":"243788","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4418384707_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-08-18T15:37:31.246+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4177/watchers","watchCount":3,"isWatching":false},"created":"2012-06-28T12:17:46.562+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[{"id":"12355712","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12355712","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12445806","key":"LUCENE-2225","self":"https://issues.apache.org/jira/rest/api/2/issue/12445806","fields":{"summary":"TestPerfTasksLogic.testBGSearchTaskThreads sometimes runs forever","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-10T10:33:52.519+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"e.g.\r\n\r\nhttp://jenkins.sd-datasolutions.de/job/Lucene-Solr-4.x-Windows-Java6-64/147/\r\nhttp://jenkins.sd-datasolutions.de/job/Lucene-Solr-trunk-Windows-Java7-64/408/\r\n\r\nthis has happened a couple times... but always on Windows.","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"23842","summary":"TestPerfTasksLogic.testBGSearchTaskThreads sometimes fails or hangs on Windows","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":9,"total":9,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13426878","id":"13426878","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Windows run timed out after 10 mins.\r\n{code}\r\nSuite: org.apache.lucene.benchmark.byTask.TestPerfTasksLogic\r\nOK      0.78s | TestPerfTasksLogic.testParallelDocMaker\r\n  1> ------------> starting task: Seq\r\n  1>\r\nOK      0.19s | TestPerfTasksLogic.testParallelExhausted\r\n  1> ------------> starting task: Seq\r\n  1> ------------> starting task: CreateIndex\r\n  1> ------------> starting task: Seq_Exhaust\r\n  1> ------------> starting task: Seq_Exhaust\r\n  1> ------------> starting task: WaitForMerges\r\n  1> ------------> starting task: CloseIndex\r\n  1>\r\nOK      2.09s | TestPerfTasksLogic.testHighlightingNoTvNoStore\r\n  1> ------------> starting task: Seq\r\n  1>    0.53 sec --> TEST-TestPerfTasksLogic.testHighlightingNoTvNoStore-seed#[FA3E8AE1CB44188B] added      1000 docs\r\n  1>\r\nERROR    597s | TestPerfTasksLogic.testBGSearchTaskThreads\r\n   > Throwable #1: java.lang.Exception: Test abandoned because suite timeout was reached.\r\n   > \tat __randomizedtesting.SeedInfo.seed([FA3E8AE1CB44188B]:0)\r\n   > \r\n  1> ------------> starting task: Seq\r\n  1>    6.54 sec --> Thread-55 processed 100000 records\r\n  1>    6.61 sec --> Thread-54 processed 100000 records\r\n  1>   10.58 sec --> Thread-54 processed 200000 records\r\n  1>   10.58 sec --> Thread-55 processed 200000 records\r\n  1>   14.54 sec --> Thread-54 processed 300000 records\r\n  1>   14.55 sec --> Thread-55 processed 300000 records\r\n  1>   18.50 sec --> Thread-54 processed 400000 records\r\n  1>   18.60 sec --> Thread-55 processed 400000 records\r\n  1>   22.48 sec --> Thread-54 processed 500000 records\r\n  1>   22.59 sec --> Thread-55 processed 500000 records\r\n  1>   26.46 sec --> Thread-54 processed 600000 records\r\n  1>   26.58 sec --> Thread-55 processed 600000 records\r\n  1>   30.42 sec --> Thread-54 processed 700000 records\r\n  1>   30.61 sec --> Thread-55 processed 700000 records\r\n  1>   34.34 sec --> Thread-54 processed 800000 records\r\n  1>   34.65 sec --> Thread-55 processed 800000 records\r\n  1>   38.33 sec --> Thread-54 processed 900000 records\r\n  1>   38.67 sec --> Thread-55 processed 900000 records\r\n  1>   42.29 sec --> Thread-54 processed 1000000 records\r\n  1>   42.70 sec --> Thread-55 processed 1000000 records\r\n  1>   46.27 sec --> Thread-54 processed 1100000 records\r\n  1>   46.71 sec --> Thread-55 processed 1100000 records\r\n  1>   50.26 sec --> Thread-54 processed 1200000 records\r\n  1>   50.68 sec --> Thread-55 processed 1200000 records\r\n  1>   54.23 sec --> Thread-54 processed 1300000 records\r\n  1>   54.71 sec --> Thread-55 processed 1300000 records\r\n  1>   58.19 sec --> Thread-54 processed 1400000 records\r\n  1>   58.72 sec --> Thread-55 processed 1400000 records\r\n  1>   62.13 sec --> Thread-54 processed 1500000 records\r\n  1>   62.76 sec --> Thread-55 processed 1500000 records\r\n  1>   66.10 sec --> Thread-54 processed 1600000 records\r\n  1>   66.78 sec --> Thread-55 processed 1600000 records\r\n  1>   70.09 sec --> Thread-54 processed 1700000 records\r\n  1>   70.79 sec --> Thread-55 processed 1700000 records\r\n  1>   74.02 sec --> Thread-54 processed 1800000 records\r\n  1>   74.82 sec --> Thread-55 processed 1800000 records\r\n  1>   78.05 sec --> Thread-54 processed 1900000 records\r\n  1>   78.80 sec --> Thread-55 processed 1900000 records\r\n  1>   82.01 sec --> Thread-54 processed 2000000 records\r\n  1>   82.80 sec --> Thread-55 processed 2000000 records\r\n  1>   85.97 sec --> Thread-54 processed 2100000 records\r\n  1>   86.85 sec --> Thread-55 processed 2100000 records\r\n  1>   89.95 sec --> Thread-54 processed 2200000 records\r\n  1>   90.87 sec --> Thread-55 processed 2200000 records\r\n  1>   93.90 sec --> Thread-54 processed 2300000 records\r\n  1>   94.86 sec --> Thread-55 processed 2300000 records\r\n  1>   97.89 sec --> Thread-54 processed 2400000 records\r\n  1>   98.84 sec --> Thread-55 processed 2400000 records\r\n  1>  101.90 sec --> Thread-54 processed 2500000 records\r\n  1>  102.85 sec --> Thread-55 processed 2500000 records\r\n  1>  105.91 sec --> Thread-54 processed 2600000 records\r\n  1>  106.86 sec --> Thread-55 processed 2600000 records\r\n  1>  109.87 sec --> Thread-54 processed 2700000 records\r\n  1>  110.90 sec --> Thread-55 processed 2700000 records\r\n  1>  113.82 sec --> Thread-54 processed 2800000 records\r\n  1>  114.89 sec --> Thread-55 processed 2800000 records\r\n  1>  117.81 sec --> Thread-54 processed 2900000 records\r\n  1>  118.90 sec --> Thread-55 processed 2900000 records\r\n  1>  121.80 sec --> Thread-54 processed 3000000 records\r\n  1>  122.88 sec --> Thread-55 processed 3000000 records\r\n  1>  125.81 sec --> Thread-54 processed 3100000 records\r\n  1>  126.87 sec --> Thread-55 processed 3100000 records\r\n  1>  129.75 sec --> Thread-54 processed 3200000 records\r\n  1>  130.90 sec --> Thread-55 processed 3200000 records\r\n  1>  133.71 sec --> Thread-54 processed 3300000 records\r\n  1>  134.91 sec --> Thread-55 processed 3300000 records\r\n  1>  137.72 sec --> Thread-54 processed 3400000 records\r\n  1>  138.87 sec --> Thread-55 processed 3400000 records\r\n  1>  141.71 sec --> Thread-54 processed 3500000 records\r\n  1>  142.88 sec --> Thread-55 processed 3500000 records\r\n  1>  145.67 sec --> Thread-54 processed 3600000 records\r\n  1>  146.89 sec --> Thread-55 processed 3600000 records\r\n  1>  149.65 sec --> Thread-54 processed 3700000 records\r\n  1>  150.88 sec --> Thread-55 processed 3700000 records\r\n  1>  153.63 sec --> Thread-54 processed 3800000 records\r\n  1>  154.88 sec --> Thread-55 processed 3800000 records\r\n  1>  157.62 sec --> Thread-54 processed 3900000 records\r\n  1>  158.87 sec --> Thread-55 processed 3900000 records\r\n  1>  161.60 sec --> Thread-54 processed 4000000 records\r\n  1>  162.86 sec --> Thread-55 processed 4000000 records\r\n  1>  165.61 sec --> Thread-54 processed 4100000 records\r\n  1>  166.90 sec --> Thread-55 processed 4100000 records\r\n  1>  169.56 sec --> Thread-54 processed 4200000 records\r\n  1>  170.91 sec --> Thread-55 processed 4200000 records\r\n  1>  173.52 sec --> Thread-54 processed 4300000 records\r\n  1>  174.95 sec --> Thread-55 processed 4300000 records\r\n  1>  177.47 sec --> Thread-54 processed 4400000 records\r\n  1>  178.95 sec --> Thread-55 processed 4400000 records\r\n  1>  181.44 sec --> Thread-54 processed 4500000 records\r\n  1>  182.94 sec --> Thread-55 processed 4500000 records\r\n  1>  185.42 sec --> Thread-54 processed 4600000 records\r\n  1>  186.95 sec --> Thread-55 processed 4600000 records\r\n  1>  189.38 sec --> Thread-54 processed 4700000 records\r\n  1>  190.96 sec --> Thread-55 processed 4700000 records\r\n  1>  193.33 sec --> Thread-54 processed 4800000 records\r\n  1>  194.94 sec --> Thread-55 processed 4800000 records\r\n  1>  197.28 sec --> Thread-54 processed 4900000 records\r\n  1>  198.99 sec --> Thread-55 processed 4900000 records\r\n  1>  201.26 sec --> Thread-54 processed 5000000 records\r\n  1>  203.00 sec --> Thread-55 processed 5000000 records\r\n  1>  205.20 sec --> Thread-54 processed 5100000 records\r\n  1>  207.00 sec --> Thread-55 processed 5100000 records\r\n  1>  209.18 sec --> Thread-54 processed 5200000 records\r\n  1>  211.02 sec --> Thread-55 processed 5200000 records\r\n  1>  213.11 sec --> Thread-54 processed 5300000 records\r\n  1>  215.01 sec --> Thread-55 processed 5300000 records\r\n  1>  217.09 sec --> Thread-54 processed 5400000 records\r\n  1>  219.01 sec --> Thread-55 processed 5400000 records\r\n  1>  221.11 sec --> Thread-54 processed 5500000 records\r\n  1>  223.02 sec --> Thread-55 processed 5500000 records\r\n  1>  225.11 sec --> Thread-54 processed 5600000 records\r\n  1>  227.00 sec --> Thread-55 processed 5600000 records\r\n  1>  229.05 sec --> Thread-54 processed 5700000 records\r\n  1>  231.04 sec --> Thread-55 processed 5700000 records\r\n  1>  233.06 sec --> Thread-54 processed 5800000 records\r\n  1>  235.00 sec --> Thread-55 processed 5800000 records\r\n  1>  237.03 sec --> Thread-54 processed 5900000 records\r\n  1>  239.04 sec --> Thread-55 processed 5900000 records\r\n  1>  240.96 sec --> Thread-54 processed 6000000 records\r\n  1>  243.06 sec --> Thread-55 processed 6000000 records\r\n  1>  244.90 sec --> Thread-54 processed 6100000 records\r\n  1>  247.07 sec --> Thread-55 processed 6100000 records\r\n  1>  248.88 sec --> Thread-54 processed 6200000 records\r\n  1>  251.07 sec --> Thread-55 processed 6200000 records\r\n  1>  252.84 sec --> Thread-54 processed 6300000 records\r\n  1>  255.11 sec --> Thread-55 processed 6300000 records\r\n  1>  256.82 sec --> Thread-54 processed 6400000 records\r\n  1>  259.12 sec --> Thread-55 processed 6400000 records\r\n  1>  260.80 sec --> Thread-54 processed 6500000 records\r\n  1>  263.09 sec --> Thread-55 processed 6500000 records\r\n  1>  264.79 sec --> Thread-54 processed 6600000 records\r\n  1>  267.10 sec --> Thread-55 processed 6600000 records\r\n  1>  268.76 sec --> Thread-54 processed 6700000 records\r\n  1>  271.11 sec --> Thread-55 processed 6700000 records\r\n  1>  272.73 sec --> Thread-54 processed 6800000 records\r\n  1>  275.14 sec --> Thread-55 processed 6800000 records\r\n  1>  276.70 sec --> Thread-54 processed 6900000 records\r\n  1>  279.15 sec --> Thread-55 processed 6900000 records\r\n  1>  280.71 sec --> Thread-54 processed 7000000 records\r\n  1>  283.19 sec --> Thread-55 processed 7000000 records\r\n  1>  284.65 sec --> Thread-54 processed 7100000 records\r\n  1>  287.16 sec --> Thread-55 processed 7100000 records\r\n  1>  288.62 sec --> Thread-54 processed 7200000 records\r\n  1>  291.22 sec --> Thread-55 processed 7200000 records\r\n  1>  292.56 sec --> Thread-54 processed 7300000 records\r\n  1>  295.23 sec --> Thread-55 processed 7300000 records\r\n  1>  296.54 sec --> Thread-54 processed 7400000 records\r\n  1>  299.22 sec --> Thread-55 processed 7400000 records\r\n  1>  300.52 sec --> Thread-54 processed 7500000 records\r\n  1>  303.23 sec --> Thread-55 processed 7500000 records\r\n  1>  304.48 sec --> Thread-54 processed 7600000 records\r\n  1>  307.24 sec --> Thread-55 processed 7600000 records\r\n  1>  308.43 sec --> Thread-54 processed 7700000 records\r\n  1>  311.27 sec --> Thread-55 processed 7700000 records\r\n  1>  312.45 sec --> Thread-54 processed 7800000 records\r\n  1>  315.29 sec --> Thread-55 processed 7800000 records\r\n  1>  316.49 sec --> Thread-54 processed 7900000 records\r\n  1>  319.29 sec --> Thread-55 processed 7900000 records\r\n  1>  320.49 sec --> Thread-54 processed 8000000 records\r\n  1>  323.28 sec --> Thread-55 processed 8000000 records\r\n  1>  324.45 sec --> Thread-54 processed 8100000 records\r\n  1>  327.30 sec --> Thread-55 processed 8100000 records\r\n  1>  328.41 sec --> Thread-54 processed 8200000 records\r\n  1>  331.31 sec --> Thread-55 processed 8200000 records\r\n  1>  332.39 sec --> Thread-54 processed 8300000 records\r\n  1>  335.31 sec --> Thread-55 processed 8300000 records\r\n  1>  336.38 sec --> Thread-54 processed 8400000 records\r\n  1>  339.30 sec --> Thread-55 processed 8400000 records\r\n  1>  340.36 sec --> Thread-54 processed 8500000 records\r\n  1>  343.29 sec --> Thread-55 processed 8500000 records\r\n  1>  344.31 sec --> Thread-54 processed 8600000 records\r\n  1>  347.30 sec --> Thread-55 processed 8600000 records\r\n  1>  348.25 sec --> Thread-54 processed 8700000 records\r\n  1>  351.33 sec --> Thread-55 processed 8700000 records\r\n  1>  352.25 sec --> Thread-54 processed 8800000 records\r\n  1>  355.31 sec --> Thread-55 processed 8800000 records\r\n  1>  356.27 sec --> Thread-54 processed 8900000 records\r\n  1>  359.35 sec --> Thread-55 processed 8900000 records\r\n  1>  360.22 sec --> Thread-54 processed 9000000 records\r\n  1>  363.34 sec --> Thread-55 processed 9000000 records\r\n  1>  364.18 sec --> Thread-54 processed 9100000 records\r\n  1>  367.38 sec --> Thread-55 processed 9100000 records\r\n  1>  368.14 sec --> Thread-54 processed 9200000 records\r\n  1>  371.39 sec --> Thread-55 processed 9200000 records\r\n  1>  372.11 sec --> Thread-54 processed 9300000 records\r\n  1>  375.37 sec --> Thread-55 processed 9300000 records\r\n  1>  376.12 sec --> Thread-54 processed 9400000 records\r\n  1>  379.36 sec --> Thread-55 processed 9400000 records\r\n  1>  380.11 sec --> Thread-54 processed 9500000 records\r\n  1>  383.40 sec --> Thread-55 processed 9500000 records\r\n  1>  384.03 sec --> Thread-54 processed 9600000 records\r\n  1>  387.36 sec --> Thread-55 processed 9600000 records\r\n  1>  388.05 sec --> Thread-54 processed 9700000 records\r\n  1>  391.37 sec --> Thread-55 processed 9700000 records\r\n  1>  392.00 sec --> Thread-54 processed 9800000 records\r\n  1>  395.40 sec --> Thread-55 processed 9800000 records\r\n  1>  395.99 sec --> Thread-54 processed 9900000 records\r\n  1>  399.34 sec --> Thread-55 processed 9900000 records\r\n  1>  399.98 sec --> Thread-54 processed 10000000 records\r\n  1>  403.34 sec --> Thread-55 processed 10000000 records\r\n  1>  403.96 sec --> Thread-54 processed 10100000 records\r\n  1>  407.36 sec --> Thread-55 processed 10100000 records\r\n  1>  407.94 sec --> Thread-54 processed 10200000 records\r\n  1>  411.34 sec --> Thread-55 processed 10200000 records\r\n  1>  411.93 sec --> Thread-54 processed 10300000 records\r\n  1>  415.35 sec --> Thread-55 processed 10300000 records\r\n  1>  415.90 sec --> Thread-54 processed 10400000 records\r\n  1>  419.34 sec --> Thread-55 processed 10400000 records\r\n  1>  419.87 sec --> Thread-54 processed 10500000 records\r\n  1>  423.34 sec --> Thread-55 processed 10500000 records\r\n  1>  423.88 sec --> Thread-54 processed 10600000 records\r\n  1>  427.36 sec --> Thread-55 processed 10600000 records\r\n  1>  427.83 sec --> Thread-54 processed 10700000 records\r\n  1>  431.96 sec --> Thread-54 processed 10800000 records\r\n  1>  432.14 sec --> Thread-55 processed 10700000 records\r\n  1>  435.91 sec --> Thread-54 processed 10900000 records\r\n  1>  436.16 sec --> Thread-55 processed 10800000 records\r\n  1>  439.86 sec --> Thread-54 processed 11000000 records\r\n  1>  440.17 sec --> Thread-55 processed 10900000 records\r\n  1>  443.85 sec --> Thread-54 processed 11100000 records\r\n  1>  444.18 sec --> Thread-55 processed 11000000 records\r\n  1>  447.84 sec --> Thread-54 processed 11200000 records\r\n  1>  448.17 sec --> Thread-55 processed 11100000 records\r\n  1>  451.81 sec --> Thread-54 processed 11300000 records\r\n  1>  452.20 sec --> Thread-55 processed 11200000 records\r\n  1>  455.77 sec --> Thread-54 processed 11400000 records\r\n  1>  456.21 sec --> Thread-55 processed 11300000 records\r\n  1>  459.73 sec --> Thread-54 processed 11500000 records\r\n  1>  460.23 sec --> Thread-55 processed 11400000 records\r\n  1>  463.73 sec --> Thread-54 processed 11600000 records\r\n  1>  464.21 sec --> Thread-55 processed 11500000 records\r\n  1>  467.70 sec --> Thread-54 processed 11700000 records\r\n  1>  468.28 sec --> Thread-55 processed 11600000 records\r\n  1>  471.68 sec --> Thread-54 processed 11800000 records\r\n  1>  472.26 sec --> Thread-55 processed 11700000 records\r\n  1>  475.63 sec --> Thread-54 processed 11900000 records\r\n  1>  476.30 sec --> Thread-55 processed 11800000 records\r\n  1>  479.59 sec --> Thread-54 processed 12000000 records\r\n  1>  480.31 sec --> Thread-55 processed 11900000 records\r\n  1>  483.57 sec --> Thread-54 processed 12100000 records\r\n  1>  484.30 sec --> Thread-55 processed 12000000 records\r\n  1>  487.53 sec --> Thread-54 processed 12200000 records\r\n  1>  488.33 sec --> Thread-55 processed 12100000 records\r\n  1>  491.52 sec --> Thread-54 processed 12300000 records\r\n  1>  492.32 sec --> Thread-55 processed 12200000 records\r\n  1>  495.49 sec --> Thread-54 processed 12400000 records\r\n  1>  496.31 sec --> Thread-55 processed 12300000 records\r\n  1>  499.40 sec --> Thread-54 processed 12500000 records\r\n  1>  500.37 sec --> Thread-55 processed 12400000 records\r\n  1>  503.37 sec --> Thread-54 processed 12600000 records\r\n  1>  504.38 sec --> Thread-55 processed 12500000 records\r\n  1>  507.34 sec --> Thread-54 processed 12700000 records\r\n  1>  508.42 sec --> Thread-55 processed 12600000 records\r\n  1>  511.34 sec --> Thread-54 processed 12800000 records\r\n  1>  512.40 sec --> Thread-55 processed 12700000 records\r\n  1>  515.31 sec --> Thread-54 processed 12900000 records\r\n  1>  516.42 sec --> Thread-55 processed 12800000 records\r\n  1>  519.21 sec --> Thread-54 processed 13000000 records\r\n  1>  520.49 sec --> Thread-55 processed 12900000 records\r\n  1>  523.16 sec --> Thread-54 processed 13100000 records\r\n  1>  524.49 sec --> Thread-55 processed 13000000 records\r\n  1>  527.17 sec --> Thread-54 processed 13200000 records\r\n  1>  528.43 sec --> Thread-55 processed 13100000 records\r\n  1>  531.16 sec --> Thread-54 processed 13300000 records\r\n  1>  532.46 sec --> Thread-55 processed 13200000 records\r\n  1>  535.14 sec --> Thread-54 processed 13400000 records\r\n  1>  536.44 sec --> Thread-55 processed 13300000 records\r\n  1>  539.12 sec --> Thread-54 processed 13500000 records\r\n  1>  540.43 sec --> Thread-55 processed 13400000 records\r\n  1>  543.11 sec --> Thread-54 processed 13600000 records\r\n  1>  544.38 sec --> Thread-55 processed 13500000 records\r\n  1>  547.12 sec --> Thread-54 processed 13700000 records\r\n  1>  548.36 sec --> Thread-55 processed 13600000 records\r\n  1>  551.09 sec --> Thread-54 processed 13800000 records\r\n  1>  552.35 sec --> Thread-55 processed 13700000 records\r\n  1>  555.09 sec --> Thread-54 processed 13900000 records\r\n  1>  556.34 sec --> Thread-55 processed 13800000 records\r\n  1>  559.06 sec --> Thread-54 processed 14000000 records\r\n  1>  560.37 sec --> Thread-55 processed 13900000 records\r\n  1>  563.02 sec --> Thread-54 processed 14100000 records\r\n  1>  564.35 sec --> Thread-55 processed 14000000 records\r\n  1>  566.97 sec --> Thread-54 processed 14200000 records\r\n  1>  568.37 sec --> Thread-55 processed 14100000 records\r\n  1>  570.94 sec --> Thread-54 processed 14300000 records\r\n  1>  572.38 sec --> Thread-55 processed 14200000 records\r\n  1>  574.86 sec --> Thread-54 processed 14400000 records\r\n  1>  576.45 sec --> Thread-55 processed 14300000 records\r\n  1>  578.84 sec --> Thread-54 processed 14500000 records\r\n  1>  580.44 sec --> Thread-55 processed 14400000 records\r\n  1>  582.82 sec --> Thread-54 processed 14600000 records\r\n  1>  584.41 sec --> Thread-55 processed 14500000 records\r\n  1>  586.83 sec --> Thread-54 processed 14700000 records\r\n  1>  588.40 sec --> Thread-55 processed 14600000 records\r\n  1>  590.80 sec --> Thread-54 processed 14800000 records\r\n  1>  592.43 sec --> Thread-55 processed 14700000 records\r\n  1>  594.78 sec --> Thread-54 processed 14900000 records\r\n  1>  596.45 sec --> Thread-55 processed 14800000 records\r\n  2> 01-08-2012 16:27:08 com.carrotsearch.randomizedtesting.ThreadLeakControl$2 evaluate\r\n  2> WARNING: Suite execution timed out: org.apache.lucene.benchmark.byTask.TestPerfTasksLogic\r\n  2> ==== jstack at approximately timeout time ====\r\n  2> \"Thread-55\" ID=114 RUNNABLE\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.CountingSearchTestTask.incrNumSearches(CountingSearchTestTask.java:44)\r\n  2> \t- locked java.lang.Class@1b8d4c9a\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.CountingSearchTestTask.doLogic(CountingSearchTestTask.java:39)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:132)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence$ParallelTask.run(TaskSequence.java:315)\r\n  2> \r\n  2> \"Thread-54\" ID=113 RUNNABLE\r\n  2> \tat java.util.ArrayList.size(ArrayList.java:177)\r\n  2> \tat java.util.AbstractList$Itr.hasNext(AbstractList.java:339)\r\n  2> \tat org.apache.lucene.search.BooleanScorer.<init>(BooleanScorer.java:214)\r\n  2> \tat org.apache.lucene.search.BooleanQuery$BooleanWeight.scorer(BooleanQuery.java:334)\r\n  2> \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:571)\r\n  2> \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:452)\r\n  2> \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:409)\r\n  2> \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:260)\r\n  2> \tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:249)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.ReadTask.doLogic(ReadTask.java:130)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.CountingSearchTestTask.doLogic(CountingSearchTestTask.java:38)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:132)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence$ParallelTask.run(TaskSequence.java:315)\r\n  2> \r\n  2> \"Thread-53\" ID=112 WAITING on org.apache.lucene.benchmark.byTask.tasks.TaskSequence$ParallelTask@2f5a0e96\r\n  2> \tat java.lang.Object.wait(Native Method)\r\n  2> \t- waiting on org.apache.lucene.benchmark.byTask.tasks.TaskSequence$ParallelTask@2f5a0e96\r\n  2> \tat java.lang.Thread.join(Thread.java:1186)\r\n  2> \tat java.lang.Thread.join(Thread.java:1239)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doParallelTasks(TaskSequence.java:361)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence$RunBackgroundTask.run(TaskSequence.java:163)\r\n  2> \r\n  2> \"TEST-TestPerfTasksLogic.testBGSearchTaskThreads-seed#[FA3E8AE1CB44188B]\" ID=53 WAITING on org.apache.lucene.benchmark.byTask.tasks.TaskSequence$RunBackgroundTask@7624a2c8\r\n  2> \tat java.lang.Object.wait(Native Method)\r\n  2> \t- waiting on org.apache.lucene.benchmark.byTask.tasks.TaskSequence$RunBackgroundTask@7624a2c8\r\n  2> \tat java.lang.Thread.join(Thread.java:1186)\r\n  2> \tat java.lang.Thread.join(Thread.java:1239)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:225)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2> \tat org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2> \tat org.apache.lucene.benchmark.byTask.utils.Algorithm.execute(Algorithm.java:302)\r\n  2> \tat org.apache.lucene.benchmark.byTask.Benchmark.execute(Benchmark.java:77)\r\n  2> \t- locked org.apache.lucene.benchmark.byTask.Benchmark@12b43967\r\n  2> \tat org.apache.lucene.benchmark.BenchmarkTestCase.execBenchmark(BenchmarkTestCase.java:83)\r\n  2> \tat org.apache.lucene.benchmark.byTask.TestPerfTasksLogic.testBGSearchTaskThreads(TestPerfTasksLogic.java:158)\r\n  2> \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n  2> \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n  2> \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n  2> \tat java.lang.reflect.Method.invoke(Method.java:597)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1569)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:81)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:739)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:775)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:789)\r\n  2> \tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\r\n  2> \tat org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:32)\r\n  2> \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n  2> \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n  2> \tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n  2> \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n  2> \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n  2> \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n  2> \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:345)\r\n  2> \tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:768)\r\n  2> \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:429)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:748)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:650)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:684)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:695)\r\n  2> \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n  2> \tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:38)\r\n  2> \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n  2> \tat org.apache.lucene.util.TestRuleNoInstanceHooksOverrides$1.evaluate(TestRuleNoInstanceHooksOverrides.java:53)\r\n  2> \tat org.apache.lucene.util.TestRuleNoStaticHooksShadowing$1.evaluate(TestRuleNoStaticHooksShadowing.java:52)\r\n  2> \tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:36)\r\n  2> \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n  2> \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n  2> \tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\r\n  2> \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n  2> \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:345)\r\n  2> \tat java.lang.Thread.run(Thread.java:662)\r\n  2> \r\n  2> \"SUITE-TestPerfTasksLogic-seed#[FA3E8AE1CB44188B]\" ID=52 RUNNABLE\r\n  2> \tat sun.management.ThreadImpl.dumpThreads0(Native Method)\r\n  2> \tat sun.management.ThreadImpl.dumpAllThreads(ThreadImpl.java:433)\r\n  2> \tat com.carrotsearch.randomizedtesting.ThreadLeakControl.formatThreadStacksFull(ThreadLeakControl.java:641)\r\n  2> \tat com.carrotsearch.randomizedtesting.ThreadLeakControl.access$800(ThreadLeakControl.java:60)\r\n  2> \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$2.evaluate(ThreadLeakControl.java:383)\r\n  2> \t- locked java.lang.Object@5f3b3510\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:557)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$200(RandomizedRunner.java:81)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner$1.run(RandomizedRunner.java:491)\r\n  2> \r\n  2> \"Attach Listener\" ID=5 RUNNABLE\r\n  2> \r\n  2> \"Signal Dispatcher\" ID=4 RUNNABLE\r\n  2> \r\n  2> \"Finalizer\" ID=3 WAITING on java.lang.ref.ReferenceQueue$Lock@2818de48\r\n  2> \tat java.lang.Object.wait(Native Method)\r\n  2> \t- waiting on java.lang.ref.ReferenceQueue$Lock@2818de48\r\n  2> \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)\r\n  2> \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)\r\n  2> \tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\r\n  2> \r\n  2> \"Reference Handler\" ID=2 WAITING on java.lang.ref.Reference$Lock@78a95d88\r\n  2> \tat java.lang.Object.wait(Native Method)\r\n  2> \t- waiting on java.lang.ref.Reference$Lock@78a95d88\r\n  2> \tat java.lang.Object.wait(Object.java:485)\r\n  2> \tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)\r\n  2> \r\n  2> \"main\" ID=1 WAITING on com.carrotsearch.randomizedtesting.RandomizedRunner$1@29a220e6\r\n  2> \tat java.lang.Object.wait(Native Method)\r\n  2> \t- waiting on com.carrotsearch.randomizedtesting.RandomizedRunner$1@29a220e6\r\n  2> \tat java.lang.Thread.join(Thread.java:1186)\r\n  2> \tat java.lang.Thread.join(Thread.java:1239)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:501)\r\n  2> \tat com.carrotsearch.randomizedtesting.RandomizedRunner.run(RandomizedRunner.java:398)\r\n  2> \tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:153)\r\n  2> \tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:246)\r\n  2> \tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n  2> \r\n  2> ^^==============================================\r\n  2> \r\n  2> NOTE: reproduce with: ant test  -Dtestcase=TestPerfTasksLogic -Dtests.method=testBGSearchTaskThreads -Dtests.seed=FA3E8AE1CB44188B -Dtests.slow=true -Dtests.locale=da_DK -Dtests.timezone=America/Marigot -Dtests.file.encoding=UTF-8\r\n  1> \r\n  2>\r\n   > (@AfterClass output)\r\n  2> 01-08-2012 16:27:28 com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\r\n  2> SEVERE: 4 threads leaked from SUITE scope at org.apache.lucene.benchmark.byTask.TestPerfTasksLogic: \r\n  2>    1) Thread[id=112, name=Thread-53, state=WAITING, group=TGRP-TestPerfTasksLogic]\r\n  2>         at java.lang.Object.wait(Native Method)\r\n  2>         at java.lang.Thread.join(Thread.java:1186)\r\n  2>         at java.lang.Thread.join(Thread.java:1239)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doParallelTasks(TaskSequence.java:361)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence$RunBackgroundTask.run(TaskSequence.java:163)\r\n  2>    2) Thread[id=114, name=Thread-55, state=RUNNABLE, group=TGRP-TestPerfTasksLogic]\r\n  2>         at java.util.ArrayList.size(ArrayList.java:177)\r\n  2>         at java.util.AbstractList$Itr.hasNext(AbstractList.java:339)\r\n  2>         at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1009)\r\n  2>         at org.apache.lucene.index.TermContext.build(TermContext.java:82)\r\n  2>         at org.apache.lucene.search.TermQuery.createWeight(TermQuery.java:167)\r\n  2>         at org.apache.lucene.search.BooleanQuery$BooleanWeight.<init>(BooleanQuery.java:186)\r\n  2>         at org.apache.lucene.search.BooleanQuery.createWeight(BooleanQuery.java:389)\r\n  2>         at org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:630)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:260)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:249)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.ReadTask.doLogic(ReadTask.java:130)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.CountingSearchTestTask.doLogic(CountingSearchTestTask.java:38)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:132)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence$ParallelTask.run(TaskSequence.java:315)\r\n  2>    3) Thread[id=53, name=TEST-TestPerfTasksLogic.testBGSearchTaskThreads-seed#[FA3E8AE1CB44188B], state=WAITING, group=TGRP-TestPerfTasksLogic]\r\n  2>         at java.lang.Object.wait(Native Method)\r\n  2>         at java.lang.Thread.join(Thread.java:1186)\r\n  2>         at java.lang.Thread.join(Thread.java:1239)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:225)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.utils.Algorithm.execute(Algorithm.java:302)\r\n  2>         at org.apache.lucene.benchmark.byTask.Benchmark.execute(Benchmark.java:77)\r\n  2>         at org.apache.lucene.benchmark.BenchmarkTestCase.execBenchmark(BenchmarkTestCase.java:83)\r\n  2>         at org.apache.lucene.benchmark.byTask.TestPerfTasksLogic.testBGSearchTaskThreads(TestPerfTasksLogic.java:158)\r\n  2>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n  2>         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n  2>         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n  2>         at java.lang.reflect.Method.invoke(Method.java:597)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1569)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:81)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:739)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:775)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:789)\r\n  2>         at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\r\n  2>         at org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:32)\r\n  2>         at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n  2>         at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n  2>         at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n  2>         at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n  2>         at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n  2>         at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n  2>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:345)\r\n  2>         at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:768)\r\n  2>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:429)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:748)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:650)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:684)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:695)\r\n  2>         at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n  2>         at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:38)\r\n  2>         at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n  2>         at org.apache.lucene.util.TestRuleNoInstanceHooksOverrides$1.evaluate(TestRuleNoInstanceHooksOverrides.java:53)\r\n  2>         at org.apache.lucene.util.TestRuleNoStaticHooksShadowing$1.evaluate(TestRuleNoStaticHooksShadowing.java:52)\r\n  2>         at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:36)\r\n  2>         at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n  2>         at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n  2>         at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\r\n  2>         at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n  2>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:345)\r\n  2>         at java.lang.Thread.run(Thread.java:662)\r\n  2>    4) Thread[id=113, name=Thread-54, state=RUNNABLE, group=TGRP-TestPerfTasksLogic]\r\n  2>         at org.apache.lucene.store.DataInput.readVInt(DataInput.java:101)\r\n  2>         at org.apache.lucene.codecs.pulsing.PulsingPostingsReader.readTermsBlock(PulsingPostingsReader.java:127)\r\n  2>         at org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame.loadBlock(BlockTreeTermsReader.java:2337)\r\n  2>         at org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum.seekExact(BlockTreeTermsReader.java:1629)\r\n  2>         at org.apache.lucene.index.TermContext.build(TermContext.java:89)\r\n  2>         at org.apache.lucene.search.TermQuery.createWeight(TermQuery.java:167)\r\n  2>         at org.apache.lucene.search.BooleanQuery$BooleanWeight.<init>(BooleanQuery.java:186)\r\n  2>         at org.apache.lucene.search.BooleanQuery.createWeight(BooleanQuery.java:389)\r\n  2>         at org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:630)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:260)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:249)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.ReadTask.doLogic(ReadTask.java:130)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.CountingSearchTestTask.doLogic(CountingSearchTestTask.java:38)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:132)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence$ParallelTask.run(TaskSequence.java:315)\r\n  2> 01-08-2012 16:27:28 com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\r\n  2> INFO: Starting to interrupt leaked threads:\r\n  2>    1) Thread[id=112, name=Thread-53, state=WAITING, group=TGRP-TestPerfTasksLogic]\r\n  2>    2) Thread[id=114, name=Thread-55, state=RUNNABLE, group=TGRP-TestPerfTasksLogic]\r\n  2>    3) Thread[id=53, name=TEST-TestPerfTasksLogic.testBGSearchTaskThreads-seed#[FA3E8AE1CB44188B], state=WAITING, group=TGRP-TestPerfTasksLogic]\r\n  2>    4) Thread[id=113, name=Thread-54, state=RUNNABLE, group=TGRP-TestPerfTasksLogic]\r\n  2> 01-08-2012 16:27:32 com.carrotsearch.randomizedtesting.ThreadLeakControl tryToInterruptAll\r\n  2> SEVERE: There are still zombie threads that couldn't be terminated:\r\n  2>    1) Thread[id=114, name=Thread-55, state=RUNNABLE, group=TGRP-TestPerfTasksLogic]\r\n  2>         at org.apache.lucene.search.PhraseQuery$PhraseWeight.scorer(PhraseQuery.java:249)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:571)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:452)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:409)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:260)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:249)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.ReadTask.doLogic(ReadTask.java:130)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.CountingSearchTestTask.doLogic(CountingSearchTestTask.java:38)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:132)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence$ParallelTask.run(TaskSequence.java:315)\r\n  2>    2) Thread[id=53, name=TEST-TestPerfTasksLogic.testHighlightingTV-seed#[FA3E8AE1CB44188B], state=RUNNABLE, group=TGRP-TestPerfTasksLogic]\r\n  2>         at sun.misc.Launcher$ExtClassLoader.findClass(Launcher.java:228)\r\n  2>         at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\r\n  2>         at java.lang.ClassLoader.loadClass(ClassLoader.java:295)\r\n  2>         at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)\r\n  2>         at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\r\n  2>         at org.apache.lucene.search.highlight.WeightedSpanTermExtractor.getLeafContextForField(WeightedSpanTermExtractor.java:343)\r\n  2>         at org.apache.lucene.search.highlight.WeightedSpanTermExtractor.extractWeightedSpanTerms(WeightedSpanTermExtractor.java:264)\r\n  2>         at org.apache.lucene.search.highlight.WeightedSpanTermExtractor.extract(WeightedSpanTermExtractor.java:137)\r\n  2>         at org.apache.lucene.search.highlight.WeightedSpanTermExtractor.getWeightedSpanTerms(WeightedSpanTermExtractor.java:397)\r\n  2>         at org.apache.lucene.search.highlight.QueryScorer.initExtractor(QueryScorer.java:215)\r\n  2>         at org.apache.lucene.search.highlight.QueryScorer.init(QueryScorer.java:184)\r\n  2>         at org.apache.lucene.search.highlight.Highlighter.getBestTextFragments(Highlighter.java:205)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.CountingHighlighterTestTask$1.doHighlight(CountingHighlighterTestTask.java:62)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.ReadTask.doLogic(ReadTask.java:172)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.utils.Algorithm.execute(Algorithm.java:302)\r\n  2>         at org.apache.lucene.benchmark.byTask.Benchmark.execute(Benchmark.java:77)\r\n  2>         at org.apache.lucene.benchmark.BenchmarkTestCase.execBenchmark(BenchmarkTestCase.java:83)\r\n  2>         at org.apache.lucene.benchmark.byTask.TestPerfTasksLogic.testHighlightingTV(TestPerfTasksLogic.java:222)\r\n  2>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n  2>         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n  2>         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n  2>         at java.lang.reflect.Method.invoke(Method.java:597)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1569)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:81)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:739)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:775)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:789)\r\n  2>         at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\r\n  2>         at org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:32)\r\n  2>         at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n  2>         at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n  2>         at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n  2>         at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n  2>         at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n  2>         at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n  2>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:345)\r\n  2>         at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:768)\r\n  2>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:429)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:748)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:650)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:684)\r\n  2>         at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:695)\r\n  2>         at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n  2>         at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:38)\r\n  2>         at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n  2>         at org.apache.lucene.util.TestRuleNoInstanceHooksOverrides$1.evaluate(TestRuleNoInstanceHooksOverrides.java:53)\r\n  2>         at org.apache.lucene.util.TestRuleNoStaticHooksShadowing$1.evaluate(TestRuleNoStaticHooksShadowing.java:52)\r\n  2>         at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:36)\r\n  2>         at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n  2>         at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n  2>         at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\r\n  2>         at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n  2>         at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:345)\r\n  2>         at java.lang.Thread.run(Thread.java:662)\r\n  2>    3) Thread[id=113, name=Thread-54, state=RUNNABLE, group=TGRP-TestPerfTasksLogic]\r\n  2>         at org.apache.lucene.util.fst.FST.findTargetArc(FST.java:1024)\r\n  2>         at org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum.seekExact(BlockTreeTermsReader.java:1605)\r\n  2>         at org.apache.lucene.index.TermContext.build(TermContext.java:89)\r\n  2>         at org.apache.lucene.search.PhraseQuery$PhraseWeight.<init>(PhraseQuery.java:221)\r\n  2>         at org.apache.lucene.search.PhraseQuery.createWeight(PhraseQuery.java:326)\r\n  2>         at org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:630)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:260)\r\n  2>         at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:249)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.ReadTask.doLogic(ReadTask.java:130)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.CountingSearchTestTask.doLogic(CountingSearchTestTask.java:38)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:132)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:198)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:139)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:143)\r\n  2>         at org.apache.lucene.benchmark.byTask.tasks.TaskSequence$ParallelTask.run(TaskSequence.java:315)\r\n  1>  598.92 sec --> Thread-54 processed 15000000 records\r\n  1>  600.72 sec --> Thread-55 processed 14900000 records\r\n  1>  602.96 sec --> Thread-54 processed 15100000 records\r\n  1>  604.75 sec --> Thread-55 processed 15000000 records\r\n  1>  606.98 sec --> Thread-54 processed 15200000 records\r\n  1>  608.76 sec --> Thread-55 processed 15100000 records\r\n  1>  610.97 sec --> Thread-54 processed 15300000 records\r\n  1>  612.80 sec --> Thread-55 processed 15200000 records\r\n  1>  614.98 sec --> Thread-54 processed 15400000 records\r\n  1>  616.81 sec --> Thread-55 processed 15300000 records\r\n  1> ------------> starting task: Seq\r\n  1> ------------> starting task: Seq\r\n  1>    0.48 sec --> TEST-TestPerfTasksLogic.testHighlightingTV-seed#[FA3E8AE1CB44188B] added      1000 docs\r\n  2> NOTE: test params are: codec=Lucene40: {docid=MockVariableIntBlock(baseBlockSize=56), body=Pulsing40(freqCutoff=14 minBlockSize=85 maxBlockSize=223), docdatenum=PostingsFormat(name=MockRandom), docdate=Pulsing40(freqCutoff=14 minBlockSize=85 maxBlockSize=223), doctitle=PostingsFormat(name=MockRandom), doctimesecnum=Pulsing40(freqCutoff=14 minBlockSize=85 maxBlockSize=223), docname=MockVariableIntBlock(baseBlockSize=56)}, sim=DefaultSimilarity, locale=da_DK, timezone=America/Marigot\r\n  2> NOTE: Windows 7 6.1 amd64/Sun Microsystems Inc. 1.6.0_33 (64-bit)/cpus=2,threads=4,free=65742744,total=222363648\r\n  2> NOTE: All tests run in this JVM: [LineDocSourceTest, DocMakerTest, TrecContentSourceTest, TestHtmlParser, AltPackageTaskTest, StreamUtilsTest, TestPerfTasksLogic]\r\n  2> NOTE: reproduce with: ant test  -Dtestcase=TestPerfTasksLogic -Dtests.seed=FA3E8AE1CB44188B -Dtests.slow=true -Dtests.locale=da_DK -Dtests.timezone=America/Marigot -Dtests.file.encoding=UTF-8\r\n  1> \r\n  2> \r\nERROR   0.00s | TestPerfTasksLogic (suite)\r\n   > Throwable #1: java.lang.Exception: Suite timeout exceeded (>= 600000 msec).\r\n   > \tat __randomizedtesting.SeedInfo.seed([FA3E8AE1CB44188B]:0)\r\n   >\r\nCompleted in 623.94s, 4 tests, 2 errors <<< FAILURES!\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-01T20:46:33.897+0000","updated":"2012-08-01T20:46:33.897+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13426880","id":"13426880","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Mike is the patch from LUCENE-2225 still applicable to this problem?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-01T20:47:20.064+0000","updated":"2012-08-01T20:47:20.064+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13426908","id":"13426908","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. Mike is the patch from LUCENE-2225 still applicable to this problem?\r\n\r\nSorry, no: it was already committed ... this must be something different.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-08-01T21:21:23.311+0000","updated":"2012-08-01T21:21:23.311+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13426911","id":"13426911","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"This looks like a stopNow flag is never read or seen by bgTasks because the test hangs here:\r\n{code}\r\n      for(RunBackgroundTask bgTask : bgTasks) {\r\n        bgTask.stopNow();\r\n      }\r\n      for(RunBackgroundTask bgTask : bgTasks) {\r\n        bgTask.join();           <----- here\r\n        count += bgTask.getCount();\r\n      }\r\n{code}\r\nI don't know why it's the case but it doesn't surprise me that it doesn't reproduce because looking at the code a lot of things seem to be wall time dependent, as in TaskSequence:\r\n{code}\r\nfinal int slot = (int) ((System.currentTimeMillis()-t0)/logByTimeMsec);\r\n{code}\r\nand, what's probably worse, there are thread priority manipulations which may lead to starvations?\r\n{code}\r\nbgTask.setPriority(task.getBackgroundDeltaPriority() + Thread.currentThread().getPriority());\r\n{code}\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-01T21:23:55.435+0000","updated":"2012-08-01T21:23:55.435+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13426919","id":"13426919","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Just shooting blindly here. It is very weird.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-01T21:30:50.413+0000","updated":"2012-08-01T21:30:50.413+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13427019","id":"13427019","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"OK I think I found a thread race; attached patch should fix it.\r\nBasically if the BG task is very slow to start, it's possible that the\r\nmain thread would call stopNow() before the BG threads have launched.\r\nAfter that they launch and just run forever...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-08-01T23:57:37.770+0000","updated":"2012-08-01T23:57:37.770+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13427137","id":"13427137","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"This looks good to me and I'd apply it -- since we cannot reproduce this reliably it's better than nothing. \r\n\r\nAs a side note, wouldn't it be easier to propagate a single flag object instead of method calls? I mean propagate a single AtomicBoolean down to all children tasks (passed in constructors or at initialization time). Then it wouldn't matter when or where you set the flag -- all the objects would see a single state.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-08-02T06:25:11.395+0000","updated":"2012-08-02T06:25:11.395+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13427479","id":"13427479","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. As a side note, wouldn't it be easier to propagate a single flag object instead of method calls? I\r\n\r\nI completely agree AtomicBoolean is the right solution here ... but I don't have time now to fix it.  I'll commit the patch ...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-08-02T17:43:29.167+0000","updated":"2012-08-02T17:43:29.167+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596250/comment/13654055","id":"13654055","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Closed after release.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-05-10T10:33:52.516+0000","updated":"2013-05-10T10:33:52.516+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4177/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04fwn:"}}