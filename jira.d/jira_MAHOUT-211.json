{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12442157","self":"https://issues.apache.org/jira/rest/api/latest/issue/12442157","key":"MAHOUT-211","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310751","id":"12310751","key":"MAHOUT","name":"Mahout","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310751&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310751&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310751&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310751&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13060","id":"13060","description":"Apache Mahout","name":"Mahout"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314281","id":"12314281","description":"","name":"0.3","archived":false,"released":true,"releaseDate":"2010-03-17"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2009-12-02 00:15:12.081","customfield_12312323":null,"customfield_12310420":"9854","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4369680623_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-01-21T13:16:43.078+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAHOUT-211/watchers","watchCount":0,"isWatching":false},"created":"2009-12-01T23:28:42.455+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312976","id":"12312976","description":"First Minor Release","name":"0.1","archived":false,"released":true,"releaseDate":"2009-04-07"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jake.mannix","name":"jake.mannix","emailAddress":"jake dot mannix at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jake Mannix","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-05-21T03:24:20.149+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312270","id":"12312270","name":"Math","description":"Math / Matrix / Vector stuff"}],"timeoriginalestimate":null,"description":"As mentioned in the summary, DenseMatrix.getRow() returns a new DenseVector(values[row]) instead of just a shallow reference.  This is a) wasteful, and b) inconsistent with what SparseRowMatrix / SparseColumnMatrix do, which means that users who think they can mutate rows by calling getRow() are wrong for DenseMatrix, or conversely think they can modify the row at will are wrong for SparseRowMatrix.  \r\n\r\nEither way, we need to be consistent.  I would suggest the contract be that you get a shallow view reference (meaning, it may be an actual reference to a real Vector, or it may be a virtual Vector, dynamically constructed, which is still backed by entries in the matrix), so that calling Matrix.getRow(row).set(col, value) has the same affect as Matrix.set(row, col, value).  If we don't do it this way, we should at least provide an api to get a shallow reference to rows.\r\n\r\nThoughts?","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"23208","summary":"DenseMatrix.getRow() and getColumn() return deep copies of the data","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jake.mannix","name":"jake.mannix","emailAddress":"jake dot mannix at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jake Mannix","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jake.mannix","name":"jake.mannix","emailAddress":"jake dot mannix at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jake Mannix","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"all","customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":3,"total":3,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12442157/comment/12784557","id":"12784557","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"body":"\r\nThe Colt approach is definitely to go full-bore on the shallow reference semantics.  In fact, things like sub-matrix and transpose primarily return views which allows all kinds of interesting compositional coding practices.  As a trivial example, there is no primitive in Colt for setting the diagonal of a matrix to zero.  There is a primitive for getting a view of the diagonal as a vector and there is a primitive for setting all elements of a vector to zero.  These can easily be composed to get the desired result.\r\n\r\nIn some areas, this style is extremely effective, but it can also be very confusing (there is Matrix.plus, for instance).  I have found that some users need a more traditional API for getting started, but that is easily done.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"created":"2009-12-02T00:15:12.081+0000","updated":"2009-12-02T00:15:12.081+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12442157/comment/12784599","id":"12784599","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jake.mannix","name":"jake.mannix","emailAddress":"jake dot mannix at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jake Mannix","active":true},"body":"I guess some thought should also be put into how much should be done to our current implementations, and how much should be done on MAHOUT-204 in the way of replacing our implementations with colt impls.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jake.mannix","name":"jake.mannix","emailAddress":"jake dot mannix at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jake Mannix","active":true},"created":"2009-12-02T02:55:24.513+0000","updated":"2009-12-02T02:55:24.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12442157/comment/12803280","id":"12803280","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jake.mannix","name":"jake.mannix","emailAddress":"jake dot mannix at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jake Mannix","active":true},"body":"committed an initial pass of this in r901692","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jake.mannix","name":"jake.mannix","emailAddress":"jake dot mannix at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jake Mannix","active":true},"created":"2010-01-21T13:16:42.960+0000","updated":"2010-01-21T13:16:42.960+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAHOUT-211/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04bzr:"}}