{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12382830","self":"https://issues.apache.org/jira/rest/api/latest/issue/12382830","key":"DERBY-3216","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-11-25 16:02:25.098","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23498","customfield_12310222":"1_*:*_1_*:*_582979443_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-11-26T17:26:22.126+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3216/watchers","watchCount":1,"isWatching":false},"created":"2007-11-19T23:30:02.683+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:51:03.815+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11412","id":"11412","name":"Store"}],"timeoriginalestimate":null,"description":"If you can't get a table level lock for btree space recovery in \nthe post commit thread, maybe you should at least reclaim the \nrows on the page while you are at it.  Use the same algorithm \nas exists in BTreeController.java.  row level shrink is a different\nissue and won't be resolved by this.\n\nNote there have been reports of \"memory\" leaks associated with this issue.  This is because\ncurrently if the work can not be done then we just queue it and move on.  But in a stress situation\none may never get the required table lock to shrink the tree and thus the queue just keeps growing.\nNote in many of these cases the app doesn't care if the page merge happens as it is just going to\ninsert more rows after the merge.  \n\nAlso there is no need for a table level lock for a 1 page index as no merge is actually necessary.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37371","summary":"do row level lock space reclamation in btree of indiv rows.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":4,"total":4,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12382830/comment/12545275","id":"12545275","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I noticed in the commit log that a fix had been committed (r597865).\r\n\r\nI'm wondering, is the return in this finally clause in purgeRowLevelCommittedDeletes() intentional? It will hide any exception thrown in the try block and make the method return successfully, so it would be good to add a comment explaining why it's there.\r\n\r\n+        finally\r\n+        {\r\n+            if (controlRow != null)\r\n+                controlRow.release();\r\n+\r\n+            return;\r\n+        }","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-11-25T16:02:25.098+0000","updated":"2007-11-25T16:02:25.098+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12382830/comment/12545277","id":"12545277","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"i will look at moving the return.  I was basing the code on code in btreecontroller which also has a return in the finally, didn't really think about it.  I'll make the change and run tests and commit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2007-11-25T16:29:37.997+0000","updated":"2007-11-25T16:29:37.997+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12382830/comment/12545278","id":"12545278","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"In the same method, I see this piece of code:\r\n+            if ((controlRow = ControlRow.get(open_btree, page_number)) == null)\r\n+                return;\r\n\r\nAs far as I can see, it is impossible that ControlRow.get() returns null, so by returning successfully when controlRow is null, we might be hiding future bugs. Wouldn't it be better to skip the null checking and just let the method fail with an NPE when controlRow is dereferenced?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-11-25T16:30:33.888+0000","updated":"2007-11-25T16:30:33.888+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12382830/comment/12563083","id":"12563083","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=northshorefiend","name":"northshorefiend","emailAddress":"spam123 at JamesAshepherd dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"James Alan Shepherd","active":true},"body":"Possibly I have a resulting NPE in Derby 10.3.2.1  (10.3.1.4 does not show this behaviour)\r\n\r\nFATAL 38406 [Main] (Start.java:153) - Start FAILED\r\norg.springframework.transaction.TransactionSystemException: Could not commit JDBC transaction; nested exception is java.sql.SQLException: Java exception: ': java.lang.NullPointerException'.\r\nCaused by: \r\njava.sql.SQLException: Java exception: ': java.lang.NullPointerException'.\r\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)\r\n        at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:238)\r\n        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:199)\r\n        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:245)\r\n        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:651)\r\n        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:621)\r\n        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:146)\r\n        at com.aaa.bbb.cccFactory$ddd.add(cccFactory.java:324)\r\n        at com.aaa.eee.fff.ggg.reload(ggg.java:44)\r\n        at com.aaa.eee.fff.ggg.startup(ggg.java:57)\r\n        at com.aaa.eee.fff.Start.startupEee(Start.java:170)\r\n        at com.aaa.eee.fff.Start.startup(Start.java:146)\r\n        at com.aaa.start.Starter.startup(Starter.java:264)\r\n        at com.aaa.start.Main.startup(Main.java:270)\r\n        at com.aaa.start.Main.main(Main.java:199)\r\nCaused by: java.sql.SQLException: Java exception: ': java.lang.NullPointerException'.\r\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\r\n        ... 21 more\r\nCaused by: java.lang.NullPointerException\r\n        at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(Unknown Source)\r\n        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)\r\n        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)\r\n        at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(Unknown Source)\r\n        at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.xact.Xact.postTermination(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.xact.Xact.completeCommit(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)\r\n        at org.apache.derby.impl.store.access.RAMTransaction.commit(Unknown Source)\r\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(Unknown Source)\r\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userCommit(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.commit(Unknown Source)\r\n        ... 15 more\r\n\r\nand derby.log:\r\n\r\n2008-01-28 08:26:36.148 GMT Thread[Main,5,main] (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Executing prepared statement: SELECT COUNT(*) FROM ZZZ WHERE nID IS NULL :End prepared statement\r\n2008-01-28 08:26:36.150 GMT Thread[Main,5,main] (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Committing\r\n2008-01-28 08:26:36.188 GMT Thread[Main,5,main] (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Cleanup action starting\r\n2008-01-28 08:26:36.188 GMT Thread[Main,5,main] (XID = 1888), (SESSIONID = 2), (DATABASE = directory:myDB), (DRDAID = null), Failed Statement is: null with 2 parameters begin parameter #1: 1 :end parameter begin parameter #2: 1 :end param\r\neter \r\njava.lang.NullPointerException\r\n        at org.apache.derby.impl.store.access.btree.ControlRow.getControlRowForPage(Unknown Source)\r\n        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)\r\n        at org.apache.derby.impl.store.access.btree.ControlRow.get(Unknown Source)\r\n        at org.apache.derby.impl.store.access.btree.BTreePostCommit.purgeRowLevelCommittedDeletes(Unknown Source)\r\n        at org.apache.derby.impl.store.access.btree.BTreePostCommit.performWork(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.xact.Xact.postTermination(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.xact.Xact.completeCommit(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)\r\n        at org.apache.derby.impl.store.raw.xact.Xact.commit(Unknown Source)\r\n        at org.apache.derby.impl.store.access.RAMTransaction.commit(Unknown Source)\r\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCommit(Unknown Source)\r\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userCommit(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.commit(Unknown Source)\r\n        at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)\r\n        at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:238)\r\n        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:199)\r\n        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:245)\r\n        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:651)\r\n        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:621)\r\n        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:146)\r\n        at com.aaa.bbb.cccFactory$ddd.add(cccFactory.java:324)\r\n        at com.aaa.eee.fff.ggg.reload(ggg.java:44)\r\n        at com.aaa.eee.fff.ggg.startup(ggg.java:57)\r\n        at com.aaa.eee.fff.Start.startupEee(Start.java:170)\r\n        at com.aaa.eee.fff.Start.startup(Start.java:146)\r\n        at com.aaa.start.Starter.startup(Starter.java:264)\r\n        at com.aaa.start.Main.startup(Main.java:270)\r\n        at com.aaa.start.Main.main(Main.java:199)\r\nCleanup action completed\r\n\r\n\r\nThis is a long transaction that has suddenly started throwing a NPE.\r\nNothing strange happens during the transaction, but on closing I get\r\nthe NPE.\r\n\r\n\tIf I reorder some of the statements in the transaction (keeping\r\nfunctional equivalence) the NPE is sometimes not thrown.\r\n\r\n\r\n(Thanks to Bryan Pendleton on derby-user for pointing me in the direction of DERBY-3216)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=northshorefiend","name":"northshorefiend","emailAddress":"spam123 at JamesAshepherd dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"James Alan Shepherd","active":true},"created":"2008-01-28T08:57:52.905+0000","updated":"2008-01-28T08:57:52.905+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3216/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06rdz:"}}