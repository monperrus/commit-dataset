{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12596203","self":"https://issues.apache.org/jira/rest/api/latest/issue/12596203","key":"LUCENE-4173","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12322550","id":"12322550","description":"First major release of the 4.x series","name":"4.0","archived":false,"released":true,"releaseDate":"2012-10-12"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-07-12 14:20:33.164","customfield_12312323":null,"customfield_12310420":"243792","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_6615138701_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-09-12T16:36:55.501+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4173/watchers","watchCount":4,"isWatching":false},"created":"2012-06-28T03:04:36.812+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-10T10:33:52.899+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312623","id":"12312623","name":"modules/spatial","description":"issues related to Spatial module"}],"timeoriginalestimate":null,"description":"Silently not indexing anything for a Shape is not okay.  Users should get an Exception and then they can decide how to proceed.","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"23846","summary":"Remove IgnoreIncompatibleGeometry for SpatialStrategys","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":22,"total":22,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13402803","id":"13402803","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Simple patch removing the option and improving how non-Point shapes are handled in TwoDoubles.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-06-28T03:08:58.362+0000","updated":"2012-06-28T03:08:58.362+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13412825","id":"13412825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"+0.  I am guessing that Ryan added this concept so that it would be easier to demonstrate easily index a variety of shapes in a variety of different ways, ignoring cases where some strategy doesn't handle some particular shape.  But I think this \"feature\" if you could call it that, has dubious value otherwise.  Clearly it does and should default to false so it won't harm anyone if they leave this alone.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-12T14:20:33.164+0000","updated":"2012-07-12T14:20:33.164+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13412997","id":"13412997","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryantxu","name":"ryantxu","emailAddress":"ryantxu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ryan McKinley","active":true},"body":"I'm fine removing it from the lucene strategies -- the motivation for this feature was to copy the same shape to multiple strategies and compare the behavior.\r\n\r\nthis can be implemented at the solr level though...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryantxu","name":"ryantxu","emailAddress":"ryantxu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ryan McKinley","active":true},"created":"2012-07-12T17:46:55.175+0000","updated":"2012-07-12T17:46:55.175+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13413711","id":"13413711","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"Instead of this boolean flag on the strategy to ignore the shape, I propose the Strategy more clearly declares which shapes it can index.  Perhaps:\r\n{code}\r\nboolean canIndex(Shape);\r\n{code}\r\nor\r\n{code}\r\nClass<Shape>[] getIndexableShapes()\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-13T13:18:03.747+0000","updated":"2012-07-13T13:18:03.747+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13413733","id":"13413733","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"I do quite like this idea.  \r\n\r\nCouple of thoughts:\r\n- What would a user do with this information? If canIndex() returns false, so what? I can't see a situation where an API consumer would then cycle through alternative Strategys.  Is the idea to push the decision about whether to ignore or to throw an Exception, to the consumer? I kind of like that.  Except we're still going to have to either ignore or throw an Exception in createIndexFields() if the Strategy is given a bad Shape and I still believe ignoring is the bad choice.\r\n- Why limit this to indexing? Surely the same applies to filtering too.  I don't really like the idea of a CONTAINS op when given a Point so I'm presented with the same issue, either ignore the Shape or throw an Exception.\r\n- Why allow Strategys to ignore Shapes at all? The Shape interface provides two fallback options when indexing or filtering.  You can either use the Shape's bounding box or its centre point.  No they might not be ideal, but if a Strategy can only support Rectangles or Points, then it can still index a Shape.  We can then document that Strategys *must* index or filter any Shape, but can degrade if necessary.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-07-13T13:41:46.562+0000","updated":"2012-07-13T13:41:46.562+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13414573","id":"13414573","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"bq.  Is the idea to push the decision about whether to ignore or to throw an Exception, to the consumer? I kind of like that.\r\n\r\nYeah, that's the inspiration.  So if you wanted to demo shapes being indexed in different ways with different strategies, you could implement ignoreIncompatibleGeometry at the consumer level (e.g. Solr adapter) and not have to catch an exception to find out, which would make me cringe.\r\n\r\nbq. Why limit this to indexing?\r\nRight, of course -- it should apply to a query shape too.  And thinking along these lines, perhaps this is also a way to advertise what SpatialOperation's are supported?:\r\n{code}\r\nSpatialOperation[] getSupportedSpatialOperations()\r\n{code}\r\n\r\nJust an idea.\r\n\r\nHaving said all this, and even suggested these methods for consideration, I don't think these informational meta methods are particularly useful because about the only real use-case I can think of is the strategy demo, which is so-so of a use-case, IMO, and consumer-level alternatives could be added.  I think Javadoc on the Strategy is fine and should be required *anyway* -- I shouldn't have to write code or find the source to determine what operations are supported.  To that end, I will add some documentation to these Strategies soon.\r\n\r\nbq. Why allow Strategys to ignore Shapes at all?\r\nI don't like it either.  And I really don't like it \"automatically degrading\" (e.g. convert circle to its bbox).  -- just hand in the the bbox then, or make the degrading configurable at the least so the user is very clear what's happening.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-15T04:03:34.329+0000","updated":"2012-07-15T04:03:34.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13414576","id":"13414576","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"{quote}\r\nHaving said all this, and even suggested these methods for consideration, I don't think these informational meta methods are particularly useful because about the only real use-case I can think of is the strategy demo, which is so-so of a use-case, IMO, and consumer-level alternatives could be added. I think Javadoc on the Strategy is fine and should be required anyway – I shouldn't have to write code or find the source to determine what operations are supported. To that end, I will add some documentation to these Strategies soon.\r\n{quote}\r\n\r\nI agree. Documentation is really the only way we can convey all subtle differences in the Strategys.  In addition the the class level javadoc, perhaps we can expand the package.html with some tables of Strategys vs. supported shapes and vs. supported operations.  As long as we keep that up to date, it'll be a nice reference.\r\n\r\nThis still poses the question of what to do in a Strategy when given a Shape that is unsupported.  Are you okay with the approach in the patch of just throwing the Exception?\r\n\r\n{quote}\r\nI don't like it either. And I really don't like it \"automatically degrading\" (e.g. convert circle to its bbox). – just hand in the the bbox then, or make the degrading configurable at the least so the user is very clear what's happening.\r\n{quote}\r\n\r\nYeah that is very reasonable.  I think we need to encourage in documentation that Strategys are much like analysis components, you need to consider which you choose carefully, you need to understand what they do and you will need to experiment.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-07-15T04:48:30.051+0000","updated":"2012-07-15T04:48:30.051+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13414847","id":"13414847","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"bq. In addition the the class level javadoc, perhaps we can expand the package.html with some tables of Strategys vs. supported shapes and vs. supported operations. As long as we keep that up to date, it'll be a nice reference.\r\n\r\n+1  A comparison table in package.html is an awesome idea.\r\n\r\nbq. This still poses the question of what to do in a Strategy when given a Shape that is unsupported. Are you okay with the approach in the patch of just throwing the Exception?\r\n\r\nI am.  +1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-16T04:56:24.267+0000","updated":"2012-07-16T04:56:24.267+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13414853","id":"13414853","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"Perhaps it would be useful to have an UnsupportedShapeException, extending from UnsupportedOperationException?  We similarly have UnsupportedOperationException.  This might be thrown from createIndexableFields() as well as one of the makeXXX query-time methods. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-16T05:22:48.663+0000","updated":"2012-07-16T05:22:48.663+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13414854","id":"13414854","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"+1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-07-16T05:24:28.807+0000","updated":"2012-07-16T05:24:28.807+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13422633","id":"13422633","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"So we're definitely agreed ignoreIncompatibleGeometry should go away; great.  But you know what would be good instead, I think?  *coalesceIncompatibleGeometry*.  If a strategy can only index points it will get the center point of the given shape.  If the strategy can only index bounding boxes then it will index the bounding box of the given shape.  Query time is similar.  This could go for both index & query.  Some of the strategies are doing this already.  Assuming we like the coalesceIncompatibleGeometry concept, is it true by default?  I lean towards yes but I could go either way.  And maybe SpatialArgs has the boolean independently so the client can indicate a different policy for query time?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-25T21:32:53.370+0000","updated":"2012-07-25T21:32:53.370+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13422878","id":"13422878","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"I thought you were anti-degradation at indexing and querying? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-07-26T03:56:34.401+0000","updated":"2012-07-26T03:56:34.401+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13423058","id":"13423058","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"Yeah I guess, I don't care that much about what the default is in this case.  But do you like the idea?  Some strategies are doing this already but without the proposed option to control it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-26T13:37:37.144+0000","updated":"2012-07-26T13:37:37.144+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13423073","id":"13423073","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"I do like it yeah.  I think it improves 'simple' Strategies like TwoDoubles.  I'm not sure we need to define it per query and actually I don't think it needs to be on the Strategy interface.  Instead I think we should have it in the constructors of the appropriate Strategys.  That way the consumer is forced to decide how they want to proceed at instantiation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-07-26T13:52:16.931+0000","updated":"2012-07-26T13:52:16.931+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13423081","id":"13423081","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"Okay, I'll press forward with a patch.\r\n\r\nI hope all these constructor arguments don't get out of control.  The down-side to the constructor arguments is that it affects each subclass.  And the constructor argument is just a \"true\" or \"false\" as a parameter, as opposed to the abundantly clear: strategy.setCoalesceIncompatibleGeometry(true).  I know I concurred that the constructor choice makes it clear it's mandatory, but there are down sides.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-26T13:58:21.737+0000","updated":"2012-07-26T13:58:21.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13423083","id":"13423083","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Why dont we use an enum instead of a boolean? InvalidShape.COALESCE and InvalidShape.FAIL.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2012-07-26T14:00:24.586+0000","updated":"2012-07-26T14:00:24.586+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13423140","id":"13423140","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"I was thinking this, yeah... and even though I wouldn't use it and would not support it being a default, InvalidShape.IGNORE -- haha full circle on the issue but I think the enum solves it.  Well maybe not completely because it makes no sense to ignore a query shape, so what would it mean to set this to IGNORE and the query shape is incompatible?  So maybe no IGNORE?  So default FAIL is your preference?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-07-26T15:18:55.844+0000","updated":"2012-07-26T15:34:34.837+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13453312","id":"13453312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"This patch removes ignoreIncompatibleGeometry and modified the strategies to fail when given a shape that isn't the precise shape used -- no coalescing.  BBox & TwoDoubles were both doing coalescing (e.g. shape.getBoundingBox()).  PrefixTree can handle anything so no change there.\r\n\r\nI'll commit this pending your +1 [~cmale].\r\n\r\nAn enum for FAIL, COALESCE, & IGNORE can be done in another issue if desired.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-09-11T19:14:27.067+0000","updated":"2012-09-11T21:38:04.110+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13454046","id":"13454046","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"Updated the patch:\r\n* renamed the test method with the underscore to be \"convertShapeFromGetDocuments\" instead\r\n* In BBoxStrategy.makeValueSource, I moved my \"TODO\" bbox shape similarity idea to a comment on a JIRA issue.  And I modified this makeValueSource to fail if a rectangle is not given, instead of coalescing via getBoundingBox().","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-09-12T14:53:06.250+0000","updated":"2012-09-12T14:53:06.250+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13454105","id":"13454105","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"I received Chris's blessing on these changes in chat and I committed now.\r\n\r\nTrunk: r1384026, 4x: r1384028\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2012-09-12T16:36:55.511+0000","updated":"2012-09-12T16:36:55.511+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13610867","id":"13610867","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=commit-tag-bot","name":"commit-tag-bot","emailAddress":"root-jira-commit_tag_bot at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=commit-tag-bot&avatarId=16176","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=commit-tag-bot&avatarId=16176","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=commit-tag-bot&avatarId=16176","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=commit-tag-bot&avatarId=16176"},"displayName":"Commit Tag Bot","active":true},"body":"[branch_4x commit] David Wayne Smiley\r\nhttp://svn.apache.org/viewvc?view=revision&revision=1384028\r\n\r\nLUCENE-4173 remove ignoreIncompatibleGeometry, fail unless given the exact shape needed\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=commit-tag-bot","name":"commit-tag-bot","emailAddress":"root-jira-commit_tag_bot at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=commit-tag-bot&avatarId=16176","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=commit-tag-bot&avatarId=16176","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=commit-tag-bot&avatarId=16176","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=commit-tag-bot&avatarId=16176"},"displayName":"Commit Tag Bot","active":true},"created":"2013-03-22T16:41:16.978+0000","updated":"2013-03-22T16:41:16.978+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12596203/comment/13654057","id":"13654057","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Closed after release.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-05-10T10:33:52.889+0000","updated":"2013-05-10T10:33:52.889+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4173/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04fxj:"}}