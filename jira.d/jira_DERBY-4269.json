{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12427734","self":"https://issues.apache.org/jira/rest/api/latest/issue/12427734","key":"DERBY-4269","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315902","id":"12315902","description":"Head of 10.7 branch as of 2010-11-29","name":"10.7.1.4","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-07-03 16:19:45.262","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24143","customfield_12310222":"1_*:*_1_*:*_96607481022_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-07-04T15:05:19.667+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4269/watchers","watchCount":3,"isWatching":false},"created":"2009-06-12T11:40:38.827+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":["derby_triage10_5_2"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"18.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313345","id":"12313345","description":"","name":"10.4.2.0","archived":false,"released":true,"releaseDate":"2008-09-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314116","id":"12314116","description":"10.5.2 Release July 30 2009 (794445) Now deprecated","name":"10.5.2.0","archived":false,"released":true,"releaseDate":"2009-07-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314117","id":"12314117","description":"Next release after 10.5.2.0 release candidate #1","name":"10.5.3.0","archived":false,"released":true,"releaseDate":"2009-08-21"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12315343","id":"12315343","description":"Derby 10.6.2.1 Release","name":"10.6.2.1","archived":false,"released":true,"releaseDate":"2010-10-06"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12315564","id":"12315564","description":"First release on the 10.7 branch.","name":"10.7.1.1","archived":false,"released":true,"releaseDate":"2010-12-14"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12316362","id":"12316362","description":"First release on the 10.8 branch","name":"10.8.1.2","archived":false,"released":true,"releaseDate":"2011-04-29"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12317968","id":"12317968","description":"second release on the 10.8 branch","name":"10.8.2.2","archived":false,"released":true,"releaseDate":"2011-10-24"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12345946","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12345946","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12501060","key":"DERBY-5123","self":"https://issues.apache.org/jira/rest/api/2/issue/12501060","fields":{"summary":"address a select number of intermittent test issues - goal is to get all nightly tests at trunk running clean for at least 2 weeks","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/task.png","name":"Task","subtask":false}}}},{"id":"12354814","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12354814","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"outwardIssue":{"id":"12595679","key":"DERBY-5830","self":"https://issues.apache.org/jira/rest/api/2/issue/12595679","fields":{"summary":"Make DoubleProperties.propertyNames() thread-safe","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-09-03T08:31:26.841+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312050","id":"12312050","name":"Replication"}],"timeoriginalestimate":null,"description":"Failover did not succeed.\r\n2) testReplication_Local_3_p6_autocommit_OK(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p6)junit.framework.AssertionFailedError: Failover did not succeed.\r\n\tat org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.connectPing(ReplicationRun.java:270)\r\n\tat org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p6.derby_3896(ReplicationRun_Local_3_p6.java:200)\r\n\tat org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p6.testReplication_Local_3_p6_autocommit_OK(ReplicationRun_Local_3_p6.java:86)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:106)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\r\nSee http://dbtg.thresher.com/derby/test/Daily/jvm1.4/testing/testlog/vista-64/782274-suitesAll_diff.txt\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10365","value":"Crash","id":"10365"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"35632","summary":"Failover did not succeed in 2 min.: testReplication_Local_3_p6_autocommit_OK","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"OS:\r\nMicrosoft© Windows VistaT Ultimate - 6.0.6001 Service Pack 1 - WindowsNT 0 6\r\n\r\nJVM:\r\nSun Microsystems Inc. \r\njava version \"1.4.2_16\"\r\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_16-b05)\r\nJava HotSpot(TM) Client VM (build 1.4.2_16-b05 mixed mode 32-bit)\r\n\r\n","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":55,"total":55,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/12727034","id":"12727034","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Triaged for 10.5.2, setting \"normal\" urgency.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-07-03T16:19:45.262+0000","updated":"2009-07-03T16:19:45.262+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13102784","id":"13102784","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I saw this in nightly testing, with the trunk tree (10.9.0.0 alpha) synced to revision 1167430, on Windows XP with ibm 1.6 (sr9fp1).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2011-09-12T16:46:29.838+0000","updated":"2011-09-12T16:46:29.838+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13285246","id":"13285246","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Saw this again: http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.5/testing/testlog/lin/1343305-suitesAll_diff.txt\r\n\r\nA bit more of the stack shows the error cause is \r\nDERBY SQL error: SQLCODE: -1, SQLSTATE: 08004, SQLERRMC: Connection refused to database '/export/home/tmp/jagtmp/autoderbyN_derbyall/suitesAll_1/log/db_slave/wombat' because it is in replication slave mode.\r\n\r\nLooking in the master's derby.log I see these two lines:\r\n\r\nTue May 29 04:40:11 CEST 2012 Thread[DRDAConnThread_3,5,main] Cleanup action starting\r\nERROR XRE20: Failover performed successfully for database '/export/home/tmp/jagtmp/autoderbyN_derbyall/suitesAll_1/log/db_master/wombat', the database has been shutdown.\r\n\r\nnote the time: 04:40:11. In the client's derby.log I see:\r\n\r\nTue May 29 04:40:12 CEST 2012 Thread[DRDAConnThread_3,5,main] (DATABASE = /export/home/tmp/jagtmp/autoderbyN_derbyall/suitesAll_1/log/db_slave/wombat), (DRDAID = {5}), Connection refused to database '/export/home/tmp/jagtmp/autoderbyN_derbyall/suitesAll_1/log/db_slave/wombat' because it is in replication slave mode.\r\nTue May 29 04:40:12 CEST 2012 Thread[DRDAConnThread_3,5,main] Cleanup action starting\r\njava.sql.SQLException: Connection refused to database '/export/home/tmp/jagtmp/autoderbyN_derbyall/suitesAll_1/log/db_slave/wombat' because it is in replication slave mode.\r\n\r\nso I wonder if this can be a simple race. In the test, the call to connectPing happens directly after the call to failOver, and I cannot see any provision for waiting and/or trying until it succeeds.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-05-29T23:10:59.951+0000","updated":"2012-05-29T23:10:59.951+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13285257","id":"13285257","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Attaching a simple patch which inserts a call to waitForConnect between the failOver and the connectPing.\r\n\r\nThis should make sure the slave has enough time to fail over before the call to connectPing is made, if that is indeed the issue here. I see this pattern has been used elsewhere, e.g. in ReplicationRun_Local_showStateChange#testReplication_Local_showStateChange_showReplState.\r\n\r\nThe test ReplicationRun_Local_3_p6 runs OK with the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-05-29T23:30:50.870+0000","updated":"2012-05-29T23:30:50.870+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13285525","id":"13285525","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Hi Dag,\r\n\r\nIs the patch itself missing?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2012-05-30T09:21:12.161+0000","updated":"2012-05-30T09:21:12.161+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13285644","id":"13285644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks, Kristian. Fixed.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-05-30T13:16:45.012+0000","updated":"2012-05-30T13:16:45.012+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13285652","id":"13285652","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks, Dag.\r\n\r\nThe change looks good to me, +1.\r\nI see that two different values are used for the number of retries; 10 (as in your patch) and 200. I haven't checked if the test is waiting for something it knows takes a long time when the higher number of retries is used.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2012-05-30T13:26:18.208+0000","updated":"2012-05-30T13:26:18.208+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13285684","id":"13285684","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"It looks good to me too. Do we need similar changes for the other occurrences of this pattern too? Maybe we could make pingConnect() as tolerant as waitForConnect(), so that no changes are needed in the test cases themselves? (The former only tolerate 08004 errors while waiting for the server to come up, whereas the latter accepts all errors.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-05-30T14:10:22.314+0000","updated":"2012-05-30T14:10:22.314+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13286993","id":"13286993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks, Kristian & Knut! I did notice other place which did not use this pattern, too. Making pincConnect more resilient might be good,\r\nunless there are use cases where changed behavior is not desired. I'll have a look.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-05-31T22:07:25.961+0000","updated":"2012-05-31T22:07:25.961+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13287459","id":"13287459","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Looking again, I think my first analysis was wrong, perhaps I looked at the wrong derby.log files. \r\n\r\nAttaching here \r\n\r\nfail/Embedded_30/ReplicationRun_Local_3_p6/testReplication_Local_3_p6_autocommit_OK/db_slave-derby.log and\r\nfail/Embedded_30/ReplicationRun_Local_3_p6/testReplication_Local_3_p6_autocommit_OK/db_master-derby.log\r\n\r\nwhich show:\r\n\r\n- Master sees successful failover at time Tue May 29 04:37:03 (line 1175 i master log).\r\n- Slave reports \"Failover perfomed successfully\" at time Tue May 29 04:37:03 (line 28 in slave log).\r\n\r\nThe we see two minutes of failed connection attempt in slave log of this type:\r\n\r\n  \"Connection refused to database '.... db_slave/wombat' because it is in replication slave mode\"\r\n\r\nFinally at time Tue May 29 04:39:08, i.e. two minutes later, the slave\r\nand master are shut down:\r\n\r\n  \"Shutting down Derby engine\\nReplication slave role was stopped for database '... /db_slave/wombat'\r\n  \"Shutting down Derby engine\" (master)\r\n\r\nbecause the two minutes of attempts in connectPing to connect to the\r\nslave, supposedly failed over, bails out (replicationRun, line 379).\r\n\r\nSo the question becomes, why can't the client connect to the failed\r\nover slave after two minutes? Both the master and the slave have\r\nreported on their logs that failover happened, as far as I understand\r\nthe logs.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-01T14:47:53.716+0000","updated":"2012-06-01T14:51:05.362+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13287472","id":"13287472","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"The message \"Failover perfomed successfully\" (sic) is issued after a call in the slave to LogToFile.failoverSlave, cf line 301 in SlaveController#doFailover,\r\nso that's how far we know the slave got.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-01T15:17:24.000+0000","updated":"2012-06-01T15:17:24.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13287485","id":"13287485","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Uploading a patch for the typo in the slave's failover message: derby-4269-typo.diff.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-01T15:43:28.320+0000","updated":"2012-06-01T16:39:10.096+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13287523","id":"13287523","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Committed typo patch as svn 1345272.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-01T16:37:45.822+0000","updated":"2012-06-01T16:37:45.822+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13287529","id":"13287529","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"The call to LogToFile.failoverSlave does the following: flushed received log records to disk, and then does a notify on slaveRecoveryMonitor, i.e.\r\nit doesn't wait for the recovery to finish. So it seems the slave has gotten stuck in the recovery somehow, thus making connection attempts fail for two minutes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-01T16:49:47.711+0000","updated":"2012-06-01T16:49:47.711+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13287532","id":"13287532","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"FWIW, I was able to boot the slave database without incident.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-01T16:56:31.453+0000","updated":"2012-06-01T16:56:31.453+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13288574","id":"13288574","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Did tight runs of this test over the week-end. I was able to reproduce in 2 of 13000 attempts.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-04T14:09:03.611+0000","updated":"2012-06-04T14:09:03.611+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291286","id":"13291286","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"After a couple of more days, I made it hang by not timing out the ping if it doesn't succeed. Uploading jstacks of the three involved processes:\r\n- test client, master and slave\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-07T20:40:40.394+0000","updated":"2012-06-07T20:40:40.394+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291290","id":"13291290","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"The only thing that strikes me at first blush is that the slave still has a \"ping\" thread running:\r\n\r\n\"derby.slave.ping-/export/home/tmp/dag/zb/derby-4269-keepwaiting-replicationTests.ReplicationRun_Local_3_p6-sb1.jars.sane-1.7.0_04-25804/db_slave/wombat\" daemon prio=3 tid=0x0873c400 nid=0x13 in Object.wait() [0xd409e000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(Native Method)\r\n\t- waiting on <0xf0ff2508> (a java.lang.Object)\r\n\tat java.lang.Object.wait(Object.java:503)\r\n\tat org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$SlavePingThread.run(ReplicationMessageReceive.java:535)\r\n\t- locked <0xf0ff2508> (a java.lang.Object)\r\n\r\nbut I am not sure that is relevant. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-07T20:44:12.157+0000","updated":"2012-06-07T20:44:12.157+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291295","id":"13291295","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Trying to connect to the slave maually via ij, i get confirmation it hasn't recovered:\r\n\r\nij> connect 'jdbc:derby://localhost:1531/wombat';\r\nERROR 08004: DERBY SQL error: SQLCODE: -1, SQLSTATE: 08004, SQLERRMC: Connection refused to database '/export/home/tmp/dag/zb/derby-4269-keepwaiting-replicationTests.ReplicationRun_Local_3_p6-sb1.jars.sane-1.7.0_04-25804/db_slave/wombat' because it is in replication slave mode.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-07T20:53:57.091+0000","updated":"2012-06-07T20:53:57.091+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291303","id":"13291303","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Attaching a jstack of the slave threads as they look immediately before we initiate failover in line 194 of ReplicationRun_Local_3_p6.\r\n\r\nNote that the threads for the SlaveController and SlaveDatabaseBootThread are (still) seen, they have vanished in the stacks of the slave process!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-07T21:04:39.096+0000","updated":"2012-06-07T21:04:39.096+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291312","id":"13291312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"In a successful failover, I see that the SlavePingThread lives on even after a successful connect, so thas was a red herring. More interesting i the fact that the thread doing recovery has gone, but apparently, the database still thinks it's in a slave state. I'll have a look at that phase transition.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-07T21:17:14.843+0000","updated":"2012-06-07T21:17:14.843+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291349","id":"13291349","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"In SlaveDataBase, the variable \"inReplicationSlaveMode\" holds the state. The error message 08004.C.7 (\"Connection refused to database '{0}' because it is in replication slave mode\") i only every issued in two locations, both inside SlaveDataBase, in methods \"setupConnection\" and \"getAuthenticationService\".\r\n\r\nIn both cases, they test the variable inReplicationSlaveMode.  Looking at the booting (recovery) thread, the variable is reset to false ca line 317, inside the thread SlaveDatabaseBootThread:\r\n\r\n try {\r\n   :\r\n   bootBasicDatabase(create, params); // will be blocked\r\n\r\n   // if we get here, failover has been called and the\r\n   // database can now be connected to\r\n   inReplicationSlaveMode = false; \r\n   :\r\n } catch (StandardException se) {\r\n   // We get here when SlaveController#stopSlave has been\r\n   // called, or if a fatal exception has been thrown.\r\n   handleShutdown(se);\r\n }\r\n\r\nNow, the thread is gone, but in our cae the variable is still true, so I believe the boot must have thrown a (runtime?) exception for this to occur. Notice we only catch StandardException, but any runetime exception would go unnoticed and the thread would terminate.\r\nI'll try to instrument this code to log any exceptions on derby.log before the thread dies.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-07T21:52:11.966+0000","updated":"2012-06-07T21:52:11.966+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291733","id":"13291733","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"If you set derby.tests.repltrace to true, the output from the sub-processes will be printed (see ReplicationRun.processDEBUGOutput(), called from runUserCommandLocally()). I assume an uncaught RuntimeException would have been printed to stderr in the sub-process, so it should be possible to see it with the tracing property set.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-08T12:04:18.177+0000","updated":"2012-06-08T12:04:18.177+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291817","id":"13291817","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Yes, I considered that, but was afraid any earlier printing might change the timing, so I opted for a minimum change which only kicks in after the error has happened ;-) We'll see if I catch any fish..","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-08T15:14:07.122+0000","updated":"2012-06-08T15:14:07.122+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13291963","id":"13291963","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"I caught the exception, and this is what I see, it was an NPE allright:\r\n\r\n----  BEGIN REPLICATION ERROR MESSAGE (6/8/12 9:07 PM) ----\r\nSlave recovery: Unexpected exception, thread dies : [0] /export/home/tmp/dag/zb/derby-4269-keepwaiting-replicationTe\\\r\nsts.ReplicationRun_Local_3_p6-sb1.jars.sane-1.7.0_04-11053/db_slave/wombat\r\njava.lang.NullPointerException\r\n        at java.util.Hashtable.put(Hashtable.java:432)\r\n        at org.apache.derby.iapi.util.DoubleProperties.propertyNames(DoubleProperties.java:70)\r\n        at org.apache.derby.impl.services.monitor.BaseMonitor.getImplementations(BaseMonitor.java:1065)\r\n        at org.apache.derby.impl.services.monitor.BaseMonitor.loadInstance(BaseMonitor.java:718)\r\n        at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:323)\r\n        at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:542)\r\n        at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n        at org.apache.derby.impl.db.BasicDatabase.bootClassFactory(BasicDatabase.java:731)\r\n        at org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:193)\r\n        at org.apache.derby.impl.db.SlaveDatabase.bootBasicDatabase(SlaveDatabase.java:446)\r\n        at org.apache.derby.impl.db.SlaveDatabase.access$000(SlaveDatabase.java:72)\r\n        at org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread.run(SlaveDatabase.java:314)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n\r\n--------------------  END REPLICATION ERROR MESSAGE ---------------------\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-08T20:22:54.504+0000","updated":"2012-06-08T20:22:54.504+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13292712","id":"13292712","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The failing code in DoubleProperties.propertyNames():\r\n\r\n66        if (write != null) {\r\n67\r\n68            for (Enumeration e = write.propertyNames(); e.hasMoreElements(); ) {\r\n69                String key = (String) e.nextElement();\r\n70                p.put(key, write.getProperty(key));\r\n71            }\r\n72        }\r\n\r\nOne of the arguments to Hastable.put() is null. I think this can only happen if some other thread is modifying the \"write\" instance at the same time as this code runs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-11T09:36:24.346+0000","updated":"2012-06-11T09:36:24.346+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13293709","id":"13293709","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Yes, that was my conclusion too. The usage of property lists is extremely convoluted in the Derby boot process, and it was very hard to understand what's going on. And since this goes on in a forked VM, using a debugger is tricky without affecting the timing... I replaced all usages of java.util.Properties with a specialized version (DerbyProperties), so I could track all allocations and modifications of properties. Adding to the problem is the fact that Properties can have default Properties lists recursively, and this is being used. In addition Derby adds two layers of specializations: UpdateServiceProperties and DoubleProperties.\r\n\r\nMostly, property lists are passed into constructors without any cloning of them so the number of live aliases is high.\r\n\r\nIt turns out the layering at the time of the NPE in the boot is like this:\r\n\r\nDoubleProperties#write instance of\r\n   UpdateServiceProperties#defaults instance of\r\n       Properties#defaults instance of\r\n           Properties (no default)   <----- race on this one\r\n\r\nThe bottom one is the one that's being changed under our feet in these lines in EmbedConnection#bootDatabase:\r\n\r\n    :\r\n    // clear these values as some modules hang onto                                  \r\n    // the properties set corresponding to service.properties                        \r\n    // and they shouldn't be interested in these JDBC attributes.                    \r\n    info.clear(); \r\n    \r\nIt is initially allocated in EmbedConnection#filterProperties:\r\n\r\n    private Properties filterProperties(Properties inputSet) {                               \r\n        Properties limited = new org.apache.derby.iapi.util.DerbyProperties();               \r\n        :\r\n\r\nassigning it to \"info\".\r\n\r\nThe thread that is doing this is the thread that initially started the slave operation (cf. URL \"startSlave=true\"). This thread hangs until the master has been started and replication is underway[1]. When the master comes online this thread the connect returns with XRE08 (\"REPLICATION_SLAVE_STARTED_OK\").\r\n\r\nThe failover happens in this test almost immediately, and the SlaveDatabaseBootThread then starts moving again (it i waiting for more log records to replay or failover).\r\n\r\nUnfortunately, in the current scenario, the thread doing \"startSlave=true\" is still active, normally it would have finished long before SlaveDatabaseBootThread starts moving again.\r\n\r\nThe Property default at the 4th level above would normally be empty, since its being cleared by the \"startSlave=true\" thread in the \"info.clear\". Bit since it's lagging behind, it only does this \"clear\" when the SlaveDatabaseBootThread has started its boot, leading to the contention.\r\n\r\n\r\n[1] In EmbedConnection.bootDatabase, this corresponds to the line:\r\n\r\n// try to start the service if it doesn't already exist\r\nif (!Monitor.startPersistentService(dbname, info)) {\r\n    \r\n \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-12T15:51:07.045+0000","updated":"2012-06-13T15:30:05.396+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13293714","id":"13293714","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"This may not be a problem in production, but it may make several of our replication tests fail, so I am changing priority to Major.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-12T15:55:48.417+0000","updated":"2012-06-12T15:55:48.417+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13293939","id":"13293939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Attaching a patch which skips the cleaning action iff we are booting a slave. It makes the test work. I don't believe it will cause any problem, but we'll see when the regression come in.\r\n\r\nAn alternative way to fix this would be some kind of extra synchronization to hold back the recovery thread till the boot thread has returned control to the client.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-12T21:39:03.381+0000","updated":"2012-06-13T13:41:49.106+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13294450","id":"13294450","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Regressions passed. Please review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-13T13:35:54.119+0000","updated":"2012-06-13T13:35:54.119+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13294935","id":"13294935","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Looks like a reasonable workaround for the bug, as the call to clear() seems not to be strictly required in any of the cases.\r\n\r\nThe alternative approach of adding extra synchronization may be difficult, unless the Properties objects are replaced with some other data structure. At least the straightforward fix of enclosing the loop in DoubleProperties in a synchronized block on \"write\" would probably not suffice, because the multi-level nesting of Properties objects would still make it possible for other threads to access one of the underlying Properties objects directly and bypass the top-level synchronization.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-14T10:00:04.537+0000","updated":"2012-06-14T10:00:04.537+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13295365","id":"13295365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks, Knut. Yes, you are right, we'd need some new mechanism for synchronizing this since the access is to the bottom-most property list.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-14T22:56:33.078+0000","updated":"2012-06-14T22:56:33.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13295416","id":"13295416","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Uploading an explicit synchronization fix for this issue. This will have the clearing of the properties wait till the boot thread is fully done by augmenting the predicate in the method verifySuccessfulBoot. This also made my instrumented Derby (which fails every time otherwise), work correctly for the test.\r\n\r\nI think I would prefer this patch to the previous one since it retains the original inten of the \"info.clear\" call.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-15T01:28:22.867+0000","updated":"2012-06-15T01:28:22.867+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13295418","id":"13295418","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"By way of explanation: the analysis in a comment above is slightly wrong, sml the call to Monitor.startPersistentService (footnote [1] above). This call will actually hang till the failover is *almost* done, but not quite, as evidenced in the bug. The reason the new patch wprks is that it makes sure the boot thread is really finished before allowing the call [1] in the initiating thread to complete.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-15T01:32:23.998+0000","updated":"2012-06-15T01:32:23.998+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13295663","id":"13295663","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I agree that a fix that's local to SlaveDatabase is cleaner.\r\n\r\nTo reduce the amount of state we need to maintain in the class, we could perhaps pass sdbThread as an argument to verifySuccessfulBoot(), and call isAlive() on it instead of checking the new volatile flag.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-15T13:59:50.467+0000","updated":"2012-06-15T13:59:50.467+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13296051","id":"13296051","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Yup, that's even better. Uploading rev #2 of this patch, \"derby-4269-explicit-synch-2\" using that idea. Rerunning all regressions.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-16T00:47:45.219+0000","updated":"2012-06-16T00:47:45.219+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13395454","id":"13395454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Did you forget to upload the patch? I don't see it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-18T07:33:36.365+0000","updated":"2012-06-18T07:33:36.365+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13396008","id":"13396008","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Yes, apparently I did. Here it is for completeness.\r\n\r\nUnfortunately, explicit synchronization breaks other replication tests. The new extra waiting in \"verifySuccessfulboot\" makes the boot of the slavedatabase (minus the actual fail-over part to make it a new master) incomplete until fail-over time, cf. the call to startPersistentService mentioned above will now wait longer.\r\n\r\nThis makes other connection attempts to the slave hang (the service isn't started, so the new thread tries to start it again), whereas previously a new thread returned an error indicating that the slave was still in slave state. So, I am back to the first patch, which skips the clearing of the properties for slave databases.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-18T16:29:30.636+0000","updated":"2012-06-18T16:29:30.636+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13396015","id":"13396015","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"After this point in the SlaveController it is unsafe to access the properties iff they are being cleared:\r\n\r\nSlaveController#startSlave, line 254: \"startupSuccessful = true;\" because past that point, the connection thread is free to proceed and clear the properties, since the last criterion of verifySuccessfulBoot (boot waits for slave operation to be initiated here) is fulfilled.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-18T16:37:50.103+0000","updated":"2012-06-18T16:37:50.103+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13397993","id":"13397993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Attaching derby-4269-explicit-synch-3. This uses a binary semaphore to avoid concurrent aaccess of the \"info\" Properties object by the two contending threads.\r\n\r\nEmbedConnection#bootDatabase grabs the semaphore before doing the call on \"info.clear\" and releases it after.\r\n\r\nThe SlaveDatabaseBootThread grabs it immediately after recovery has been successfully completed after a fail-over (in LogToFile#recover) and releases it when the SlaveDatabaseBootThread is done.\r\n\r\nThis patch passes regressions and also works with my instrumented version of Derby which reliably reproduces the NPE seen in this issue.\r\n\r\nUnfortunately, it adds a bit for clutter since we need to add the P&V operations through three levels:\r\n\r\n           SlaveDatabase\r\n           SlaveFactory/SlaveController\r\n           LogToFile\r\n\r\nbut I didn't find a better way.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-20T23:24:05.769+0000","updated":"2012-06-20T23:24:05.769+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13399414","id":"13399414","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Since the underlying NullPointerException happens because we try to put a null value into a Properties object in DoubleProperties.propertyNames(), but we never actually use the property value (the method returns p.keys()), I'm wondering if the attached patch would fix the problem. It makes propertyNames() use an intermediate Vector instance instead of a Properties instance, so that it never needs to access the property value.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-22T16:20:47.105+0000","updated":"2012-06-22T16:20:47.105+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13399631","id":"13399631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Yes, it would remove the NPE, I agree. But do we have any guarantee that the returned keys aren't used to access values (and if so tat those are assumed to be non-null) elsewhere? It may well be that that is not the case, and that this solution is ok. Still, I think the shared use of the properties is unsafe...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-22T21:43:18.793+0000","updated":"2012-06-22T21:43:18.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13399698","id":"13399698","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"FWIW, all the regression tests ran cleanly with the keys-only.diff patch. Even if it doesn't fix the bug, I think it's an improvement as it slightly simplifies the code.\r\n\r\n> But do we have any guarantee that the returned keys aren't used to access values (and if so tat those are assumed to be non-null) elsewhere?\r\n\r\nI don't know. However, what caused this particular bug, was that the override of Properties.propertyNames() itself wasn't safe to use, so that it didn't give the thread-safety guarantees that one would normally expect from Properties' methods. Callers of Properties' methods should already be aware of the limitations of the synchronization guarantees provided by Properties (for example that there is a possibility that getProperty() returns null, as there is no synchronization preventing the property from getting removed after a check for the existence of a key). If they don't take that into consideration, it's a bug that needs to be fixed. But in cases where the actual bug lies in the override of a Properties method, like in this case, one cannot reasonably expect the callers to handle the problem gracefully.\r\n\r\nSo although I cannot guarantee that all users of Properties instances in the engine are free from bugs, I believe that the Properties class does provide the functionality to be used in a thread-safe way, even without adding a semaphore that guards the call to info.clear().","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-22T23:02:00.631+0000","updated":"2012-06-22T23:02:00.631+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13399728","id":"13399728","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"By the way, I don't think the keys-only patch is quite correct. Now that it's using a Vector, there's no elimination of duplicates, and it might return duplicate keys if the read and write fields contain overlapping properties.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-22T23:44:30.537+0000","updated":"2012-06-22T23:44:30.537+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13399808","id":"13399808","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Knut: <good explanation of the thread-safety guarantees of Properties>\r\nPart of the problem here is that the old (i.e. pre-replication code) might not be prepared for thread concurrency on the Properties object, viz the fact the buggy overload wasn't detected before.\r\nStill, I am tempted to go for your solution (modulo the weakness you pointed out) to get rid of the ugly explicit synchronization, and wrong use issues if/when they surface. My fear is, though, that could be hard to track down.. so the explicit synch is safer if we can't be sure how this is used. I'' try to analyze the usages of the overloaded propertyNames..","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-23T02:16:44.571+0000","updated":"2012-06-23T02:16:44.571+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13399922","id":"13399922","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I logged DERBY-5830 for fixing DoubleProperties.propertyNames(), so we can separate that issue from any changes that need to be done to the slave boot code.\r\n\r\nSo far, I think we have discussed three areas that potentially need fixing:\r\n\r\n1) Lack of thread-safety in DoubleProperties - now handled in DERBY-5830.\r\n\r\n2) Boot code not prepared for being multi-threaded. The fix for (1) may be sufficient, but there may be other hidden bugs caused by the slave boot process breaking assumptions made in existing code.\r\n\r\n3) SlaveDatabaseBootThread silently ignores runtime exceptions and leaves the process hanging. The fix for (1) may remove the cause for the hang we've seen, but SlaveDatabaseBootThread still doesn't handle unexpected failures gracefully.\r\n\r\nI'm not sure what's the best way to approach (2). It's difficult to see from the code exactly which places the Properties instance in question is used. Maybe we could make EmbedConnection.filterProperties() return an instrumented sub-class of Properties that logs the stack trace of all calls to getProperty(), run some subset of the regression tests, and then manually inspect the call sites to see if they would handle the disappearance of a property?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-06-23T11:59:59.900+0000","updated":"2012-06-23T11:59:59.900+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13400431","id":"13400431","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks for filing DERBY-5830. I added some code in my patch to log errors to derby.log if SlaveDatabaseBootThread fails in 3). How graceful it is is another matter, but we should at least learn what the error is. Under normal operation the boot should not fail, one would hope. As for checking usages, I have already made a Derby specific version of Properties to find the original race, so I can use that for tracking down usages of getProperties.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-25T11:53:19.757+0000","updated":"2012-06-25T11:53:19.757+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13401339","id":"13401339","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"I instrumented all calls to propertyNames while in the slave boot code running ReplicationRun_Local_3_p6-sb1. It turns out the only place where DoubleProperties#propertyNames\r\nis called is here in BaseMonitor#getImplementations (cf also the original backtrace above):\r\n\r\n    nextModule:\r\n       for (Enumeration e = moduleList.propertyNames(); e.hasMoreElements(); ) {\r\n           String key = (String) e.nextElement();\r\n\r\n           // module tagged name in the modules.properties file.\r\n           // used as the tag  for dependent properties.\r\n           String tag;\r\n\r\n           // Dynamically loaded code is defined by a property of\r\n           // the form:\r\n           // derby.module.<modulename>=<class name>\r\n           // or\r\n           // derby.subSubProtocol.<modulename>=<classname>\r\n\r\n           if (key.startsWith(Property.MODULE_PREFIX)) {\r\n               tag = key.substring(Property.MODULE_PREFIX.length());\r\n           } else if (key.startsWith(Property.SUB_SUB_PROTOCOL_PREFIX)) {\r\n               tag = key.substring(Property.MODULE_PREFIX.length());\r\n           } else {\r\n               continue nextModule;\r\n           }\r\n\r\nThis means that all properties that do not start with MODULE_PREFIX (\"derby.module.\") or SUB_SUB_PROTOCOL_PREFIX (\"derby.subProtocol.\") are skipped. None of those are legal URL properties, and could thus stem from the contested info properties object acclocated int EmbedConnection.\r\n\r\nI therefore believe we can avoid doing the explicit synchronization when DERBY-5830 goes in.\r\n\r\nI'll run the instrumented versions on all the replication tests for good measure before I conclude, though.\r\n\r\n[Comment edited 2012-07-03: completed tests, the above theory holds.]\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-06-26T12:18:03.317+0000","updated":"2012-07-02T22:21:08.887+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13405390","id":"13405390","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Uploading a patch for item 3) above; fix-ignored-runtime-exceptions-a as well as a patch building on that which adds instrumentation to test it manually.\r\n\r\nUsing the instrummentation I see this on derby.log:\r\n\r\n----  BEGIN REPLICATION ERROR MESSAGE (02.07.12 21:58) ----\r\nReplication slave got a fatal error for database '/export/home/dag/NetBeansProjects/JUnitTest/test/db_slave/wombat'. Replication will be stopped.\r\njava.lang.NullPointerException\r\n\tat org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread.run(SlaveDatabase.java:324)\r\n\tat java.lang.Thread.run(Thread.java:722)\r\n\r\n--------------------  END REPLICATION ERROR MESSAGE ---------------------","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-07-02T22:18:15.900+0000","updated":"2012-07-02T22:18:15.900+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13405710","id":"13405710","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The patch looks fine to me.\r\n\r\nMinor nit: Since SlaveDatabaseBootThread is a non-static inner class of SlaveDatabase, the fields and methods of the parent SlaveDatabase instance can be accessed directly from the SlaveDatabaseBootThread instance. So it should be possible to read the value of the dbname field in SlaveDatabaseBootThread.run() without introducing an accessor method and a new field.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2012-07-03T09:15:45.294+0000","updated":"2012-07-03T09:15:45.294+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13405944","id":"13405944","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thanks, Knut. Fixed your nit in version fix-ignored-runtime-exceptions-b.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-07-03T14:09:03.485+0000","updated":"2012-07-03T14:09:03.485+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13405946","id":"13405946","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Committed fix-ignored-runtime-exceptions-b as svn 1356766, resolving.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-07-03T14:57:44.721+0000","updated":"2012-07-03T14:57:44.721+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13406595","id":"13406595","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Backported fix-ignored-runtime-exceptions-b to 10.9 at svn 1357310.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-07-04T15:40:09.551+0000","updated":"2012-07-04T15:40:09.551+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/13406634","id":"13406634","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Backported fix-ignored-runtime-exceptions-b to 10.8 at svn 1357343.\r\n\r\nWill close issue when DERBY-5830 is backported, too.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2012-07-04T17:30:56.145+0000","updated":"2012-07-04T17:30:56.145+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12427734/comment/14119565","id":"14119565","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"[bulk update] Close all resolved issues that haven't been updated for more than one year.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2014-09-03T08:31:26.817+0000","updated":"2014-09-03T08:31:26.817+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4269/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06gnj:"}}