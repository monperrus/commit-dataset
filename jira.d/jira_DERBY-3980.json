{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12410236","self":"https://issues.apache.org/jira/rest/api/latest/issue/12410236","key":"DERBY-3980","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315436","id":"12315436","description":"Head of 10.5 branch - version bump for DERBY-4835","name":"10.5.3.2","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12315434","id":"12315434","description":"Head of 10.6 branch as of 2014-01-13","name":"10.6.2.4","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12315902","id":"12315902","description":"Head of 10.7 branch as of 2010-11-29","name":"10.7.1.4","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12316362","id":"12316362","description":"First release on the 10.8 branch","name":"10.8.1.2","archived":false,"released":true,"releaseDate":"2011-04-29"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2008-12-09 18:38:12.765","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23957","customfield_12310222":"1_*:*_1_*:*_71336829838_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-03-14T16:47:21.582+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3980/watchers","watchCount":0,"isWatching":false},"created":"2008-12-09T01:00:11.788+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":["derby_triage10_5_2"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"14.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313345","id":"12313345","description":"","name":"10.4.2.0","archived":false,"released":true,"releaseDate":"2008-09-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12338216","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12338216","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12499864","key":"DERBY-5073","self":"https://issues.apache.org/jira/rest/api/2/issue/12499864","fields":{"summary":"Derby deadlocks without recourse on simultaneous correlated subqueries","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12338087","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12338087","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12501519","key":"DERBY-5137","self":"https://issues.apache.org/jira/rest/api/2/issue/12501519","fields":{"summary":"Enable or remove Derby3980DeadlockTest","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12338234","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12338234","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12372507","key":"DERBY-2877","self":"https://issues.apache.org/jira/rest/api/2/issue/12372507","fields":{"summary":"Print the entire lock list when a deadlock occurs and deadlock tracing is on","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-04-19T12:38:40.594+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11415","id":"11415","name":"Services"}],"timeoriginalestimate":null,"description":"The attached program TryTimeout.java should detect a deadlock but instead throws a lock timeout exception.  The program has two threads that attempt:\r\n\r\n\t    \r\n\t    threadConnection.setAutoCommit(false);\r\n\t    /* set isolation level to repeatable read */\r\n\t    threadConnection.setTransactionIsolation(Connection.TRANSACTION_REPEATABLE_READ);\r\n\t    \r\n\t    ResultSet rs = stmt.executeQuery(\"select * from t where i = 456\");\r\n\t    while (rs.next());\r\n\t    stmt.executeUpdate(\"update t set i = 456 where i = 456\");\r\n\t    threadConnection.commit();\r\n\r\n\r\nThis gives SQLState 40001 (deadlock) with DB2 but a lock timeout with Derby.\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"36561","summary":"Conflicting select then update with REPEATABLE_READ gives lock timeout instead of deadlock","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10422","value":"High Value Fix","id":"10422"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":31,"total":31,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12654881","id":"12654881","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attaching the 10.1 derby.log which shows two waiters instead of one.\r\n\r\nAlso attaching the javacore from the trunk run as the threads are waiting to show where they are waiting.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-09T18:33:19.555+0000","updated":"2008-12-09T18:33:19.555+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12654884","id":"12654884","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Looking at the error log there are a few wierd things:\r\n1) I would expect to see 2 waiting locks.  \r\n2) Given that it should be repeatable read, and there is no index I would expect the lock list to contain row locks for\r\n     every row in the table.  Maybe it would useful to dump the lock table after the select using the lock vti just to see if\r\n     it matches.  Maybe this will lead to whether the issue is the actual lock table, or just some issue with contruction the\r\n     error message.  (1, 9) is likely the row in question.  The other rows are likely (1, 6), (1,7), and (1,8).  The id's before\r\n     6 are reserved for special use so real rows start at 6 and increase.  \r\n3) Just to be complete it would be good to verify that both threads are in a wait state in the lock, I would just dump the\r\n     stacks using signal or cntrl key depending on jvm while it is stalled.  I looked at program and can't imagine anything else \r\n     going on.\r\n4) Anyone who wants to look at this one, the code is pretty isolated.  The interesting code is in \r\nopensource/java/engine/org/apache/derby/impl/services/locks/LockSet.java\r\n\r\n5) some debugging steps I would take would include:\r\n    o verify if a deadlock search is being made or not?\r\n    o run in sane mode and turn on the SanityManager.DEBUG_ON(\"DeadlockTrace\") flag.\r\n    o If a deadlock search is being made, use the sanity code to dump out the lock table when the deadlock search is done and\r\n       misses the deadlock.\r\n    o see if the bug still happens if there is only 1 row in the table.\r\n\r\nERROR 40XL2: A lock could not be obtained within the time requested.  The lockTable dump is: \r\n2008-12-09 00:50:40.640 GMT\r\nXID       |TYPE         |MODE|LOCKCOUNT|LOCKNAME                                                                        |STATE|TABLETYPE / LOCKOBJ                   |INDEXNAME / CONTAINER_ID / (MODE for LATCH only)  |TABLENAME / CONGLOM_ID                |\r\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n*** The following row is the victim ***\r\n186       |ROW          |U   |0        |(1,9)                                                                           |WAIT |T                                     |NULL                                              |T                                     |\r\n*** The above row is the victim ***\r\n184       |ROW          |S   |1        |(1,9)                                                                           |GRANT|T                                     |NULL                                              |T                                     |\r\n186       |ROW          |S   |1        |(1,9)                                                                           |GRANT|T                                     |NULL                                              |T                                     |\r\n184       |ROW          |U   |1        |(1,9)                                                                           |GRANT|T                                     |NULL                                              |T                                     |\r\n184       |TABLE        |IS  |1        |Tablelock                                                                       |GRANT|T                                     |NULL                                              |T                                     |\r\n186       |TABLE        |IS  |1        |Tablelock                                                                       |GRANT|T                                     |NULL                                              |T                                     |\r\n184       |TABLE        |IX  |2        |Tablelock                                                                       |GRANT|T                                     |NULL                                              |T                                     |\r\n186       |TABLE        |IX  |2        |Tablelock                                                                       |GRANT|T                                     |NULL                                              |T                                     |\r\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-12-09T18:38:12.765+0000","updated":"2008-12-09T18:38:12.765+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12654886","id":"12654886","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"It may also be interesting to see if this is somehow related to U lock vs. X lock.  A similar test to one posted but changing the update to a delete would be interesting.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-12-09T18:42:23.837+0000","updated":"2008-12-09T18:42:23.837+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655216","id":"12655216","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I pursued some of Mike's debugging steps.\r\n    o verify if a deadlock search is being made or not?\r\n        The code enters Deadlock.look() so if that means it is doing a deadlock search then we are.\r\n    o run in sane mode and turn on the SanityManager.DEBUG_ON(\"DeadlockTrace\") flag.\r\n       I set this but don't see any output difference.  In my calling program I just called    SanityManager.DEBUG_ON(\"DeadlockTrace\").\r\n       Am I doing something wrong?\r\n    o If a deadlock search is being made, use the sanity code to dump out the lock table when the deadlock search is done and\r\n       misses the deadlock.\r\n      Haven't tried this yet.\r\n    o see if the bug still happens if there is only 1 row in the table. \r\n     It still happens with one row.\r\n    o see if it still happens with a delete\r\n     The same problem exists with delete.\r\n   o verify two threads are waiting on lock with <ctrl> break.\r\n      Here are the two traces with the program set to do a delete instead of update.\r\n4XESTACKTRACE          at java/lang/Object.wait(Native Method)\r\n4XESTACKTRACE          at java/lang/Object.wait(Object.java:231)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/daemon/BasicDaemon.rest(BasicDaemon.java:571)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/daemon/BasicDaemon.run(BasicDaemon.java:388)\r\n4XESTACKTRACE          at java/lang/Thread.run(Thread.java:803)\r\n3XMTHREADINFO      \"Thread-5\" (TID:0x4203EC00, sys_thread_t:0x42286868, state:CW, native ID:0x00001D94) prio=5\r\n4XESTACKTRACE          at java/lang/Object.wait(Native Method)\r\n4XESTACKTRACE          at java/lang/Object.wait(Object.java:231)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/locks/ActiveLock.waitForGrant(ActiveLock.java:118)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/locks/ConcurrentLockSet.lockObject(ConcurrentLockSet.java:463(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/services/locks/AbstractPool.lockObject(AbstractPool.java:119)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/locks/ConcurrentPool.lockObject(ConcurrentPool.java:28)\r\n4XESTACKTRACE          at org/apache/derby/impl/store/raw/xact/RowLocking3.lockRecordForRead(RowLocking3.java:187)\r\n4XESTACKTRACE          at org/apache/derby/impl/store/access/conglomerate/OpenConglomerate.lockPositionForRead(OpenConglomerate.java:436)\r\n4XESTACKTRACE          at org/apache/derby/impl/store/access/conglomerate/GenericScanController.fetchRows(GenericScanController.java:683)\r\n4XESTACKTRACE          at org/apache/derby/impl/store/access/heap/HeapScan.fetchNext(HeapScan.java:240)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/TableScanResultSet.getNextRowCore(TableScanResultSet.java:680)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:255)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/DeleteResultSet.setup(DeleteResultSet.java:252)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/DeleteResultSet.open(DeleteResultSet.java:136)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/GenericPreparedStatement.execute(GenericPreparedStatement.java:297)\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.executeStatement(EmbedStatement.java:1235)\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.execute(EmbedStatement.java:625)\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.executeUpdate(EmbedStatement.java:175)\r\n4XESTACKTRACE          at TryTimeout.threadWorker(TryTimeout.java:125)\r\n4XESTACKTRACE          at TryTimeout.access$000(TryTimeout.java:5)\r\n4XESTACKTRACE          at TryTimeout$1.run(TryTimeout.java:69)\r\n4XESTACKTRACE          at java/lang/Thread.run(Thread.java:803)\r\n3XMTHREADINFO      \"Thread-6\" (TID:0x4203F000, sys_thread_t:0x42286ABC, state:CW, native ID:0x00001C5C) prio=5\r\n4XESTACKTRACE          at java/lang/Object.wait(Native Method)\r\n4XESTACKTRACE          at java/lang/Object.wait(Object.java:231)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/locks/ActiveLock.waitForGrant(ActiveLock.java:118)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/locks/ConcurrentLockSet.lockObject(ConcurrentLockSet.java:463(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/services/locks/AbstractPool.lockObject(AbstractPool.java:119)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/locks/ConcurrentPool.lockObject(ConcurrentPool.java:28)\r\n4XESTACKTRACE          at org/apache/derby/impl/store/raw/xact/RowLocking3.lockRecordForWrite(RowLocking3.java:248)\r\n4XESTACKTRACE          at org/apache/derby/impl/store/access/conglomerate/OpenConglomerate.lockPositionForWrite(OpenConglomerate.java:541)\r\n4XESTACKTRACE          at org/apache/derby/impl/store/access/conglomerate/GenericConglomerateController.delete(GenericConglomerateController.java:179)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/RowChangerImpl.deleteRow(RowChangerImpl.java:478)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/DeleteResultSet.collectAffectedRows(DeleteResultSet.java:405)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/DeleteResultSet.open(DeleteResultSet.java:137)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416)\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/GenericPreparedStatement.execute(GenericPreparedStatement.java:297)\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.executeStatement(EmbedStatement.java:1235)\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.execute(EmbedStatement.java:625)\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.executeUpdate(EmbedStatement.java:175)\r\n4XESTACKTRACE          at TryTimeout.threadWorker(TryTimeout.java:125)\r\n4XESTACKTRACE          at TryTimeout.access$000(TryTimeout.java:5)\r\n4XESTACKTRACE          at TryTimeout$1.run(TryTimeout.java:69)\r\n4XESTACKTRACE          at java/lang/Thread.run(Thread.java:803)\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-10T14:13:00.476+0000","updated":"2008-12-10T14:13:00.476+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655324","id":"12655324","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I got the extra DeadlockTrace output  on by putting this in my derby.properties.\r\nderby.debug.true=DeadlockTrace\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-10T19:23:06.787+0000","updated":"2008-12-10T19:23:06.787+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655393","id":"12655393","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I am debugging this on 10.1 since at least there the Lock table showed two waiters on lock timeout.\r\nI changed the test case a bit to have one of the threads sleep for 10 seconds after the select and also to have the program dump the lock table every ten seconds.  I found that after adding the sleep I usually get a deadlock instead of the timeout.\r\nExpected exception:A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\r\nLock : ROW, T, (1,7)\r\n  Waiting XID : {254, U} , DB2ADMIN, delete from t  where i = 456\r\n  Granted XID : {256, S}\r\nLock : ROW, T, (1,7)\r\n  Waiting XID : {256, X} , DB2ADMIN, delete from t  where i = 456\r\n  Granted XID : {256, S} , {254, S}\r\n\r\nbut still I sometimes get the lock timeout.  I also saw that at the time of deadlock checking, the lock tables for both the lock timeout run and the deadlock run show the same lock table which should deadlock.\r\nxid     |username|trantype|type    |cnt|mode|tabname     |lockname  |state|status\r\n---------------------------------------------------------------------------------\r\n279     |UserTran|TABLE   |1  |IS  |T           |Tablelock |GRANT|ACTIVE\r\n281     |UserTran|TABLE   |1  |IS  |T           |Tablelock |GRANT|ACTIVE\r\n279     |UserTran|TABLE   |2  |IX  |T           |Tablelock |GRANT|ACTIVE\r\n281     |UserTran|TABLE   |2  |IX  |T           |Tablelock |GRANT|ACTIVE\r\n279     |UserTran|ROW     |1  |S   |T           |(1,7)     |GRANT|ACTIVE\r\n281     |UserTran|ROW     |1  |S   |T           |(1,7)     |GRANT|ACTIVE\r\n279     |UserTran|ROW     |0  |U   |T           |(1,7)     |WAIT|ACTIVE\r\n281     |UserTran|ROW     |1  |U   |T           |(1,7)     |GRANT|ACTIVE\r\n281     |UserTran|ROW     |0  |X   |T           |(1,7)     |WAIT|ACTIVE\r\n\r\nMike mentioned to me that he thought it might be a problem with both threads doing the deadlock check at the same time, but  it seems like with the sleep that couldn't be the problem.  Let me know if you would like me to post the updated program.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-10T22:37:47.949+0000","updated":"2008-12-10T22:37:47.949+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655411","id":"12655411","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is the updated program in case someone is interested, TryTimeout2.java . Changes from TryTimeout.java are\r\n1) Second thread sleeps for 10 second after select.\r\n2) Only has one row in the table.\r\n3) Does delete instead of update.\r\n4) Starts a thread that shows a lock table dump every 10 seconds.\r\n5) This one fails sometimes with deadlock and sometimes with lock timeout.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-10T23:12:57.636+0000","updated":"2008-12-10T23:12:57.636+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655583","id":"12655583","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Just a guess here, since I haven't checked the details. In the inner\r\nfor loop of Deadlock.look(), there's some code to prevent false\r\npositives for self-deadlocks:\r\n\r\n    // We could be seeing a situation here like\r\n    // Granted T1{S}, T2{S}\r\n    // Waiting T1{X} - deadlock checking on this\r\n    //\r\n    // In this case it's not a deadlock, although it\r\n    // depends on the locking policy of the Lockable. E.g.\r\n    .\r\n    .\r\n    .\r\n    if (lock.canSkip) {\r\n        // not a deadlock ...\r\n        chain.push(space); // set up as rollback() expects.\r\n\r\n        rollback(chain);\r\n        continue outer;\r\n    }\r\n\r\nI'm wondering if this perhaps is too broad. Both the transactions that\r\nare waiting for the X lock already have a shared lock on the row, so\r\nthey'll both have lock.canSkip==true. We may be giving up finding a\r\ndeadlock along that path too early.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-12-11T09:36:38.611+0000","updated":"2008-12-11T09:36:38.611+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655720","id":"12655720","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I did the runs with some additional  println's.  \r\n1) Upon entering Deadlock.look, I print:\r\nSystem.out.println(Thread.currentThread().getName() + \" Deadlock look\");\r\n        System.out.println(set.toDebugString());\r\n2) Upon entering the block of code Knut mentioned I print  \r\n   if (lock.canSkip) {\r\n                System.out.println(\"rollback(chain). Not a deadlock\");\r\n\r\nHere is the output of the run with deadlock TryTimeout2.out.10_1.deadlock and the run with timeout TryTimeout2.out.10_1.locktimeout.\r\n\r\nIn both cases it first does a Deadlock.look for Thread0 which does not detect any deadlocks.\r\n\r\nOn the Deadlock.look for Thread1  we see it pass through the \"Not a deadlock\" line for the deadlock case, not the lock timeout case, which is the reverse of what I would expect if that code were the problem.\r\n\r\nWhat I do notice is that always when we deadlock the lock[0] and lock[1]  of the Thread1 LockControl objects are in the reverse order from the timeout run.  Perhaps there is some problem in the logic when they are ordered in this way.\r\n\r\nA few general things I don't understand. Sorry for my newbieness.\r\n\r\n1) Why did we not detect the deadlock when Thread0 did Deadlock.look()?  The locks were the same at that point.\r\n\r\n2) Why in the timeout case do we do a second Deadlock.look on Thread0?\r\n\r\n3) Should the order of the LockControl objects matter?\r\n\r\n4) Could someone give me a high level description of the arguments to Deadlock.look()\r\nstatic Object[] look(SinglePool factory, LockSet set, LockControl control, ActiveLock startingLock, byte deadlockWake) {\r\nThere is no javadoc.  I would be happy to add some if someone could post the information here.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-11T18:06:59.886+0000","updated":"2008-12-11T18:06:59.886+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655725","id":"12655725","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I don't have answers, but more questions.  It looks like there are also timing bugs going on.  It might help if the program dumped more timing information along with print outs.\r\n\r\nFor the timeout case, ignoring that it should be a deadlock, it seems like we should see a timeout after 60 seconds for Thread0 and then a timeout for Thread1 after 70 seconds, but it looks like they both timeout at the same time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-12-11T18:34:49.712+0000","updated":"2008-12-11T18:34:49.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655746","id":"12655746","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"how about this as start for the javadoc:\r\n    /**\r\n     * Do a deadlock search.\r\n     * <p>\r\n     * Walk through the graph of all locks and search for cycles among\r\n     * the waiting lock requests which would indicate a deadlock.  A simple\r\n     * deadlock cycle is where the granted locks of waiting compatibility\r\n     * space A is blocking compatibility space B and space B holds locks causing\r\n     * space A to wait.\r\n     * <p>\r\n     * Would be nice to get a better high level description of deadlock\r\n     * search.\r\n     * <p>\r\n     *\r\n     * @return The identifier to be used to open the conglomerate later.\r\n     *\r\n     * @param factory       The locking system factory\r\n     * @param set           The complete lock table. A lock table is a hash\r\n     *                      table keyed by a Lockable and with a LockControl as\r\n     *                      the data element.\r\n     * @param control       A LockControl contains a reference to the item being\r\n     *                      locked and doubly linked lists for the granted locks\r\n     *                      and the waiting locks.  The passed in value is the\r\n     *                      lock that the caller was waiting on when woken up\r\n     *                      to do the deadlock check.\r\n     * @param startingLock  represents the specific waiting lock request that\r\n     *                      the caller has been waiting on, before just being\r\n     *                      woken up to do this search.\r\n     * @deadlockWake        Either Constants.WAITING_LOCK_IN_WAIT, or\r\n     *                      Constants.WAITING_LOCK_DEADLOCK.  I am not sure\r\n     *                      about this one.\r\n     *\r\n     * @exception  StandardException  Standard exception policy.\r\n     **/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-12-11T19:16:50.660+0000","updated":"2008-12-11T19:16:50.660+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655765","id":"12655765","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"> 1) Why did we not detect the deadlock when Thread0 did Deadlock.look()? The locks were the same at that point.\r\nTo me this looks like another instance of the bug.  Either thread searching should find the deadlock once they have both gone \r\ninto waiting, which I believe is the case here.  I believe knut's comment on canSkip may be relevant.  I still don't understand the\r\ncode using skip.  \r\n\r\n> 3) Should the order of the LockControl objects matter? \r\nIf things are working right deadlock detection should find it no matter what, the order though might change which one is picked as victim.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-12-11T20:21:41.371+0000","updated":"2008-12-11T20:21:41.371+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655772","id":"12655772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Maybe the ordering was a red herring. Here is another run with timestamps and also with printing out index:\" + index +\" chain.size():\" + chain.size() + \" chain.indexOf(grants):\" + chain.indexOf(grants) before we evaluate whether to skip.\r\n\r\nHere the order of the LockSet  is the same for both runs.  \r\n\r\nThe timestamp for the exceptions in the output is off because the exceptions are accumulated and then print, but the derby.log does show the two lock timeout exceptions with almost the  same timestamp so there does seem to be a bug there. \r\nI will try to make a simpler test case and file a bug for that.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-11T21:08:41.708+0000","updated":"2008-12-11T21:08:41.708+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12655791","id":"12655791","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I've stared at the code below and am not clear what it is trying to do.  Main questions are\r\nis it just trying to catch self waits?\r\nand why is canSkip useful to call, what is the code counting on canSkip to tell it?\r\n\r\nThe case in question, posed as the below comment is:\r\nGranted T0(S), T1(S), T0(U)\r\nWaiting T0(X)\r\nWaiting T1(U)\r\n\r\nWhat is the expected value of canSkip for the 2 waiting locks.  Looking at the code I think both are going to have canSkip\r\nset to true to indicate that it is ok to grant them in front of other waiting locks, because the space already holds a lock that\r\nis blocking the waiting locks - but only if they are compatible with all other space granted locks.\r\n\r\n                if (index != -1) {\r\n\r\n                    // We could be seeing a situation here like\r\n                    // Granted T1{S}, T2{S}\r\n                    // Waiting T1{X} - deadlock checking on this\r\n                    //\r\n                    // In this case it's not a deadlock, although it\r\n                    // depends on the locking policy of the Lockable. E.g.\r\n                    // Granted T1(latch)\r\n                    // Waiting T1(latch)\r\n                    //  is a deadlock.\r\n                    //\r\n\r\n                    if ((index == (chain.size() - 1)) ||\r\n                        ((index == (chain.size() - 2))\r\n                        && (index == (chain.indexOf(grants) - 1)))) {\r\n\r\n                        // potential self deadlock, but probably not!\r\n                        ActiveLock lock = (ActiveLock) waiters.get(space);\r\n\r\n                        if (lock.canSkip) {\r\n                            // not a deadlock ...\r\n                            chain.push(space); // set up as rollback() expects.\r\n\r\n                            rollback(chain);\r\n                            continue outer;\r\n                        }\r\n                    }\r\n\r\n                    return Deadlock.handle(factory, chain, index, waiters, deadl","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-12-11T22:23:45.100+0000","updated":"2008-12-11T22:23:45.100+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12656088","id":"12656088","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attaching a trunk patch derby-3980_javadoc_and_test_diff.txt to update the javadoc as Mike suggested and to add a test for this issue which of course currently fails. The test should be ready to add into the suite once the issue is fixed.  Ran javadoc build and saw no warnings.  I'll check this in later this afternoon.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-12T18:13:20.110+0000","updated":"2008-12-12T18:13:20.110+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12656090","id":"12656090","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"i am wondering if the problem is that lock manager not beeing able to tell the difference for the purpose of deadlock detection\r\nthe case of a waitor on a waitor because of live lock, and a waitor on a waitor because both are blocked.  lockSkip may come into\r\nit.   In this case I think lockSkip is getting set for both waitors, which properly means it is ok for them to skip waitors as they already\r\nhold a lock blocking waitors, but they can't get granted now.   \r\n\r\n\r\ngranted: T0(S), T1(S), T0(U)\r\nwaiting:  T1(U), T0(X)\r\n\r\nI think at least in the lastest repro which does 2 deadlock scans something is going wrong during 1st search which misses\r\nthe deadlock with respect to waiting on waitors case.  The problem comes when\r\nwe get to I think T0(X) which is marked waiting on a waitor.  For this we get to the \"waiting on a waitor\" part of the deadlock search and\r\nit does not push anything on the stack.  Seems like it should push whatever granted locks are incompatible with it. It just changes \r\nthe current search compatibility space to be the waitor space, which may be fine if it is just waiting for waitors in front of it to get \r\ngranted and there is not current incompatible lock.  \r\n\r\nwe need to make sure any fix does not start giving back false positives for livelock type waits.  The test suite really has almost no\r\ntesting for dealock/livelock cases, probably should add some as part of this fix.  The problem in the past has been depending on\r\ntiming it is sometimes hard to guarantee which waiting thread gets the deadlock in a system independent way.  \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-12-12T18:14:20.347+0000","updated":"2008-12-12T18:14:20.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12656157","id":"12656157","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Mike for the tips and recommending tests.  I am studying the code but must admit I am still a bit baffled by it all.\r\nI do think I can help by writing regression tests, so we can feel confident in the fix when we get one.   I'll write one for the simple deadlock case that I know works and  I'd like to write a test for the live lock scenario.  Do I just need three  threads,  2 doing a repeated staggered select and another trying to get in and do an update?\r\n \r\nAre there any other tests that would be good?\r\n\r\nThanks\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-12T20:39:36.568+0000","updated":"2008-12-12T21:52:45.464+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12656700","id":"12656700","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is a test that test for live lock.  I would appreciate it if someone could review to make sure I am testing the right thing.  I have\r\nSelectThread1 - starts right away.\r\nfor 10 tries {\r\n  - select * from t;\r\n   -wait 3 seconds\r\n   - commit\r\n}\r\n\r\nSelectThread2 \r\nWait 1 second then the same as SelectThread1>\r\n   \r\nUpdateThread\r\nWait 2 seconds\r\nUPDATE T SET I = 456 where I = 456\r\n\r\nDeadlock timeout set to 5 seconds\r\nLock timeout set to 10 seconds.\r\n\r\nMakes sure the update goes through without exception.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-15T19:11:04.216+0000","updated":"2008-12-15T19:11:04.216+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12657118","id":"12657118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I am attaching an old user case which should show a deadlock but gives lock timeouts.  I think it is just the same as DERBY-3980 except with inserts instead of deletes or updates, so I don't think it warrants another test.  Posting it here so it can be tried with the fix once there is one and perhaps someone else will see something worthwhile adding to the tests.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-16T19:08:49.887+0000","updated":"2008-12-16T19:08:49.887+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12657138","id":"12657138","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The test looks OK to me. It tests what its class javadoc says (that the two readers don't starve the writer). But wasn't the point actually to test that the deadlock detection doesn't incorrectly report it as a deadlock? I'm not sure if deadlock detection will be performed in this case. If I understand the description of the test correctly, the update thread will be granted the exclusive lock after two seconds, but deadlock detection is not performed unless it needs to wait more than five seconds.\r\n\r\nSome minor nits:\r\n\r\n* This code in selectWorker() doesn't do anything:\r\n\r\n+            if (delay > 0)\r\n+                ;\r\n\r\n* The while loop in selectWorker() checks the exit condition twice, here\r\n\r\n+            while (!isUpdateDone() && tries <= 10) {\r\n\r\nand here\r\n\r\n+                if (tries == 10)\r\n+                    fail(\"Update did not occur after 10 selects\");\r\n\r\nThe first check has no effect currently, and it should probably be removed so that one later doesn't disable the last check by accident if one decides to change to some other number of iterations and forgets to update one of the places.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-12-16T19:57:41.242+0000","updated":"2008-12-16T19:57:41.242+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12657165","id":"12657165","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Knut for looking at the patch.  I committed  revision 727147 for the changes you recommended.  The test for deadlock detection I checked in was Derby3980DeadlockTest.  That test currently fails with a lock timeout, so is not part of the suite.\r\n\r\nI added LiveLockTest because Mike suggested that we add a test for the live lock scenario as part of this issue, so we make sure we don't regress. Perhaps it would have been clearer to open a separate issue.  I hope I understood live lock correctly and that's what's being tested with LiveLockTest.  If not,  I'll try to make another shot at it when I get back from holiday in a few weeks time.  Hopefully  the mysteries of Deadlock.look() will be unlocked during that time and this issue can be resolved. If so the test Derby3980DeadlockTest should be enabled.\r\n\r\nKathey\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-16T21:14:41.280+0000","updated":"2008-12-16T21:14:41.280+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12657204","id":"12657204","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I understood Mike's comment as that we should make sure a livelock wasn't detected as a deadlock (false positive) after we make the changes, which means we would have to run deadlock detection on a possible livelock situation in order to test it. I have problems seeing how changes to the deadlock detection algorithm could cause a regression in a test that doesn't exercise that algorithm. But I agree that it's good to have this test too. Just shortening the deadlock timeout or increasing the time the select threads hold the locks would additionally make it test the deadlock detection algorithm, though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-12-16T22:44:47.392+0000","updated":"2008-12-16T22:44:47.392+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12657547","id":"12657547","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is the updated patch where I confirmed we enter Deadlock.look(). I made the sleep 25 seconds and used the default deadlock and wait timeouts.  I tried just adjusting the deadlock timeout down to achieve the same result, but found we were never entering Deadlock.look(). There seems to be a problem  with the timeout values at least when set low.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-12-17T20:50:15.851+0000","updated":"2008-12-17T20:50:15.851+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12658687","id":"12658687","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Do you see the problem with low timeout values if you change the nesting order of the CleanDatabaseTestSetup and the DatabasePropertyTestSetup? Many tests set the timeouts to even lower values (typically 2 seconds deadlock timeout and 4 seconds wait timeout).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-12-22T22:11:18.672+0000","updated":"2008-12-22T22:11:18.672+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12658710","id":"12658710","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I think I see now why we have a problem with a lower deadlock timeout. Since the updater is supposed to be granted the lock after two seconds, we need to set the deadlock timeout to one second in order to trigger the deadlock detection. However, just before the updater has waited for one second, the first select thread releases its lock and wakes up all waiters. This early wakeup makes the updater check if it can obtain the lock, which it can't, but it won't do a deadlock check. It then goes back to sleep for another second, but before it wakes up to perform deadlock detection, it is granted the lock. (It looks like we allow five early wakeups before we reduce the time to wait for a deadlock. So for each early wakeup, the deadlock timeout is effectively increased. This is probably a good way to do it, since early wakeups indicate that it's probably not a deadlock yet.)\r\n\r\nEasy workaround: Set the deadlock timeout to 1 second, and make the select threads hold the locks for 4 seconds instead of 3 seconds. Then the update thread will wait for two seconds before it gets the early wakeup (because the first select thread releases the lock), and by that time it will already have performed deadlock detection.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-12-22T23:09:02.383+0000","updated":"2008-12-22T23:09:02.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12662182","id":"12662182","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Knut for figuring out how to set the sleep and deadlock timeout. I made the changes you suggested.  Although we are now going through deadlock detection, I am still not entirely sure I am  testing the scenario Mike was worried about.  If you or Mike have any suggestions on more test scenarios, please let me know and I will add them.   I think I will abandon staring at the deadlock detection code for a while.    I hope someone that understands this code better than I will fix this bug.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-01-09T00:00:31.927+0000","updated":"2009-01-09T00:00:31.927+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/12726961","id":"12726961","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Triaged for 10.5.2. Changed component to Services, since that's where the deadlock detection code is located.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-07-03T13:33:50.970+0000","updated":"2009-07-03T13:33:50.970+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/13006414","id":"13006414","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attaching a patch for this issue. It's essentially the same patch as the 1b patch attached to DERBY-5073, only that the code has been re-indented to account for the extra nesting level added in that patch.\r\n\r\nThe patch also adds a regression test with a test case both for this issue and for DERBY-5073. The test cases fail with a lock timeout without the fix and pass (get the expected deadlock exception) with the fix.\r\n\r\nI'm running the regression test suites on the patch now and intend to commit it to trunk if the tests pass.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2011-03-14T14:04:31.847+0000","updated":"2011-03-14T14:04:31.847+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/13006419","id":"13006419","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Wow! Now that's a test case! :)\r\n\r\nSeriously, though, the new tests look excellent; they're commented very\r\nwell, and the code is clearly written. There's no easy way to write deadlock\r\ntest cases; your effort here should lead the way and make it easier for\r\npeople to write additional deadlock test cases in the future. Thanks very\r\nmuch for taking the time to do so.\r\n\r\nIt's too bad we can't set the deadlock timeout to less than a second. Nowadays,\r\nthat's an eternity on a modern computer.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2011-03-14T14:15:14.555+0000","updated":"2011-03-14T14:15:14.555+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/13006505","id":"13006505","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks, Bryan. I take that as a +1, then. :)\r\n\r\nCommitted revision 1081455.\r\n\r\nI agree with your comment about sub-second deadlock timeouts. Actually, one may even consider doing deadlock detection every time a lock cannot be granted immediately. I wouldn't think that it would be too expensive, though I've never measured the cost of the deadlock detection, and if you have to wait for a lock, you've lost performance-wise in any case, so one might just as well do the extra check. But that's another JIRA issue, I guess...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2011-03-14T16:47:21.609+0000","updated":"2011-03-14T16:47:21.609+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12410236/comment/13008698","id":"13008698","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Closing this issue. Thank you Knut for the great fix and figuring out the tricky deadlock code.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-03-19T00:25:55.911+0000","updated":"2011-03-19T00:25:55.911+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3980/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06mdz:"}}