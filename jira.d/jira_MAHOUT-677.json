{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12504785","self":"https://issues.apache.org/jira/rest/api/latest/issue/12504785","key":"MAHOUT-677","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310751","id":"12310751","key":"MAHOUT","name":"Mahout","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310751&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310751&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310751&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310751&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13060","id":"13060","description":"Apache Mahout","name":"Mahout"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315255","id":"12315255","description":"","name":"0.5","archived":false,"released":true,"releaseDate":"2011-05-27"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2011-04-20 12:42:08.071","customfield_12312323":null,"customfield_12310420":"9385","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_17033700_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-04-20T16:57:12.667+0000","workratio":0,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAHOUT-677/watchers","watchCount":0,"isWatching":false},"created":"2011-04-20T12:13:18.979+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":7200,"aggregatetimeoriginalestimate":7200,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315255","id":"12315255","description":"","name":"0.5","archived":false,"released":true,"releaseDate":"2011-05-27"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","emailAddress":"ted dot dunning at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-05-21T03:19:02.860+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12314318","id":"12314318","name":"Examples"}],"timeoriginalestimate":7200,"description":"The FastLineReader in SimpleCsvExamples.java try to parse the line quickly through parse the bytes directly from the stream without the cost of copy Strings. But it didn't parse the line correctly and will get all double values as zero in fast parsing mode","customfield_10010":null,"timetracking":{"originalEstimate":"2h","remainingEstimate":"2h","originalEstimateSeconds":7200,"remainingEstimateSeconds":7200},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":7200,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"22744","summary":"The SimpleCsvExamples didn't really parsed the double correctly with the FastLine and FastLineReader","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":7200,"percent":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":7200,"percent":0},"comment":{"startAt":0,"maxResults":9,"total":9,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022090","id":"13022090","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"body":"I wrote a patch on the code. Just two lines change.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"created":"2011-04-20T12:14:52.343+0000","updated":"2011-04-20T12:14:52.343+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022096","id":"13022096","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"body":"Yes that seems like a bug. I also wonder why the code is parsing doubles when the generated input are ints?\r\n\r\nThe fast version won't fail if the input is malformed (values like \"foo\" or \"2.3\"), and does make an assumption about character encoding, but I suppose that's the point of this optimization. But if you're assuming the you know what the input is like, exactly, can you assume a binary input format and avoid parsing altogether?\r\n\r\nOr... is this really just a proof of concept that could be just as well removed? I don't see usages.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"created":"2011-04-20T12:42:08.071+0000","updated":"2011-04-20T12:42:08.071+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022098","id":"13022098","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"body":"Hi Sean,\r\n\r\nThe code is a proof that you could optimize the time spent on parsing the inputs. This optimization is required for sequential algorithm like SGD. Because for SGD, most of the time was spent on parsing and hashing the features, it is mentioned in Chapter 16.3.4 in Mahout in Action. And per our test, more than 80% of the time was spent on parsing the inputs and put it into a Vector, and the training only cost about 10% of the time and the IO cost another 10%. So I will say that the optimization could be thought as \"required\".\r\n\r\nThe fast mode should be used in the generated text by the SimpleCsvExamples.java which is an integer. I guess why they use double is that they didn't have a Vector implementation that use a int array to save the content.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"created":"2011-04-20T12:49:38.507+0000","updated":"2011-04-20T12:49:38.507+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022121","id":"13022121","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"body":"I can optimize the parsing about 10x more: don't parse from text! My question is whether the use cases this approach is for are simply better suited to binary input, since it is even faster, results in less I/O, and has no gotchas. Is the idea that you are accepting CSV from an external source or system? in which case I wonder if it's a good idea to silently mis-parse numbers that aren't ints.\r\n\r\nI was also just wondering out loud whether it's better to remove this example rather than try to fix forward, as it's not an example of using Mahout per se.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"created":"2011-04-20T13:38:07.402+0000","updated":"2011-04-20T13:38:07.402+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022152","id":"13022152","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"body":"Hi Sean,\r\n\r\nFirst, most of the time spent is not on IO or even parsing, but spent on copy a String over and over, which is also mentioned in your book <Mahout In Action>, and I reproduced the same result by a test. The code cost most of the time is :\r\nencoder[i].addToVector(x.get(i), v);\r\n\r\nWhich copied a String once and have to generate the hashCode once again I guess. So what should be avoid is the conversion to a String in parsing the data actually for SGD algorithm.\r\n\r\nI agreed that the performance could be optimized more by a customized binary input format. But I thought the example here is good enough since it proved the idea and easy to read. Using a customized binary format might make the code or data hard to read, and a binary protocol like Thrift is even slower while parsing the data comparing to a customized parser by pure text per my experience.\r\n\r\nAnyway,  it is your call, why don't you ask the author of the Chapter 16.3.4 of <Mahout In Action> to decide you guys need a better example or just use the patch here?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"created":"2011-04-20T14:28:01.595+0000","updated":"2011-04-20T14:28:01.595+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022166","id":"13022166","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"body":"(If it's just reading ints, I was thinking just write 4-byte ints. That's got to be the fastest of all.)\r\n\r\nThe author would be Ted, really his call. If it's more of an example for the book, it could be attached to the book. If it stays that's cool too, just need to have a think about fixing/documenting the issues raised here.\r\n\r\nYou've raised a different an interesting point about performance though. You find that the slow-down is actually in addToVector, where it converts a String to byte[]? The thing is, the corresponding line in the \"fast\" version skips this step and adds null.\r\n\r\nIndeed, also passing null in the \"normal\" version makes it twice as fast for me. It's still twice as slow as the \"fast\" version though. But I do wonder whether the example deserves a bit more attention. I may not know what I'm doing. Is that a difference that shouldn't exist between the two benchmarks?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"created":"2011-04-20T15:20:00.729+0000","updated":"2011-04-20T15:20:00.729+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022174","id":"13022174","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"body":"Hi Sean,\r\n\r\nI thought Ted knew the slow-down comes from the addToVector. Since he said \"Doing all of the allocations involved in such a copy-heavy programming style costs quite a bit, and lots of people focus on reducing allocation costs by re-using data structures extensively. The fact is, however, that the real cost is not so much the cost of allocation, but the cost of copying the data over and over. An additional cost is due to the fact that constructing a new String object in Java involves creating the hash- code for each new string. Computation of the hash code costs almost as much as copying the data.\" in the book page 252.\r\n\r\nAnd even didn't count the cost of String copy and hashCode, the fast version still has improvements in IO and text parsing. \r\n\r\nBut I thought your idea of use total binary input would be really helpful in real production mode, since the SGD algorithm is really blazing fast, any performance improvement in the feature parse, hashing, encoding would improve the overall performance a lot.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuwenhao","name":"xuwenhao","emailAddress":"wenhao dot xu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stanley Xu","active":true},"created":"2011-04-20T15:33:27.594+0000","updated":"2011-04-20T15:33:27.594+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022178","id":"13022178","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"body":"(Why don't I stop talking here since it's not my code... I'll commit the fix since it looks clear and let Ted chime in as needed otherwise.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"created":"2011-04-20T15:39:23.527+0000","updated":"2011-04-20T15:39:23.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504785/comment/13022544","id":"13022544","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"body":"Integrated in Mahout-Quality #765 (See [https://builds.apache.org/hudson/job/Mahout-Quality/765/])\r\n    ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"created":"2011-04-20T23:44:05.649+0000","updated":"2011-04-20T23:44:05.649+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAHOUT-677/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0494n:"}}