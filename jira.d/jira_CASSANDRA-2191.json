{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12498994","self":"https://issues.apache.org/jira/rest/api/latest/issue/12498994","key":"CASSANDRA-2191","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310865","id":"12310865","key":"CASSANDRA","name":"Cassandra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310865&avatarId=12034","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310865&avatarId=12034","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310865&avatarId=12034","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310865&avatarId=12034"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11961","id":"11961","description":"Apache Cassandra related projects","name":"Cassandra"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314820","id":"12314820","description":"","name":"0.8 beta 1","archived":false,"released":true,"releaseDate":"2011-04-22"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2011-03-08 20:55:37.073","customfield_12312322":null,"customfield_12312323":null,"customfield_12310222":"10002_*:*_1_*:*_2624064816_*|*_1_*:*_1_*:*_1884909986_*|*_5_*:*_1_*:*_0","customfield_12310420":"28464","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-04-11T08:58:35.833+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-2191/watchers","watchCount":6,"isWatching":false},"created":"2011-02-18T04:29:01.052+0000","customfield_10022":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"labels":["compaction"],"customfield_12312333":null,"customfield_12311124":null,"customfield_12312334":null,"customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12338502","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12338502","type":{"id":"10032","name":"Blocker","inward":"is blocked by","outward":"blocks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"},"outwardIssue":{"id":"12479848","key":"CASSANDRA-1740","self":"https://issues.apache.org/jira/rest/api/2/issue/12479848","fields":{"summary":"Nodetool commands to query and stop compaction, repair, cleanup and scrub","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12337575","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12337575","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12498425","key":"CASSANDRA-2156","self":"https://issues.apache.org/jira/rest/api/2/issue/12498425","fields":{"summary":"Compaction Throttling","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png","name":"New Feature","subtask":false}}}},{"id":"12337574","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12337574","type":{"id":"12310051","name":"Supercedes","inward":"is superceded by","outward":"supercedes","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"},"outwardIssue":{"id":"12493531","key":"CASSANDRA-1876","self":"https://issues.apache.org/jira/rest/api/2/issue/12493531","fields":{"summary":"Allow minor Parallel Compaction","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-04-12T04:39:31.058+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312978","id":"12312978","name":"Core"}],"timeoriginalestimate":null,"description":"This ticket overlaps with CASSANDRA-1876 to a degree, but the approaches and reasoning are different enough to open a separate issue.\r\n\r\nThe problem with compactions currently is that they compact the set of sstables that existed the moment the compaction started. This means that for longer running compactions (even when running as fast as possible on the hardware), a very large number of new sstables might be created in the meantime. We have observed this proliferation of sstables killing performance during major/high-bucketed compactions.\r\n\r\nOne approach would be to pause compactions in upper buckets (containing larger files) when compactions in lower buckets become possible. While this would likely solve the problem with read performance, it does not actually help us perform compaction any faster, which is a reasonable requirement for other situations.\r\n\r\nInstead, we need to be able to perform any compactions that are currently required in parallel, independent of what bucket they might be in.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12475970","id":"12475970","filename":"0001-Add-a-compacting-set-to-DataTracker.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-11T06:23:40.806+0000","size":7646,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12475970/0001-Add-a-compacting-set-to-DataTracker.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12475971","id":"12475971","filename":"0002-Use-the-compacting-set-of-sstables-to-schedule-multith.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-11T06:23:40.827+0000","size":22375,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12475971/0002-Use-the-compacting-set-of-sstables-to-schedule-multith.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12475972","id":"12475972","filename":"0003-Expose-multiple-compactions-via-JMX-and-a-concrete-ser.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-11T06:23:40.836+0000","size":38577,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12475972/0003-Expose-multiple-compactions-via-JMX-and-a-concrete-ser.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12475973","id":"12475973","filename":"0004-Allow-multithread-compaction-to-be-disabled.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-11T06:23:40.844+0000","size":4402,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12475973/0004-Allow-multithread-compaction-to-be-disabled.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12475974","id":"12475974","filename":"0005-Acquire-the-writeLock-for-major-cleanup-scrub-in-order.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-11T06:23:40.853+0000","size":8063,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12475974/0005-Acquire-the-writeLock-for-major-cleanup-scrub-in-order.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12475975","id":"12475975","filename":"0006-Prevent-cache-saves-from-occuring-concurrently.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-11T06:23:40.863+0000","size":2879,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12475975/0006-Prevent-cache-saves-from-occuring-concurrently.txt"}],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"93030","summary":"Multithread across compaction buckets","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"customfield_12311420":null,"customfield_12311421":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":23,"total":23,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/12996235","id":"12996235","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"Patch to add a \"compacting\" set to the SSTableTracker which is atomically modified to schedule compactions. SSTables are removed from the compacting set in a finally block.\r\n\r\nAlso, converts the \"compactionLock\", which is only used by migrations (to completely stop compactions), to a read-write lock. Running compactions acquire as readers, migrations acquire as writer.\r\n\r\nImplications: up to #num-procs compactions will run at once, possibly within the same bucket, but likely in different buckets.\r\n\r\nThis patch goes hand in hand with CASSANDRA-2156, which ensures that despite our multithreading, we don't trample other operations on the system.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-02-18T04:57:04.007+0000","updated":"2011-02-18T04:57:04.007+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/12997991","id":"12997991","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"I just noticed this makes monitoring inaccurate: CompactionExecutor is going to need a bit of an overhaul to report multiple compactions. Alternatively, as stated in the FIXME in CompactionExecutor, it could become a real stage: perhaps we could find a way to generically report on running tasks in stages?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-02-22T19:31:57.322+0000","updated":"2011-02-22T19:31:57.322+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13004206","id":"13004206","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"I would prefer simply trying to solve reporting for CM/CE; we only have information on those tasks because we have ICompactionInfo to tell us about it.  I don't think we want to turn this into \"add some kind of progress reporting for generic Runnables.\"","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2011-03-08T20:55:37.073+0000","updated":"2011-03-08T20:55:37.073+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13005909","id":"13005909","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"Adds a third patch to clean up JMX: deprecates the existing single compaction methods, and adds a list-of-strings output for running compactions.\r\n\r\nReady for review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-03-12T00:03:55.069+0000","updated":"2011-03-12T00:03:55.069+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13009010","id":"13009010","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amorton","name":"amorton","emailAddress":"aaron at thelastpickle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=amorton&avatarId=11346","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amorton&avatarId=11346","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amorton&avatarId=11346","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amorton&avatarId=11346"},"displayName":"amorton","active":true},"body":"Stu, as discussed on IRC I tried to have a look at this but it failed to apply against the current trunk.\r\n\r\n{noformat}\r\naarons-MBP-2011:cassandra aaron$ git am patch/2191/0001-Add-a-compacting-set-to-sstabletracker.txt \r\nApplying: Add a `compacting` set to sstabletracker\r\nerror: patch failed: src/java/org/apache/cassandra/io/sstable/SSTableTracker.java:53\r\nerror: src/java/org/apache/cassandra/io/sstable/SSTableTracker.java: patch does not apply\r\nPatch failed at 0001 Add a `compacting` set to sstabletracker\r\n{noformat}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amorton","name":"amorton","emailAddress":"aaron at thelastpickle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=amorton&avatarId=11346","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amorton&avatarId=11346","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amorton&avatarId=11346","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amorton&avatarId=11346"},"displayName":"amorton","active":true},"created":"2011-03-21T03:24:50.230+0000","updated":"2011-03-21T03:24:50.230+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13009807","id":"13009807","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"Rebased for trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-03-22T19:48:02.859+0000","updated":"2011-03-22T19:48:02.859+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13010077","id":"13010077","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amorton","name":"amorton","emailAddress":"aaron at thelastpickle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=amorton&avatarId=11346","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amorton&avatarId=11346","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amorton&avatarId=11346","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amorton&avatarId=11346"},"displayName":"amorton","active":true},"body":"I have a bunch of questions mostly because I'm trying to understand the reasons for doing things.\r\n \r\n# If max is 0 SSTableTracker.markCompacting() will return an empty list rather than null. \r\n# CompactionManager.submitMinorIfNeeded() sorts the SSTables in the bucket to compact the older ones first. When the list is passed to SSTableTracker.markCompacting() the order is lost. \r\n# In CompactionManager.submitIndexBuild() and submmitSSTableBuild() should the calls to executor be in an inner try block to ensure the lock is always released.\r\n# If the size of the thread pool for CompactionManager.CompactionExecutor() is not configurable is there a risk of using too many threads and saturating the IO with compaction? Could some people want less than 1 thread per core?\r\n# For my understanding: What about the CompactionExecutor using the JMXEnabledThreadPoolExecutor so it's stats come back in TP Stats ? \r\n# There is a comment in CompactionManager.doCompaction() about relying on a single thread in compaction to when determining if it's a major compaction. \r\n# The order in which the buckets are processed appears to be undefined. Would it make sense to order them by number of files or avg size so there is a more predictable outcome with multiple threads possibly working through a similar set of files? \r\n# For my understanding: Have you considered adding a flag to so that a minor compaction will stop processing buckets if additional threads have started? I think this may make the compaction less aggressive as it would more quickly fall back to a single thread until more were needed again.       \r\n# The order of the list returned from CompactionExecutor.getCompactions() is undefined. Could they be returned in the order they were added to the executor to make to the data returned from CompactionExecutor.getColumnFamilyInProgress() more reliable?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amorton","name":"amorton","emailAddress":"aaron at thelastpickle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=amorton&avatarId=11346","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amorton&avatarId=11346","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amorton&avatarId=11346","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amorton&avatarId=11346"},"displayName":"amorton","active":true},"created":"2011-03-23T11:51:42.798+0000","updated":"2011-03-23T11:51:42.798+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13013837","id":"13013837","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"1. Added {{if (max < min || max < 1) return null;}} check\r\n2. Switched to LinkedHashSet to preserve order\r\n3. Fixed, thanks\r\n4. The idea is that the throttling from CASSANDRA-2156 is a sufficient preventative measure for this, but it will be important to enable it by default, hopefully using the metrics from CASSANDRA-2171. I'd prefer not to have two tunables, but it's worth discussing.\r\n5. CompactionManagerMBean exposes getPendingTasks and getCompletedTasks with entirely different meanings, so I'm not sure we'd gain anything by this\r\n6. (see next comment)\r\n7. Yes, it probably would, but I think that is an issue for a separate ticket. Usually compacting the smallest bucket first (since the files are likely to be hot in cache) is the biggest win (which we do): it will be very rare for higher buckets to be more important\r\n8. This would probably be a good idea, for example, if you have more than {{max}} sstables in the minimum bucket and not enough active threads to parallelize the bucket. Opened CASSANDRA-2407\r\n9. I can't think of an easy way to do this, but if you can, I'm willing","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-03-31T05:31:44.559+0000","updated":"2011-03-31T07:17:20.799+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13013838","id":"13013838","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"Regarding 6.: there is an issue related to behaviour here: thank you for pointing it out. As implemented in this patch, triggering a major compaction will start it immediately with whatever sstables aren't already active in compaction: this means that triggering a major compaction while another compaction is running will not result in a major compaction. In the past, this wouldn't have been kosher, because major compactions were required to clean up tombstones.\r\n\r\nBut now that we have the bloomfilter checking optimization for compaction, the new behaviour is probably sufficient: when there ''aren't'' any other compactions active, the \"major\" flag is an optimization that makes the bloomfilter checks unnecessary; when there ''are'' other compactions active, the bloomfilter check works as usual.\r\n\r\nThoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-03-31T05:40:12.889+0000","updated":"2011-03-31T05:40:12.889+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13015150","id":"13015150","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amorton","name":"amorton","emailAddress":"aaron at thelastpickle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=amorton&avatarId=11346","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amorton&avatarId=11346","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amorton&avatarId=11346","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amorton&avatarId=11346"},"displayName":"amorton","active":true},"body":"4) Sounds reasonable if throttling is on.\r\n \r\n6) I'm not familiar with the bloom filter optimization you mentioned. However it seems that more than anything else the major flag in doCompaction() indicates if the compaction is running on all sstables, regardless of how the process was triggered. i.e. the first ever minor compaction would also be marked as major by this logic. PrecompactedRow and LazilyCompactedRow will purge rows if the major flag is set or the key is only present in the sstables under compaction. I'm not sure why the extra check is there for minor compactions, but it looks like losing the fact the a major/manual compaction was started could change the purge behaviour. \r\n\r\nI'm also trying to understand if the isKeyInRemainingSSTables() in the AbstractCompactedRow sub classes could be affected by multithreading. e.g. CF with two buckets, high min compaction threshold so longer compaction, two concurrent minor compactions one in each bucket, row A in both buckets, if either thread processes row A before the other finishes it would stop that thread purging the row, is there a race condition that stops both threads purging the row?\r\n\r\n9) We do not use the value in the compactions map, could we set it to the current system time when beginCompaction() is called and use that to the sort the list ? was not a biggie \r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amorton","name":"amorton","emailAddress":"aaron at thelastpickle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=amorton&avatarId=11346","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amorton&avatarId=11346","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amorton&avatarId=11346","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amorton&avatarId=11346"},"displayName":"amorton","active":true},"created":"2011-04-03T14:18:52.383+0000","updated":"2011-04-03T14:18:52.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13015446","id":"13015446","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"\r\nHere's some number of remarks on this. I wrote those on a plane so I did not had access to what was previously said above, and I'm too lazy to edit those back (and anyway there little intersections and nothing is outdated I think).\r\n\r\nComments:\r\n  * An unfortunate consequence of this is that the submission of a compaction can now fail, in particular cleanup or major ones (more precisely, cleanup compactions will leave some sstable unclean and major ones won't be major and thus won't clean all tombstones). It will be a pain for users. Not only should they check the log once they summit one of those compactions to see what is left to do. It's also inefficient: for cleanups, you'll have to submit a new one which will redo a full cleanup compaction (and those are not as efficient as they could be). For major compaction, it's even worse. Anyway, grabbing the write lock instead of the read lock for those compaction should be good enough.\r\n  * The different compactions weren't wrote to be run in parallel initially\r\n    We need a way to deactivate this if something goes wrong. It could\r\n    either be a flag that makes everyone acquire the write lock, or an\r\n    option to make the compaction executor mono-threaded.\r\n  * Related to the point above, I think that the cache writing tasks were fed to the compaction executor to make sure we never do 2 cache writing at the same time. We need to restore that property somehow.\r\n  * There's a number of TODO in the code. I am not a fan of leaving TODOs unless there is a really good reason to, there is JIRA tickets for that. In particular, I do not agree with the fact that flusherLock and compactionLock should be replaced by a list of sstables (at least this is not as simple as this is put).\r\n  * Let's not use clearUnsafe() to initialize DataTracker given its name (but I'm fine with renaming it say init() and CFStore.clearUnsafe() calls init()).\r\n  * The patch about closing the sstableScanners should be another ticket for traceability sake.\r\n\r\n\r\nSome more minor remarks:\r\n  * On the JMX reporting: I think it is ok to remove the methods instead of deprecating(it will be in a major release and there no indication that this is deprecated for the user anyway). Also, since looking at a list of strings in jconsole is a bit of a pain, it could be nice to at least expose the active count, and maybe a sum over all running compactions of bytesCompacted/toCompact (it would less ugly to expose a MBean for each CompactionInfo, but I'm not sure how easy/efficient that would be).\r\n  * About ACompactionInfo, we use ICompactionInfo for interface, but AbstractCompationInfo for abstract classes. Let's keep it at that for coherence of the code base sake.\r\n  * The compacting set field in CompactionManager is dead code. So is MIN_COMPACTION_THRESHOLD in CompactionsSet.\r\n  * I don't find the docString for markCompacting very clear (it kinds of suggest markCompacting it be in a finally block, and it's unclear that this is this method that does the marking.\r\n  * I would prefer adding forwarding methods in CFStore for mark/unmark since that's what we've done so far (instead of exporting DataTracker).\r\n  * In validationCompaction, the try would ideally be the next thing after the markCompacting().\r\n  * I'd prefer moving toString(CompactionInfo) in ICompactionInfo (or AbstractCompactionInfo). Also, since this is for JMX reporting, adding the object hashcode will confuse users more than anything else.\r\n  * In compactionExecutor, I suppose the HashMap with Object value is just a way to deal with the absence of an IdentityHashSet. If so, for clarity I would prefer using Collections.newSetFromMap(new IdentityHashMap()). Or really just a set should do it as it would make no sense to redefine the CopmactionInfo equality to be anything else than reference equality.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2011-04-04T14:56:29.096+0000","updated":"2011-04-04T14:56:29.096+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13016791","id":"13016791","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"* Added a config option to disable multithreaded compaction\r\n* Fixed TODOs\r\n* Renamed clearUnsafe\r\n* Moved sstablescanner changes to CASSANDRA-2431\r\n* Removed dead code in CompactionManager\r\n\r\n> I think that the cache writing tasks were fed to the compaction executor\r\nShould these go to the flush writer stage instead?\r\n\r\nI'll look into the rest of the comments and post an updated patch tomorrow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-07T10:01:55.419+0000","updated":"2011-04-07T10:01:55.419+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13017323","id":"13017323","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"* Implemented \"acquire the write lock long enough to schedule\" for major, cleanup and scrub: it's alone in patch 0005 for clarity\r\n* Removed the JMX methods I had deprecated before, and added a method that returns serialized objects for more programmatic access. The serialized object is concrete CompactionInfo, which replaces (I|A)CompactionInfo","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-08T07:10:14.670+0000","updated":"2011-04-08T07:10:14.670+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13017796","id":"13017796","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"This is ready for review... we'd reeeally like to get it in before the freeze.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-09T03:12:59.500+0000","updated":"2011-04-09T03:12:59.500+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13017848","id":"13017848","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"I'm having a high number of flight hours this week-end. I'll try to use a time to look at this and review by monday morning worst case scenario.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2011-04-09T12:30:51.177+0000","updated":"2011-04-09T12:30:51.177+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13017959","id":"13017959","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"Rebased.\r\n\r\nEDIT: FYI: the freeze is on Monday morning, so that might be too late.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-09T21:05:50.472+0000","updated":"2011-04-09T21:53:57.058+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13018063","id":"13018063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Some comments on the new patches:\r\n* I (really) don't like the stopTheWorld function. I don't like the name and arguments names and I don't find clear the 'abstraction' it provides. But more importantly it makes the 'unmarking' of sstable very fragile, since the markCompacting function *is not* in the 'try .. final' block where the unmark function is. Let's just inline this stopTheWorld function instead (it won't really be more code).\r\n* The forcing of major compaction in doCompaction is buggy, because there is no guarantee we haven't skipped some sstable (because of the skip option) or that some sstable has been removed from the set by lack of disk space.  Forcing a major compaction in those case is wrong. I know that when you submit a major compaction you could end up doing a minor one just because a sstable got flushed between the time you grabbed the set of sstables and the time you checked this set is still complete. But it is not a new problem (nor a big one, contrarily to wrongfully removing tombstones) so let's open a separate ticket if we want to fix that.\r\n* The ksname and cfname field in CompactionController should be replaced by getters (of cfs.metadata.{ksname|cfname}), if only to make sure we don't make the renaming of ks/cf more problematic that it already is (it's probably no problem here but avoiding the duplication of fields would be cool anyway).\r\n* As far as I can tell we still have a problem with cache saving in that you can have two cache saving happening at the same time (which will be bad).  To answer the proposition of a previous comment, I am not a fan of using the flush writer for this as it has more important things to do (and we would lose the reporting through JMX). A specific executor could solve the problem but it is a bit overkill.  Maybe a static atomicBoolean that cache writing tasks would atomically compare to false and set to true at the beginning. If that succeed they would do the cache writing and set back to false the boolean, otherwise the task would just return directly. It means it would discard a cache saving if one is already running but that's probably fine (that's actually probably what you want).\r\n* I would still prefer a IdentityHashSet rather than a HashMap whose value is unused in CompactionExecutor for the sake of the clarity of the code.\r\n* In nodetool printCompactionStats, we should keep the println with plain English as it was before instead of using the much denser (and much less user friendly) CompactionInfo.toString().\r\n* In SSTableWriter.Builder, when creating the compactionInfo, putting the OperationType as it is done will look ugly and I think it will be more confusing than anything else to the user (the previous message was probably quite enough).\r\n\r\nFYI, my monday morning happens to be quite a few hours before the monday morning 'freeze'. So if there is fixes for the things above by my monday morning, I'll look at it in priority.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2011-04-10T10:10:20.099+0000","updated":"2011-04-10T10:10:20.099+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13018211","id":"13018211","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"* Inlined stopTheWorld in 0005. Yes, I agree that the name sucked, but whether or not it is possible for a lock acquisition to fail on a server that is not already screwed, and whether an abstraction is in order here is still up for debate\r\n* Removed the 'forceMajor' parameter: will open a ticket post-commit to allow for guaranteeing that a manually triggered compaction is major\r\n* Moved ksname/cfname into getters. I didn't do this initially because the CFS is sometimes null, but I guess you'd get the NPE in either case\r\n* Added an AtomicBoolean to AutoSavingCache in 0006. I reeeally think this should go to the flush stage, since the tasks have almost identical lifetimes, and we don't really need progress for either of them\r\n* Wrapped the IdentityHashMap into an IdentityHashSet\r\n* Returned printCompactionStats to its former glory\r\n* Removed OperationType from SSTableWriter.Builder's task type\r\n\r\nThanks! CASSANDRA-2156 has been rebased as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-11T06:23:40.960+0000","updated":"2011-04-11T06:23:40.960+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13018247","id":"13018247","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Committed as r1090978 (with 2 minor modifs: slightly updated message in cassandra.conf (the word 'imperative' sounded too much (not that I contest the utility of the patch or anything)) and avoid NPE in CompactionController.get{Keyspace|ColumnFamily}).\r\n\r\nGreat work, thanks (and thanks for putting up with my pickiness).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2011-04-11T08:58:35.841+0000","updated":"2011-04-11T08:58:35.841+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13018251","id":"13018251","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"For the record:\r\n\r\nbq. Inlined stopTheWorld in 0005. Yes, I agree that the name sucked, but whether or not it is possible for a lock acquisition to fail on a server that is not already screwed, and whether an abstraction is in order here is still up for debate\r\n\r\nI do like the inlined version much more. I did not pretended that the previous version wasn't working. It was just hard to check that the umarking was happening correctly and even though I agree lock acquisition is unlikely to fail, it would have been easy for someone else to add lines inside stopTheWorld at the wrong place that could fail. And the name sucked :)\r\n\r\nbq. Added an AtomicBoolean to AutoSavingCache in 0006. I reeeally think this should go to the flush stage, since the tasks have almost identical lifetimes, and we don't really need progress for either of them\r\n\r\nI just don't want for cache saving to block flush too long. So I'm not saying it should not go to flush stage ever, but I'm inconfortable putting it there without some proper testing of its impact. We could make the flush stage multithreaded (with throttling), then I would have no problem with moving cache saving there (but then we would still have to make sure only one saving happen at a time).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2011-04-11T09:11:44.841+0000","updated":"2011-04-11T09:11:44.841+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13018254","id":"13018254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"body":"Integrated in Cassandra #848 (See [https://hudson.apache.org/hudson/job/Cassandra/848/])\r\n    Multithreaded compactions\r\npatch by stuhood; reviewed by slebresne for CASSANDRA-2191\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"created":"2011-04-11T09:21:44.187+0000","updated":"2011-04-11T09:21:44.187+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13018379","id":"13018379","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"body":"Forgot the magical +1 (better late than never)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slebresne","name":"slebresne","emailAddress":"sylvain at datastax dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=slebresne&avatarId=14630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=slebresne&avatarId=14630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=slebresne&avatarId=14630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=slebresne&avatarId=14630"},"displayName":"Sylvain Lebresne","active":true},"created":"2011-04-11T14:57:45.915+0000","updated":"2011-04-11T14:57:45.915+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12498994/comment/13018707","id":"13018707","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"Thanks a lot for the great review!\r\n\r\n> We could make the flush stage multithreaded\r\nAs a side note, flushing is already multithreaded: see the memtable_flush_writers setting.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2011-04-12T04:39:31.022+0000","updated":"2011-04-12T04:39:31.022+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-2191/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0g9vj:"}}