{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12548897","self":"https://issues.apache.org/jira/rest/api/latest/issue/12548897","key":"LUCENE-3940","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314025","id":"12314025","description":"Alpha release of the 4.x series","name":"4.0-ALPHA","archived":false,"released":true,"releaseDate":"2012-07-03"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12320752","id":"12320752","description":"Bug fix release after 3.6","name":"3.6.1","archived":false,"released":true,"releaseDate":"2012-07-22"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-03-31 12:41:58.988","customfield_12312323":null,"customfield_12310420":"233994","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_761360405_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-04-08T19:36:06.240+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3940/watchers","watchCount":2,"isWatching":false},"created":"2012-03-31T00:06:45.887+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-07-22T16:04:56.237+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"I modified BaseTokenStreamTestCase to assert that the start/end\r\noffsets match for graph (posLen > 1) tokens, and this caught a bug in\r\nKuromoji when the decompounding of a compound token has a punctuation\r\ntoken that's dropped.\r\n\r\nIn this case we should leave hole(s) so that the graph is intact, ie,\r\nthe graph should look the same as if the punctuation tokens were not\r\ninitially removed, but then a StopFilter had removed them.\r\n\r\nThis also affects tokens that have no compound over them, ie we fail\r\nto leave a hole today when we remove the punctuation tokens.\r\n\r\nI'm not sure this is serious enough to warrant fixing in 3.6 at the\r\nlast minute...\r\n","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"24081","summary":"When Japanese (Kuromoji) tokenizer removes a punctuation token it should leave a hole","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":15,"total":15,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13242885","id":"13242885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Patch; I think it's ready, except, I need to make a simpler test case than that new curious string....","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-03-31T00:19:32.712+0000","updated":"2012-03-31T00:19:32.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243100","id":"13243100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"New patch, fixing a bug in the last one, and adding a few more test cases.  I also made the \"print curious string on exception\" from BTSTC more ascii-friendly.\r\n\r\nI think it's ready.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-03-31T09:56:05.533+0000","updated":"2012-03-31T09:56:05.533+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243126","id":"13243126","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I dont think we should do this. StandardTokenizer doesnt leave holes when it drops punctuation,\r\nI think holes should only be real 'words' for the most part","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-03-31T12:41:58.988+0000","updated":"2012-03-31T12:41:58.988+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243299","id":"13243299","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq.  StandardTokenizer doesnt leave holes when it drops punctuation,\r\n\r\nBut is that really good?\r\n\r\nThis means a PhraseQuery will match across end-of-sentence (.),\r\nsemicolon, colon, comma, etc. (English examples..).\r\n\r\nI think tokenizers should throw away as little information as\r\npossible... we can always filter out such tokens in a later stage?\r\n\r\nFor example, if a tokenizer created punct tokens (instead of silently\r\ndiscarding them), other token filters could make use of them in the\r\nmean time, eg a synonym rule for \"u.s.a. -> usa\" or maybe a dedicated\r\nEnglish \"acronyms\" filter.  We could then later filter them out, even\r\nnot leaving holes, and have the same behavior that we have now?\r\n\r\nAre there non-English examples where you would want the PhraseQuery to\r\nmatch over punctuation...?  EG, for Japanese, I assume we don't want\r\nPhraseQuery applying across periods/commas, like it will now? (Not\r\nsure about middle dot...?  Others...?).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-03-31T21:39:08.545+0000","updated":"2012-03-31T21:39:08.545+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243730","id":"13243730","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"New test-only patch, breaking out the non-controversial (I think!)\r\npart of the patch.\r\n\r\nWith this new patch, Kuromoji still silently discards punctuation\r\n(just like StandardAnalyzer), but at least we get better test coverage\r\nin BTSTC to verify graph tokens are not messing up their offsets.\r\n\r\nI had to turn it off when testing Kuromoji w/ punctuation\r\nremoval... but it's still tested w/o punctuation removal, so I think\r\nit'd likely catch any bugs in how Kuromoji sets offsets of the\r\ncompound tokens... at least it's better than not checking at all\r\n(ie, today).\r\n\r\nThe only non-tests-only change is I uncommented an assert in Kuromoji;\r\nI think it's a valid assert.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-04-01T14:01:09.934+0000","updated":"2012-04-01T14:01:09.934+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243744","id":"13243744","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I think kuromoji has the problem: here it creates 'fake' intermediate 'tokens' and then deletes them and this somehow screws up the decompounding graph???\r\n\r\nit should never create these tokens in the first place! I think its well accepted that words carry the information content of a doc, punctuation has no information content really here, it doesn't tell me what the doc is about, and I don't think this is controversial, I just think your view on this is extreme...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-04-01T15:07:56.205+0000","updated":"2012-04-01T15:07:56.205+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243782","id":"13243782","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Here's an example where we create a compound token with punctuation.\r\n\r\nI got this from the Japanese Wikipedia export, with our MockCharFilter\r\nsometimes doubling characters: we are at a position that the\r\ncharacters 〇〇'''、''' after it... that 〇 is this Unicode character\r\nhttp://www.fileformat.info/info/unicode/char/3007/index.htm\r\n\r\nWhen Kuromoji extends from this position, both 〇 and 〇〇 are KNOWN,\r\nbut then we also extend by unknown 〇〇'''、''' (ie, 〇〇 plus only\r\npunctuation):\r\n\r\nNote that 〇 is not considered punctuation by Kuromoji's isPunctuation\r\nmethod...\r\n\r\n{noformat}\r\n  + UNKNOWN word 〇〇'''、''' toPos=41 cost=21223 penalty=3400 toPos.idx=0\r\n  + KNOWN word 〇〇 toPos=34 cost=9895 penalty=0 toPos.idx=0\r\n  + KNOWN word 〇 toPos=33 cost=2766 penalty=0 toPos.idx=0\r\n  + KNOWN word 〇 toPos=33 cost=5256 penalty=0 toPos.idx=1\r\n{noformat}\r\n\r\nAnd then on backtrace we make a compound token (UNKNOWN) for all of\r\n\"〇〇'''、'''\", while the decompounded path keeps two separate \"〇\"\r\ntokens but drops the '''、''' since it's all punctuation, thus\r\ncreating inconsistent offsets.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-04-01T16:52:55.543+0000","updated":"2012-04-01T16:52:55.543+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243784","id":"13243784","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=steve_rowe","name":"steve_rowe","emailAddress":"sarowe at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steve Rowe","active":true},"body":"bq. I think its well accepted that words carry the information content of a doc, punctuation has no information content really here, it doesn't tell me what the doc is about, and I don't think this is controversial, I just think your view on this is extreme...\r\n\r\nI disagree with you, Robert.  (If punctuation has no information content, why does it exist?)  IMHO Mike's examples are not at all extreme, e.g. some punctuation tokens could be used to trigger position increment gaps.\r\n\r\nbq. StandardTokenizer doesnt leave holes when it drops punctuation, I think holes should only be real 'words' for the most part\r\n\r\n\"Standard\"Tokenizer is drawn from Unicode UAX#29, which only describes word *boundaries*.  Lucene has grafted onto these boundary rules an assumption that only alphanumeric \"words\" should be tokens - this assumption does not exist in the standard itself.\r\n\r\nMy opinion is that we should have both types of things: a tokenizer that discards non-alphanumeric characters between word boundaries; and different type of analysis component that discards nothing.  I think of the discard-nothing process as *segmentation* rather than tokenization, and I've [argued for it previously|https://issues.apache.org/jira/browse/LUCENE-2498?focusedCommentId=12878963&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12878963].","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=steve_rowe","name":"steve_rowe","emailAddress":"sarowe at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steve Rowe","active":true},"created":"2012-04-01T16:56:44.461+0000","updated":"2012-04-01T16:56:44.461+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243785","id":"13243785","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"OK here's one possible fix...\r\n\r\nRight now, when we are glomming up an UNKNOWN token, we glom only as long as the character class of each character is the same as the first character.\r\n\r\nWhat if we also require that isPunct-ness is the same?  That way we would never create an UNKNOWN token mixing punct and non-punct...\r\n\r\nI implemented that and the tests seem to pass w/ offset checking fully turned on again...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-04-01T16:57:57.777+0000","updated":"2012-04-01T16:57:57.777+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243789","id":"13243789","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"New patch, implementing the idea above.  I think it's ready...\r\n\r\nIt also means we can unconditionally check for correct offsets in\r\ngraph tokens, which is nice.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-04-01T17:28:28.133+0000","updated":"2012-04-01T17:28:28.133+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13243799","id":"13243799","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nI disagree with you, Robert. (If punctuation has no information content, why does it exist?) IMHO Mike's examples are not at all extreme, e.g. some punctuation tokens could be used to trigger position increment gaps.\r\n{quote}\r\n\r\nPunctuation simply doesn't tell you anything about the document: this is fact. if we start indexing punctuation we just create useless terms that go to every document\r\n\r\nBecause of this, nobody wastes their time trying to figure out how index \"punctuation tokens\". Mike's problem is basically the fact he is creating a compound token of '??' \r\n\r\nFurthermore, the idea that 'if we don't leave a hole for anything removed, we are losing formation' is totally arbitrary, confusing, and inconsistent anyway. How come we leave holes for definitiveness in english but not for plurals in english, but in arabic or bulgarian we don't leave holes for definiteness, because it happens to be attached to the word and stemmed?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-04-01T18:01:35.113+0000","updated":"2012-04-01T18:01:35.113+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13244111","id":"13244111","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cm","name":"cm","emailAddress":"cm at atilika dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cm&avatarId=21726","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cm&avatarId=21726","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cm&avatarId=21726","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cm&avatarId=21726"},"displayName":"Christian Moen","active":true},"body":"I'm not familiar with the various considerations that were made with StandardTokenizer, but please allow me to share some comments anyway.\r\n\r\nPerhaps it's useful to distinguish between _analysis for information retrieval_ and _analysis for information extraction_ here?\r\n\r\nI like Michael's and Steven's idea of doing tokenization that doesn't discard any information.  This is certainly useful in the case of _information extraction_.  For example, if we'd like to extract noun-phrases based on part-of-speech tags, we don't want to conjoin tokens in case there's a punctuation character between two nouns (unless that punctuation character is a middle dot).\r\n\r\nRobert is of course correct that we generally don't want to index punctuation characters that occur in every document, so from an _information retrieval_ point of view, we'd like punctuation characters removed.\r\n\r\nIf there's an established convention that Tokenizer variants discards punctuation and produces the terms that are meant to be directly searchable, it sounds like a good idea that we stick to the convention here as well.\r\n\r\nIf there's no established convention, it seems useful that a Tokenizer would provide as much details as possible with text being input and leave downstream Filters/Analyzers  to remove whatever is suitable based on a particular processing purpose.  We can provide common ready-to-use Analyzers with reasonable defaults that users can look to, i.e. to process a specific language or do another common high-level task with text.  \r\n\r\nHence, perhaps each Tokenizer can decide what makes the most sense to do based on that particular tokenizer's scope of processing?\r\n\r\nTo Roberts point, this would leave processing totally arbitrary and consistent, but this would be _by design_ as it wouldn't be Tokenizer's role to enforce any overall consistency -- i.e. with regards to punctuation -- higher level Analyzers would provide that.\r\n\r\nThoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cm","name":"cm","emailAddress":"cm at atilika dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cm&avatarId=21726","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cm&avatarId=21726","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cm&avatarId=21726","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cm&avatarId=21726"},"displayName":"Christian Moen","active":true},"created":"2012-04-02T10:31:22.353+0000","updated":"2012-04-02T10:31:22.353+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13244118","id":"13244118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nPerhaps it's useful to distinguish between analysis for information retrieval and analysis for information extraction here?\r\n{quote}\r\n\r\nYes, since we are an information retrieval library, then there is no sense in adding *traps* and *complexity* to our analysis API.\r\n\r\n{quote}\r\nI like Michael's and Steven's idea of doing tokenization that doesn't discard any information.\r\n{quote}\r\n\r\nFor IR, this is definitely not information... calling it data is a stretch.\r\n\r\n{quote}\r\nIf there's an established convention that Tokenizer variants discards punctuation and produces the terms that are meant to be directly searchable, it sounds like a good idea that we stick to the convention here as well.\r\n{quote}\r\n\r\nThats what the tokenizers do today, they find tokens (In the IR sense). So yeah, there is an established convention already. Changing\r\nthis would be a *monster trap* because suddenly tons of people would be indexing tons of useless punctuation. I would strongly\r\noppose such a change.\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-04-02T11:00:57.712+0000","updated":"2012-04-02T11:00:57.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13244124","id":"13244124","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nThis is certainly useful in the case of information extraction. For example, if we'd like to extract noun-phrases based on part-of-speech tags, we don't want to conjoin tokens in case there's a punctuation character between two nouns (unless that punctuation character is a middle dot).\r\n{quote}\r\n\r\nThe option still exists in kuromoji (discardPunctuation=false) if you want to use it for this.\r\nI added this option because it originally kept the punctuation (for downstream filters to remove).\r\n\r\nlucene-gosen worked the same way, and after some time i saw *numerous* examples across the internet\r\nwhere people simply configured the tokenizer without any filters, which means huge amounts of \r\npunctuation being indexed by default. People don't pay attention to documentation or details,\r\nso all these people were getting bad performance.\r\n\r\nBased on this experience, I didn't want keeping punctuation to be the default, nor even achievable\r\nvia things like solr factories here. But i added the (expert) option to Kuromoji because its really \r\na more general purpose things for japanese analysis, because its already being used for other things,\r\nand because allowing a boolean was not expensive or complex to support.\r\n\r\nBut I don't consider this a bonafied option from the lucene apis, i would be strongly against adding\r\nthis to the solr factories, or as an option to KuromojiAnalyzer. And, I don't think we should add such\r\na thing to other tokenizers either. \r\n\r\nOur general mission is search, if we want to decide we are expanding our analysis API to be generally\r\nuseful outside of information retrieval, thats a much bigger decision with more complex tradeoffs that\r\neveryone should vote on (e.g. moving analyzers outside of lucene.apache.org and everything).\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-04-02T11:14:39.245+0000","updated":"2012-04-02T11:14:39.245+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12548897/comment/13420209","id":"13420209","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Bulk close for 3.6.1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2012-07-22T16:04:56.117+0000","updated":"2012-07-22T16:04:56.117+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3940/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04hdr:"}}