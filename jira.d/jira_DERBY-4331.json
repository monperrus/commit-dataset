{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12431975","self":"https://issues.apache.org/jira/rest/api/latest/issue/12431975","key":"DERBY-4331","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313478","id":"12313478","description":"Head of 10.1 branch. Maintenance version bump for sps update ","name":"10.1.3.3","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312251","id":"12312251","description":"Head of 10.2 branch","name":"10.2.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313143","id":"12313143","description":"Head of 10.3 branch","name":"10.3.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313401","id":"12313401","description":"Head of 10.4 branch","name":"10.4.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314117","id":"12314117","description":"Next release after 10.5.2.0 release candidate #1","name":"10.5.3.0","archived":false,"released":true,"releaseDate":"2009-08-21"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-08-02 13:28:25.692","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24190","customfield_12310222":"1_*:*_1_*:*_925720965_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-08-12T16:21:39.461+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4331/watchers","watchCount":0,"isWatching":false},"created":"2009-08-01T23:12:58.496+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"11.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313478","id":"12313478","description":"Head of 10.1 branch. Maintenance version bump for sps update ","name":"10.1.3.3","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312251","id":"12312251","description":"Head of 10.2 branch","name":"10.2.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313143","id":"12313143","description":"Head of 10.3 branch","name":"10.3.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313401","id":"12313401","description":"Head of 10.4 branch","name":"10.4.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314116","id":"12314116","description":"10.5.2 Release July 30 2009 (794445) Now deprecated","name":"10.5.2.0","archived":false,"released":true,"releaseDate":"2009-07-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12369180","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12369180","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12640488","key":"DERBY-6148","self":"https://issues.apache.org/jira/rest/api/2/issue/12640488","fields":{"summary":"Wrong sort elimination when using permuted join order","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12326043","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12326043","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12407399","key":"DERBY-3926","self":"https://issues.apache.org/jira/rest/api/2/issue/12407399","fields":{"summary":"Incorrect ORDER BY caused by index","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12326110","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12326110","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12432330","key":"DERBY-4339","self":"https://issues.apache.org/jira/rest/api/2/issue/12432330","fields":{"summary":"improve sort avoidance algorithm to include equijoin relationships","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-18T09:16:13.663+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"In Derby 10.5.2.0, the query below started returning results in wrong order (note the ORDER BY clause). Derby 10.5.1.1 gives the expected ordering.\r\n\r\nij> SELECT CS.ID\r\nFROM\r\n    CHANGESETS CS, FILECHANGES FC, REPOSITORIES R, FILES F, AUTHORS A\r\nWHERE\r\n    R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND F.REPOSITORY = R.ID AND A.REPOSITORY = R.ID AND\r\n    CS.REPOSITORY = R.ID AND CS.ID = FC.CHANGESET AND F.ID = FC.FILE AND\r\n    A.ID = CS.AUTHOR AND\r\n    EXISTS (\r\n        SELECT 1\r\n        FROM FILES F2\r\n        WHERE\r\n            F2.ID = FC.FILE AND F2.REPOSITORY = R.ID AND\r\n            F2.PATH LIKE '/%' ESCAPE '#')\r\nORDER BY CS.ID DESC;\r\nID         \r\n-----------\r\n1          \r\n2          \r\n3          \r\n2          \r\n2          \r\n3          \r\n\r\n6 rows selected","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10366","value":"Wrong query result","id":"10366"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38329","summary":"Join returns results in wrong order","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10422","value":"High Value Fix","id":"10422"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":45,"total":45,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12737967","id":"12737967","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attached a script that creates a sample database and executes the problematic query.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-01T23:15:42.788+0000","updated":"2009-08-01T23:15:42.788+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738078","id":"12738078","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"body":"I try the same query without subquery and the result is order. \r\nij> SELECT CS.ID\r\nFROM\r\n    CHANGESETS CS, FILECHANGES FC, REPOSITORIES R, FILES F, AUTHORS A\r\n    WHERE\r\n        R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND\r\n        F.REPOSITORY = R.ID AND A.REPOSITORY = R.ID AND\r\n            CS.REPOSITORY = R.ID AND CS.ID = FC.CHANGESET AND F.ID = FC.FILE AND\r\n\r\n                A.ID = CS.AUTHOR ORDER BY CS.ID DESC;\r\nID\r\n-----------\r\n3\r\n3\r\n2\r\n2\r\n2\r\n1\r\n\r\n6 rows selected\r\n\r\nHopefully, this will narrow the join logic a little bit. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"created":"2009-08-02T13:28:25.692+0000","updated":"2009-08-02T13:28:25.692+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738084","id":"12738084","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Calling SYSCS_UTIL.SYSCS_UPDATE_STATISTICS on the tables involved also makes the result come out in the right order, so it seems like the bug only appears when a certain plan is chosen.\r\n\r\nThe problem does not occur when I revert to revision 783167, but it does occur with revision 783168, which suggests that it was triggered by DERBY-3926.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-02T14:57:40.766+0000","updated":"2009-08-02T14:57:40.766+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738088","id":"12738088","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"DERBY-3926 was fixed with 10.5.2.0 but did not show up on the release notes because it is still open.  The change was backported to the 10.1 branch, so updating the affects version for this issue.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-02T15:15:51.013+0000","updated":"2009-08-02T15:15:51.013+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738424","id":"12738424","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"One thing I don't understand about this regression is the description of the fix for DERBY-3926 made it sound like it was making sort avoidance less likely.\r\n\" The decision for avoiding sorting should also include relationship between the optimizables in a given join order \"\r\n\r\nso how did that cause a new sort avoidance problem?\r\n\r\nThe comments also say:\r\n\"I think this patch is also improving the existing queries to include a better path than what it was picking up before.\"\r\n\r\nIs it a change in plan that is causing the regression, perhaps choosing a plan that had always ordered incorrectly?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-03T16:46:05.658+0000","updated":"2009-08-03T16:46:05.658+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738435","id":"12738435","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"If anyone has time, what would be useful is the smallest test case possible with a set of optimizer hints that forces the bad result.  This will help in understanding exactly what is going on. \r\n\r\nIf I remember correctly, DERBY-3926 basically eliminated sort avoidance plans when marching through\r\nthe all the plans.  It turned out that some of the plans it eliminated actually did return the correct order but\r\njust through luck.  So the question with this bug, which is obviously affected by DERBY-3926 is did \r\nDERBY-3926 just happen to eliinate some \"lucky\" plans, and push it to an existing bug or did it somehow\r\nnow mark a plan we previously skipped as valid.  If the repro had a fixed join plan that showed bad sort\r\nnow and good sort before we could more easily tell what the regression is.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-03T17:12:02.638+0000","updated":"2009-08-03T17:12:02.638+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738479","id":"12738479","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"here is the query plan from the bad sort results query, gotten by adding derby.language.logQueryPlan=true\r\nto derby.properties.  Posting now, have not read through it yet - but first thing to notice is that there\r\nis not any sort node so as assumed the problem is not a sorter bug - but some sort of sort avoidance\r\nplan bug:\r\n2009-08-03 18:09:06.296 GMT Thread[main,5,main] (XID = 259), (SESSIONID = 3), SELECT CS.ID^M\r\nFROM^M\r\n    CHANGESETS CS, FILECHANGES FC, REPOSITORIES R, FILES F, AUTHORS A^M\r\nWHERE^M\r\n    R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND ^M\r\n    F.REPOSITORY  = R.ID                                            AND ^M\r\n    A.REPOSITORY  = R.ID                                            AND^M\r\n    CS.REPOSITORY = R.ID                                            AND ^M\r\n    CS.ID         = FC.CHANGESET                                    AND ^M\r\n    F.ID          = FC.FILE                                         AND^M\r\n    A.ID          = CS.AUTHOR                                       AND^M\r\n    EXISTS (^M\r\n        SELECT 1^M\r\n        FROM FILES F2^M\r\n        WHERE^M\r\n            F2.ID = FC.FILE AND F2.REPOSITORY = R.ID AND^M\r\n            F2.PATH LIKE '/%' ESCAPE '#')^M\r\nORDER BY CS.ID DESC ******* Project-Restrict ResultSet (18):\r\nNumber of opens = 1\r\nRows seen = 6\r\nRows filtered = 0\r\nrestriction = false\r\nprojection = true\r\n    constructor time (milliseconds) = 0\r\n    open time (milliseconds) = 0\r\n    next time (milliseconds) = 0\r\n    close time (milliseconds) = 0\r\n    restriction time (milliseconds) = 0\r\n    projection time (milliseconds) = 0\r\n    optimizer estimated row count:            0.01\r\n    optimizer estimated cost:          157.72\r\n\r\nSource result set:\r\n    Nested Loop Exists Join ResultSet:\r\n    Number of opens = 1\r\n    Rows seen from the left = 6\r\n    Rows seen from the right = 6\r\n    Rows filtered = 0\r\n    Rows returned = 6\r\n        constructor time (milliseconds) = 0\r\n        open time (milliseconds) = 0\r\n        next time (milliseconds) = 0\r\n        close time (milliseconds) = 0\r\n        optimizer estimated row count:            0.01\r\n        optimizer estimated cost:          157.72\r\n\r\n    Left result set:\r\n        Nested Loop Join ResultSet:\r\n        Number of opens = 1\r\n        Rows seen from the left = 6\r\n        Rows seen from the right = 6\r\n        Rows filtered = 0\r\n        Rows returned = 6\r\n            constructor time (milliseconds) = 0\r\n            open time (milliseconds) = 0\r\n            next time (milliseconds) = 0\r\n            close time (milliseconds) = 0\r\n            optimizer estimated row count:            0.01\r\n            optimizer estimated cost:          157.10\r\n\r\n        Left result set:\r\n            Nested Loop Join ResultSet:\r\n            Number of opens = 1\r\n            Rows seen from the left = 16\r\n            Rows seen from the right = 6\r\n            Rows filtered = 0\r\n            Rows returned = 6\r\n                constructor time (milliseconds) = 0\r\n                open time (milliseconds) = 0\r\n                next time (milliseconds) = 0\r\n                close time (milliseconds) = 0\r\n                optimizer estimated row count:            0.02\r\n                optimizer estimated cost:          155.23\r\n\r\n            Left result set:\r\n                Nested Loop Join ResultSet:\r\n                Number of opens = 1\r\n                Rows seen from the left = 4\r\n                Rows seen from the right = 16\r\n                Rows filtered = 0\r\n                Rows returned = 16\r\n                    constructor time (milliseconds) = 0\r\n                    open time (milliseconds) = 0\r\n                    next time (milliseconds) = 0\r\n                    close time (milliseconds) = 0\r\n                    optimizer estimated row count:            0.20\r\n                    optimizer estimated cost:          154.53\r\n\r\n                Left result set:\r\n                    Nested Loop Join ResultSet:\r\n                    Number of opens = 1\r\n                    Rows seen from the left = 1\r\n                    Rows seen from the right = 4\r\n                    Rows filtered = 0\r\n                    Rows returned = 4\r\n                        constructor time (milliseconds) = 0\r\n                        open time (milliseconds) = 0\r\n                        next time (milliseconds) = 0\r\n                        close time (milliseconds) = 0\r\n                        optimizer estimated row count:            0.22\r\n                        optimizer estimated cost:          146.81\r\n\r\n                    Left result set:\r\n                        Index Row to Base Row ResultSet for REPOSITORIES:\r\n                        Number of opens = 1\r\n                        Rows seen = 1\r\n                        Columns accessed from heap = {0}\r\n                            constructor time (milliseconds) = 0\r\n                            open time (milliseconds) = 0\r\n                            next time (milliseconds) = 0\r\n                            close time (milliseconds) = 0\r\n                            optimizer estimated row count:            1.00\r\n                            optimizer estimated cost:          135.64\r\n\r\n                            Index Scan ResultSet for REPOSITORIES using constraint SQL090803110642671 at read committed isolation level using share ro\r\nw locking chosen by the optimizer\r\n                            Number of opens = 1\r\n                            Rows seen = 1\r\n                            Rows filtered = 0\r\n                            Fetch Size = 1\r\n                                constructor time (milliseconds) = 0\r\n                                open time (milliseconds) = 0\r\n                                next time (milliseconds) = 0\r\n                                close time (milliseconds) = 0\r\n                                next time in milliseconds/row = 0\r\n\r\n                            scan information:\r\n                                Bit set of columns fetched=All\r\n                                Number of columns fetched=2\r\n                                Number of deleted rows visited=0\r\n                                Number of pages visited=1\r\n                                Number of rows qualified=1\r\n                                Number of rows visited=1\r\n                                Scan type=btree\r\n                                Tree height=-1\r\n                                start position:\r\n    >= on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                                stop position:\r\n    > on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                                qualifiers:\r\nNone\r\n                                optimizer estimated row count:            1.00\r\n                                optimizer estimated cost:          135.64\r\n\r\n                    Right result set:\r\n                        Index Row to Base Row ResultSet for FILES:\r\n                        Number of opens = 1\r\n                        Rows seen = 4\r\n                        Columns accessed from heap = {0, 1, 2}\r\n                            constructor time (milliseconds) = 0\r\n                            open time (milliseconds) = 0\r\n                            next time (milliseconds) = 0\r\n                            close time (milliseconds) = 0\r\n                            optimizer estimated row count:            0.22\r\n                            optimizer estimated cost:           11.17\r\n\r\n                            Index Scan ResultSet for FILES using constraint SQL090803110643012 at read committed isolation level using share row locki\r\nng chosen by the optimizer\r\n                            Number of opens = 1\r\n                            Rows seen = 4\r\n                            Rows filtered = 0\r\n                            Fetch Size = 1\r\n                                constructor time (milliseconds) = 0\r\n                                open time (milliseconds) = 0\r\n                                next time (milliseconds) = 0\r\n                                close time (milliseconds) = 0\r\n                                next time in milliseconds/row = 0\r\n\r\n                            scan information:\r\n                                Bit set of columns fetched=All\r\n                                Number of columns fetched=3\r\n                                Number of deleted rows visited=0\r\n                                Number of pages visited=1\r\n                                Number of rows qualified=4\r\n                                Number of rows visited=4\r\n                                Scan type=btree\r\n                                Tree height=1\r\n                                start position:\r\n    >= on first 2 column(s).\r\n    Ordered null semantics on the following columns:\r\n0 1\r\n                                stop position:\r\n    >= on first 2 column(s).\r\n    Ordered null semantics on the following columns:\r\n0 1\r\n                                qualifiers:\r\nNone\r\n                                optimizer estimated row count:            0.22\r\n                                optimizer estimated cost:           11.17\r\n\r\n\r\n                Right result set:\r\n                    Index Row to Base Row ResultSet for FILES:\r\n                    Number of opens = 4\r\n                    Rows seen = 16\r\n                    Columns accessed from heap = {0, 2}\r\n                        constructor time (milliseconds) = 0\r\n                        open time (milliseconds) = 0\r\n                        next time (milliseconds) = 0\r\n                        close time (milliseconds) = 0\r\n                        optimizer estimated row count:            0.20\r\n                        optimizer estimated cost:            7.72\r\n\r\n                        Index Scan ResultSet for FILES using constraint SQL090803110643012 at read committed isolation level using share row locking c\r\nhosen by the optimizer\r\n                        Number of opens = 4\r\n                        Rows seen = 16\r\n                        Rows filtered = 0\r\n                        Fetch Size = 1\r\n                            constructor time (milliseconds) = 0\r\n                            open time (milliseconds) = 0\r\n                            next time (milliseconds) = 0\r\n                            close time (milliseconds) = 0\r\n                            next time in milliseconds/row = 0\r\n\r\n                        scan information:\r\n                            Bit set of columns fetched={0, 2}\r\n                            Number of columns fetched=2\r\n                            Number of deleted rows visited=0\r\n                            Number of pages visited=4\r\n                            Number of rows qualified=16\r\n                            Number of rows visited=16\r\n                            Scan type=btree\r\n                            Tree height=1\r\n                            start position:\r\n    >= on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                            stop position:\r\n    > on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                            qualifiers:\r\nColumn[0][0] Id: 0\r\nOperator: =\r\nOrdered nulls: false\r\nUnknown return value: false\r\nNegate comparison result: false\r\n\r\n                            optimizer estimated row count:            0.20\r\n                            optimizer estimated cost:            7.72\r\n            Right result set:\r\n                Index Scan ResultSet for FILECHANGES using constraint SQL090803110644463 at read committed isolation level using instantaneous share r\r\now locking chosen by the optimizer\r\n                Number of opens = 16\r\n                Rows seen = 6\r\n                Rows filtered = 0\r\n                Fetch Size = 16\r\n                    constructor time (milliseconds) = 0\r\n                    open time (milliseconds) = 0\r\n                    next time (milliseconds) = 0\r\n                    close time (milliseconds) = 0\r\n                    next time in milliseconds/row = 0\r\n\r\n                scan information:\r\n                    Bit set of columns fetched={0, 1}\r\n                    Number of columns fetched=2\r\n                    Number of deleted rows visited=0\r\n                    Number of pages visited=16\r\n                    Number of rows qualified=6\r\n                    Number of rows visited=36\r\n                    Scan type=btree\r\n                    Tree height=1\r\n                    start position:\r\n    >= on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                    stop position:\r\n    > on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                    qualifiers:\r\nColumn[0][0] Id: 0\r\nOperator: =\r\nOrdered nulls: false\r\nUnknown return value: false\r\nNegate comparison result: false\r\n\r\n                    optimizer estimated row count:            0.02\r\n                    optimizer estimated cost:            0.70\r\n        Right result set:\r\n            Index Row to Base Row ResultSet for AUTHORS:\r\n            Number of opens = 6\r\n            Rows seen = 6\r\n            Columns accessed from heap = {0, 1}\r\n                constructor time (milliseconds) = 0\r\n                open time (milliseconds) = 0\r\n                next time (milliseconds) = 0\r\n                close time (milliseconds) = 0\r\n                optimizer estimated row count:            0.01\r\n                optimizer estimated cost:            1.87\r\n\r\n                Index Scan ResultSet for AUTHORS using constraint SQL090803110643392 at read committed isolation level using share row locking chosen\r\nby the optimizer\r\n                Number of opens = 6\r\n                Rows seen = 6\r\n                Rows filtered = 0\r\n                Fetch Size = 1\r\n                    constructor time (milliseconds) = 0\r\n                    open time (milliseconds) = 0\r\n                    next time (milliseconds) = 0\r\n                    close time (milliseconds) = 0\r\n                    next time in milliseconds/row = 0\r\n\r\n                scan information:\r\n                    Bit set of columns fetched={0, 2}\r\n                    Number of columns fetched=2\r\n                    Number of deleted rows visited=0\r\n                    Number of pages visited=6\r\n                    Number of rows qualified=6\r\n                    Number of rows visited=6\r\n                    Scan type=btree\r\n                    Tree height=1\r\n                    start position:\r\n    >= on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                    stop position:\r\n    > on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                    qualifiers:\r\nColumn[0][0] Id: 0\r\nOperator: =\r\nOrdered nulls: false\r\nUnknown return value: false\r\nNegate comparison result: false\r\n\r\n                    optimizer estimated row count:            0.01\r\n                    optimizer estimated cost:            1.87\r\n\r\n    Right result set:\r\n        Project-Restrict ResultSet (17):\r\n        Number of opens = 6\r\n        Rows seen = 6\r\n        Rows filtered = 0\r\n        restriction = true\r\n        projection = true\r\n            constructor time (milliseconds) = 0\r\n            open time (milliseconds) = 0\r\n            next time (milliseconds) = 0\r\n            close time (milliseconds) = 0\r\n            restriction time (milliseconds) = 0\r\n            projection time (milliseconds) = 0\r\n            optimizer estimated row count:            0.01\r\n            optimizer estimated cost:            0.62\r\n\r\n        Source result set:\r\n            Index Row to Base Row ResultSet for CHANGESETS:\r\n            Number of opens = 6\r\n            Rows seen = 6\r\n            Columns accessed from heap = {1, 3}\r\n                constructor time (milliseconds) = 0\r\n                open time (milliseconds) = 0\r\n                next time (milliseconds) = 0\r\n                close time (milliseconds) = 0\r\n                optimizer estimated row count:            0.01\r\n                optimizer estimated cost:            0.62\r\n\r\n                Index Scan ResultSet for CHANGESETS using constraint SQL090803110643850 at read committed isolation level using share row locking chos\r\nen by the optimizer\r\n                Number of opens = 6\r\n                Rows seen = 6\r\n                Rows filtered = 0\r\n                Fetch Size = 1\r\n                    constructor time (milliseconds) = 0\r\n                    open time (milliseconds) = 0\r\n                    next time (milliseconds) = 0\r\n                    close time (milliseconds) = 0\r\n                    next time in milliseconds/row = 0\r\n\r\n                scan information:\r\n                    Bit set of columns fetched=All\r\n                    Number of columns fetched=2\r\n                    Number of deleted rows visited=0\r\n                    Number of pages visited=6\r\n                    Number of rows qualified=6\r\n                    Number of rows visited=6\r\n                    Scan type=btree\r\n                    Tree height=1\r\n                    start position:\r\n    >= on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                    stop position:\r\n    > on first 1 column(s).\r\n    Ordered null semantics on the following columns:\r\n0\r\n                    qualifiers:\r\nNone\r\n                    optimizer estimated row count:            0.01\r\n                    optimizer estimated cost:            0.62\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-03T18:23:41.475+0000","updated":"2009-08-03T18:23:41.475+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738483","id":"12738483","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I will start looking at this bug. It will be great if the query can be made simpler and/or use optimizer overrides to make it always break so the debugger does not go through many iterations through the optimizer. I will post more info as I am progress.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-03T18:31:22.033+0000","updated":"2009-08-03T18:31:22.033+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738536","id":"12738536","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I added names to all the constraints/primary keys to the original repro.sql script to make it easier to understand what is going on when looking at query plans.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-03T19:51:27.342+0000","updated":"2009-08-03T19:51:27.342+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738541","id":"12738541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Here is query plan for bad sort result as generated by repro2.sql","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-03T19:55:07.008+0000","updated":"2009-08-03T19:55:07.008+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738591","id":"12738591","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Wanted to share that if the same query is run with the optimizer ovreride of join order fixed, the query does not give incorrect results. The query plan at this time is as follows\r\nStatement Name:\r\n        null\r\nStatement Text:\r\n        SELECT CS.ID\r\nFROM  --DERBY-PROPERTIES joinOrder=FIXED\r\n    CHANGESETS CS, FILECHANGES FC, REPOSITORIES R, FILES F, AUTHORS A\r\nWHERE\r\n    R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND\r\n    F.REPOSITORY  = R.ID                                            AND\r\n    A.REPOSITORY  = R.ID                                            AND\r\n    CS.REPOSITORY = R.ID                                            AND\r\n    CS.ID         = FC.CHANGESET                                    AND\r\n    F.ID          = FC.FILE                                         AND\r\n    A.ID          = CS.AUTHOR                                       AND\r\n    EXISTS (\r\n        SELECT 1\r\n        FROM FILES F2\r\n        WHERE\r\n            F2.ID = FC.FILE AND F2.REPOSITORY = R.ID AND\r\n            F2.PATH LIKE '/%' ESCAPE '#')\r\nORDER BY CS.ID DESC\r\nParse Time: 0\r\nBind Time: 0\r\nOptimize Time: 0\r\nGenerate Time: 0\r\nCompile Time: 0\r\nExecute Time: 0\r\nBegin Compilation Timestamp : null\r\nEnd Compilation Timestamp : null\r\nBegin Execution Timestamp : null\r\nEnd Execution Timestamp : null\r\nStatement Execution Plan Text:\r\nSort ResultSet:\r\nNumber of opens = 1\r\nRows input = 6\r\nRows returned = 6\r\nEliminate duplicates = false\r\nIn sorted order = false\r\nSort information:\r\n        Number of rows input=6\r\n        Number of rows output=6\r\n        Sort type=internal\r\n        constructor time (milliseconds) = 0\r\n        open time (milliseconds) = 0\r\n        next time (milliseconds) = 0\r\n        close time (milliseconds) = 0\r\n        optimizer estimated row count:            0.08\r\n        optimizer estimated cost:          553.68\r\n\r\nSource result set:\r\n        Project-Restrict ResultSet (20):\r\n        Number of opens = 1\r\n        Rows seen = 6\r\n        Rows filtered = 0\r\n        restriction = false\r\n        projection = true\r\n                constructor time (milliseconds) = 0\r\n                open time (milliseconds) = 0\r\n                next time (milliseconds) = 0\r\n                close time (milliseconds) = 0\r\n                restriction time (milliseconds) = 0\r\n                projection time (milliseconds) = 0\r\n                optimizer estimated row count:            0.08\r\n                optimizer estimated cost:          553.68\r\n\r\n        Source result set:\r\n                User supplied optimizer overrides for join are { joinOrder=FIXED }\r\n                Nested Loop Join ResultSet:\r\n                Number of opens = 1\r\n                Rows seen from the left = 6\r\n                Rows seen from the right = 6\r\n                Rows filtered = 0\r\n                Rows returned = 6\r\n                        constructor time (milliseconds) = 0\r\n                        open time (milliseconds) = 0\r\n                        next time (milliseconds) = 0\r\n                        close time (milliseconds) = 0\r\n                        optimizer estimated row count:            0.08\r\n                        optimizer estimated cost:          553.68\r\n\r\n                Left result set:\r\n                        User supplied optimizer overrides for join are { joinOrder=FIXED }\r\n                        Nested Loop Join ResultSet:\r\n                        Number of opens = 1\r\n                        Rows seen from the left = 6\r\n                        Rows seen from the right = 6\r\n                        Rows filtered = 0\r\n                        Rows returned = 6\r\n                                constructor time (milliseconds) = 0\r\n                                open time (milliseconds) = 0\r\n                                next time (milliseconds) = 0\r\n                                close time (milliseconds) = 0\r\n                                optimizer estimated row count:            0.36\r\n                                optimizer estimated cost:          546.94\r\n\r\n                        Left result set:\r\n                                User supplied optimizer overrides for join are { joinOrder=FIXED }\r\n                                Nested Loop Exists Join ResultSet:\r\n                                Number of opens = 1\r\n                                Rows seen from the left = 6\r\n                                Rows seen from the right = 6\r\n                                Rows filtered = 0\r\n                                Rows returned = 6\r\n                                        constructor time (milliseconds) = 0\r\n                                        open time (milliseconds) = 0\r\n                                        next time (milliseconds) = 0\r\n                                        close time (milliseconds) = 0\r\n                                        optimizer estimated row count:  0.60\r\n                                        optimizer estimated cost:          475.57\r\n\r\n                                Left result set:\r\n                                        User supplied optimizer overrides for join are { joinOrder=FIXED }\r\n                                        Nested Loop Exists Join ResultSet:\r\n                                        Number of opens = 1\r\n                                        Rows seen from the left = 6\r\n                                        Rows seen from the right = 6\r\n                                        Rows filtered = 0\r\n                                        Rows returned = 6\r\n                                                constructor time (milliseconds)= 0\r\n                                                open time (milliseconds) = 0\r\n                                                next time (milliseconds) = 0\r\n                                                close time (milliseconds) = 0\r\n                                                optimizer estimated row count:          0.60\r\n                                                optimizer estimated cost:   454.07\r\n\r\n                                        Left result set:\r\n                                                User supplied optimizer overrides for join are { joinOrder=FIXED }\r\n                                                Hash Join ResultSet:\r\n                                                Number of opens = 1\r\n                                                Rows seen from the left = 3\r\n                                                Rows seen from the right = 6\r\n                                                Rows filtered = 0\r\n                                                Rows returned = 6\r\n                                                        constructor time (milliseconds) = 0\r\n                                                        open time (milliseconds) = 0\r\n                                                        next time (milliseconds) = 0\r\n                                                        close time (milliseconds) = 0\r\n                                                        optimizer estimated rowcount:            0.60\r\n                                                        optimizer estimated cost:          372.68\r\n\r\n                                                Left result set:\r\n                                                        Table Scan ResultSet for CHANGESETS at read committed isolation level using instantaneous share row locking chosen by the optimizer\r\n                                                        Number of opens = 1\r\n                                                        Rows seen = 3\r\n                                                        Rows filtered = 0\r\n                                                        Fetch Size = 16\r\n                                                                constructor time (milliseconds) = 0\r\n                                                                open time (milliseconds) = 0\r\n                                                                next time (milliseconds) = 0\r\n                                                                close time (milliseconds) = 0\r\n                                                                next time in milliseconds/row = 0\r\n\r\n                                                        scan information:\r\n                                                                Bit set of columns fetched={0, 1, 3}\r\n                                                                Number of columns fetched=3\r\n                                                                Number of pagesvisited=1\r\n                                                                Number of rows qualified=3\r\n                                                                Number of rows visited=3\r\n                                                                Scan type=heap\r\n                                                                start position:\r\nnull                                                            stop position:\r\nnull                                                            qualifiers:\r\nNone\r\n                                                                optimizer estimated row count:            8.00\r\n                                                                optimizer estimated cost:          351.84\r\n\r\n                                                Right result set:\r\n                                                        Hash Scan ResultSet for FILECHANGES using constraint FILECHANGES_FILE_CHANGESET at read committed isolation level using instantaneous share row locking:\r\n                                                        Number of opens = 3\r\n                                                        Hash table size = 3\r\n                                                        Hash key is column number 1\r\n                                                        Rows seen = 6\r\n                                                        Rows filtered = 0\r\n                                                                constructor time (milliseconds) = 0\r\n                                                                open time (milliseconds) = 0\r\n                                                                next time (milliseconds) = 0\r\n                                                                close time (milliseconds) = 0\r\n                                                                next time in milliseconds/row = 0\r\n\r\n                                                        scan information:\r\n                                                                Bit set of columns fetched={0, 1}\r\n                                                                Number of columns fetched=2\r\n                                                                Number of deleted rows visited=0\r\n                                                                Number of pagesvisited=1\r\n                                                                Number of rows qualified=6\r\n                                                                Number of rows visited=6\r\n                                                                Scan type=btree\r\n                                                                Tree height=1\r\n                                                                start position:\r\n\r\n        None\r\n                                                                stop position:\r\n        None\r\n                                                                scan qualifiers:\r\n\r\nNone\r\n                                                                next qualifiers:\r\n\r\nColumn[0][0] Id: 1\r\nOperator: =\r\nOrdered nulls: false\r\nUnknown return value: false\r\nNegate comparison result: false\r\n\r\n                                                                optimizer estimated row count:            0.60\r\n                                                                optimizer estimated cost:           20.84\r\n\r\n\r\n                                        Right result set:\r\n                                                Project-Restrict ResultSet (10):\r\n\r\n                                                Number of opens = 6\r\n                                                Rows seen = 6\r\n                                                Rows filtered = 0\r\n                                                restriction = true\r\n                                                projection = true\r\n                                                        constructor time (milliseconds) = 0\r\n                                                        open time (milliseconds) = 0\r\n                                                        next time (milliseconds) = 0\r\n                                                        close time (milliseconds) = 0\r\n                                                        restriction time (milliseconds) = 0\r\n                                                        projection time (milliseconds) = 0\r\n                                                        optimizer estimated rowcount:            0.60\r\n                                                        optimizer estimated cost:           81.39\r\n\r\n                                                Source result set:\r\n                                                        Index Row to Base Row ResultSet for REPOSITORIES:\r\n                                                        Number of opens = 6\r\n                                                        Rows seen = 6\r\n                                                        Columns accessed from heap = {1}\r\n                                                                constructor time (milliseconds) = 0\r\n                                                                open time (milliseconds) = 0\r\n                                                                next time (milliseconds) = 0\r\n                                                                close time (milliseconds) = 0\r\n                                                                optimizer estimated row count:            0.60\r\n                                                                optimizer estimated cost:           81.39\r\n\r\n                                                                Index Scan ResultSet for REPOSITORIES using constraint REPOSITORIES_PRIMARY_ID at read committed isolation level using share row locking chosen by the optimizer\r\n                                                                Number of opens= 6\r\n                                                                Rows seen = 6\r\n                                                                Rows filtered =0\r\n                                                                Fetch Size = 1\r\n                                                                        constructor time (milliseconds) = 0\r\n                                                                        open time (milliseconds) = 0\r\n                                                                        next time (milliseconds) = 0\r\n                                                                        close time (milliseconds) = 0\r\n                                                                        next time in milliseconds/row = 0\r\n\r\n                                                                scan information:\r\n                                                                        Bit set of columns fetched=All\r\n                                                                        Number of columns fetched=2\r\n                                                                        Number of deleted rows visited=0\r\n                                                                        Number of pages visited=6\r\n                                                                        Number of rows qualified=6\r\n                                                                        Number of rows visited=6\r\n                                                                        Scan type=btree\r\n                                                                        Tree height=1\r\n                                                                        start position:\r\n        >= on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                                                        stop position:\r\n        > on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                                                        qualifiers:\r\nNone\r\n                                                                        optimizer estimated row count:            0.60\r\n                                                                        optimizer estimated cost:           81.39\r\n\r\n\r\n\r\n                                Right result set:\r\n                                        Project-Restrict ResultSet (13):\r\n                                        Number of opens = 6\r\n                                        Rows seen = 6\r\n                                        Rows filtered = 0\r\n                                        restriction = true\r\n                                        projection = true\r\n                                                constructor time (milliseconds)= 0\r\n                                                open time (milliseconds) = 0\r\n                                                next time (milliseconds) = 0\r\n                                                close time (milliseconds) = 0\r\n                                                restriction time (milliseconds)= 0\r\n                                                projection time (milliseconds) = 0\r\n                                                optimizer estimated row count:          0.60\r\n                                                optimizer estimated cost:    21.50\r\n\r\n                                        Source result set:\r\n                                                Index Row to Base Row ResultSet for FILES:\r\n                                                Number of opens = 6\r\n                                                Rows seen = 6\r\n                                                Columns accessed from heap = {2}\r\n\r\n                                                        constructor time (milliseconds) = 0\r\n                                                        open time (milliseconds) = 0\r\n                                                        next time (milliseconds) = 0\r\n                                                        close time (milliseconds) = 0\r\n                                                        optimizer estimated rowcount:            0.60\r\n                                                        optimizer estimated cost:           21.50\r\n\r\n                                                        Index Scan ResultSet for FILES using constraint FILES_PRIMARY_ID at read committed isolation level using share row locking chosen by the optimizer\r\n                                                        Number of opens = 6\r\n                                                        Rows seen = 6\r\n                                                        Rows filtered = 0\r\n                                                        Fetch Size = 1\r\n                                                                constructor time (milliseconds) = 0\r\n                                                                open time (milliseconds) = 0\r\n                                                                next time (milliseconds) = 0\r\n                                                                close time (milliseconds) = 0\r\n                                                                next time in milliseconds/row = 0\r\n\r\n                                                        scan information:\r\n                                                                Bit set of columns fetched=All\r\n                                                                Number of columns fetched=2\r\n                                                                Number of deleted rows visited=0\r\n                                                                Number of pages visited=6\r\n                                                                Number of rows qualified=6\r\n                                                                Number of rows visited=6\r\n                                                                Scan type=btree\r\n                                                                Tree height=1\r\n                                                                start position:\r\n\r\n        >= on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                                                stop position:        > on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                                                qualifiers:None\r\n                                                                optimizer estimated row count:            0.60\r\n                                                                optimizer estimated cost:           21.50\r\n\r\n\r\n\r\n                        Right result set:\r\n                                Project-Restrict ResultSet (16):\r\n                                Number of opens = 6\r\n                                Rows seen = 6\r\n                                Rows filtered = 0\r\n                                restriction = true\r\n                                projection = true\r\n                                        constructor time (milliseconds) = 0\r\n                                        open time (milliseconds) = 0\r\n                                        next time (milliseconds) = 0\r\n                                        close time (milliseconds) = 0\r\n                                        restriction time (milliseconds) = 0\r\n                                        projection time (milliseconds) = 0\r\n                                        optimizer estimated row count:  0.36\r\n                                        optimizer estimated cost:           71.37\r\n\r\n                                Source result set:\r\n                                        Index Row to Base Row ResultSet for AUTHORS:\r\n                                        Number of opens = 6\r\n                                        Rows seen = 6\r\n                                        Columns accessed from heap = {0, 1}\r\n                                                constructor time (milliseconds)= 0\r\n                                                open time (milliseconds) = 0\r\n                                                next time (milliseconds) = 0\r\n                                                close time (milliseconds) = 0\r\n                                                optimizer estimated row count:          0.36\r\n                                                optimizer estimated cost:    71.37\r\n\r\n                                                Index Scan ResultSet for AUTHORS using constraint AUTHORS_REPOSITORY_NAME at read committed isolation level using instantaneous share row locking chosen by the optimizer\r\n                                                Number of opens = 6\r\n                                                Rows seen = 6\r\n                                                Rows filtered = 0\r\n                                                Fetch Size = 16\r\n                                                        constructor time (milliseconds) = 0\r\n                                                        open time (milliseconds) = 0\r\n                                                        next time (milliseconds) = 0\r\n                                                        close time (milliseconds) = 0\r\n                                                        next time in milliseconds/row = 0\r\n\r\n                                                scan information:\r\n                                                        Bit set of columns fetched={0, 2}\r\n                                                        Number of columns fetched=2\r\n                                                        Number of deleted rows visited=0\r\n                                                        Number of pages visited=6\r\n                                                        Number of rows qualified=6\r\n                                                        Number of rows visited=6\r\n\r\n                                                        Scan type=btree\r\n                                                        Tree height=1\r\n                                                        start position:\r\n        >= on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                                        stop position:\r\n        > on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                                        qualifiers:\r\nColumn[0][0] Id: 0\r\nOperator: =\r\nOrdered nulls: false\r\nUnknown return value: false\r\nNegate comparison result: false\r\n\r\n                                                        optimizer estimated rowcount:            0.36\r\n                                                        optimizer estimated cost:           71.37\r\n\r\n\r\n\r\n                Right result set:\r\n                        Project-Restrict ResultSet (19):\r\n                        Number of opens = 6\r\n                        Rows seen = 24\r\n                        Rows filtered = 18\r\n                        restriction = true\r\n                        projection = true\r\n                                constructor time (milliseconds) = 0\r\n                                open time (milliseconds) = 0\r\n                                next time (milliseconds) = 0\r\n                                close time (milliseconds) = 0\r\n                                restriction time (milliseconds) = 0\r\n                                projection time (milliseconds) = 0\r\n                                optimizer estimated row count:            0.08\r\n                                optimizer estimated cost:            6.73\r\n\r\n                        Source result set:\r\n                                Index Row to Base Row ResultSet for FILES:\r\n                                Number of opens = 6\r\n                                Rows seen = 24\r\n                                Columns accessed from heap = {0, 1, 2}\r\n                                        constructor time (milliseconds) = 0\r\n                                        open time (milliseconds) = 0\r\n                                        next time (milliseconds) = 0\r\n                                        close time (milliseconds) = 0\r\n                                        optimizer estimated row count:  0.08\r\n                                        optimizer estimated cost:            6.73\r\n\r\n                                        Index Scan ResultSet for FILES using constraint FILES_REPOSITORY_PATH at read committed isolation level using instantaneous share row locking chosen by the optimizer\r\n                                        Number of opens = 6\r\n                                        Rows seen = 24\r\n                                        Rows filtered = 0\r\n                                        Fetch Size = 16\r\n                                                constructor time (milliseconds)= 0\r\n                                                open time (milliseconds) = 0\r\n                                                next time (milliseconds) = 0\r\n                                                close time (milliseconds) = 0\r\n                                                next time in milliseconds/row =0\r\n\r\n                                        scan information:\r\n                                                Bit set of columns fetched=All\r\n                                                Number of columns fetched=3\r\n                                                Number of deleted rows visited=0\r\n\r\n                                                Number of pages visited=6\r\n                                                Number of rows qualified=24\r\n                                                Number of rows visited=24\r\n                                                Scan type=btree\r\n                                                Tree height=1\r\n                                                start position:\r\n        >= on first 2 column(s).\r\n        Ordered null semantics on the following columns:0 1\r\n                                                stop position:\r\n        >= on first 2 column(s).\r\n        Ordered null semantics on the following columns:\r\n0 1\r\n                                                qualifiers:\r\nColumn[0][0] Id: 0\r\nOperator: =\r\nOrdered nulls: false\r\nUnknown return value: false\r\nNegate comparison result: false\r\n\r\n                                                optimizer estimated row count: 0.08\r\n                                                optimizer estimated cost: 6.73\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-03T21:12:15.693+0000","updated":"2009-08-03T21:19:24.810+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738603","id":"12738603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"BTW, just an FYI, that I am doing my research on this bug in 10.5 codeline.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-03T21:21:13.999+0000","updated":"2009-08-03T21:21:13.999+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738608","id":"12738608","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Fix affect versions. updated wrong issue.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-03T21:25:32.488+0000","updated":"2009-08-03T21:25:32.488+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738631","id":"12738631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The following updated query is still pretty involved but it consistently reproduces the wrong results and will go through very limited iteration of optimizer code because of all the optimizer overrides. Ideal will be if the following query can be made simpler with fewer number of tables.\r\nSELECT CS.ID\r\nFROM  --DERBY-PROPERTIES joinOrder=FIXED \r\n    REPOSITORIES R -- DERBY-PROPERTIES constraint=REPOSITORIES_PATH \r\n, FILES F -- DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n, FILECHANGES FC -- DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n, AUTHORS A -- DERBY-PROPERTIES constraint=AUTHORS_REPOSITORY_NAME\r\n, CHANGESETS CS -- DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID \r\nWHERE\r\n    R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND \r\n    F.REPOSITORY  = R.ID                                            AND \r\n    A.REPOSITORY  = R.ID                                            AND\r\n    CS.REPOSITORY = R.ID                                            AND \r\n    CS.ID         = FC.CHANGESET                                    AND \r\n    F.ID          = FC.FILE                                         AND\r\n    A.ID          = CS.AUTHOR                                       AND\r\n    EXISTS (\r\n        SELECT 1\r\n        FROM FILES F2\r\n        WHERE\r\n            F2.ID = FC.FILE AND F2.REPOSITORY = R.ID AND\r\n            F2.PATH LIKE '/%' ESCAPE '#')\r\nORDER BY CS.ID DESC;\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-03T22:03:04.130+0000","updated":"2009-08-03T22:03:04.130+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738633","id":"12738633","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"i have been looking at the query plan and have more questions than answers.  \r\n\r\nOne strange thing is that the bad query plan does not use the descending\r\nindex at all.  With DERBY-3926 the usual problem was that an index that\r\nwould naturally satisfy a sort avoidance plan was used but in some part of the \r\njoin order which actually didn't result in the row ordering being correct.  \r\n\r\nThe plan looks like it does some sort of query transformation, maybe flatten but not sure if that is right term.  The EXISTS subquery I think is making it hard to \r\ncontrol the plan with hints, but am not sure.  If anyone can figure out a rewrite that reproduces the bug without the subquery that would help also.\r\n\r\nI tried the following query thinking just the existence of the subquery might be\r\nenough, but it got correct ordered results:\r\nSELECT CS.ID\r\nFROM\r\n    CHANGESETS CS, FILECHANGES FC, REPOSITORIES R, FILES F, AUTHORS A\r\nWHERE\r\n    R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND\r\n    F.REPOSITORY  = R.ID                                            AND\r\n    A.REPOSITORY  = R.ID                                            AND\r\n    CS.REPOSITORY = R.ID                                            AND\r\n    CS.ID         = FC.CHANGESET                                    AND\r\n    F.ID          = FC.FILE                                         AND\r\n    A.ID          = CS.AUTHOR                                       AND\r\n    EXISTS (\r\n        SELECT 1\r\n        FROM FILES F2\r\n        WHERE\r\n            F2.REPOSITORY = 1)\r\nORDER BY CS.ID DESC;","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-03T22:07:06.871+0000","updated":"2009-08-03T22:07:06.871+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738684","id":"12738684","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Here is a fixed order join query that repro's on trunk but does not repro on 10.5 before the 3926\r\nchanges.  I  shuffled the order of the tables in the from list to match order in the attached \r\nplan where the bug reproduced - nothing else is changed.:\r\nSELECT CS.ID\r\nFROM  --DERBY-PROPERTIES joinOrder=FIXED\r\n    REPOSITORIES R, FILES F, FILECHANGES FC, AUTHORS A, CHANGESETS CS\r\nWHERE\r\n    R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND\r\n    F.REPOSITORY  = R.ID                                            AND\r\n    A.REPOSITORY  = R.ID                                            AND\r\n    CS.REPOSITORY = R.ID                                            AND\r\n    CS.ID         = FC.CHANGESET                                    AND\r\n    F.ID          = FC.FILE                                         AND\r\n    A.ID          = CS.AUTHOR                                       AND\r\n    EXISTS (\r\n        SELECT 1\r\n        FROM FILES F2\r\n        WHERE\r\n            F2.ID = FC.FILE AND F2.REPOSITORY = R.ID AND\r\n            F2.PATH LIKE '/%' ESCAPE '#')\r\nORDER BY CS.ID DESC;","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-03T23:38:58.360+0000","updated":"2009-08-03T23:38:58.360+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738690","id":"12738690","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"This query also gets out of order rows in trunk but not in 10.5 before 3629 change.  It fixes the indexes used also:\r\nSELECT CS.ID\r\nFROM  --DERBY-PROPERTIES joinOrder=FIXED\r\n      REPOSITORIES R  --DERBY-PROPERTIES constraint=REPOSITORIES_PATH\r\n    , FILES        F  --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    , FILECHANGES  FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n    , AUTHORS      A  --DERBY-PROPERTIES constraint=AUTHORS_REPOSITORY_NAME\r\n    , CHANGESETS   CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n    R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND\r\n    F.REPOSITORY  = R.ID                                            AND\r\n    A.REPOSITORY  = R.ID                                            AND\r\n    CS.REPOSITORY = R.ID                                            AND\r\n    CS.ID         = FC.CHANGESET                                    AND\r\n    F.ID          = FC.FILE                                         AND\r\n    A.ID          = CS.AUTHOR                                       AND\r\n    EXISTS (\r\n        SELECT 1\r\n        FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n        WHERE\r\n            F2.ID = FC.FILE AND F2.REPOSITORY = R.ID AND\r\n            F2.PATH LIKE '/%' ESCAPE '#')\r\nORDER BY CS.ID DESC;","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-04T00:00:05.085+0000","updated":"2009-08-04T00:00:05.085+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738717","id":"12738717","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"body":"This query is just an existence of a easier subquery that failed on trunk but gives correct order on svn 783167:\r\nij> SELECT CS.ID\r\nFROM --DERBY-PROPERTIES joinOrder=FIXED\r\n      REPOSITORIES R --DERBY-PROPERTIES constraint=REPOSITORIES_PATH\r\n     , FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n     , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n     , AUTHORS A --DERBY-PROPERTIES constraint=AUTHORS_REPOSITORY_NAME\r\n     , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND\r\n F.REPOSITORY = R.ID AND\r\n A.REPOSITORY = R.ID AND\r\n CS.REPOSITORY = R.ID AND\r\n CS.ID = FC.CHANGESET AND\r\n F.ID = FC.FILE AND\r\n A.ID = CS.AUTHOR AND\r\n EXISTS (\r\n   SELECT 1\r\n    FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    WHERE\r\n           F2.ID = FC.FILE\r\n           )\r\n ORDER BY CS.ID DESC;\r\nID\r\n-----------\r\n1\r\n2\r\n3\r\n2\r\n2\r\n3\r\n\r\n6 rows selected\r\n\r\nThanks, Lily","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"created":"2009-08-04T00:56:40.442+0000","updated":"2009-08-04T00:56:40.442+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738785","id":"12738785","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"body":"Taking out Author table from previous query still not ordering in trunk but works 10.5 (783167)\r\nij> SELECT CS.ID\r\nFROM --DERBY-PROPERTIES joinOrder=FIXED\r\n      REPOSITORIES R --DERBY-PROPERTIES constraint=REPOSITORIES_PATH\r\n     , FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n     , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n     , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND\r\n F.REPOSITORY = R.ID AND\r\n CS.REPOSITORY = R.ID AND\r\n CS.ID = FC.CHANGESET AND\r\n F.ID = FC.FILE AND\r\n EXISTS (\r\n   SELECT 1\r\n    FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    WHERE\r\n           F2.ID = FC.FILE)\r\n ORDER BY CS.ID DESC;\r\nID\r\n-----------\r\n1\r\n2\r\n3\r\n2\r\n2\r\n3\r\n\r\nIf take out of 'CS.ID = FC.CHANGESET' from where cause constraint, the query will perform order by on both trunk and 10.5(783167)\r\nij> SELECT CS.ID\r\nFROM --DERBY-PROPERTIES joinOrder=FIXED\r\n      REPOSITORIES R --DERBY-PROPERTIES constraint=REPOSITORIES_PATH\r\n     , FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n     , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n     , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n R.PATH = '/var/tmp/source5923202038296723704opengrok/mercurial' AND\r\n F.REPOSITORY = R.ID AND\r\n CS.REPOSITORY = R.ID AND\r\n F.ID = FC.FILE AND\r\n EXISTS (\r\n   SELECT 1\r\n    FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    WHERE\r\n           F2.ID = FC.FILE)\r\n ORDER BY CS.ID DESC;\r\nID\r\n-----------\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n\r\n18 rows selected\r\n\r\nI cannot really tell what is the difference between the two path. However, the value -1 for Tree height on the first query seems odd to me. \r\nThe derby.log for the first query is on notorderby4331.zip and the second query is on orderby4331.zip.\r\n(The below capture from derby.log on notorderby4331.zip)\r\n                                                User supplied optimizer overrides on REPOSITORIES are { index=SQL090803170751640 }\r\n                                                Index Scan ResultSet for REPOSITORIES using constraint REPOSITORIES_PATH at read committed isolation level using share row locking chosen by the optimizer\r\n                                                Number of opens = 1\r\n                                                Rows seen = 1\r\n                                                Rows filtered = 0\r\n                                                Fetch Size = 1\r\n                                                        constructor time (milliseconds) = 0\r\n                                                        open time (milliseconds) = 0\r\n                                                        next time (milliseconds) = 0\r\n                                                        close time (milliseconds) = 0\r\n                                                        next time in milliseconds/row = 0\r\n\r\n                                                scan information:\r\n                                                        Bit set of columns fetched=All\r\n                                                        Number of columns fetched=2\r\n                                                        Number of deleted rows visited=0\r\n                                                        Number of pages visited=1\r\n                                                        Number of rows qualified=1\r\n                                                        Number of rows visited=1\r\n                                                        Scan type=btree\r\n                                                        Tree height=-1               <<<==== -1 is an odd value\r\n                                                        start position:\r\n        >= on first 1 column(s).\r\n\r\n(The below capture from derby.log on orderby4331.zip)\r\n                                                        User supplied optimizer overrides on REPOSITORIES are { index=SQL090803170751640 }\r\n                                                        Index Scan ResultSet for REPOSITORIES using constraint REPOSITORIES_PATH at read committed isolation level using share row locking chosen by the optimizer\r\n                                                        Number of opens = 1\r\n                                                        Rows seen = 1\r\n                                                        Rows filtered = 0\r\n                                                        Fetch Size = 1\r\n                                                                constructor time (milliseconds) = 0\r\n                                                                open time (milliseconds) = 0\r\n                                                                next time (milliseconds) = 0\r\n                                                                close time (milliseconds) = 0\r\n                                                                next time in milliseconds/row = 0\r\n\r\n                                                        scan information:\r\n                                                                Bit set of columns fetched=All\r\n                                                                Number of columns fetched=2\r\n                                                                Number of deleted rows visited=0\r\n                                                                Number of pages visited=1\r\n                                                                Number of rows qualified=1\r\n                                                                Number of rows visited=1\r\n                                                                Scan type=btree\r\n                                                                Tree height=1   <<<==== not -1 value\r\n                                                                start position:\r\n        >= on first 1 column(s).\r\n\r\nHope this info is helpful. Thanks, Lily","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"created":"2009-08-04T03:19:38.177+0000","updated":"2009-08-04T03:19:38.177+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738814","id":"12738814","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The following query also seems to give wrong results on 10.5 codeline. It has tables REPOSITORIES and AUTHORS missing compared to the original query. I will try it without the changes for DERBY-3926 to see if it passes there.\r\n\r\nSELECT CS.ID\r\nFROM --DERBY-PROPERTIES joinOrder=FIXED\r\n    FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n    , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n CS.ID = FC.CHANGESET AND\r\n F.ID = FC.FILE AND\r\n EXISTS (\r\n  SELECT 1\r\n   FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n   WHERE\r\n          F2.ID = FC.FILE)\r\n ORDER BY CS.ID DESC;\r\nID\r\n-----------\r\n1\r\n2\r\n3\r\n2\r\n2\r\n3\r\n\r\n6 rows selected\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-04T04:35:03.905+0000","updated":"2009-08-04T04:35:03.905+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738826","id":"12738826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The above query works fine prior to DERBY-3926 change but fails with DERBY-3926 in the codeline. The results of the query above prior to DERBY-3926 changes are as follows\r\nID\r\n-----------\r\n3\r\n3\r\n2\r\n2\r\n2\r\n1\r\n\r\n6 rows selected","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-04T05:11:51.796+0000","updated":"2009-08-04T05:11:51.796+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738839","id":"12738839","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Attaching a new simpler script, createDBsimpler.txt,  to create the db which will have only the tables used by the query below\r\n\r\nSELECT CS.ID \r\nFROM --DERBY-PROPERTIES joinOrder=FIXED \r\n    FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH \r\n    , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET \r\n    , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID \r\nWHERE \r\n CS.ID = FC.CHANGESET AND \r\n F.ID = FC.FILE AND \r\n EXISTS ( \r\n  SELECT 1 \r\n   FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH \r\n   WHERE \r\n          F2.ID = FC.FILE) \r\n ORDER BY CS.ID DESC; \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-04T05:36:27.687+0000","updated":"2009-08-04T05:36:27.687+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738848","id":"12738848","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I have simplified the db creation just a little bit more removing the unnecessary columns from the tables. The new create db script is createDBsimplerVer2.txt and the query that goes along with that db is\r\n\r\nSELECT CS.ID\r\nFROM --DERBY-PROPERTIES joinOrder=FIXED\r\n    FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n    , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n CS.ID = FC.CHANGESET AND\r\n F.ID = FC.FILE AND\r\n EXISTS (\r\n  SELECT 1\r\n   FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n   WHERE\r\n          F2.ID = FC.FILE)\r\n ORDER BY CS.ID DESC;\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-04T06:04:03.955+0000","updated":"2009-08-04T06:04:03.955+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12738862","id":"12738862","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The query plan for the query below is as follows\r\nSELECT CS.ID \r\nFROM --DERBY-PROPERTIES joinOrder=FIXED \r\n    FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH \r\n    , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET \r\n    , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID \r\nWHERE \r\n CS.ID = FC.CHANGESET AND \r\n F.ID = FC.FILE AND \r\n EXISTS ( \r\n  SELECT 1 \r\n   FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH \r\n   WHERE \r\n          F2.ID = FC.FILE) \r\n ORDER BY CS.ID DESC; \r\n\r\n\r\nStatement Name:\r\n        null\r\nStatement Text:\r\n        SELECT CS.ID\r\nFROM --DERBY-PROPERTIES joinOrder=FIXED\r\n    FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n    , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n CS.ID = FC.CHANGESET AND\r\n F.ID = FC.FILE AND\r\n EXISTS (\r\n  SELECT 1\r\n   FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n   WHERE\r\n          F2.ID = FC.FILE)\r\n ORDER BY CS.ID DESC\r\nParse Time: 0\r\nBind Time: 0\r\nOptimize Time: 0\r\nGenerate Time: 0\r\nCompile Time: 0\r\nExecute Time: 0\r\nBegin Compilation Timestamp : null\r\nEnd Compilation Timestamp : null\r\nBegin Execution Timestamp : null\r\nEnd Execution Timestamp : null\r\nStatement Execution Plan Text:\r\nProject-Restrict ResultSet (11):\r\nNumber of opens = 1\r\nRows seen = 6\r\nRows filtered = 0\r\nrestriction = false\r\nprojection = true\r\n        constructor time (milliseconds) = 0\r\n        open time (milliseconds) = 0\r\n        next time (milliseconds) = 0\r\n        close time (milliseconds) = 0\r\n        restriction time (milliseconds) = 0\r\n        projection time (milliseconds) = 0\r\n        optimizer estimated row count:            2.67\r\n        optimizer estimated cost:         2330.17\r\n\r\nSource result set:\r\n        User supplied optimizer overrides for join are { joinOrder=FIXED }\r\n        Nested Loop Join ResultSet:\r\n        Number of opens = 1\r\n        Rows seen from the left = 6\r\n        Rows seen from the right = 6\r\n        Rows filtered = 0\r\n        Rows returned = 6\r\n                constructor time (milliseconds) = 0\r\n                open time (milliseconds) = 0\r\n                next time (milliseconds) = 0\r\n                close time (milliseconds) = 0\r\n                optimizer estimated row count:            2.67\r\n                optimizer estimated cost:         2330.17\r\n\r\n        Left result set:\r\n                User supplied optimizer overrides for join are { joinOrder=FIXED}\r\n                Nested Loop Exists Join ResultSet:\r\n                Number of opens = 1\r\n                Rows seen from the left = 6\r\n                Rows seen from the right = 6\r\n                Rows filtered = 0\r\n                Rows returned = 6\r\n                        constructor time (milliseconds) = 0\r\n                        open time (milliseconds) = 0\r\n                        next time (milliseconds) = 0\r\n                        close time (milliseconds) = 0\r\n                        optimizer estimated row count:            6.00\r\n                        optimizer estimated cost:          357.23\r\n\r\n                Left result set:\r\n                        User supplied optimizer overrides for join are { joinOrder=FIXED }\r\n                        Nested Loop Join ResultSet:\r\n                        Number of opens = 1\r\n                        Rows seen from the left = 4\r\n                        Rows seen from the right = 6\r\n                        Rows filtered = 0\r\n                        Rows returned = 6\r\n                                constructor time (milliseconds) = 0\r\n                                open time (milliseconds) = 0\r\n                                next time (milliseconds) = 0\r\n                                close time (milliseconds) = 0\r\n                                optimizer estimated row count:            6.00\r\n                                optimizer estimated cost:          347.80\r\n\r\n                        Left result set:\r\n                                Index Row to Base Row ResultSet for FILES:\r\n                                Number of opens = 1\r\n                                Rows seen = 4\r\n                                Columns accessed from heap = {0}\r\n                                        constructor time (milliseconds) = 0\r\n                                        open time (milliseconds) = 0\r\n                                        next time (milliseconds) = 0\r\n                                        close time (milliseconds) = 0\r\n                                        optimizer estimated row count:  9.00\r\n                                        optimizer estimated cost:          328.82\r\n\r\n                                        User supplied optimizer overrides on FILES are { index=SQL090803230333481 }\r\n                                        Index Scan ResultSet for FILES using constraint FILES_REPOSITORY_PATH at read committed isolation level using share row locking chosen by the optimizer\r\n                                        Number of opens = 1\r\n                                        Rows seen = 4\r\n                                        Rows filtered = 0\r\n                                        Fetch Size = 1\r\n                                                constructor time (milliseconds)= 0\r\n                                                open time (milliseconds) = 0\r\n                                                next time (milliseconds) = 0\r\n                                                close time (milliseconds) = 0\r\n                                                next time in milliseconds/row =0\r\n\r\n                                        scan information:\r\n                                                Bit set of columns fetched={2}\r\n                                                Number of columns fetched=1\r\n                                                Number of deleted rows visited=0\r\n\r\n                                                Number of pages visited=1\r\n                                                Number of rows qualified=4\r\n                                                Number of rows visited=4\r\n                                                Scan type=btree\r\n                                                Tree height=-1\r\n                                                start position:\r\n        None\r\n                                                stop position:\r\n        None\r\n                                                qualifiers:\r\nNone\r\n                                                optimizer estimated row count:          9.00\r\n                                                optimizer estimated cost:   328.82\r\n\r\n\r\n                        Right result set:\r\n                                User supplied optimizer overrides on FILECHANGES are { index=SQL090803230334101 }\r\n                                Index Scan ResultSet for FILECHANGES using constraint FILECHANGES_FILE_CHANGESET at read committed isolation level using instantaneous share row locking chosen by the optimizer\r\n                                Number of opens = 4\r\n                                Rows seen = 6\r\n                                Rows filtered = 0\r\n                                Fetch Size = 16\r\n                                        constructor time (milliseconds) = 0\r\n                                        open time (milliseconds) = 0\r\n                                        next time (milliseconds) = 0\r\n                                        close time (milliseconds) = 0\r\n                                        next time in milliseconds/row = 0\r\n\r\n                                scan information:\r\n                                        Bit set of columns fetched={0, 1}\r\n                                        Number of columns fetched=2\r\n                                        Number of deleted rows visited=0\r\n                                        Number of pages visited=4\r\n                                        Number of rows qualified=6\r\n                                        Number of rows visited=9\r\n                                        Scan type=btree\r\n                                        Tree height=1\r\n                                        start position:\r\n        >= on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                        stop position:\r\n        > on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                        qualifiers:None\r\n                                        optimizer estimated row count:  6.00\r\n                                        optimizer estimated cost:           18.97\r\n\r\n\r\n                Right result set:\r\n                        User supplied optimizer overrides on CHANGESETS are { index=SQL090803230333820 }\r\n                        Index Scan ResultSet for CHANGESETS using constraint CHANGESETS_PRIMARY_ID at read committed isolation level using share row locking chosen by the optimizer\r\n                        Number of opens = 6\r\n                        Rows seen = 6\r\n                        Rows filtered = 0\r\n                        Fetch Size = 1\r\n                                constructor time (milliseconds) = 0\r\n                                open time (milliseconds) = 0\r\n                                next time (milliseconds) = 0\r\n                                close time (milliseconds) = 0\r\n                                next time in milliseconds/row = 0\r\n\r\n                        scan information:\r\n                                Bit set of columns fetched={0}\r\n                                Number of columns fetched=1\r\n                                Number of deleted rows visited=0\r\n                                Number of pages visited=6\r\n                                Number of rows qualified=6\r\n                                Number of rows visited=6\r\n                                Scan type=btree\r\n                                Tree height=1\r\n                                start position:\r\n        >= on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                stop position:\r\n        > on first 1 column(s).\r\n        Ordered null semantics on the following columns:0\r\n                                qualifiers:None\r\n                                optimizer estimated row count:            6.00\r\n                                optimizer estimated cost:            9.43\r\n\r\n\r\n        Right result set:\r\n                Project-Restrict ResultSet (10):\r\n                Number of opens = 6\r\n                Rows seen = 24\r\n                Rows filtered = 18\r\n                restriction = true\r\n                projection = true\r\n                        constructor time (milliseconds) = 0\r\n                        open time (milliseconds) = 0\r\n                        next time (milliseconds) = 0\r\n                        close time (milliseconds) = 0\r\n                        restriction time (milliseconds) = 0\r\n                        projection time (milliseconds) = 0\r\n                        optimizer estimated row count:            2.67\r\n                        optimizer estimated cost:         1972.94\r\n\r\n                Source result set:\r\n                        Index Row to Base Row ResultSet for FILES:\r\n                        Number of opens = 6\r\n                        Rows seen = 24\r\n                        Columns accessed from heap = {0}\r\n                                constructor time (milliseconds) = 0\r\n                                open time (milliseconds) = 0\r\n                                next time (milliseconds) = 0\r\n                                close time (milliseconds) = 0\r\n                                optimizer estimated row count:            2.67\r\n                                optimizer estimated cost:         1972.94\r\n\r\n                                User supplied optimizer overrides on FILES are { index=SQL090803230333481 }\r\n                                Index Scan ResultSet for FILES using constraint FILES_REPOSITORY_PATH at read committed isolation level using share row locking chosen by the optimizer\r\n                                Number of opens = 6\r\n                                Rows seen = 24\r\n                                Rows filtered = 0\r\n                                Fetch Size = 1\r\n                                        constructor time (milliseconds) = 0\r\n                                        open time (milliseconds) = 0\r\n                                        next time (milliseconds) = 0\r\n                                        close time (milliseconds) = 0\r\n                                        next time in milliseconds/row = 0\r\n\r\n                                scan information:\r\n                                        Bit set of columns fetched={2}\r\n                                        Number of columns fetched=1\r\n                                        Number of deleted rows visited=0\r\n                                        Number of pages visited=6\r\n                                        Number of rows qualified=24\r\n                                        Number of rows visited=24\r\n                                        Scan type=btree\r\n                                        Tree height=1\r\n                                        start position:        None\r\n                                        stop position:        None\r\n                                        qualifiers:None\r\n                                        optimizer estimated row count:  2.67\r\n                                        optimizer estimated cost:         1972.94\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-04T06:37:59.044+0000","updated":"2009-08-04T06:37:59.044+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739234","id":"12739234","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I am not sure if just running update statistics will fix this problem for any set of data.  For this\r\nquery it does look like changing the order by clause to include an extra column will work around\r\nthis bug:\r\n\r\nORDER BY CS.ID, CS.REPOSITORY;","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-04T23:12:21.458+0000","updated":"2009-08-04T23:12:21.458+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739236","id":"12739236","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"the bug is not specific to the desc order by, the following query also gives wrong ordered results:\r\nij(C1)> SELECT\r\n    CS.ID\r\nFROM --DERBY-PROPERTIES joinOrder=FIXED\r\n      FILES       F  --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n    , CHANGESETS  CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n    CS.ID = FC.CHANGESET AND\r\n    F.ID  = FC.FILE      AND\r\n    EXISTS (\r\n        SELECT 1\r\n            FROM FILES F2 --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n        WHERE\r\n            F2.ID = FC.FILE)\r\n    ORDER BY CS.ID;\r\nID\r\n-----------\r\n1\r\n2\r\n3\r\n2\r\n2\r\n3","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-04T23:13:39.864+0000","updated":"2009-08-04T23:13:39.864+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739329","id":"12739329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Following query gets rid of EXISTS clause and still runs into the incorrect order by result. Much easier to debug.\r\n\r\nSELECT CS.ID\r\nFROM --DERBY-PROPERTIES joinOrder=FIXED\r\n    FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH\r\n    , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET\r\n    , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID\r\nWHERE\r\n CS.ID = FC.CHANGESET AND\r\n F.ID = FC.FILE \r\n ORDER BY CS.ID DESC;\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-05T04:15:39.464+0000","updated":"2009-08-05T04:15:39.464+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739672","id":"12739672","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I am still investigating, but as this seems time critical am posting some incomplete information.\r\n\r\nI have been debugging and talking to mamta about this issue.  I now do believe part of \r\nDERBY-3926 should be backed out as the logic is incomplete, I don't believe the fix for this is\r\nsimple and it would be better to get all the code lines into a safer state and put off the complete\r\nfix for later.  But I believe we only need to backout part of the fix.\r\n\r\nThe fix for DERBY-3926 addressed 2 issues:\r\n1) The code incorrectly assumed if a query plan resulted in for example \"always sorted on a\", \r\n     \"always sorted on b\"  where \"always sorted\" meant something like a=5, that then one could\r\n     assume the query was also just sorted on b.  This was only true if a was a single row result  \r\n     set.  I believe this code is working fine.\r\n\r\n2) When the fix went in we noticed a few queries in wisconsin were not doing sort avoidance any\r\n    more .  See 23/Apr/09 01:13 PM DERBY-3926 comment by mamta.  To this end code was \r\n    added to do some tricky stuff with join equivalent analysis.  This part of the fix is localized to \r\n    a single file mamta and I have looked at it and it does not do the right work.  It does not handle\r\n    desc indexes or desc ordery by properly and can incorrectly assume that a query ordered\r\n    on a, b, c satisfies and order by c.   I have just tried just backing out this change and \r\n    all the DERBY-4331 cases I tried worked, all the test cases specific for DERBY-3926 worked,\r\n   and as expected I got wisconsin diffs that I am analysing.  I have not had time to run full tests.\r\n\r\nI will post a patch with just this change if anyone else wants to experiment. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-05T18:51:52.197+0000","updated":"2009-08-05T18:51:52.197+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739675","id":"12739675","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"This is a patch file based off of trunk.\r\n\r\nnot fully tested patch file.  This patch just gets rid of the FromBaseTable.java changes\r\nto DERBY-3926, it leaves every thing else.\r\n\r\nSo far my testing shows:\r\npostives: fixes all run test cases of DERBY-3926 and DERBY-4331\r\nnegatives: Causes some diffs in wisconsin, probably the known cases where we \r\n                  don't do sort avoidance anymore - but still get correct sorting.\r\nunknown: no full test run done yet.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-05T18:58:03.427+0000","updated":"2009-08-05T19:00:14.390+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739682","id":"12739682","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks, Mike. I can confirm that your derby4331_do_not_commit.diff patch produces correct results from the d3926_repro.sql script attached to DERBY-3926 repro  and from the repro2.sql script attached to this JIRA","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-05T19:16:01.974+0000","updated":"2009-08-05T19:16:01.974+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739698","id":"12739698","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Mike and I have been talking about different possibilities for DERBY-4331/DERBY-3926 given the time critical nature of it. We decided that we will investigate the fix for DERBY-3926 to see what can be backed out and at the same time debug the reason beind DERBY-4331 failure. I will write the information I have collected over last couple days on the reason behind the bug DERBY-4331 and apossible fix for it but first would like to comment on Mike's proposal about backing out some of DERBY-3926 changes\r\n\r\nI agree with the partial backout of DERBY-3926. The code proposed for backout was written to cover additional queries so that we can avoid sorting for them if possible but from what I recall, it was not needed for fixing DERBY-3926. So it should be safe to backout part of the change w/o impacting any queries negatively. It will be good to do full tests before we commit those changes though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-05T19:38:02.739+0000","updated":"2009-08-05T19:38:02.739+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739709","id":"12739709","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"here is the diff file from the wisconsin diffs.  I am working through it, but it is taking\r\ntime.  A lot of the diffs are that the new plan picks a different order which is also\r\na valid sort avoidance plan, they are the of the form where we have TABLE1 with\r\nINDEX1(id) and TABLE2 with INDEX2(id) and query of form:\r\nselect xxx\r\nwhere\r\nTABLE1.id = TABLE2.id\r\norder by TABLE1.id\r\n\r\nprior to backing out equijoin stuff we would often pick INDEX2 as left most using the equijoin logic, but now without it we instead find plan using INDEX1 as left most.  No\r\nloss in performance as both provide a valid sort avoidance plan - just a lot of diffs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-05T20:03:19.359+0000","updated":"2009-08-05T20:03:19.359+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739715","id":"12739715","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"my plan for this fix is going to be the proposed patch along with adding the new test cases for 4331 to the test suite.  I am running full set of tests against trunk now and analysing the wisconsin diffs.\r\nI've posted the wisconsin diffs which as is the case for query plan diffs are quite extensive \r\n(15k lines) - but so far nothing surprising.\r\n\r\nIf all goes well I would first check into trunk and then subsequently would like to backport to 10.5 and then hopefully  a new 10.5 apache release could be made (along with whatever we are allowed to do to make it unlikely apache users will use the previous one).\r\n\r\nI plan on checking in even if there are a few cases where we use to do sort avoidance and now\r\nwe don't.  If I do this I would file a new JIRA issue outlining these cases, which could be addressed\r\nlater.  Note these would only represent performance enhancements, the queries would be returning\r\ncorrect results.\r\n\r\nI would appreciate it if anyone thinks this is a bad idea to let me know sooner than later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-05T20:14:26.865+0000","updated":"2009-08-05T20:14:26.865+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739718","id":"12739718","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Put this in two unrelated issues. Not sure if there is a problem with my browser or the driver.  I think probably the latter.  Hopefully got it right this time.\r\n\r\nAs a matter of bookkeeping, if all of the wisconsin diffs are deemed acceptable and other tests and reviews pass, I think we should do the partial backout as a resolution of this issue. Then both DERBY-3926 and DERBY-4331 can be resolved and a new issue opened for any follow up sort avoidance optimizations.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-05T20:21:34.822+0000","updated":"2009-08-05T20:21:34.822+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739757","id":"12739757","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"i am attaching a patch for additional junits tests which were collected from this jira entry. Mike, can you please run the test on your codeline to see if works fine?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-05T21:15:21.178+0000","updated":"2009-08-05T21:15:21.178+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739810","id":"12739810","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Still have not finished running tests (all of the junit tests passed, waiting on old\r\nharness tests), derby_4331_patch_2.diff is the current state of the patch.  It includes the new tests that mamta contributed (I had to make a few minor changes to get the queries to run correctly).  \r\n\r\nIt also includes an update to the wisconsin tests and master.  I worked through the\r\ndiffs and there were only 2 queries that previous to this patch that produced a \r\nsort avoidance plan and that now don't.  I have filed DERBY-4339 to note these \r\n2 queries:\r\nselect * from --DERBY-PROPERTIES joinOrder=FIXED\r\nTENKTUP2, TENKTUP1\r\nwhere TENKTUP1.unique1 = TENKTUP2.unique1\r\nand TENKTUP2.unique1 < 2500\r\norder by TENKTUP1.unique1'; \r\nselect * from TENKTUP1, TENKTUP2\r\nwhere TENKTUP1.unique1 = TENKTUP2.unique1\r\norder by TENKTUP1.unique1 = TENKTUP2.unique1 \r\n\r\nAll the other diffs were changes to the plans where the optimizer just choose \r\ndifferent ways to provide a sort avoidance plan with the available indexes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-05T23:14:29.374+0000","updated":"2009-08-05T23:15:50.480+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739816","id":"12739816","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"proposed patch will stop sort avoidance on the types of queries described in \r\nDERBY-4339","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-05T23:19:32.769+0000","updated":"2009-08-05T23:19:32.769+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12739858","id":"12739858","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"body":"I only run tests again repro2.sql and DERBY-3926 and both result are correct. Nothing feels better when correct result returns. Thanks!!!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lilywei","name":"lilywei","emailAddress":"lilywei at yahoo dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Lily Wei","active":true},"created":"2009-08-06T01:28:17.147+0000","updated":"2009-08-06T01:28:17.147+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12740149","id":"12740149","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The bug behind the query below is as follows\r\nSELECT CS.ID \r\nFROM --DERBY-PROPERTIES joinOrder=FIXED \r\n    FILES F --DERBY-PROPERTIES constraint=FILES_REPOSITORY_PATH \r\n    , FILECHANGES FC --DERBY-PROPERTIES constraint=FILECHANGES_FILE_CHANGESET \r\n    , CHANGESETS CS --DERBY-PROPERTIES constraint=CHANGESETS_PRIMARY_ID \r\nWHERE \r\n CS.ID = FC.CHANGESET AND \r\n F.ID = FC.FILE \r\n ORDER BY CS.ID DESC; \r\n\r\nOptimizer while considering any join order collects the sorting provided by that join order. For instance, for the query above, optimizer will first start with [F, -1, -1] as the join order and for this join order,  it knows that it can guarantee row ordering on FILES.REPOSITORY AND FILE.PATH. Next in the join order will be [F, FC, -1] and now available sorting is F.REPOSITORY, F.PATH, FC.FILE and FC.CHANGESET. The important thing to notice here is that the sorting available at any point is in the order collected by optimizer and this piece of information was not being considered by the code removed by Mike from FromBaseTable. This behavior can be seen when optimizer is considering the join order [F, FC, CS]. While considering this join order, the removed code from FromBaseTable kicks in for the predicate CS.ID=FC.CHANGESET. The removed code looks at equijoin CS.ID=FC.CHANGESET and it looks at the available ordering so far and sees FC.CHANGESET in there and incorrectly concludes that required sorting is available on CS.ID indirectly through FC.CHANGSET. It fails to take into account that FC.CHANGSET is in the 4th position in the ordering. The rows returned from [F, FC, -1] are ordered F.REPOSITORY, F.PATH, FC.FILE and FC.CHANGSET and not just FC.CHANGESET. Because the code incorrectly decides that required sorting is available, it decides to avoid the sorting for the given query. \r\nThe result of the query above without Mike's changes are as follows\r\nID \r\n----------- \r\n1 \r\n2 \r\n3 \r\n2 \r\n2 \r\n3 \r\nAs we can see from above that FC.CHANGSET is sorted for every row selected from the outermost table F. \r\na)The first row in the result above is for the first row qualified from F\r\nb)The next 2 rows in the result above are for the second qualified row from F\r\nc) the 4th row in the result above is for the 3rd qualified row from F \r\nd)and last 2 rows in the result above are for the 4th qualified row from F. \r\n\r\nIf the outermost optimizable F was only one row resultset, we could safely assume that the required ordering is provided by indexes being considered for [F, FC, -1] but that is not the case. \r\n\r\nIn future, if we ever decide to enhance sort avoidance code to qualify more queries for sort avoidance, we should consider the position of the sorted columns in available sorting list of columns and then decide if the query is pre-ordered on required ordering.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-08-06T16:52:12.317+0000","updated":"2009-08-06T16:52:12.317+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12740202","id":"12740202","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"updating affects version, it is affected by a fix that has been backported all the way to 10.1 branch.\r\nAs tests pass I plan to backport all the way.  Waiting now on the end of my 10.5 tests run.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-06T18:57:20.977+0000","updated":"2009-08-06T18:57:20.977+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12740248","id":"12740248","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I've backported fix to 10.5 branch with svn checkin #801817\r\nAll tests passed for me on a 10.5 client, XP, ibm16 jvm.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-06T21:01:16.504+0000","updated":"2009-08-06T21:01:16.504+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12742432","id":"12742432","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"fix has been made in trunk and backported to 10.5, 10.4, 10.3, 10.2 and 10.1 branches.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-12T16:21:39.379+0000","updated":"2009-08-12T16:21:39.379+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12745404","id":"12745404","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Updated fix versions to match the versions on the branches.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-20T11:43:31.269+0000","updated":"2009-08-20T11:43:31.269+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12745406","id":"12745406","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Updated affects versions similarly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-20T11:47:14.172+0000","updated":"2009-08-20T11:47:14.172+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12431975/comment/12745407","id":"12745407","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Verified that the problem is fixed on trunk and 10.5.3.0 RC. Closing.\r\n\r\nThanks for the quick fix!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-20T11:49:11.502+0000","updated":"2009-08-20T11:49:11.502+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4331/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06xav:"}}