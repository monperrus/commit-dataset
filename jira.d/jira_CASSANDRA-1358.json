{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12470822","self":"https://issues.apache.org/jira/rest/api/latest/issue/12470822","key":"CASSANDRA-1358","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310865","id":"12310865","key":"CASSANDRA","name":"Cassandra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310865&avatarId=12034","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310865&avatarId=12034","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310865&avatarId=12034","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310865&avatarId=12034"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11961","id":"11961","description":"Apache Cassandra related projects","name":"Cassandra"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315220","id":"12315220","description":"","name":"0.6.5","archived":false,"released":true,"releaseDate":"2010-08-27"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2010-08-04 18:47:07.997","customfield_12312322":null,"customfield_12312323":null,"customfield_12310222":"10002_*:*_1_*:*_687211738_*|*_1_*:*_1_*:*_86640940_*|*_5_*:*_1_*:*_0","customfield_12310420":"28065","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-08-13T17:10:28.863+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-1358/watchers","watchCount":5,"isWatching":false},"created":"2010-08-04T18:12:56.185+0000","customfield_10022":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12311124":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2010-08-13T17:10:28.851+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312978","id":"12312978","name":"Core"}],"timeoriginalestimate":null,"description":"The message deserialization process can become a bottleneck that prevents efficient resource utilization because the executor that manages the deserialization process will never grow beyond a single thread. The message deserializer executor is instantiated in the MessagingService constructor as a JMXEnableThreadPoolExecutor, which extends java.util.concurrent.ThreadPoolExecutor. The thread pool is instantiated with a corePoolSize of 1 and a maximumPoolSize of Runtime.getRuntime().availableProcessors(). But, according to the ThreadPoolExecutor documentation \"using an unbounded queue (for example a LinkedBlockingQueue without a predefined capacity) will cause new tasks to be queued in cases where all corePoolSize threads are busy. Thus, no more than corePoolSize threads will ever be created. (And the value of the maximumPoolSize therefore doesn't have any effect.)\"\r\n\r\nThe message deserializer pool uses a LinkedBlockingQueue, so there will never be more than one deserialization thread. This issue became a problem in our production cluster when the MESSAGE-DESERIALIZER-POOL began to back up on a node that was only lightly loaded. We increased the core pool size to 4 and the situation improved, but the deserializer pool was still backing up while the machine was not fully utilized (less than 100% CPU utilization). This leads me to think that the deserializer thread is blocking on some sort of I/O, which seems like it shouldn't happen.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12451350","id":"12451350","filename":"1358.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-05T17:54:27.730+0000","size":9065,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12451350/1358.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12451363","id":"12451363","filename":"1358-v2.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-05T20:16:39.502+0000","size":12713,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12451363/1358-v2.txt"}],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"92170","summary":"Clogged RRS/RMS stages can hold up processing of gossip messages and request acks","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmalone","name":"mmalone","emailAddress":"mjmalone at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Malone","active":true},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmalone","name":"mmalone","emailAddress":"mjmalone at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Malone","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"customfield_12311420":null,"customfield_12311421":null,"environment":"All.","customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":12,"total":12,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895358","id":"12895358","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"I have never ever seen MDP be the bottleneck as opposed to the stage it is pushing the request into next (either mutation or read).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-04T18:47:07.997+0000","updated":"2010-08-04T18:47:07.997+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895405","id":"12895405","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmalone","name":"mmalone","emailAddress":"mjmalone at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Malone","active":true},"body":"So are the message deserializer threads blocking on a response from (or pushing a task onto a queue for) a different thread pool then? The problem we saw / are seeing is that the deserializer pool backs up and it causes the server to flap because (apparently) it's unable to process gossip requests / responses in a timely manner. Since all inter-node RPC goes through the deserializer, this queue ends up causing all sorts of crazy havoc when it gets backed up.\r\n\r\nEven supposing the MDP _isn't_ the bottleneck, the current code seems to be a mistake. If the intent is to have a single threaded executor, the second argument should be 1. If the intent is to have a multiple-threaded executor, the first argument should not be 1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmalone","name":"mmalone","emailAddress":"mjmalone at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Malone","active":true},"created":"2010-08-04T20:26:26.449+0000","updated":"2010-08-04T20:26:57.571+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895419","id":"12895419","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"bq. So are the message deserializer threads blocking on a response from (or pushing a task onto a queue for) a different thread pool then?\r\n\r\nyes.\r\n\r\nbq. If the intent is to have a single threaded executor, the second argument should be 1\r\n\r\ntrue, but possibly moot, because:\r\n\r\nbq. it's unable to process gossip requests / responses in a timely manner\r\n\r\ngood point.  we have a separate connection for gossip and acks so they won't be blocked by a large request on the outbound path, but combining them both through the same MDP on the inbound side defeats that to a large degree.\r\n\r\nprobably we should just get rid of MDP, and do the deserialize on the IncomingTcpConnection thread.  (This would require moving the flow control from CASSANDRA-685 / CASSANDRA-1284 into RMVH / RVH.)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-04T21:00:03.358+0000","updated":"2010-08-04T21:00:03.358+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895421","id":"12895421","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"(getting rid of MDP would also slightly reduce the object allocations on the network path, since we're not wrapping the work in a separate Task object and involving the extra executor queue.  So I would expect a minor performance benefit as well.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-04T21:02:19.176+0000","updated":"2010-08-04T21:02:19.176+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895434","id":"12895434","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmalone","name":"mmalone","emailAddress":"mjmalone at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Malone","active":true},"body":"I'm continuing to dig deeper into this code while simultaneously nursing one of our cluster's back to health, so I apologize for the sort of stream-of-consciousness here...\r\n\r\nI noticed that several of the executor queues are bounded at 4096 tasks. Has there been much thought put into that choice, or is it an arbitrary round number that someone picked? It seems to me that bumping that number up a couple orders of magnitude or making it unbounded might ameliorate the situation. Instead of having the stage executors filling up and pushing task execution back onto the calling thread (which is single thread in the case of MDP) more messages will stack up in the callee-queues. This should give the various queues a fair chance of processing stuff they're interested in without being blocked by MDP (which is being blocked by some other stage). There may be some slight memory overhead because deserialized objects will be in memory instead of serialized ones, but that's a priced I'd be willing to pay.\r\n\r\nI did find one possible reason to have an executor with a core pool size of 1, an unbounded queue, and a maximumPoolSize > 1. It looks like the default RejectedExecutionHandler is affected by maximumPoolSize. If it's > 1 then the default constructor assumes that tasks can safely be scheduled in parallel, and it defaults to a \"caller runs\" policy if the queue is full. But if the maximumPoolSize is 1, the rejected execution handler spins on offering the task to the queue with a 1 second timeout. So if your maximum pool size is greater than one you can basically use the calling threads for spare capacity.\r\n\r\nStill, if that's the goal it should be made more explicit. I'm guessing the intent was to give the MDP one thread per core under the assumption that it will be completely CPU bound. But the implementation is borked for a number of reasons. Plus, if the MDP can block on other stuff, the CPU bound assumption is wrong. If MDP can block, it should probably have a lot more threads.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmalone","name":"mmalone","emailAddress":"mjmalone at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Malone","active":true},"created":"2010-08-04T21:45:06.689+0000","updated":"2010-08-04T21:45:06.689+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895436","id":"12895436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmalone","name":"mmalone","emailAddress":"mjmalone at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Malone","active":true},"body":"Er, or you could get rid of MDP. That sounds like an excellent solution! Still wonder about the bounded queue sizes though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmalone","name":"mmalone","emailAddress":"mjmalone at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Malone","active":true},"created":"2010-08-04T21:46:17.437+0000","updated":"2010-08-04T21:46:17.437+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895439","id":"12895439","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"Yes, unbounding those would also be required in the get-rid-of-MDP scenario.  In short, the bound never makes things better and can make things worse.\r\n\r\n(But, if you are running into that 4096 bound -- as I predicted earlier :) -- your node is already _severely_ overwhelmed and the only thing we are discussing is how to mitigate the effects, this is not going to stop it from timing out a ton of requests under those conditions.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-04T21:57:33.505+0000","updated":"2010-08-04T21:57:33.505+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895753","id":"12895753","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"Patch to remove MessageDeserializationTask; the drop-messages-that-can't-possibly-complete-within-timeout code moves to MessageDeliveryTask, and the RMS/RRS queues are uncapped.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-05T17:54:27.845+0000","updated":"2010-08-05T17:54:27.845+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895762","id":"12895762","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"* defaultExecutor still claims the name MESSAGE-DESERIALIZER-POOL\r\n* Patch doesn't actually remove net/MessageDeserializationTask.java\r\n* MessagingService.getDeserializationExecutor() has no callers","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2010-08-05T18:30:18.081+0000","updated":"2010-08-05T18:30:18.081+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12895781","id":"12895781","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"v2 fixes above, and import cleanup in MessagingService","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-05T20:16:39.570+0000","updated":"2010-08-05T20:16:39.570+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12898310","id":"12898310","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"+1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2010-08-13T16:47:02.010+0000","updated":"2010-08-13T16:47:02.010+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12470822/comment/12898319","id":"12898319","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"body":"committed","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jbellis","name":"jbellis","emailAddress":"jbellis at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jbellis&avatarId=18380","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jbellis&avatarId=18380","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jbellis&avatarId=18380","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jbellis&avatarId=18380"},"displayName":"Jonathan Ellis","active":true},"created":"2010-08-13T17:10:28.800+0000","updated":"2010-08-13T17:10:28.800+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-1358/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0g4kf:"}}