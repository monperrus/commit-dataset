{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12395764","self":"https://issues.apache.org/jira/rest/api/latest/issue/12395764","key":"LUCENE-1282","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312681","id":"12312681","description":"","name":"2.4","archived":false,"released":true,"releaseDate":"2008-10-08"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2008-05-11 22:40:32.451","customfield_12312323":null,"customfield_12310420":"12466","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_7032441104_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_6288793006","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-07-30T17:56:24.104+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-1282/watchers","watchCount":8,"isWatching":false},"created":"2008-05-10T08:29:03.414+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312531","id":"12312531","description":"","name":"2.3","archived":false,"released":true,"releaseDate":"2008-01-23"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312975","id":"12312975","description":"Bug Fixes for the 2.3.0 release","name":"2.3.1","archived":false,"released":true,"releaseDate":"2008-02-22"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2008-10-11T12:49:37.100+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310232","id":"12310232","name":"core/index","description":"issues with indexing code"}],"timeoriginalestimate":null,"description":"This is not a Lucene bug.  It's an as-yet not fully characterized Sun\nJRE bug, as best I can tell.  I'm opening this to gather all things we\nknow, and to work around it in Lucene if possible, and maybe open an\nissue with Sun if we can reduce it to a compact test case.\n\nIt's hit at least 3 users:\n\n  http://mail-archives.apache.org/mod_mbox/lucene-java-user/200803.mbox/%3c8c4e68610803180438x39737565q9f97b4802ed774a5@mail.gmail.com%3e\n  http://mail-archives.apache.org/mod_mbox/lucene-solr-user/200804.mbox/%3c4807654E.7050900@virginia.edu%3e\n  http://mail-archives.apache.org/mod_mbox/lucene-java-user/200805.mbox/%3c733777220805060156t7fdb8fectf0bc984fbfe48a22@mail.gmail.com%3e\n\nIt's specific to at least JRE 1.6.0_04 and 1.6.0_05, that affects\nLucene.  Whereas 1.6.0_03 works OK and it's unknown whether 1.6.0_06\nshows it.\n\nThe bug affects bulk merging of stored fields.  When it strikes, the\nsegment produced by a merge is corrupt because its fdx file (stored\nfields index file) is missing one document.  After iterating many\ntimes with the first user that hit this, adding diagnostics &\nassertions, its seems that a call to fieldsWriter.addDocument some\neither fails to run entirely, or, fails to invoke its call to\nindexStream.writeLong.  It's as if when hotspot compiles a method,\nthere's some sort of race condition in cutting over to the compiled\ncode whereby a single method call fails to be invoked (speculation).\n\nUnfortunately, this corruption is silent when it occurs and only later\ndetected when a merge tries to merge the bad segment, or an\nIndexReader tries to open it.  Here's a typical merge exception:\n\n{code}\nException in thread \"Thread-10\" \norg.apache.lucene.index.MergePolicy$MergeException: \norg.apache.lucene.index.CorruptIndexException:\n    doc counts differ for segment _3gh: fieldsReader shows 15999 but segmentInfo shows 16000\n        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:271)\nCaused by: org.apache.lucene.index.CorruptIndexException: doc counts differ for segment _3gh: fieldsReader shows 15999 but segmentInfo shows 16000\n        at org.apache.lucene.index.SegmentReader.initialize(SegmentReader.java:313)\n        at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:262)\n        at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:221)\n        at org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:3099)\n        at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:2834)\n        at org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:240)\n{code}\n\nand here's a typical exception hit when opening a searcher:\n\n{code}\norg.apache.lucene.index.CorruptIndexException: doc counts differ for segment _kk: fieldsReader shows 72670 but segmentInfo shows 72671\n        at org.apache.lucene.index.SegmentReader.initialize(SegmentReader.java:313)\n        at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:262)\n        at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:230)\n        at org.apache.lucene.index.DirectoryIndexReader$1.doBody(DirectoryIndexReader.java:73)\n        at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:636)\n        at org.apache.lucene.index.DirectoryIndexReader.open(DirectoryIndexReader.java:63)\n        at org.apache.lucene.index.IndexReader.open(IndexReader.java:209)\n        at org.apache.lucene.index.IndexReader.open(IndexReader.java:173)\n        at org.apache.lucene.search.IndexSearcher.<init>(IndexSearcher.java:48)\n{code}\n\nSometimes, adding -Xbatch (forces up front compilation) or -Xint\n(disables compilation) to the java command line works around the\nissue.\n\nHere are some of the OS's we've seen the failure on:\n\n{code}\nSuSE 10.0\nLinux phoebe 2.6.13-15-smp #1 SMP Tue Sep 13 14:56:15 UTC 2005 x86_64 \nx86_64 x86_64 GNU/Linux \n\nSuSE 8.2\nLinux phobos 2.4.20-64GB-SMP #1 SMP Mon Mar 17 17:56:03 UTC 2003 i686 \nunknown unknown GNU/Linux \n\nRed Hat Enterprise Linux Server release 5.1 (Tikanga)\nLinux lab8.betech.virginia.edu 2.6.18-53.1.14.el5 #1 SMP Tue Feb 19 \n07:18:21 EST 2008 i686 i686 i386 GNU/Linux\n{code}\n\nI've already added assertions to Lucene to detect when this bug\nstrikes, but since assertions are not usually enabled, I plan to add a\nreal check to catch when this bug strikes *before* we commit the merge\nto the index.  This way we can detect & quarantine the failure and\nprevent corruption from entering the index.\n\n","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"26764","summary":"Sun hotspot compiler bug in 1.6.0_04/05 affects Lucene","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":29,"total":29,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12595946","id":"12595946","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psmith%40apache.org","name":"psmith@apache.org","emailAddress":"tallpsmith at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Paul Smith","active":true},"body":"Another workaround might be to use '-client' instead of the default '-server' (for server class machines).  This affects a few things, not least this switch:\r\n\r\n-XX:CompileThreshold=10000 \tNumber of method invocations/branches before compiling [-client: 1,500]\r\n\r\n-server implies a 10000 value.  I have personally observed similar behaviour like problems like the above with -server, and usually -client ends up 'solving' them.\r\n\r\nI'm sure there was also a way to mark a method to not jit compile too (rather than resort to -Xint which disables i for everything), but now I cant' find what that syntax is at all.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psmith%40apache.org","name":"psmith@apache.org","emailAddress":"tallpsmith at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Paul Smith","active":true},"created":"2008-05-11T22:40:32.451+0000","updated":"2008-05-11T22:40:32.451+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12595957","id":"12595957","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bruce%40jivesoftware.com","name":"bruce@jivesoftware.com","emailAddress":"bruce at jivesoftware dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bruce Ritchie","active":true},"body":"From Mark Miller on the developer's mailing list:\r\n\r\nHere's a couple examples of that exclude method syntax (had to use it recently with eclipse):\r\n\r\n-XX:CompileCommand=exclude,org/apache/lucene/index/IndexReader\\$1,doBody\r\n-XX:CompileCommand=exclude,org/eclipse/core/internal/dtree/DataTreeNode,forwardDeltaWith\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bruce%40jivesoftware.com","name":"bruce@jivesoftware.com","emailAddress":"bruce at jivesoftware dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bruce Ritchie","active":true},"created":"2008-05-12T00:34:05.189+0000","updated":"2008-05-12T00:34:05.189+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596605","id":"12596605","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"body":"I've also been struck by this bug, with Lucene 2.3.2. I'd been running for a while with JRE 1.6.0_05 when I noticed it, so I downgraded to JRE 1.6.0_02 to try and work around it, but no luck.\r\n\r\nCould a bugged index created with JRE 1.6.0_05 be causing addIndexesNoOptimize to trigger this bug, even with JRE 1.6.0_02?\r\n\r\nThanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stuhood","name":"stuhood","emailAddress":"stuhood at twitter dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stuhood&avatarId=10049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stuhood&avatarId=10049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stuhood&avatarId=10049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stuhood&avatarId=10049"},"displayName":"Stu Hood","active":true},"created":"2008-05-14T01:49:21.513+0000","updated":"2008-05-14T01:49:21.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596661","id":"12596661","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. Could a bugged index created with JRE 1.6.0_05 be causing addIndexesNoOptimize to trigger this bug, even with JRE 1.6.0_02\r\n\r\nUnfortunately, yes.  Once the corruption enters the index, then no matter which JRE you are using, you will hit that exception.\r\n\r\nIn your case, I can see that indeed segment _2y9, which is pre-existing when you call addIndexesNoOptimize, is the corrupt segment.\r\n\r\nIn general, you can use CheckIndex to see if you have any latent corruption.\r\n\r\nI'm afraid you either have to run CheckIndex -fix to remove that segment (and possibly others that are also corrupt) from your index, or, create a new index.\r\n\r\nThis bug is very frustrating!\r\n\r\nCan you describe how you built up this index?  EG was this bulk created (open a single writer, add all the docs, close it), or, created with many separate instances of IndexWriter over time?  Were documents added via add/updateDocument or via addIndexes*?  Do you run the JRE with any \"interesting\" command-line options?  I'd really like to narrow down the \"typical\" cases when this bug strikes if we can...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-14T07:44:35.586+0000","updated":"2008-05-14T07:44:35.586+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596673","id":"12596673","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nick.menere","name":"nick.menere","emailAddress":"nick at atlassian dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nick Menere","active":true},"body":"We had a lot of customers [report this bug|http://jira.atlassian.com/browse/JRA-9198], though it was about 2 years ago that sun fixed this so we only see it in very rare cases now, and even then our fix is... \"Please upgrade you JVM\".\r\n\r\nI am flat out at the moment, but if you need, I will try and get some more info on this if you want.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nick.menere","name":"nick.menere","emailAddress":"nick at atlassian dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nick Menere","active":true},"created":"2008-05-14T08:42:56.727+0000","updated":"2008-05-14T08:42:56.727+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596674","id":"12596674","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nick.menere","name":"nick.menere","emailAddress":"nick at atlassian dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nick Menere","active":true},"body":"Actually, not convinced it is the same bug.. We kept getting complete JVM crashes...  I just assumed it was (I wouldn't be surprised if it was related though).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nick.menere","name":"nick.menere","emailAddress":"nick at atlassian dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nick Menere","active":true},"created":"2008-05-14T08:47:35.950+0000","updated":"2008-05-14T08:47:35.950+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596764","id":"12596764","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Another datapoint from Ian Lea:\r\n\r\nMy job (http://lucene.markmail.org/message/awkkunr7j24nh4qj) still\r\nfails with java version 1.6.0_06 (build 1.6.0_06-b02), downloaded\r\ntoday, with both lucene 2.3.1 and 2.3.2.\r\n\r\nFor me, downgrading to 1.6.0_03-b05 fixed things.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-14T13:59:15.723+0000","updated":"2008-05-14T13:59:15.723+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596949","id":"12596949","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"\r\nI finally managed to reproduce this JVM bug, except, my case happens\r\nwhile merging term vectors (mergeVectors) not stored fields as all\r\nother cases seem to be.\r\n\r\nI'm running JRE 1.6.0_05 on a Debian Linux box.\r\n\r\nIn my case, which just uses a modified contrib/benchmark to add 2000\r\nwikipedia docs to a large index, I got to the point (when index was 19\r\nGB) where every single time I run the benchmark alg, it hits an\r\nexception.  Often the exception looks like this:\r\n\r\n{code}\r\nException in thread \"Lucene Merge Thread #0\" org.apache.lucene.index.MergePolicy$MergeException: java.io.IOException: read past EOF\r\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:323)\r\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:300)\r\nCaused by: java.io.IOException: read past EOF\r\n\tat org.apache.lucene.store.BufferedIndexInput.refill(BufferedIndexInput.java:146)\r\n\tat org.apache.lucene.store.BufferedIndexInput.readByte(BufferedIndexInput.java:38)\r\n\tat org.apache.lucene.store.IndexInput.readInt(IndexInput.java:68)\r\n\tat org.apache.lucene.store.IndexInput.readLong(IndexInput.java:91)\r\n\tat org.apache.lucene.index.TermVectorsReader.get(TermVectorsReader.java:345)\r\n\tat org.apache.lucene.index.SegmentReader.getTermFreqVectors(SegmentReader.java:992)\r\n\tat org.apache.lucene.index.SegmentMerger.mergeVectors(SegmentMerger.java:441)\r\n\tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:138)\r\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:3998)\r\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3650)\r\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:214)\r\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:269)\r\n{code}\r\n\r\nI then added the same check that we now have for mergeFields, ie, to\r\nverify the size of index file (_X.tvx) matches the number of\r\ndocuments merged.  Sometimes, however, I see this different exception:\r\n\r\n{code}\r\nException in thread \"Lucene Merge Thread #0\" org.apache.lucene.index.MergePolicy$MergeException: java.lang.ArrayIndexOutOfBoundsException: 9375\r\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.handleMergeException(ConcurrentMergeScheduler.java:323)\r\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:300)\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 9375\r\n\tat org.apache.lucene.store.BufferedIndexOutput.writeByte(BufferedIndexOutput.java:36)\r\n\tat org.apache.lucene.store.IndexOutput.writeVInt(IndexOutput.java:71)\r\n\tat org.apache.lucene.index.TermVectorsWriter.addAllDocVectors(TermVectorsWriter.java:76)\r\n\tat org.apache.lucene.index.SegmentMerger.mergeVectors(SegmentMerger.java:443)\r\n\tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:138)\r\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:3998)\r\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:3650)\r\n\tat org.apache.lucene.index.ConcurrentMergeScheduler.doMerge(ConcurrentMergeScheduler.java:214)\r\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:269)\r\n{code}\r\n\r\nwhere the particular array index would vary all over the place.  This\r\nis VERY odd because that array is the buffer in BufferedIndexOutput\r\nand is always allocated to 16384 bytes so 9375 (and all others I saw)\r\nis *not* out of bounds.\r\n\r\nJRE 1.5.0_08 always runs fine.  Likewise running JRE 1.6.0_05 with\r\n-Xint also runs fine.  However, JRE 1.6.0_05 with -Xbatch still hits\r\nexceptions.\r\n\r\nSo then I started testing \"trivial\" modifications to the Java source\r\ncode in the mergeVectors, and found, insanely, that this simple diff\r\ncompletely stopped the exceptions:\r\n\r\n{code}\r\n             } else {\r\n-              termVectorsWriter.addAllDocVectors(reader.getTermFreqVectors(docNum));\r\n+              // NOTE: it's very important to first assign\r\n+              // to vectors then pass it to\r\n+              // termVectorsWriter.addAllDocVectors; see\r\n+              // LUCENE-1282\r\n+              TermFreqVector[] vectors = reader.getTermFreqVectors(docNum);\r\n+              termVectorsWriter.addAllDocVectors(vectors);\r\n{code}\r\n\r\n(Ie, just forcing an assignment to a local variable).\r\n\r\nIt's crazy that such a trivial mod actually makes a difference in this\r\nJRE bug (I would have expected it to be optimized away fairly early on\r\nin compilation), but, I'm quite sure that diff resolves at least the\r\nexceptions I've been seeing.  So I plan to commit this JRE bug\r\nworkaround to 2.4 & 2.3 branch.\r\n\r\nI still haven't been able to hit the JRE bug when merging stored\r\nfields, but, I'm still making that same corresponding mod to\r\nmergeFields.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-14T21:40:04.999+0000","updated":"2008-05-14T21:40:04.999+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596956","id":"12596956","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"See, that complex code even confuses the JVM ;-)\r\nAwesome job coming up with this workaround! (crosses fingers for stored fields)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2008-05-14T21:51:51.316+0000","updated":"2008-05-14T21:51:51.316+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596962","id":"12596962","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"body":"Hi,\r\n\r\nGreat work on tracking this down, it looks like a very nasty bug. Has it been reported to Sun yet? It seems like the kind of bug that could manifest itself in other places too, so important to get a real fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"created":"2008-05-14T22:14:00.890+0000","updated":"2008-05-14T22:14:00.890+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12596964","id":"12596964","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psmith%40apache.org","name":"psmith@apache.org","emailAddress":"tallpsmith at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Paul Smith","active":true},"body":"Throwing up an idea here for consideration.  I'm sure it could be shot down, but I thought I'd raise it just in case it hasn't already been considered and discarded.. \r\n\r\nOne of the _classic_ problems between -client and -server mode is the way the CPU registers are used.  Is it possible that some of the fields are suffering from concurrency issues?  I was wondering if, say, BufferedInfexOutput.buffer* may need to be marked volatile ?\r\n\r\nOne easy way to test if this makes a difference is to just try switching between explicit use of '-client' and '-server'.  Most newer machines (even desktops & laptops) appear to qualify for Sun's 'am I a server-class machine' check.  By switching to -client, if these problems disappear, this to me would smell more and more like a 'volatile' like behaviour, because AIUI, -server will be more aggressive with some of it's register optimizations and I've seen behaviour just like this where variables that have clearly been written, the changes are not 'appearing' on the other side.  Even the same thread marking the change can be switched across to a different CPU right in the middle, and could see different results.\r\n\r\nOf course those people with lots of concurrency experience can probably dismiss this theory in a second, but that's fine.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psmith%40apache.org","name":"psmith@apache.org","emailAddress":"tallpsmith at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Paul Smith","active":true},"created":"2008-05-14T22:17:35.304+0000","updated":"2008-05-14T22:17:35.304+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12597042","id":"12597042","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. Has it been reported to Sun yet? It seems like the kind of bug that could manifest itself in other places too, so important to get a real fix.\r\n\r\nNot yet, but I intend to.  I'm trying to whittle it down.  I agree the bug is nasty and could strike again at any time.  The AIOOB exceptions I was hitting were truly bizarre.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-15T07:57:11.352+0000","updated":"2008-05-15T07:57:11.352+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12597048","id":"12597048","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"{quote}\r\nOne of the classic problems between -client and -server mode is the way the CPU registers are used. Is it possible that some of the fields are suffering from concurrency issues? I was wondering if, say, BufferedInfexOutput.buffer* may need to be marked volatile ?\r\n{quote}\r\nIn my 100% reproducible case of this JRE bug, I'm using only 1 thread, so I don't think a volatile should be necessary here.\r\n\r\nBut I like your idea to try -client vs -server -- I will test that & post back.  The more data we can gather the better... I did find it interesting that -Xbatch did NOT resolve it, but has for at least one of the above users.\r\n\r\nI'm wondering if it has something to do with writing to large (> 32 bit) files.  In my test case, the index keeps kicking off a large merge (produces 2.7 GB segment) and it's that merge that trips the bug.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-15T08:04:47.003+0000","updated":"2008-05-15T08:04:47.003+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12597052","id":"12597052","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. In my 100% reproducible case of this JRE bug, I'm using only 1 thread, so I don't think a volatile should be necessary here.\r\n\r\nWoops: I am, however, using the default ConcurrentMergeScheduler, so this very-large merge runs in its own thread.  Still, it's only that one thread that's accessing this code/state, so by the spec volatile should not be necessary.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-15T08:13:26.239+0000","updated":"2008-05-15T08:13:26.239+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12597078","id":"12597078","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"OK: running with -client prevents the bug.\r\n\r\nRunning with SerialMergeScheduler still shows the bug.\r\n\r\nI'm going to try to make a standalone test that just runs this one merge....","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-15T10:22:24.596+0000","updated":"2008-05-15T10:22:24.596+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12597919","id":"12597919","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Using the 19 GB index I have that consistently reproduces this hotspot bug, I boiled the bug down to a very small testcase that no longer involves Lucene.\r\n\r\nHowever, this occurence of the bug is slightly different: for me, by specifying -Xbatch to java command line, the bug consistently happens.  It only rarely happens without -Xbatch.  Nonetheless, I'm hopeful that if Sun fixes this one test case properly, it will fix all the odd exceptions we've been seeing from this code.\r\n\r\nI opened the bug 4 days ago (5/15) with http://bugs.sun.com, but have yet to hear if it's been accepted as a real bug.\r\n\r\nif others could try out the code below on their Linux boxes, using 1.6.0_04/05 of Sun's java, specifying -Xbatch, to see if the bug can be reproduced, that'd be great.\r\n\r\nHere's the bug I opened:\r\n\r\n{code}\r\nDate Created: Thu May 15 11:53:15 MDT 2008\r\nType:        bug\r\nCustomer Name:   Michael McCandless\r\nCustomer Email:  mail@mikemccandless.com\r\nSDN ID:       mail@mikemccandless.com\r\nstatus:      Waiting\r\nCategory:    hotspot\r\nSubcategory: runtime_system\r\nCompany:     IBM\r\nrelease:     6\r\nhardware:    x86\r\nOSversion:   linux\r\npriority:    4\r\nSynopsis:    Simple code runs incorrectly with -Xbatch\r\nDescription:\r\n FULL PRODUCT VERSION :\r\njava version \"1.6.0_06\"\r\nJava(TM) SE Runtime Environment (build 1.6.0_06-b02)\r\nJava HotSpot(TM) Server VM (build 10.0-b22, mixed mode)\r\n\r\n\r\n\r\nFULL OS VERSION :\r\nLinux 2.6.22.1 #7 SMP PREEMPT Tue Mar 18 18:22:09 EDT 2008 i686 GNU/Linux\r\n\r\nA DESCRIPTION OF THE PROBLEM :\r\nOn the Apache Lucene project, we've now had 4 users hit by an apparent\r\nJRE bug.  When this bug strikes, it silently corrupts the search\r\nindex, which is very costly to the user (makes the index unusable).\r\nDetails are here:\r\n\r\n  https://issues.apache.org/jira/browse/LUCENE-1282\r\n\r\nI can reliably reproduce the bug, but only on a very large (19 GB)\r\nsearch index.  But I narrowed down one variant of the bug to attached\r\ntest case.\r\n\r\n\r\n\r\nTHE PROBLEM WAS REPRODUCIBLE WITH -Xint FLAG: No\r\n\r\nTHE PROBLEM WAS REPRODUCIBLE WITH -server FLAG: Yes\r\n\r\nSTEPS TO FOLLOW TO REPRODUCE THE PROBLEM :\r\nCompile and run the attached code (Crash.java), with -Xbatch and it should fail (ie, throw the\r\nRuntimeException, incorrectly).  It should pass without -Xbatch.\r\n\r\n\r\n\r\n\r\n\r\nEXPECTED VERSUS ACTUAL BEHAVIOR :\r\nExpected is no RuntimeException should be thrown.  Actual is it is thrown.\r\nREPRODUCIBILITY :\r\nThis bug can be reproduced always.\r\n\r\n---------- BEGIN SOURCE ----------\r\npublic class Crash {\r\n\r\n  public static void main(String[] args) {\r\n    new Crash().crash();\r\n  }\r\n\r\n  private Object alwaysNull;\r\n\r\n  final void crash() throws Throwable {\r\n    for (int r = 0; r < 3; r++) {\r\n      for (int docNum = 0; docNum < 10000;) {\r\n        if (r < 2) {\r\n          for(int j=0;j<3000;j++)\r\n            docNum++;\r\n        } else {\r\n          docNum++;\r\n          doNothing(getNothing());\r\n          if (alwaysNull != null) {\r\n            throw new RuntimeException(\"BUG: checkAbort is always null: r=\" + r + \" of 3; docNum=\" + docNum);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  Object getNothing() {\r\n    return this;\r\n  }\r\n\r\n  int x;\r\n  void doNothing(Object o) {\r\n    x++;\r\n  }\r\n}\r\n\r\n\r\n---------- END SOURCE ----------\r\n\r\nCUSTOMER SUBMITTED WORKAROUND :\r\nDon't specify -Xbatch.  You can also tweak the code to have it pass the test.  Reducing the 10000\r\nor 3000 low enough makes it pass.  Changing the doNothing(...)  line\r\nto assign the result of getNothing() to an intermediate variable\r\nfirst, also passes (this is the approach we plan to use for Lucene). Removing the x++ also passes.\r\nworkaround:  \r\ncomments:    (company - IBM , email - mail@mikemccandless.com)\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-19T11:06:08.585+0000","updated":"2008-05-19T11:06:08.585+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12597926","id":"12597926","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"body":"Great work finding a reduced test-case. I tried the sample application with JDK6u4 32-bit and I can add the following:\r\n\r\n- It always happens with -Xbatch -server when the code is compiled with javac.\r\n- It happens sometimes (sometimes after 3 attempts, sometimes after 10, etc.) with -server when the code is compiled with javac.\r\n- I am unable to reproduce it when compiling with the eclipse compiler (running from the command-line to avoid any other differences)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"created":"2008-05-19T11:36:33.804+0000","updated":"2008-05-19T11:36:33.804+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12597931","id":"12597931","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"body":"Btw, if I increase the number of iterations to 1000000 for docNum and 300000 for j I can reproduce it every time without -Xbatch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"created":"2008-05-19T12:02:51.106+0000","updated":"2008-05-19T12:02:51.106+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12598457","id":"12598457","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"body":"It's worth noting that jdk 6u10 beta b24 (released today) and openjdk6 in Fedora 9 are also affected by the problem shown in the test-case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"created":"2008-05-20T20:43:48.901+0000","updated":"2008-05-20T20:43:48.901+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12598807","id":"12598807","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"This bug is spooky.  I tried another workaround, which is to just increment an unused variable, instead of the above diff but at the same spot.  That then causes the JRE to reliably crash (SEGV).  I'm attaching the hs_err log.\r\n\r\nSun has not yet \"accepted\" my bug.  If/when they do, I'll attach this error log to it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-21T21:55:48.345+0000","updated":"2008-05-21T21:55:48.345+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12598954","id":"12598954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"OK I've committed the workaround & bug detection to trunk (2.4) and 2.3 branch.\r\n\r\nAt this point I think that's all we can do here; we are now waiting on Sun to fix the JRE bug.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-22T09:26:55.601+0000","updated":"2008-05-22T09:26:55.601+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12599405","id":"12599405","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andreaskohn","name":"andreaskohn","emailAddress":"?","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10453","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10453","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10453","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10453"},"displayName":"andreaskohn","active":false},"body":"We've seen this bug (rarely) when indexing quite huge amounts of data.\r\n\r\nJust to add some datapoints, attached is [^crashtest], using the above Crash.java to test all java VMs I have currently available.\r\n[^crashtest.log] contains the output. \r\n\r\nTests were run on a loaded EM64T dual core machine with fedora 9/x86_64, all VMs are 64bit. The openjdk is a build from yesterdays public repository contents, build using gcc 4.3 (trivial patches to make it build were added).\r\n\r\nSome scary solaris (SunOS 5.10 Generic_120011-14 sun4u sparc SUNW,UltraAX-i2) results as well:\r\n{quote}\r\n/usr/jdk/jdk1.6.0_04 (java full version \"1.6.0_04-b12\"):\r\n   : 0/200 failed: PASS\r\n   -server: 0/200 failed: PASS\r\n   -client: 0/200 failed: PASS\r\n   -Xbatch: 0/200 failed: PASS\r\n   -Xint: 0/200 failed: PASS\r\n\r\n/usr/jdk/jdk1.6.0_04 (java full version \"1.6.0_04-b12\"):\r\n    -d64: 0/200 failed: PASS\r\n   -server -d64: 0/200 failed: PASS\r\n   -client -d64: 0/200 failed: PASS\r\n   -Xbatch -d64: 0/200 failed: PASS\r\n   -Xint -d64: 0/200 failed: PASS\r\n{quote}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andreaskohn","name":"andreaskohn","emailAddress":"?","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10453","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10453","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10453","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10453"},"displayName":"andreaskohn","active":false},"created":"2008-05-23T15:44:37.366+0000","updated":"2008-05-23T15:44:37.366+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12600165","id":"12600165","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Here is the bug at Sun: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6707044","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-05-27T15:57:33.206+0000","updated":"2008-07-17T00:00:56.630+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12613018","id":"12613018","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jedws","name":"jedws","emailAddress":"jed at atlassian dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jed Wesley-Smith","active":true},"body":"Sun has posted their evaluation on the bug above and accepted it as High priority.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jedws","name":"jedws","emailAddress":"jed at atlassian dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jed Wesley-Smith","active":true},"created":"2008-07-11T23:46:14.341+0000","updated":"2008-07-11T23:46:14.341+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12613208","id":"12613208","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psmith%40apache.org","name":"psmith@apache.org","emailAddress":"tallpsmith at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Paul Smith","active":true},"body":" Can anyone comment as to whether the JRE 1.6.04+ bug affects any _earlier_ versions of Lucene? (say, 2.0.. which we're still using) .\r\n\r\nI was just reviewing this issue and noticed Michael mentioned this behaviour shows in both the ConcurrentMergeScheduler and the SerialMergeScheduler.  AIUI,. the SerialMergeScheduler is effectively the 'old' way of previous versions of Lucene, so I'm just starting to think about what affect 1.6.04 might have on earlier versions? (this bug is only marked as affecting 2.3+).\r\n\r\nThe reason I ask is that we're just about to upgrade to 1.6.04 -server in some of our production machines.. (reason why not going to 1.6.06 is we only started our development test cycle months ago and stuck with .04 until next cycle).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psmith%40apache.org","name":"psmith@apache.org","emailAddress":"tallpsmith at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Paul Smith","active":true},"created":"2008-07-13T22:15:35.525+0000","updated":"2008-07-13T22:15:35.525+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12613282","id":"12613282","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. Can anyone comment as to whether the JRE 1.6.04+ bug affects any earlier versions of Lucene? (say, 2.0.. which we're still using).\r\n\r\nAs far as I know, this corruption only happens on Lucene 2.3+.  The changes to Lucene that tickled this JRE bug were bulk-merging of stored fields:\r\n\r\n    https://issues.apache.org/jira/browse/LUCENE-1043\r\n\r\nwhich landed in 2.3, and also bulk-merging of term vectors:\r\n\r\n    https://issues.apache.org/jira/browse/LUCENE-1120","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-07-14T10:06:43.201+0000","updated":"2008-07-14T10:06:43.201+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12614161","id":"12614161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"body":"As can be seen in the Sun database a fix for this has been committed to OpenJDK and they're looking into backporting it into Java 6 Update 10.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"created":"2008-07-16T23:56:21.513+0000","updated":"2008-07-16T23:56:21.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12616735","id":"12616735","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"body":"The latest build of JDK 6 Update 10 (b28) includes the fix for this. It can be downloaded from:\r\n\r\nhttp://download.java.net/jdk6/binaries/\r\n\r\nIn the summary of changes, you can see that it refers to a bug that requests the integration of a new HotSpot build that includes the fix for this:\r\n\r\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6727119\r\n\r\nI have also verified that the test-case now passes on my machine.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ijuma","name":"ijuma","emailAddress":"mlists at juma dot me dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ismael Juma","active":true},"created":"2008-07-25T01:53:53.198+0000","updated":"2008-07-25T01:53:53.198+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12395764/comment/12618446","id":"12618446","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Indeed, I can confirm that JDK 6 Update 10 (b28) fixes my 19 GB test case that reliably crashes with earlier JDK 6 versions.\r\n\r\nI'll resolve this as fixed, and send an email to users.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2008-07-30T17:56:01.985+0000","updated":"2008-07-30T17:56:01.985+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-1282/votes","votes":5,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04xxz:"}}