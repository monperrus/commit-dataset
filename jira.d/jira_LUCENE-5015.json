{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12649058","self":"https://issues.apache.org/jira/rest/api/latest/issue/12649058","key":"LUCENE-5015","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324323","id":"12324323","description":"Major release after 4.3","name":"4.4","archived":false,"released":true,"releaseDate":"2013-07-23"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321663","id":"12321663","description":"Current trunk","name":"Trunk","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-05-23 08:18:21.357","customfield_12312323":null,"customfield_12310420":"329386","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_519995439_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2013-05-29T08:29:19.465+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-5015/watchers","watchCount":2,"isWatching":false},"created":"2013-05-23T08:02:44.041+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324143","id":"12324143","description":"Major release after 4.2","name":"4.3","archived":false,"released":true,"releaseDate":"2013-05-05"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-07-23T18:37:10.174+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12314601","id":"12314601","name":"modules/facet","description":"Faceted Indexing & Search module"}],"timeoriginalestimate":null,"description":"I have an unexpected performance difference between the SamplingAccumulator and the StandardFacetAccumulator. \r\n\r\nThe case is an index with about 5M documents and each document containing about 10 fields. I created a facet on each of those fields. When searching to retrieve facet-counts (using 1 CountFacetRequest), the SamplingAccumulator is about twice as fast as the StandardFacetAccumulator. This is expected and a nice speed-up. \r\n\r\nHowever, when I use more CountFacetRequests to retrieve facet-counts for more than one field, the speeds of the SampingAccumulator decreases, to the point where the StandardFacetAccumulator is faster. \r\n\r\n{noformat} \r\nFacetRequests  Sampling    Standard\r\n 1               391 ms     1100 ms\r\n 2               531 ms     1095 ms \r\n 3               948 ms     1108 ms\r\n 4              1400 ms     1110 ms\r\n 5              1901 ms     1102 ms\r\n{noformat} \r\n\r\nIs this behaviour normal? I did not expect it, as the SamplingAccumulator needs to do less work? \r\n\r\nSome code to show what I do:\r\n\r\n{code}\r\n\tsearcher.search( facetsQuery, facetsCollector );\r\n\tfinal List<FacetResult> collectedFacets = facetsCollector.getFacetResults();\r\n{code}\r\n\r\n\r\n{code}\r\nfinal FacetSearchParams facetSearchParams = new FacetSearchParams( facetRequests );\r\n\r\nFacetsCollector facetsCollector;\r\n\r\nif ( isSampled )\r\n{\r\n\tfacetsCollector =\r\n\t\tFacetsCollector.create( new SamplingAccumulator( new RandomSampler(), facetSearchParams, searcher.getIndexReader(), taxo ) );\r\n}\r\nelse\r\n{\r\n\tfacetsCollector = FacetsCollector.create( FacetsAccumulator.create( facetSearchParams, searcher.getIndexReader(), taxo ) );\r\n{code}\r\n\t\t\t","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10120","value":"Patch Available","id":"10120"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"329721","summary":"Unexpected performance difference between SamplingAccumulator and StandardFacetAccumulator","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":25,"total":25,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13664976","id":"13664976","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"body":"Hello Rob,\r\n\r\nIndeed that looks unexpected.\r\nThe immediate suspect is the \"fixing\" part of the sampling, where after sampled top-cK are computed for each facet request, each of the candidates for top-K gets a real count computation, rather than a count over the sampled set of results.\r\n\r\nHow many results are in the result set? All the documents?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"created":"2013-05-23T08:18:21.357+0000","updated":"2013-05-23T08:18:21.357+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13664980","id":"13664980","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"body":"I use a MatchAddDocsQuery(), so I retrieve all the 5 million documents as hits.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"created":"2013-05-23T08:22:45.112+0000","updated":"2013-05-23T08:23:42.110+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13665018","id":"13665018","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"body":"Sampling, with its defaults, has its toll. \r\n\r\nIn its defaults, Sampling aims to produce the exact top-K results for each request, as if a {{StandardFacetAccumulator}} would have been used. Meaning it aims at producing the same top-K with the same counts.\r\n\r\nThe process begins with sampling the result set and computers the top-*cK* candidates for each of the *M* facet requests, producing amortized results. That part is faster than {{StandardFacetAccumulator}} because less documents' facets information gets processed.\r\n\r\nThe next part is the \"fixing\", using a {{SampleFixer}} retrieved from a {{Sampler}}, in which \"fixed\" counts are produced which correlate better with the original document result set, rather than the sampled one. The default (and currently only implementation) for such fixer is {{TakmiSampleFixer}} which produced _exact_ counts for each of the *cK* candidates for each of the *M* facet requests. The counts are not computed against the facet information of each document, but rather matching the skiplist of the drill-down term, of each such candidate category with the bitset of the (actual) document results. The amount of matches is the count. \r\nThis is equivalent to total-hit collector with a drilldown query for the candidate category over original query. \r\nThere's tipping point in which not sampling is faster than sampling and fixing using *c* x *K* x *M* skiplists matches against the bitset representing the document results. *c* defaults to 2 (see overSampleFactor in SamplingParams); \r\n\r\nOver-sampling (a.k.a *c*) is important for exact counts, as it is conceivable that the accuracy of a sampled top-k is not 100%, but according to some measures we once ran it is very likely that the true top-K results are within the sampled *2K* results. Fixing those 2K with their actual counts and re-sorting them accordingly yields much more accurate top-K. \r\n\r\n\r\nE.g Requesting 5 count requests for top-10 with overSampleFactor of 2, results in 100 skiplist matching against the document results bitset.\r\n\r\n\r\nIf amortized results suffice, a different {{SampleFixer}} could be coded - which E.g amortize the true count from the sampling ration. E.g if category C got count of 3, and the sample was of 1,000 results out of a 1,000,000 than the \"AmortizedSampleFixer\" would fix the count of C to be 3,000.\r\nSuch fixing is very fast, and the overSampleFactor should be set to 1.0.\r\n\r\nEdit:\r\nI now see that it is not that easy to code a different SampleFixer, nor get it the information needed for the amortized result fixing as suggested above. \r\nI'll try to open the API some and make it more convenient.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"created":"2013-05-23T09:09:41.440+0000","updated":"2013-05-23T09:09:41.440+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13665047","id":"13665047","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"body":"Hi Gilad,\r\n\r\nThanks for the swift and very useful reply, it has given me good insight in the sampling process. \r\n\r\nAs I see it, I could benefit from a more straight-forward SampleFixer; like the behaviour of the AmortizedSampleFixer you described. It would be great to have one, or be able to code one up, so +1 for the API improvements which are needed for this. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"created":"2013-05-23T10:01:55.428+0000","updated":"2013-05-23T10:01:55.428+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13665468","id":"13665468","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"body":"Added a parameter to {{SamplingParams}} named {{fixToExact}} which defaults to {{false}}. \r\nI think it is probable that one who uses sampling may not be interested in exact results.\r\n\r\nIn the proposed approach, the {{Sampler}} would create either the old, slow, and accurate {{TakmiSampleFixer}} if {{SamplingParams.shouldFixToExact()}} is {{true}}. Otherwise the much (much!} faster {{AmortizedSampleFixer}} would be used, when it only take under account the sampling ratio, assuming the sampled set represent the whole set with 100% accuracy.\r\n\r\nWith these changes, the code above should already use the amortized fixer, as the default is now it.\r\nIf the old fixer is to be used - for comparison - the code could look as follows:\r\n\r\n{code}\r\nfinal FacetSearchParams facetSearchParams = new FacetSearchParams( facetRequests );\r\n\r\nFacetsCollector facetsCollector;\r\n\r\nif ( isSampled )\r\n{\r\n\t// Create SamplingParams which denotes fixing to exact\r\n\tSamplingParams samplingParams = new SamplingParams();\r\n\tsamplingParams.setFixToExact(true);\r\n\r\n\t// Use the custom sampling params while creating the RandomSampler\r\n\tfacetsCollector =\r\n\t\tFacetsCollector.create( new SamplingAccumulator( new RandomSampler(samplingParams, new Random(someSeed)), facetSearchParams, searcher.getIndexReader(), taxo ) );\r\n}\r\nelse\r\n{\r\n\tfacetsCollector = FacetsCollector.create( FacetsAccumulator.create( facetSearchParams, searcher.getIndexReader(), taxo ) );\r\n}\r\n{code}\r\n\r\nThe sampling tests still use the \"exact\" fixer, as it is not easy asserting against amortized results. I'm still looking into creating a complete faceted search flow test with the amortized-fixer.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"created":"2013-05-23T18:36:33.577+0000","updated":"2013-05-23T18:36:33.577+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13665469","id":"13665469","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"body":"Older patch was against trunk/lucene/facet. This one is rooted with trunk. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"created":"2013-05-23T18:39:39.065+0000","updated":"2013-05-23T18:39:39.065+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13666007","id":"13666007","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Gilad this looks good! I have few comments:\r\n\r\n* AmortizedSampleFixer's jdocs need a <p> tag instead of the empty line. Otherwise I think this does not render as expected.\r\n** Same in TakmiSamplerFixer\r\n* SampleFixer has a TODO next to the new param\r\n* AmortizedSamplerFixerTest and SamplerTest should extend FacetTestCase so that it doesn't use Lucene3x codec accidentally (which doesn't support DocValues and hence facets)\r\n\r\nIn general, what do you think if SamplingParams take a SampleFixer instead of {{fixToExact}}?\r\n* We could default to Amortized, while the current sampling tests will set Takmi\r\n* It will allow someone who doesn't care about the value at all to not fix it. I.e., if I just want to show 5% in the UI, I don't really need Amortized right?\r\n* It will allow to experiment with other SampleFixers implementations, e.g. maybe Takmi can be made more efficient or something.\r\n\r\nCurrently SampleFixer is public though there's really no point to override it since you cannot pass it anywhere? Therefore I think that taking a fixer is better.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-24T05:27:37.562+0000","updated":"2013-05-24T05:27:37.562+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13666009","id":"13666009","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"body":"Shai, thanks for the comments.\r\nFirst three points are taken care of in the new patch.\r\nAs for SamplingParams taking a SampleFixer, it's a good idea, and I've been there, but it makes it harder on the e.g. {{SamplingAccumulator}} to figure out whether to oversample - and trim - for this SampleFixer. It would than move this logic to the SampleFixer. \r\nThat's not bad, but it changes the API a bit more, also the name SampleFixer does not match the functionality any more (perhaps it should oversample and trim itself?)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"created":"2013-05-24T05:37:15.866+0000","updated":"2013-05-24T05:37:15.866+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13666091","id":"13666091","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Well, as long as we keep SampleFixer hidden, users will not be able to solve sampling issues on their own. So the API has to be open on that end too. Maybe SamplingAccumulator can have a protected shouldOverSample with a default impl that handles the two known fixers and otherwise returns false? Then the user who provides his own fixer, can provide his accumulator too.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-24T08:03:55.438+0000","updated":"2013-05-24T08:03:55.438+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13666190","id":"13666190","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Looking at SamplingParams, isn't overSampleFactor enough to decide whether to over sample or not? It can default to not oversample, with the default Amortized fixer or some other default (2.0?) if fixer is Takmi. Then user can change it, and if he passes a fixer which requires over sampling, he should set that too.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-24T10:50:33.472+0000","updated":"2013-05-24T10:50:33.472+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13667221","id":"13667221","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"body":"True, looking at overSampleFactor is enough, but it's not obvious that TakmiFixer should be used with overSampleFactor > 1, to better the chances of the result top-k being accurate.\r\nI'll add some documentation w.r.t this issue, I hope it will do.\r\n\r\nNew patch defaults to {{NoopSampleFixer}} which does not touch the results at all - if the need is only for a top-k and their counts does not matter, this is the least expensive one. \r\nAlso if instead of counts, a percentage sould be displayed (as how much of the results match this category), the sampled valued out of the sample size would yield the same result as the amortized fixed results out of the actual result set size. That might render the amortized fixer moot..\r\n\r\nNew patch account of {{SampleFixer}} being set in {{SamplingParams}}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"created":"2013-05-26T07:40:55.026+0000","updated":"2013-05-26T07:40:55.026+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13667223","id":"13667223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Thanks Gilad. Now that we have SampleFixer on SamplingParams, I wonder why we need Noop and Amortized? Could we just make the default fixer null and not oversample + fix if it's null? And Amortized ... well as you said, it looks kind of redundant now... I don't think it's rocket science for an app to do value/ratio on its own, yet it's one more class that we need to maintain going forward?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-26T07:52:04.030+0000","updated":"2013-05-26T07:52:04.030+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13667243","id":"13667243","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"body":"Shai, I think you're right, a null {{SampleFixer}} makes more sense. \r\n\r\nWhile working on a test which validates that a flow works with the {{null}} fixer, I found it it did not. The reason is Complements. By default the complements kicks in when enough results are found. I think this may hold the key to the performance differences as well.\r\n\r\nRod, could you please try the following code and report the results?\r\n\r\n{code}\r\n    SamplingAccumulator accumulator = new SamplingAccumulator( new RandomSampler(),  facetSearchParams, searcher.getIndexReader, taxo);\r\n\r\n    // Make sure no complements are in action\r\n    accumulator.setComplementThreshold(StandardFacetsAccumulator.DISABLE_COMPLEMENT);\r\n    \r\n    facetsCollector = FacetsCollector.create(accumulator);\r\n\r\n{code}\r\n\r\nFor the mean time, made the changes to the patch, and added the test for {{null}} fixer.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gilad","name":"gilad","emailAddress":"GiladBarkai at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gilad Barkai","active":true},"created":"2013-05-26T09:15:32.715+0000","updated":"2013-05-26T09:15:32.715+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13668134","id":"13668134","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"body":"Hi all, thanks for all the progress. \r\n\r\nI will try to build a Lucene with the latests patch and give it a go.. :)\r\n\r\n(do I take the 4.3 release version? or is there a 4.3 development branch where the patch has to be applied?)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"created":"2013-05-28T07:08:21.017+0000","updated":"2013-05-28T07:11:19.297+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13668143","id":"13668143","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"body":"I took the revisionnumber that was in the patchfile and checked that out.\r\n \r\n svn checkout http://svn.apache.org/repos/asf/lucene/dev/trunk@1486401 .\r\n\r\nAfter installing Ivy I'm now building Lucene myself for the first time","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"created":"2013-05-28T07:22:26.729+0000","updated":"2013-05-28T07:22:26.729+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13668151","id":"13668151","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Rob, you don't need to build Lucene to try what Gilad suggested, just modify your search code to disable complements. The problem is that if complements indeed kick in, and from the setup your describe it seems that they do because you search with MADQ, then sampling isn't done at all, yet the accumulator still corrects the counts.\r\n\r\nAfter you try it, we can tell if the performance overhead is indeed because of complements or that the counts are corrected. In either case, I think it will be good to open up the SampleFixer.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-28T07:28:38.486+0000","updated":"2013-05-28T07:28:38.486+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13668267","id":"13668267","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"body":"Hi Shai,\r\n\r\nI will check tomorrow. Just to be sure, this is what I will do:\r\n\r\n- Lucene 4.3 release\r\n- FacetsAccumulator with and without complements\r\n-- With the 'default' TakmiSampleFixer\r\n-- With a NOOP empty Sampler implementation that I will return by overriding the 'getSampleFixer' method in the Sampler that I will provide.\r\n- MADQ with 1..5 selected facets\r\n- some other query that will return about 50% of the documents, also with 1..5 facets\r\n\r\nI currently have a nice 15M document set, I will use that as a basis. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"created":"2013-05-28T12:11:14.366+0000","updated":"2013-05-28T12:11:40.939+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13668270","id":"13668270","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"yes that sounds good. If you don't want to apply the patch so you can use the Noop fixer, that's fine too. I think the main goal is to see whether the complements that kicked in were in the way.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-28T12:16:19.916+0000","updated":"2013-05-28T12:16:19.916+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13668281","id":"13668281","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Patch adds CHANGES entry as well as makes SampleFixer and TakmiSampleFixer public. I think this is ready but let's wait for Rob's input.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-28T12:47:42.745+0000","updated":"2013-05-28T12:47:42.745+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13669082","id":"13669082","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"body":"Time in ms.\r\n\r\n{noformat} \r\n        MADQ\t\t\t\t75% hits\t\t\t\r\n        Complements\tDISABLE Com.\tComplements\tDISABLE complements\t\r\n#facets Takmi \tNoop\tTakmi\tNoop\tTakmi\tNoop\tTakmi\tNoop\r\n1         999\t433\t1024\t393\t1239\t541\t969\t432\r\n2        2292\t388\t2877\t512\t2379\t609\t2489\t457\r\n3        2501\t219\t3228\t413\t2477\t569\t2590\t434\r\n4        3589\t224\t5052\t392\t3372\t562\t4093\t503\r\n5        4764\t247\t6863\t493\t4356\t577\t5103\t533\r\n{noformat} \r\n\r\n{noformat} \t\t\t\t\t\r\nSamplingParams sampleParams = new SamplingParams();\t\t\t\t\t\t\t\t\t\r\nsampleParams.setMaxSampleSize( 5000 );\t\t\t\t\t\t\t\t\t\r\nsampleParams.setMinSampleSize( 5000 );\t\t\t\t\t\t\t\t\t\r\nsampleParams.setSamplingThreshold( 75000 );\t\t\t\t\t\t\t\t\t\r\nsampleParams.setOversampleFactor( 1.0d );\t\t\t\t\t\t\t\t\t\r\n{noformat} ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"created":"2013-05-29T08:01:27.725+0000","updated":"2013-05-29T08:12:12.060+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13669085","id":"13669085","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Thanks Rob. This shows that complements don't affect the performance much, and Takmi is the main issue. This is good!\r\nAnd also, Noop is stable with the number of growing facet requests, which is expected because it doesn't do any more work, while Takmi gets worse as more requests are added.\r\nActually, you use overSampleFactor=1, which is a bit optimistic for Takmi. Usually we use 2. That would show an even worse running time.\r\n\r\nW.r.t running the test, do you loop through the number of requests, or start a new JVM for each testcase? Do you do \"warmup\" runs to exclude their results before the actual measure? This won't change the fact that Takmi is slower than Noop, just perhaps explain why Noop w/ 5 requests is faster than 1 (which makes no sense, I take it it's an OS cache, or no warmup run).\r\n\r\nAnyway, I think this proves we need to make the default fixer null (which is equivalent to noop). I'll go ahead and commit the changes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-29T08:14:29.300+0000","updated":"2013-05-29T08:14:29.300+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13669090","id":"13669090","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Committed to trunk and 4x. Thanks Rob for reporting and taking the time to test this and Gilad for the fix!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-29T08:29:19.475+0000","updated":"2013-05-29T08:29:19.475+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13669164","id":"13669164","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"body":"Thank you too :)\r\n\r\nSome more test-details:\r\n\r\nEach 'column' of 5 facets is done in a new JVM. Each individual cell is 4 searches, the first is disregarded, the three left are averaged. \r\n\r\nFor the {{SampingParams}}, I reduced the numbers from the defaults to speed up testing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robau","name":"robau","emailAddress":"rob at audenaerde dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Audenaerde","active":true},"created":"2013-05-29T11:36:22.737+0000","updated":"2013-05-29T11:36:22.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13669226","id":"13669226","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Thanks. I usually take the minimum, not average, since technically it's the fastest we could get. Also, discarding only one run is not always enough, since it may take the OS cache more time to warm up. But anyway, the numbers are clear. Thanks for doing this Rob!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-05-29T13:20:42.367+0000","updated":"2013-05-29T13:20:42.367+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12649058/comment/13716769","id":"13716769","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=steve_rowe","name":"steve_rowe","emailAddress":"sarowe at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steve Rowe","active":true},"body":"Bulk close resolved 4.4 issues","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=steve_rowe","name":"steve_rowe","emailAddress":"sarowe at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steve Rowe","active":true},"created":"2013-07-23T18:37:10.170+0000","updated":"2013-07-23T18:37:10.170+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-5015/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1kttj:"}}