{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12644360","self":"https://issues.apache.org/jira/rest/api/latest/issue/12644360","key":"LUCENE-4953","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324404","id":"12324404","description":"Bugfix release after 4.3","name":"4.3.1","archived":false,"released":true,"releaseDate":"2013-06-18"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321663","id":"12321663","description":"Current trunk","name":"Trunk","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-04-24 20:57:11.167","customfield_12312323":null,"customfield_12310420":"324727","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_238566012_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2013-04-27T08:36:10.185+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4953/watchers","watchCount":2,"isWatching":false},"created":"2013-04-24T14:20:04.201+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"8.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-06-18T16:55:14.406+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"There was a test failure last night:\r\n\r\n{noformat}\r\n1 tests failed.\r\nREGRESSION:  org.apache.lucene.search.grouping.AllGroupHeadsCollectorTest.testBasic\r\n\r\nError Message:\r\ntestBasic(org.apache.lucene.search.grouping.AllGroupHeadsCollectorTest): Insane FieldCache usage(s) found expected:<0> but was:<2>\r\n\r\nStack Trace:\r\njava.lang.AssertionError: testBasic(org.apache.lucene.search.grouping.AllGroupHeadsCollectorTest): Insane FieldCache usage(s) found expected:<0> but was:<2>\r\n        at __randomizedtesting.SeedInfo.seed([1F9C2A2AD23A8E02:B466373F0DE6082C]:0)\r\n        at org.junit.Assert.fail(Assert.java:93)\r\n        at org.junit.Assert.failNotEquals(Assert.java:647)\r\n        at org.junit.Assert.assertEquals(Assert.java:128)\r\n        at org.junit.Assert.assertEquals(Assert.java:472)\r\n        at org.apache.lucene.util.LuceneTestCase.assertSaneFieldCaches(LuceneTestCase.java:592)\r\n        at org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:55)\r\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\r\n        at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n        at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\r\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:782)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:442)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:746)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:648)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:682)\r\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:693)\r\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\r\n        at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\r\n        at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\r\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\r\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)\r\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\r\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\r\n        at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\r\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n\r\n\r\n\r\n\r\nBuild Log:\r\n[...truncated 6904 lines...]\r\n[junit4:junit4] Suite: org.apache.lucene.search.grouping.AllGroupHeadsCollectorTest\r\n[junit4:junit4]   2> *** BEGIN testBasic(org.apache.lucene.search.grouping.AllGroupHeadsCollectorTest): Insane FieldCache usage(s) ***\r\n[junit4:junit4]   2> VALUEMISMATCH: Multiple distinct value objects for ParallelAtomicReader(_0(5.0):C3)+id\r\n[junit4:junit4]   2>    'ParallelAtomicReader(_0(5.0):C3)'=>'id',class org.apache.lucene.index.SortedDocValues,0.5=>org.apache.lucene.search.FieldCacheImpl$SortedDocValuesImpl#386041791 (size =~ 232 bytes)\r\n[junit4:junit4]   2>    'ParallelAtomicReader(_0(5.0):C3)'=>'id',int,org.apache.lucene.search.FieldCache.DEFAULT_INT_PARSER=>org.apache.lucene.search.FieldCacheImpl$IntsFromArray#140912913 (size =~ 48 bytes)\r\n[junit4:junit4]   2>    'ParallelAtomicReader(_0(5.0):C3)'=>'id',int,null=>org.apache.lucene.search.FieldCacheImpl$IntsFromArray#140912913 (size =~ 48 bytes)\r\n[junit4:junit4]   2>\r\n[junit4:junit4]   2> VALUEMISMATCH: Multiple distinct value objects for ParallelAtomicReader(_1(5.0):C5)+id\r\n[junit4:junit4]   2>    'ParallelAtomicReader(_1(5.0):C5)'=>'id',int,null=>org.apache.lucene.search.FieldCacheImpl$IntsFromArray#1105632232 (size =~ 56 bytes)\r\n[junit4:junit4]   2>    'ParallelAtomicReader(_1(5.0):C5)'=>'id',int,org.apache.lucene.search.FieldCache.DEFAULT_INT_PARSER=>org.apache.lucene.search.FieldCacheImpl$IntsFromArray#1105632232 (size =~ 56 bytes)\r\n[junit4:junit4]   2>    'ParallelAtomicReader(_1(5.0):C5)'=>'id',class org.apache.lucene.index.SortedDocValues,0.5=>org.apache.lucene.search.FieldCacheImpl$SortedDocValuesImpl#27148040 (size =~ 232 bytes)\r\n[junit4:junit4]   2>\r\n[junit4:junit4]   2> *** END testBasic(org.apache.lucene.search.grouping.AllGroupHeadsCollectorTest): Insane FieldCache usage(s) ***\r\n[junit4:junit4]   2> NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.\r\n[junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=AllGroupHeadsCollectorTest -Dtests.method=testBasic -Dtests.seed=1F9C2A2AD23A8E02 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/hudson/lucene-data/enwiki.random.lines.txt -Dtests.locale=be_BY -Dtests.timezone=Asia/Manila -Dtests.file.encoding=US-ASCII\r\n[junit4:junit4] FAILURE 0.75s J1 | AllGroupHeadsCollectorTest.testBasic <<<\r\n[junit4:junit4]    > Throwable #1: java.lang.AssertionError: testBasic(org.apache.lucene.search.grouping.AllGroupHeadsCollectorTest): Insane FieldCache usage(s) found expected:<0> but was:<2>\r\n[junit4:junit4]    >    at __randomizedtesting.SeedInfo.seed([1F9C2A2AD23A8E02:B466373F0DE6082C]:0)\r\n[junit4:junit4]    >    at org.apache.lucene.util.LuceneTestCase.assertSaneFieldCaches(LuceneTestCase.java:592)\r\n[junit4:junit4]    >    at java.lang.Thread.run(Thread.java:722)\r\n[junit4:junit4]   2> NOTE: test params are: codec=Lucene42: {sort3=MockFixedIntBlock(blockSize=733), id=Pulsing41(freqCutoff=3 minBlockSize=50 maxBlockSize=177), content=MockFixedIntBlock(blockSize=733), author=Pulsing41(freqCutoff=3 minBlockSize=50 maxBlockSize=177), sort2=MockVariableIntBlock(baseBlockSize=71), sort1=Pulsing41(freqCutoff=3 minBlockSize=50 maxBlockSize=177), group=Pulsing41(freqCutoff=3 minBlockSize=50 maxBlockSize=177)}, docValues:{author_dv=DocValuesFormat(name=Disk), group_dv=DocValuesFormat(name=Disk)}, sim=RandomSimilarityProvider(queryNorm=false,coord=yes): {content=IB LL-L1, author=DFR GBZ(0.3)}, locale=be_BY, timezone=Asia/Manila\r\n[junit4:junit4]   2> NOTE: FreeBSD 9.0-RELEASE amd64/Oracle Corporation 1.7.0_17 (64-bit)/cpus=16,threads=1,free=157973280,total=249626624\r\n[junit4:junit4]   2> NOTE: All tests run in this JVM: [GroupFacetCollectorTest, AllGroupsCollectorTest, AllGroupHeadsCollectorTest]\r\n{noformat}\r\n\r\nIt reproduces, and happens because ParallelCompositeReader isn't invoking the reader listeners on its .leaves() when everything is closed.  I made a separate test case to show the issue ...","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"325073","summary":"readerClosedListener is not invoked for ParallelCompositeReader's leaves","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":26,"total":26,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13640478","id":"13640478","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Test case showing the root cause of the failure ...\r\n\r\nI think we need to fix ParallelCompositeReader so that it actually closes the subReaders it creates?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2013-04-24T14:21:31.946+0000","updated":"2013-04-24T14:21:31.946+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13640886","id":"13640886","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Patch that \"fixes\" the test but ...\r\n\r\nIt causes other test failures, because tests do this:\r\n\r\n{noformat}\r\n  searcher = newSearcher(reader);\r\n  ...\r\n  reader.close();\r\n{noformat}\r\n\r\n(instead of searcher.getIndexReader().close()).\r\n\r\nIe, today LuceneTestCase.maybeWrapReader never incRefs the incoming reader, but with the fix, ParallelCompositeReader now does ... so this leads to failures.\r\n\r\nNot sure what to do ...\r\n\r\nMaybe instead of this patch, we should just directly invoke the readerClosedListeners in ParallelCompositReader.doClose?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2013-04-24T20:10:43.828+0000","updated":"2013-04-24T20:10:43.828+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13640943","id":"13640943","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"As discussed in IRC today, like MultiReader/SlowComposite that warps another reader, we should no call close() on the subreaders. The problem here is: E.g., A wrapped slow reader still returns its delegate as core cache key, so the reader closed listener works as expected, when the child is closed. But PMR must not return the inner cache keys, as it wraps them with modifying index contents.\r\n\r\nThe problem here is that the leaves are atomic and the field cache does not get the reader closed event. The somehow best fix would be to call readerClosedListener for all childs (not leaves!) on doClose. Theoretically, all CompositeReaders that wrap ll childs of other readers should do this (only Parallel is currently doing this).\r\n\r\nAnother idea would be to use incRef and decRef, but that would not affect the wrapped atomic readers, so I prefer the previous solution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-24T20:57:11.167+0000","updated":"2013-04-24T20:58:38.649+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13640979","id":"13640979","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"bq. Ie, today LuceneTestCase.maybeWrapReader never incRefs the incoming reader, but with the fix, ParallelCompositeReader now does ... so this leads to failures.\r\n\r\nPassing false instead of true to the wrapper is wrong. The solution is to leave the construction as is, just in doClose() call notifyReaderClosedListeners() on all subreaders (which is unfortunately private). But this would still not help for tests, because maybeWrapReader tries to hide itsself from FieldCache (this is why it has FCInvisibleMultiReader). Tests almost always close the original reader and never the wrapper, so with this patch the whole thing does not work.\r\n\r\nThe test failure is very seldom because it only happens:\r\n- if you wrap (rarely) with a ParallelMultiReader (more rarely)\r\n- use FieldCache\r\n\r\nThe number of tests with FieldCache is very small, so it took more than 1 year to see the first failure :-)\r\n\r\nIn fact the problem for the actual test failure is maybeWrapReader in combination with FieldCache. maybeWrapReader should not use ParallelCompositeReader, if it knows that FieldCache will be used. Unfortunately this is not known before.\r\n\r\nThe problem with the readerClosedListener not called by ParallelCompositeReader (with closeSubReaders=true) is real, and only affects PCR, because it creates atomic readers with \"own\" fieldcache key. Because of that it should manually unregister them (and not close them)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-24T21:28:45.107+0000","updated":"2013-04-24T21:29:38.375+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13641014","id":"13641014","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"It's ... spooky how PCR makes new (private) readers but never closes them :)  But it seems hard to fix that correctly because of how LTC wraps the readers in newSearcher.\r\n\r\n+1 to just invoke the readerClosedListeners directly from PCR.doClose.  It's a little un-clean duplicating this code but I don't see how else to fix it ...\r\n\r\nbq. The number of tests with FieldCache is very small, so it took more than 1 year to see the first failure \r\n\r\nIt's even more restrictive: the test must also create FieldCache insanity.  This particular test always does so ... but because we purge the insanity on close (except in this case) the insanity never causes a test failure.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2013-04-24T21:54:41.400+0000","updated":"2013-04-24T21:54:41.400+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13641068","id":"13641068","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Patch that notifies the readerClosedListeners of all childs instead of closing them completely. This is now correct, but very crazy.\r\n\r\nFor this patch I made the notify method package protected, not sure if we should make it protected for other/similar readers?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-24T22:25:06.410+0000","updated":"2013-04-24T22:25:06.410+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13641071","id":"13641071","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Of course the patch does not fix the test failures occuring because test never close the wrapper, but the original reader. This is a bug in maybeWrapReader (because maybeWrapReader should be side-effect free, but the side-effect here is that an entry in the FieldCache may be created by a private atomicreader instance which is just a wrapper and never closed).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-24T22:27:10.268+0000","updated":"2013-04-24T22:27:10.268+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13641126","id":"13641126","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Another possibility to make the readerClosed notification working, would be to have on PCR and PAR a 3rd mode (pkg-private ctor) where doClose() is a noop. In that case, the PCR could call close() on all of its subReaders, but the refCount or the childs are not closed unless otherwise specified in the ctor. And we dont need to make the private notify method visible to other classes.\r\n\r\nI will provide a patch tomorrow, this seems to be the cleanest solution for the readerClosedListener bug (but not the test failures).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-24T23:07:20.034+0000","updated":"2013-04-24T23:07:20.034+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13642258","id":"13642258","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Patch that adds the DONT_TOUCH_SUBREADERS mode.\r\n\r\nI will now check the tests by enforcing the always wrapping with PCR, so bugs can be detected.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-25T21:46:44.842+0000","updated":"2013-04-25T21:46:44.842+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13642302","id":"13642302","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"I checked the other tests by hardcoding maybeWrapReader to always wrap with ParallelCompositeReader at the end. No other failures.\r\n\r\nI will commit this tomorrow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-25T22:24:04.059+0000","updated":"2013-04-25T22:24:04.059+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13642762","id":"13642762","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"I feel like we are making the wrong tradeoff here: we are making our core code (ParallelAtomic/CompositeReader) more hairy because of a limitation/constraint from LuceneTestCase.newSearcher (that it's never allowed to incRef the reader).\r\n\r\nI think instead we should fix that test limitation, and then use the original patch (where PCR incRefs the provided readers).\r\n\r\nEG we can move the reader wrapping to places like RandomIndexWriter.newReader instead of newSearcher ...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2013-04-26T11:52:03.186+0000","updated":"2013-04-26T11:52:03.186+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13642885","id":"13642885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"bq. I feel like we are making the wrong tradeoff here: we are making our core code (ParallelAtomic/CompositeReader) more hairy because of a limitation/constraint from LuceneTestCase.newSearcher (that it's never allowed to incRef the reader). I think instead we should fix that test limitation, and then use the original patch (where PCR incRefs the provided readers).\r\n\r\nThese are 2 different limitations and 2 different bugs!\r\n\r\nIf a *user* closes the ParallelCompositeReader it must free the field cache, so the fix here fixes a real bug - this bug was found by the test and your new test clearly shows it. Unfortunately my patch is a bit larger because some search/replace in it but actually does not change anything in the logic - it just internally changes a boolean to a 3-state enum. It's mostly just an automatic refactoring! :-) In fact I was able to remove the crazy comment, because the code is now more clean (the hack with this comment explaing why closeSubReaders was true for the synthetic subreaders is now clarified by the code, which is much better!). The code is actually easier now, its maybe just the patch size that made you think its more complicated. I like the patch more than the hack+comment done before.\r\n\r\nThe second bug which is indirectly related here is already solved (the test limitation): The 2nd bug is more about the fact that maybeWrapReader is not side-effect-free if used together with FieldCache+PCR -> thats the test bug and is *not* fixed by this issue (its just worked around by the grouping code that closes the wrapped reader, not the original reader). Ideally, tests working with fieldcache should call LTC.newSearcher(false), to prevent wrapping and the side effects by wrapping. Alternatively they have to close the wrapper not the original reader (so 2 possibilities to fix this bug). Gruping used the second one, which lead to the problems, because closing PCR did not correctly unlink its synthetic readers from fieldcache. But that was not a test issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-26T14:25:28.474+0000","updated":"2013-04-26T14:25:28.474+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13642900","id":"13642900","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Here an updated patch. The naming inside the enum was made with help of beer. Now its named better and more correct.\r\n\r\nUsers will not see any change, its completely private. No new enums/whatever.\r\n\r\nI think the code is now much easier to understand:\r\n- If user passes closeSubReaders=true, subreaders are closed\r\n- If user passes closeSubReaders=false, subreaders are increfed in ctor and decrefed in close (just like MultiReader does, too)\r\n\r\nThe synthetic atomic/composite readers created internally differ completely from the public API. The \"old\" code was a hack:\r\n- The synthetic subreaders may not incref/decref, because the inref/decref is already done on the real readers\r\n- The synthetic subreaders may also not close the delegates/wrapped readers. Closing is also done by the parent. The synthetic readers are just a third kind and should behave as if they are not there.\r\n- The bug was, that we prevented in the hack by passing closeSubReaders=true, that they are increfed. As the old code never closed the synthetic readers, that was the \"trick\". The bug here was that because we never called close when the parent was closed, the FieldCache hanging on the synthetic atomic readers was not notified.\r\n- This patch just adds a third (private-only) mode, used solely in ParallelCompositeReader. When it creates the synthetic readers, those are not increfed/decrefed/closed (because doClose is noop). But We can still close them to inform the fieldcache. This is the only correct implementation. I am very sorry for the hack I did before 4.0 :-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-26T14:39:16.773+0000","updated":"2013-04-26T14:39:16.773+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643033","id":"13643033","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"To fix the first bug, I would prefer that PCR makes \"normal\" private\r\nreaders (that incRef their subs) and then closes those private readers\r\nin doClose, like my 2nd patch.  I think that patch is much simpler\r\nthan making a 3-way enum to tell PC/AR what to do on close.\r\n\r\nI realize this means wrapReader is no longer side-effect free, but I\r\nthink that's a non-goal?  That's a test-framework limitation, and we\r\nshouldn't let that mess up our core-code.\r\n\r\nInstead, I think we should fix the tests/test-framework: 1) fix\r\nnewSearcher to no longer call wrapReader, 2) fix all tests that call\r\nnewSearcher to call wrapReader instead and to close the wrapped\r\nreader.  RandomIndexWriter.getReader can call wrapReader itself.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2013-04-26T17:09:38.767+0000","updated":"2013-04-26T17:09:38.767+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643219","id":"13643219","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Hi,\r\nMike and I had a lengthly discusssion on IRC. In short:\r\n\r\nThe current semantics of MuliReader and other wrapper readers is the followng:\r\n- if you pass closeSubReaders=true (which is the default setting), the subreaders are not increfed, but close() is called if you close the wrapper. But you can also close the original reader -> it does not matter. This is the pattern well known from FilterInputStreams\r\n- If you pass closeSubReaders=false, the whole thing uses refCounting\r\n\r\nThe problem with the patch and the refcounting is:\r\n- If we create a ParallelComposite with closeSubReader=true, we cannot change refcounts. But we do this when we create the synthetic subreaders with Mike's patch. This make the well-known FilterInputStream \"pattern\" no lomger working -> you have to close PCR\r\n\r\nThe patch attached here is functional identical to my last one, it passes all tests (I also added another one with closesubreaders), but much simplier:\r\n\r\nThe noop on doClose() is done by anonymous subclassing. I also made the top-level close simplier, because i just added the sequential synthetic subreaders to the IdentityHashSet which is iterated on doClose().\r\n\r\nI also added some tests for refcounting and forcefully closing the inner reader and checking that this correctly throws exception.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-26T20:30:57.223+0000","updated":"2013-04-26T20:30:57.223+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643223","id":"13643223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"I forgot: the patch also removes toString() because this is handled by CompositeReader base class already.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-26T20:34:13.252+0000","updated":"2013-04-26T20:34:13.252+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643224","id":"13643224","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"{quote}\r\nInstead, I think we should fix the tests/test-framework: 1) fix\r\nnewSearcher to no longer call wrapReader, 2) fix all tests that call\r\nnewSearcher to call wrapReader instead and to close the wrapped\r\nreader. RandomIndexWriter.getReader can call wrapReader itself.\r\n{quote}\r\n\r\n+1, we should do this in a separate issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-26T20:35:31.813+0000","updated":"2013-04-26T20:35:31.813+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643329","id":"13643329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"More funny refcount tests. :-)\r\n\r\nMike agreed on IRC so this should be ready to commit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-26T22:36:28.474+0000","updated":"2013-04-26T22:36:28.474+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643358","id":"13643358","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"+1, thanks Uwe!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2013-04-26T23:18:46.651+0000","updated":"2013-04-26T23:18:46.651+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643599","id":"13643599","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"This patch contains in addition a test for toString() and a fix in CompositeReader to create a good toString() representation if this is an anonymous class (in that case Class#getSimpleName() returns \"\"). There are more places in Lucene that could be affected by this, just as warning! Maybe we add a helper method to get a simple non-empty class name.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-27T08:30:35.112+0000","updated":"2013-04-27T08:30:35.112+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643600","id":"13643600","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=commit-tag-bot","name":"commit-tag-bot","emailAddress":"root-jira-commit_tag_bot at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=commit-tag-bot&avatarId=16176","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=commit-tag-bot&avatarId=16176","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=commit-tag-bot&avatarId=16176","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=commit-tag-bot&avatarId=16176"},"displayName":"Commit Tag Bot","active":true},"body":"[trunk commit] uschindler\r\nhttp://svn.apache.org/viewvc?view=revision&revision=1476526\r\n\r\nLUCENE-4953: Fixed ParallelCompositeReader to inform ReaderClosedListeners of its synthetic subreaders. FieldCaches keyed on the atomic childs will be purged earlier and FC insanity prevented.  In addition, ParallelCompositeReader's toString() was changed to better reflect the reader structure.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=commit-tag-bot","name":"commit-tag-bot","emailAddress":"root-jira-commit_tag_bot at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=commit-tag-bot&avatarId=16176","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=commit-tag-bot&avatarId=16176","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=commit-tag-bot&avatarId=16176","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=commit-tag-bot&avatarId=16176"},"displayName":"Commit Tag Bot","active":true},"created":"2013-04-27T08:31:25.309+0000","updated":"2013-04-27T08:31:25.309+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643601","id":"13643601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=commit-tag-bot","name":"commit-tag-bot","emailAddress":"root-jira-commit_tag_bot at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=commit-tag-bot&avatarId=16176","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=commit-tag-bot&avatarId=16176","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=commit-tag-bot&avatarId=16176","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=commit-tag-bot&avatarId=16176"},"displayName":"Commit Tag Bot","active":true},"body":"[branch_4x commit] uschindler\r\nhttp://svn.apache.org/viewvc?view=revision&revision=1476529\r\n\r\nMerged revision(s) 1476526 from lucene/dev/trunk:\r\nLUCENE-4953: Fixed ParallelCompositeReader to inform ReaderClosedListeners of its synthetic subreaders. FieldCaches keyed on the atomic childs will be purged earlier and FC insanity prevented.  In addition, ParallelCompositeReader's toString() was changed to better reflect the reader structure.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=commit-tag-bot","name":"commit-tag-bot","emailAddress":"root-jira-commit_tag_bot at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=commit-tag-bot&avatarId=16176","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=commit-tag-bot&avatarId=16176","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=commit-tag-bot&avatarId=16176","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=commit-tag-bot&avatarId=16176"},"displayName":"Commit Tag Bot","active":true},"created":"2013-04-27T08:35:33.098+0000","updated":"2013-04-27T08:35:33.098+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13643602","id":"13643602","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Thanks Mike for the fruitful discussions!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-04-27T08:36:10.207+0000","updated":"2013-04-27T08:36:10.207+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13654969","id":"13654969","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=steve_rowe","name":"steve_rowe","emailAddress":"sarowe at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steve Rowe","active":true},"body":"If there are no objections, I'd like to backport this to 4.3.1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=steve_rowe","name":"steve_rowe","emailAddress":"sarowe at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steve Rowe","active":true},"created":"2013-05-10T22:49:55.551+0000","updated":"2013-05-10T22:49:55.551+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13659375","id":"13659375","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shalinmangar","name":"shalinmangar","emailAddress":"shalin dot mangar at lucidworks dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shalinmangar&avatarId=19501","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shalinmangar&avatarId=19501","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shalinmangar&avatarId=19501","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shalinmangar&avatarId=19501"},"displayName":"Shalin Shekhar Mangar","active":true},"body":"Back ported to 4.3.1 r1483272","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shalinmangar","name":"shalinmangar","emailAddress":"shalin dot mangar at lucidworks dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shalinmangar&avatarId=19501","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shalinmangar&avatarId=19501","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shalinmangar&avatarId=19501","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shalinmangar&avatarId=19501"},"displayName":"Shalin Shekhar Mangar","active":true},"created":"2013-05-16T09:23:45.243+0000","updated":"2013-05-16T09:23:45.243+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12644360/comment/13686952","id":"13686952","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shalinmangar","name":"shalinmangar","emailAddress":"shalin dot mangar at lucidworks dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shalinmangar&avatarId=19501","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shalinmangar&avatarId=19501","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shalinmangar&avatarId=19501","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shalinmangar&avatarId=19501"},"displayName":"Shalin Shekhar Mangar","active":true},"body":"Bulk closing after 4.3.1 release","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shalinmangar","name":"shalinmangar","emailAddress":"shalin dot mangar at lucidworks dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shalinmangar&avatarId=19501","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shalinmangar&avatarId=19501","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shalinmangar&avatarId=19501","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shalinmangar&avatarId=19501"},"displayName":"Shalin Shekhar Mangar","active":true},"created":"2013-06-18T16:55:14.404+0000","updated":"2013-06-18T16:55:14.404+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-4953/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1k0vr:"}}