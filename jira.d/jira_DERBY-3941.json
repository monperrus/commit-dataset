{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12408014","self":"https://issues.apache.org/jira/rest/api/latest/issue/12408014","key":"DERBY-3941","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-03-29 05:23:51.673","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23927","customfield_12310222":"3_*:*_1_*:*_567983561_*|*_1_*:*_1_*:*_13369889678_*|*_6_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-04-17T21:51:57.464+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3941/watchers","watchCount":1,"isWatching":false},"created":"2008-11-07T14:14:04.225+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"10.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12322259","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12322259","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12399905","key":"DERBY-3770","self":"https://issues.apache.org/jira/rest/api/2/issue/12399905","fields":{"summary":"Create a utility class for skipping data in an InputStream","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-06-30T16:06:44.061+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11412","id":"11412","name":"Store"}],"timeoriginalestimate":null,"description":"Some methods in StoredFileHeader and StoredPage call java.io.DataInput.skipBytes(int) with the assumption that it always skips the requested number of bytes. According to the javadoc for skipBytes, it may skip fewer bytes than requested, possibly 0, even if the end of the stream hasn't been reached.\r\n\r\nThe problem exists in these methods:\r\n\r\n  StoredFieldHeader.readFieldDataLength()\r\n  StoredPage.readRecordFromStream()\r\n  StoredPage.skipField()\r\n  StoredPage.readOneColumnFromPage()\r\n  StoredPage.readRecordFromArray()\r\n\r\nWe should change the code so that it works correctly even if skipBytes() were to skip fewer bytes than requested.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38782","summary":"Unsafe use of DataInput.skipBytes() in StoredPage and StoredFieldHeader","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10423","value":"Newcomer","id":"10423"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":12,"total":12,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12693521","id":"12693521","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"body":"Hi, Knut. I'm interested in this issue, and  wonder what's your favorite way to correct this problem. \r\n\r\n1.) to throw a IOException.\r\n2.) retry to skip  for some define times, if failed throw a IOExcetion.\r\n\r\nBesides, there are still many other invocation on skipBytes(), i.e.*ImageReader, BlockDataInputStream, an so on. Should they be correct altogether for this issue? If so, is there a wrapped function to resolve this problem uniformly.\r\n\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"created":"2009-03-29T05:23:51.673+0000","updated":"2009-03-29T05:23:51.673+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12694040","id":"12694040","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Hi Yun,\r\n\r\nMy preferred solution would be to have a variant of org.apache.derby.iapi.services.io.InputStreamUtil.skipFully() that could take a DataInput argument. That method uses skip until 0 is returned, then it uses read() which is guaranteed to block until there is something to read. If read returns -1, an EOFException is thrown. Currently skipFully() is only implemented for InputStream, I think.\r\n\r\nI'm not sure I understand your question about *ImageReader and BlockDataInputStream. Those classes are part of the JDK, aren't they? I didn't find any references to them in the Derby code.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-31T09:53:23.634+0000","updated":"2009-03-31T09:53:23.634+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12694125","id":"12694125","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"body":"Knut, thanks for your advice! \r\n\r\n>My preferred solution would be to have a variant of org.apache.derby.iapi.services.io.InputStreamUtil.skipFully() that could take a DataInput argument. That method uses skip until 0 is returned, then it uses read() which is guaranteed to block until there is something to read. If read returns -1, an EOFException is thrown. Currently skipFully() is only implemented for InputStream, I think. \r\n\r\nWith the util, the problem can be resolved easily. I just doubt, skipPersistent() used in InputStreamUtil.skipFully() will cause a new problem on time efficiency, as it's possible to wait a long time for the block finishing.\r\n\r\n>I'm not sure I understand your question about *ImageReader and BlockDataInputStream. Those classes are part of the JDK, aren't they? I didn't find any references to them in the Derby code.\r\n\r\nI'm sorry to have seen the two classes in a careless look at 'call hierachy' window in Eclipse, :).\r\n\r\nI will post a patch on this weekend.\r\n\r\nYun","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"created":"2009-03-31T14:20:25.925+0000","updated":"2009-03-31T14:39:40.721+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12698063","id":"12698063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"body":"Knut, I have added a function skipFullyDataInput(DataInput di, int skippedBytes) in InputStreamUtil following by one test case, and applied it to replace the calling to DataInput.skipBytes() in StoredFieldHeader, StoredPage and ClassInvestigator. Also, I have removed unused import clauses and organized the import part too.\r\n\r\nPlease check it! Thanks!\r\n\r\nYun","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"created":"2009-04-11T08:12:31.119+0000","updated":"2009-04-11T08:12:31.119+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12698112","id":"12698112","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for the patch, Yun!\r\n\r\nI have some small comments:\r\n\r\n1) skipPersistentDataInput() checks if DataInput.readByte() returns -1 to detect that EOF has been reached, but I think that that method will throw EOFException and not return -1 on EOF\r\n\r\n2) I think I would have renamed skipPersistentDataInput() and skipFullyDataInput() to skipPersistent() and skipFully().","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-11T17:30:19.513+0000","updated":"2009-04-11T17:30:19.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12698212","id":"12698212","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"body":"Knut, \r\n\r\n>1) skipPersistentDataInput() checks if DataInput.readByte() returns -1 to detect that EOF has been reached, but I think that that method will throw EOFException and not return -1 on EOF \r\n\r\nI have changed both  skipPersistentDataInput() and skipPersistent() to perform like what you need, and changed the document of UTF8Util.internalSkip(final InputStream in, final long charsToSkip) which used the skipPersistent(). I think the new revision can act smartlier. Please check the new patches, thanks!\r\n\r\n>2) I think I would have renamed skipPersistentDataInput() and skipFullyDataInput() to skipPersistent() and skipFully().\r\n\r\nI have tried this before providing the first patches, however, I found it's not able to use overload here, as it will lead to some compiling-time error on ambiguous use, i.e. InputStreamUtil.skipFully(null, int), and InputStreamUtil.skipFully(dis, int) where dis is an instance of DataInputStream.\r\n\r\nYun\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"created":"2009-04-12T11:32:25.970+0000","updated":"2009-04-12T11:32:25.970+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12698237","id":"12698237","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Hi Yun,\r\n\r\nMy point about DataInput.readByte() was that -1 is not an indication that the end of the stream has been reached, so it's not correct to throw an EOFException when readByte() returns -1. I think skipFully() will have to be implemented along the lines of this untested code:\r\n\r\n    public static void skipFully(DataInput in, int bytesToSkip)\r\n        throws IOException\r\n    {\r\n        if (in == null) {\r\n            throw new NullPointerException();\r\n        }\r\n\r\n        while (bytesToSkip > 0) {\r\n            int skipped = in.skipBytes(bytesToSkip);\r\n            if (skipped == 0) {\r\n                // No bytes skipped, read one byte to see if EOF has been\r\n                // reached. DataInput.readByte() will throw an EOFException\r\n                // if there's nothing more to read.\r\n                in.readByte();\r\n                // Still more data to read. Account for the byte we just read.\r\n                skipped++;\r\n            } \r\n            bytesToSkip -= skipped;\r\n       }\r\n    }\r\n\r\nThe changes to the javadoc for skipPersistent(InputStream,int) also look wrong, as that method is not supposed to throw an EOFException if end of stream is reached before all the bytes have been skipped. If it reaches end of stream prematurely, it returns the number of bytes actually skipped, just as the old javadoc said.\r\n\r\nAs to the compile errors when using the same name for the different variants of skipFully(), it should be possible to disambiguate the method calls by using a cast, like this:\r\n    InputStreamUtil.skipFully((InputStream) null, x);\r\nor\r\n    InputStreamUtil.skipFully((DataInput) null, x);\r\n\r\nBut perhaps the problem here is that we're trying to overload InputStreamUtil too much. Since a DataInput is not (necessarily) an InputStream it might be cleaner to create a new class, DataInputUtil, where we can collect utility methods for DataInputs without conflicting with the utilities for InputStreams.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-12T16:37:51.797+0000","updated":"2009-04-12T16:37:51.797+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12698386","id":"12698386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"body":"Knut, I think you are right! DataInput.readByte() does act differently from InputStream.read(), and throws a EOF Exception when EOF is met.\r\n\r\nI have moved the code into a new util class DataInputUtil, and wrote the corresponding test class. Please check it, thanks!\r\n\r\nYun","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"created":"2009-04-13T13:23:46.240+0000","updated":"2009-04-13T13:23:46.240+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12698789","id":"12698789","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for the new patch. I think it looks good. Two tiny comments:\r\n\r\n1) The license header is missing in the new test class.\r\n\r\n2) Much of the diff in StoredPage is just reorganizing import statements. It's probably better to do that in a separate patch, if we think those statements need to be tidied up.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-14T14:38:26.825+0000","updated":"2009-04-14T14:38:26.825+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12699710","id":"12699710","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"body":"Knut.  I agree with you, derby-3941-4.diff  and derby-3941-4.stat gives change on skipFully(), while  derby-3941-5.diff  and derby-3941-5.stat gives a pure change on import organize on StoredPage. I think importer reorganization is necessary to keep code clean. Wish for your check.\r\n\r\nYun","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yunlee","name":"yunlee","emailAddress":"yun dot lee dot bj at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yun Lee","active":true},"created":"2009-04-16T14:08:17.432+0000","updated":"2009-04-16T14:08:17.432+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12700122","id":"12700122","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks Yun! I committed patch #5 to trunk (revision 765943). Will take a look at #4 shortly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-17T10:57:31.660+0000","updated":"2009-04-17T10:57:31.660+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12408014/comment/12700342","id":"12700342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed revision 766163.\r\nThanks for your work on this issue, Yun!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-04-17T21:51:57.412+0000","updated":"2009-04-17T21:51:57.412+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3941/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0703j:"}}