{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12461004","self":"https://issues.apache.org/jira/rest/api/latest/issue/12461004","key":"MAHOUT-359","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310751","id":"12310751","key":"MAHOUT","name":"Mahout","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310751&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310751&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310751&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310751&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13060","id":"13060","description":"Apache Mahout","name":"Mahout"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314396","id":"12314396","description":"","name":"0.4","archived":false,"released":true,"releaseDate":"2010-10-31"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2010-04-02 10:20:17.385","customfield_12312323":null,"customfield_12310420":"9706","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_2160630106_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-04-27T08:52:51.146+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAHOUT-359/watchers","watchCount":0,"isWatching":false},"created":"2010-04-02T08:42:21.040+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314396","id":"12314396","description":"","name":"0.4","archived":false,"released":true,"releaseDate":"2010-10-31"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2010-10-31T15:49:20.031+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312503","id":"12312503","name":"Collaborative Filtering","description":"Taste and any other CF stuff"}],"timeoriginalestimate":null,"description":"in some case there has no preference value in the input data ,the preference value is set to zero,then \r\n\r\nRecommenderMapper.class\r\n\r\n @Override\r\n  public void map(LongWritable userID,\r\n                  VectorWritable vectorWritable,\r\n                  OutputCollector<LongWritable,RecommendedItemsWritable> output,\r\n                  Reporter reporter) throws IOException {\r\n    \r\n    if ((usersToRecommendFor != null) && !usersToRecommendFor.contains(userID.get())) {\r\n      return;\r\n    }\r\n    Vector userVector = vectorWritable.get();\r\n    Iterator<Vector.Element> userVectorIterator = userVector.iterateNonZero();\r\n    Vector recommendationVector = new RandomAccessSparseVector(Integer.MAX_VALUE, 1000);\r\n    while (userVectorIterator.hasNext()) {\r\n      Vector.Element element = userVectorIterator.next();\r\n      int index = element.index();\r\n      double value = element.get();     //here will get 0.0 for Boolean recommendation \r\n      Vector columnVector;\r\n      try {\r\n        columnVector = cooccurrenceColumnCache.get(new IntWritable(index));\r\n      } catch (TasteException te) {\r\n        if (te.getCause() instanceof IOException) {\r\n          throw (IOException) te.getCause();\r\n        } else {\r\n          throw new IOException(te.getCause());\r\n        }\r\n      }\r\n      if (columnVector != null) {\r\n        columnVector.times(value).addTo(recommendationVector); //here will set all score value to zero for Boolean recommendation\r\n      }\r\n    }\r\n    \r\n    Queue<RecommendedItem> topItems = new PriorityQueue<RecommendedItem>(recommendationsPerUser + 1,\r\n        Collections.reverseOrder());\r\n    \r\n    Iterator<Vector.Element> recommendationVectorIterator = recommendationVector.iterateNonZero();\r\n    LongWritable itemID = new LongWritable();\r\n    while (recommendationVectorIterator.hasNext()) {\r\n      Vector.Element element = recommendationVectorIterator.next();\r\n      int index = element.index();\r\n      if (userVector.get(index) == 0.0) {\r\n        if (topItems.size() < recommendationsPerUser) {\r\n          indexItemIDMap.get(new IntWritable(index), itemID);\r\n          topItems.add(new GenericRecommendedItem(itemID.get(), (float) element.get()));\r\n        } else if (element.get() > topItems.peek().getValue()) {\r\n          indexItemIDMap.get(new IntWritable(index), itemID);\r\n          topItems.add(new GenericRecommendedItem(itemID.get(), (float) element.get()));\r\n          topItems.poll();\r\n        }\r\n      }\r\n    }\r\n    \r\n    List<RecommendedItem> recommendations = new ArrayList<RecommendedItem>(topItems.size());\r\n    recommendations.addAll(topItems);\r\n    Collections.sort(recommendations);\r\n    output.collect(userID, new RecommendedItemsWritable(recommendations));\r\n  }\r\n\r\nso maybe we need a option to distinguish boolean recommendation and slope one recommendation.\r\n\r\nin ToUserVectorReducer.class\r\n\r\nhere no need findTopNPrefsCutoff,maybe take all item.\r\n\r\nit's just my thinking ,maybe item is used for slope one only .\r\n:)\r\n \r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"23059","summary":"org.apache.mahout.cf.taste.hadoop.item.RecommenderJob for Boolean recommendation","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":8,"total":8,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12461004/comment/12852778","id":"12852778","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"body":"I am not sure I understand the issue yet. This class has nothing to do with slope one.\r\n\r\nAre you looking at this line?\r\n\r\nif (userVector.get(index) == 0.0) {\r\n\r\nThis basically asks, did the user express no preference for the item? If so, then the item is recommendable. This ought to work fine for boolean preferences too.\r\n\r\nBut then actually, ToItemPrefsMapper assumes you have preference values. That, I can change. There's no need for that assumption -- it can default to 1.0f.\r\n\r\nBut then I don't understand your comment about ToUserVectorReducer? I think it's still important for scalability to perhaps cap the size of vectors.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"created":"2010-04-02T10:20:17.385+0000","updated":"2010-04-02T10:20:17.385+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12461004/comment/12852826","id":"12852826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"body":"sorry for confusing you.\r\n\r\nI have two questions:\r\n\r\n1) if item has no preferences,we normally set the  preferences to 0 or null in database:\r\n\r\nif (columnVector != null) { columnVector.times(value).addTo(recommendationVector)  will cause all value has same value,\r\n\r\n2) if item has no preferences,we normally set the  preferences to 0 or null:\r\n\r\nin ToUserVectorReducer.class we need not select the top N items,becasue they have the same default value (0 or null)\r\n\r\nwe can take all items ,it will decrease the calculatation time ,so improve the performance.\r\n\r\nvery thanks\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"created":"2010-04-02T14:07:35.009+0000","updated":"2010-04-02T14:07:35.009+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12461004/comment/12852831","id":"12852831","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"body":"No preference is represented by the absence of a preference -- 'null', maybe. It's not represented by a preference of value 0, normally.\r\n\r\nBut yes when put into a user vector, we have to give a value. Non-existence preferences are modelled as a 0. This makes preferences of 0 indistinguishable from no preference, unfortunately, in these Hadoop-based, vector-based implementations, but it doesn't usually cause an issue in practice.\r\n\r\nThe loop in RecommenderMapper loops only over non-zero values, so 'value' is never 0 in the line you cite.\r\n\r\nIn the case of boolean preferences, all values are 1. (I could optimize this and avoid the multiplication, I guess.) But that's not your issue is it?\r\n\r\n\r\nI also agree we can optimize findTopNPrefsCutoff(). For boolean data, the cutoff is 1.0, and all preferences are kept. We might want to keep a random n items. For now, it's not broken right, it's just keeping more data than we might desire.\r\n\r\n\r\nIs that resolving your issue? maybe you can otherwise help me understand the problem you are having.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"created":"2010-04-02T14:18:33.260+0000","updated":"2010-04-02T14:18:33.260+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12461004/comment/12852846","id":"12852846","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"body":"my problem is how to process the case Non-existence preferences high-performance and more clear.\r\n\r\nhow about the following solution about Non-existence preferences?\r\n\r\nwe add one option to distinguish Non-existence preferences or existence preferences,\r\nso it need not consider set preference to 1 or zero and end user can to use this implementation clearly.\r\n\r\nThe loop in RecommenderMapper loops only over non-zero values ,maybe I need read the code deeply.\r\n\r\nIterator<Vector.Element> userVectorIterator = userVector.iterateNonZero(); \r\n\r\nI checked source  method iterateNonZero of RandomAccessSparseVector\r\n\r\nhttp://svn.apache.org/viewvc/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/RandomAccessSparseVector.java?view=markup\r\n\r\nbut not find how to skip zero items.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"created":"2010-04-02T15:18:36.811+0000","updated":"2010-04-02T15:18:36.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12461004/comment/12852847","id":"12852847","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"body":"Yes, most of the recommender code makes this distinction. When user preferences are translated to a vector, the 'null' values are necessarily mapped to zero. This makes sense for vectors. It has some implications for the algorithms written to use vectors, but I believe they are fine.\r\n\r\nRandomAccessSparseVector stores only non-zero entries in the 'values' field. iterateNonZero iterates only over entries in 'values'. This is how it skips non-zero entries.\r\n\r\nIs the issue performance -- what part in particular seems slow?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"created":"2010-04-02T15:26:33.908+0000","updated":"2010-04-02T15:26:33.908+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12461004/comment/12852850","id":"12852850","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"body":"if it can optimize to avoid the multiplication and avoid to  findTopNPrefsCutoff() for Non-existence preferences,\r\nit will improve the performance.\r\n\r\nalso find issue is :\r\n\r\nUserVectorToCooccurrenceMapper can has 2 map task maximumly (I need test more here )","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"created":"2010-04-02T15:37:58.811+0000","updated":"2010-04-02T15:37:58.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12461004/comment/12852913","id":"12852913","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"body":"I think I understand your ideas. I committed a change that better optimized for 'boolean' data. Unfortunately I need to add a command line flag for this: \"--booleanData true\". But I believe it should work more efficiently. I'd appreciate it if you can try it out. This is very helpful.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srowen","name":"srowen","emailAddress":"srowen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=srowen&avatarId=10104","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=srowen&avatarId=10104","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=srowen&avatarId=10104","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=srowen&avatarId=10104"},"displayName":"Sean Owen","active":true},"created":"2010-04-02T18:54:38.325+0000","updated":"2010-04-02T18:54:38.325+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12461004/comment/12854581","id":"12854581","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"body":"This works fine ,thanks Sean :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=huiwenhan","name":"huiwenhan","emailAddress":"huiwen dot han at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Han Hui Wen ","active":true},"created":"2010-04-07T16:27:53.355+0000","updated":"2010-04-07T16:27:53.355+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAHOUT-359/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04b2n:"}}