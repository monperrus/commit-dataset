{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12328999","self":"https://issues.apache.org/jira/rest/api/latest/issue/12328999","key":"DERBY-989","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311972","id":"12311972","description":"","name":"10.1.3.2","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-03-16 06:55:24.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22243","customfield_12310222":"3_*:*_1_*:*_521852000_*|*_1_*:*_1_*:*_11991541000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_8265942000_*|*_4_*:*_1_*:*_132000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-10-14T08:15:12.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-989/watchers","watchCount":0,"isWatching":false},"created":"2006-02-15T20:10:45.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"9.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311972","id":"12311972","description":"","name":"10.1.3.2","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12312758","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12312758","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12332447","key":"DERBY-1237","self":"https://issues.apache.org/jira/rest/api/2/issue/12332447","fields":{"summary":"unit/daemonService  fails intermittently with > Shutting down due to unit test failure.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-07-01T00:09:08.720+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11413","id":"11413","name":"Test"}],"timeoriginalestimate":null,"description":"\"Signature\":\n********* Diff file unit/unit/daemonService.diff\n*** Start: daemonService jdk1.5.0_04 unit:unit 2006-02-14 20:46:42 ***\n2 del\n< -- Unit Test T_DaemonService finished\n2 add\n> ran out of time\n> Shutting down due to unit test failure.\n> Exit due to time bomb\nTest Failed.\n*** End:   daemonService jdk1.5.0_04 unit:unit 2006-02-14 21:47:13 ***\n\n\nhttp://www.multinet.no/~solberg/public/Apache/Derby/Limited/testSummary-377800.html [SunOS-5.10 i86pc-i386]\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38613","summary":"unit/daemonService.unit fails intermittently: 'ran out of time'","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"OS: Solaris 10 3/05 s10_74L2a X86 - SunOS 5.10 Generic, JVM: Sun Microsystems Inc. 1.5.0_04\nOS: Solaris 9 9/04 s9s_u7wos_09 SPARC - SunOS 5.9 Generic_118558-11, JVM: Sun Microsystems Inc. 1.5.0_03\nOS: Red Hat Enterprise Linux AS release 3 (Taroon Update 4) - Linux 2.4.21-27.ELsmp #1 SMP Wed Dec 1 21:50:31 EST 2004 GNU/Linux, JVM: Sun Microsystems Inc. 1.5.0_03\n","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":19,"total":19,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12370593","id":"12370593","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"body":"Similar diff and test failure also seen during our nightly testruns on 2006-03-14 on ibm142/10.1 codeline, insane jars and on windows. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"created":"2006-03-16T06:55:24.000+0000","updated":"2006-03-16T06:55:24.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12374642","id":"12374642","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I see a failure for this test with 10.2.0.0 alpha - (394001) on IBM 1.4.2\r\nI don't see ran out of time.  Is this the same failure or something different?\r\n*** Start: daemonService jdk1.4.2 derbyall:unit 2006-04-14 08:37:02 ***\r\n2 del\r\n< -- Unit Test T_DaemonService finished\r\n2 add\r\n> Shutting down due to unit test failure.\r\nTest Failed.\r\n*** End:   daemonService jdk1.4.2 derbyall:unit 2006-04-14 08:46:24 ***\r\n------------------------------------------------------\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-04-15T23:26:42.000+0000","updated":"2006-04-15T23:26:42.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12416430","id":"12416430","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Test run on ibm1.4.2 jvm, last night, 6/14 - build (\r\n\r\ndiff:\r\n********* Diff file derbyall/unit/daemonService.diff\r\n*** Start: daemonService jdk1.4.2 derbyall:unit 2006-06-15 08:58:59 ***\r\n2 del\r\n< -- Unit Test T_DaemonService finished\r\n2 add\r\n> ran out of time\r\n> Shutting down due to unit test failure.\r\n> Exit due to time bomb\r\nTest Failed.\r\n*** End:   daemonService jdk1.4.2 derbyall:unit 2006-06-15 09:59:44 ***\r\n\r\nprobably the underlying error from derby.log:\r\n[Thread_8] Pass - null T02\r\norg.apache.derbyTesting.unitTests.harness.T_Fail: Test failed - unsubscribed continue to get serviced\r\n\tat org.apache.derbyTesting.unitTests.harness.T_Fail.testFailMsg(T_Fail.java:95)\r\n\tat org.apache.derbyTesting.unitTests.services.T_DaemonService.T03(T_DaemonService.java:247)\r\n\tat org.apache.derbyTesting.unitTests.services.T_DaemonService.runTestSet(T_DaemonService.java:118)\r\n\tat org.apache.derbyTesting.unitTests.harness.T_MultiThreadedIterations.run(T_MultiThreadedIterations.java:180)\r\n\tat java.lang.Thread.run(Thread.java:570)\r\n\r\n\r\nportion of derby.log for the daemonService test:\r\n2006-06-15 15:59:00.192 GMT Thread[main,5,main] Starting test  'org.apache.derbyTesting.unitTests.services.T_DaemonService'.\r\n[Thread_1] started\r\n[Thread_0] started\r\n[Thread_4] started\r\n[Thread_2] started\r\n[Thread_8] started\r\n[Thread_9] started\r\n[Thread_7] started\r\n[Thread_6] started\r\n[Thread_5] started\r\n[Thread_3] started\r\n[Thread_1] Pass - null T01\r\n[Thread_9] Pass - null T01\r\n[Thread_5] Pass - null T01\r\n[Thread_0] Pass - null T01\r\n[Thread_8] Pass - null T01\r\n[Thread_6] Pass - null T01\r\n[Thread_3] Pass - null T01\r\n[Thread_2] Pass - null T01\r\n[Thread_7] Pass - null T01\r\n[Thread_4] Pass - null T01\r\n[Thread_2] Pass - null T02\r\n[Thread_6] Pass - null T02\r\n[Thread_4] Pass - null T02\r\n[Thread_9] Pass - null T02\r\n[Thread_5] Pass - null T02\r\n[Thread_3] Pass - null T02\r\n[Thread_8] Pass - null T02\r\n[Thread_0] Pass - null T02\r\n[Thread_7] Pass - null T02\r\n[Thread_1] Pass - null T02\r\n[Thread_2] Pass - null T03\r\n[Thread_9] Pass - null T03\r\n[Thread_4] Pass - null T03\r\n[Thread_0] Pass - null T03\r\n[Thread_3] Pass - null T03\r\n[Thread_6] Pass - null T03\r\n[Thread_7] Pass - null T03\r\n[Thread_8] Pass - null T03\r\n[Thread_1] Pass - null T03\r\n[Thread_5] Pass - null T03\r\n[Thread_2] Pass - null T_CheckStatus\r\n[Thread_2] Iteration 0 took 99876ms\r\n[Thread_2] Total memory increased by 0 is 4389376\r\n[Thread_2] Used  memory increased by 24240 is 1557112\r\n[Thread_2] Pass - null T01\r\n[Thread_9] Pass - null T_CheckStatus\r\n[Thread_4] Pass - null T_CheckStatus\r\n[Thread_9] Iteration 0 took 119856ms\r\n[Thread_0] Pass - null T_CheckStatus\r\n[Thread_4] Iteration 0 took 119872ms\r\n[Thread_3] Pass - null T_CheckStatus\r\n[Thread_0] Iteration 0 took 119872ms\r\n[Thread_3] Iteration 0 took 119856ms\r\n[Thread_0] Total memory increased by 0 is 4389376\r\n[Thread_8] Pass - null T_CheckStatus\r\n[Thread_6] Pass - null T_CheckStatus\r\n[Thread_8] Iteration 0 took 119856ms\r\n[Thread_9] Total memory increased by 0 is 4389376\r\n[Thread_3] Total memory increased by 0 is 4389376\r\n[Thread_6] Iteration 0 took 119872ms\r\n[Thread_3] Used  memory increased by 23272 is 1559776\r\n[Thread_8] Total memory increased by 0 is 4389376\r\n[Thread_0] Used  memory increased by 26944 is 1559600\r\n[Thread_9] Used  memory increased by 26072 is 1560080\r\n[Thread_4] Total memory increased by 0 is 4389376\r\n[Thread_8] Used  memory increased by 28016 is 1561688\r\n[Thread_7] Pass - null T_CheckStatus\r\n[Thread_6] Total memory increased by 0 is 4389376\r\n[Thread_5] Pass - null T_CheckStatus\r\n[Thread_6] Used  memory increased by 26984 is 1562000\r\n[Thread_4] Used  memory increased by 27496 is 1560152\r\n[Thread_5] Iteration 0 took 119888ms\r\n[Thread_7] Iteration 0 took 119888ms\r\n[Thread_7] Total memory increased by 0 is 4389376\r\n[Thread_7] Used  memory increased by 27360 is 1563768\r\n[Thread_5] Total memory increased by 0 is 4389376\r\n[Thread_1] Pass - null T_CheckStatus\r\n[Thread_5] Used  memory increased by 26264 is 1563816\r\n[Thread_1] Iteration 0 took 119919ms\r\n[Thread_1] Total memory increased by 0 is 4389376\r\n[Thread_1] Used  memory increased by 29640 is 1565848\r\n[Thread_9] Pass - null T01\r\n[Thread_2] Pass - null T02\r\n[Thread_1] Pass - null T01\r\n[Thread_5] Pass - null T01\r\n[Thread_3] Pass - null T01\r\n[Thread_6] Pass - null T01\r\n[Thread_0] Pass - null T01\r\n[Thread_4] Pass - null T01\r\n[Thread_7] Pass - null T01\r\n[Thread_8] Pass - null T01\r\n[Thread_6] Pass - null T02\r\n[Thread_9] Pass - null T02\r\n[Thread_1] Pass - null T02\r\n[Thread_7] Pass - null T02\r\n[Thread_3] Pass - null T02\r\n[Thread_2] Pass - null T03\r\n[Thread_5] Pass - null T02\r\n[Thread_4] Pass - null T02\r\n[Thread_0] Pass - null T02\r\n[Thread_3] Pass - null T03\r\n[Thread_8] Pass - null T02\r\norg.apache.derbyTesting.unitTests.harness.T_Fail: Test failed - unsubscribed continue to get serviced\r\n\tat org.apache.derbyTesting.unitTests.harness.T_Fail.testFailMsg(T_Fail.java:95)\r\n\tat org.apache.derbyTesting.unitTests.services.T_DaemonService.T03(T_DaemonService.java:247)\r\n\tat org.apache.derbyTesting.unitTests.services.T_DaemonService.runTestSet(T_DaemonService.java:118)\r\n\tat org.apache.derbyTesting.unitTests.harness.T_MultiThreadedIterations.run(T_MultiThreadedIterations.java:180)\r\n\tat java.lang.Thread.run(Thread.java:570)\r\n[Thread_6] Pass - null T03\r\n[Thread_9] Pass - null T03\r\n[Thread_4] Pass - null T03\r\n[Thread_7] Pass - null T03\r\n[Thread_0] Pass - null T03\r\n[Thread_8] Pass - null T03\r\n[Thread_1] Pass - null T03\r\n[Thread_2] Pass - null T_CheckStatus\r\n[Thread_2] Iteration 1 took 90118ms\r\n[Thread_2] Total memory increased by 0 is 4389376\r\n[Thread_2] Used  memory increased by 6736 is 1563840\r\n[Thread_2] Pass - null T01\r\n[Thread_3] Pass - null T_CheckStatus\r\n[Thread_3] Iteration 1 took 80206ms\r\n[Thread_3] Total memory increased by 0 is 4389376\r\n[Thread_3] Used  memory increased by -98224 is 1464696\r\n[Thread_2] Pass - null T02\r\n[Thread_3] Pass - null T01\r\n[Thread_6] Pass - null T_CheckStatus\r\n[Thread_9] Pass - null T_CheckStatus\r\n[Thread_6] Iteration 1 took 90227ms\r\n[Thread_9] Iteration 1 took 90259ms\r\n[Thread_6] Total memory increased by 0 is 4389376\r\n[Thread_6] Used  memory increased by -96200 is 1468224\r\n[Thread_9] Total memory increased by 0 is 4389376\r\n[Thread_9] Used  memory increased by -96488 is 1467784\r\n[Thread_3] Pass - null T02\r\n[Thread_9] Pass - null T01\r\n[Thread_6] Pass - null T01\r\n[Thread_4] Pass - null T_CheckStatus\r\n[Thread_4] Iteration 1 took 100311ms\r\n[Thread_4] Total memory increased by 0 is 4389376\r\n[Thread_4] Used  memory increased by -94160 is 1469608\r\n[Thread_9] Pass - null T02\r\n[Thread_6] Pass - null T02\r\n[Thread_4] Pass - null T01\r\n[Thread_7] Pass - null T_CheckStatus\r\n[Thread_0] Pass - null T_CheckStatus\r\n[Thread_7] Iteration 1 took 110380ms\r\n[Thread_1] Pass - null T_CheckStatus\r\n[Thread_8] Pass - null T_CheckStatus\r\n[Thread_7] Total memory increased by 0 is 4389376\r\n[Thread_1] Iteration 1 took 110380ms\r\n[Thread_7] Used  memory increased by -95256 is 1471880\r\n[Thread_1] Total memory increased by 0 is 4389376\r\n[Thread_0] Iteration 1 took 110411ms\r\n[Thread_8] Iteration 1 took 110395ms\r\n[Thread_0] Total memory increased by 0 is 4389376\r\n[Thread_8] Total memory increased by 0 is 4389376\r\n[Thread_8] Used  memory increased by -93688 is 1469664\r\n[Thread_0] Used  memory increased by -92864 is 1470136\r\n[Thread_1] Used  memory increased by -79968 is 1470920\r\n[Thread_2] Pass - null T03\r\n[Thread_4] Pass - null T02\r\n[Thread_0] Pass - null T01\r\n[Thread_1] Pass - null T01\r\n[Thread_8] Pass - null T01\r\n[Thread_7] Pass - null T01\r\n[Thread_3] Pass - null T03\r\n[Thread_1] Pass - null T02\r\n[Thread_0] Pass - null T02\r\n[Thread_9] Pass - null T03\r\n[Thread_6] Pass - null T03\r\n[Thread_8] Pass - null T02\r\n[Thread_7] Pass - null T02\r\n[Thread_4] Pass - null T03\r\n[Thread_0] Pass - null T03\r\n[Thread_1] Pass - null T03\r\n[Thread_7] Pass - null T03\r\n[Thread_8] Pass - null T03\r\n[Thread_9] Pass - null T_CheckStatus\r\n[Thread_6] Pass - null T_CheckStatus\r\n[Thread_6] Iteration 2 took 110099ms\r\n[Thread_9] Iteration 2 took 110099ms\r\n[Thread_9] Total memory increased by 0 is 4389376\r\n[Thread_6] Total memory increased by 0 is 4389376\r\n[Thread_9] Used  memory increased by 12880 is 1479200\r\n[Thread_6] Used  memory increased by 12264 is 1479976\r\n[Thread_4] Pass - null T_CheckStatus\r\n[Thread_4] Iteration 2 took 110022ms\r\n[Thread_6] Pass - null T01\r\n[Thread_9] Pass - null T01\r\n[Thread_4] Total memory increased by 0 is 4389376\r\n[Thread_4] Used  memory increased by 11112 is 1480296\r\n[Thread_0] Pass - null T_CheckStatus\r\n[Thread_1] Pass - null T_CheckStatus\r\n[Thread_0] Iteration 2 took 109928ms\r\n[Thread_4] Pass - null T01\r\n[Thread_1] Iteration 2 took 109928ms\r\n[Thread_0] Total memory increased by 0 is 4389376\r\n[Thread_1] Total memory increased by 0 is 4389376\r\n[Thread_0] Used  memory increased by 10832 is 1482880\r\n[Thread_1] Used  memory increased by 12696 is 1483856\r\n[Thread_6] Pass - null T02\r\n[Thread_9] Pass - null T02\r\n[Thread_1] Pass - null T01\r\n[Thread_0] Pass - null T01\r\n[Thread_7] Pass - null T_CheckStatus\r\n[Thread_8] Pass - null T_CheckStatus\r\n[Thread_7] Iteration 2 took 110022ms\r\n[Thread_8] Iteration 2 took 110006ms\r\n[Thread_8] Total memory increased by 0 is 4389376\r\n[Thread_8] Used  memory increased by 17008 is 1488232\r\n[Thread_7] Total memory increased by 0 is 4389376\r\n[Thread_7] Used  memory increased by 16168 is 1487896\r\n[Thread_4] Pass - null T02\r\n[Thread_7] Pass - null T01\r\n[Thread_0] Pass - null T02\r\n[Thread_1] Pass - null T02\r\n[Thread_8] Pass - null T01\r\n[Thread_9] Pass - null T03\r\n[Thread_6] Pass - null T03\r\n[Thread_7] Pass - null T02\r\n[Thread_8] Pass - null T02\r\n[Thread_4] Pass - null T03\r\n[Thread_1] Pass - null T03\r\n[Thread_0] Pass - null T03\r\n[Thread_8] Pass - null T03\r\n[Thread_7] Pass - null T03\r\n[Thread_9] Pass - null T_CheckStatus\r\n[Thread_6] Pass - null T_CheckStatus\r\n[Thread_9] Iteration 3 took 113674ms\r\n[Thread_6] Iteration 3 took 113674ms\r\n[Thread_9] Total memory increased by 0 is 4389376\r\n[Thread_9] Used  memory increased by 15632 is 1495208\r\n[Thread_6] Total memory increased by 0 is 4389376\r\n[Thread_6] Used  memory increased by 14984 is 1494408\r\n[Thread_6] Pass - null T01\r\n[Thread_9] Pass - null T01\r\n[Thread_6] Pass - null T02\r\n[Thread_9] Pass - null T02\r\n[Thread_4] Pass - null T_CheckStatus\r\n[Thread_0] Pass - null T_CheckStatus\r\n[Thread_4] Iteration 3 took 124708ms\r\n[Thread_1] Pass - null T_CheckStatus\r\n[Thread_4] Total memory increased by 0 is 4389376\r\n[Thread_4] Used  memory increased by 21256 is 1500992\r\n[Thread_0] Iteration 3 took 114702ms\r\n[Thread_0] Total memory increased by 0 is 4389376\r\n[Thread_0] Used  memory increased by 17128 is 1499688\r\n[Thread_1] Iteration 3 took 114687ms\r\n[Thread_1] Total memory increased by 0 is 4389376\r\n[Thread_1] Used  memory increased by 17296 is 1499688\r\n[Thread_4] Pass - null T01\r\n[Thread_0] Pass - null T01\r\n[Thread_1] Pass - null T01\r\n[Thread_4] Pass - null T02\r\n[Thread_0] Pass - null T02\r\n[Thread_8] Pass - null T_CheckStatus\r\n[Thread_8] Iteration 3 took 135667ms\r\n[Thread_8] Total memory increased by 0 is 4389376\r\n[Thread_8] Used  memory increased by 20400 is 1509016\r\n[Thread_7] Pass - null T_CheckStatus\r\n[Thread_7] Iteration 3 took 135667ms\r\n[Thread_7] Total memory increased by 0 is 4389376\r\n[Thread_7] Used  memory increased by 22912 is 1509752\r\n[Thread_9] Pass - null T03\r\n[Thread_6] Pass - null T03\r\n[Thread_1] Pass - null T02\r\n[Thread_7] Pass - null T01\r\n[Thread_8] Pass - null T01\r\n[Thread_4] Pass - null T03\r\n[Thread_0] Pass - null T03\r\n[Thread_7] Pass - null T02\r\n[Thread_8] Pass - null T02\r\n[Thread_1] Pass - null T03\r\n[Thread_7] Pass - null T03\r\n[Thread_8] Pass - null T03\r\n[Thread_9] Pass - null T_CheckStatus\r\n[Thread_6] Pass - null T_CheckStatus\r\n[Thread_9] Iteration 4 took 115216ms\r\n[Thread_6] Iteration 4 took 115216ms\r\n[Thread_9] Total memory increased by 0 is 4389376\r\n[Thread_6] Total memory increased by 0 is 4389376\r\n[Thread_6] Used  memory increased by 19616 is 1514848\r\n[Thread_6] finished with no error\r\n[Thread_9] Used  memory increased by 19264 is 1514088\r\n[Thread_9] finished with no error\r\n[Thread_4] Pass - null T_CheckStatus\r\n[Thread_4] Iteration 4 took 115085ms\r\n[Thread_0] Pass - null T_CheckStatus\r\n[Thread_4] Total memory increased by 0 is 4389376\r\n[Thread_0] Iteration 4 took 115069ms\r\n[Thread_4] Used  memory increased by 12480 is 1512168\r\n[Thread_0] Total memory increased by 0 is 4389376\r\n[Thread_4] finished with no error\r\n[Thread_0] Used  memory increased by 10560 is 1512368\r\n[Thread_0] finished with no error\r\n[Thread_1] Pass - null T_CheckStatus\r\n[Thread_1] Iteration 4 took 135931ms\r\n[Thread_1] Total memory increased by 0 is 4389376\r\n[Thread_1] Used  memory increased by 10800 is 1511608\r\n[Thread_1] finished with no error\r\n[Thread_7] Pass - null T_CheckStatus\r\n[Thread_8] Pass - null T_CheckStatus\r\n[Thread_7] Iteration 4 took 135736ms\r\n[Thread_8] Iteration 4 took 135752ms\r\n[Thread_7] Total memory increased by 0 is 4389376\r\n[Thread_8] Total memory increased by 0 is 4389376\r\n[Thread_7] Used  memory increased by 2896 is 1511848\r\n[Thread_8] Used  memory increased by 3720 is 1512792\r\n[Thread_7] finished with no error\r\n[Thread_8] finished with no error\r\n[main] FAIL - org.apache.derbyTesting.unitTests.harness.T_Fail: The test failed with an exception: java.lang.InterruptedException: JVMLK007: operation interrupted\r\norg.apache.derbyTesting.unitTests.harness.T_Fail: The test failed with an exception: java.lang.InterruptedException: JVMLK007: operation interrupted\r\n\tat org.apache.derbyTesting.unitTests.harness.T_Fail.exceptionFail(T_Fail.java:72)\r\n\tat org.apache.derbyTesting.unitTests.harness.T_MultiThreadedIterations.runTests(T_MultiThreadedIterations.java:147)\r\n\tat org.apache.derbyTesting.unitTests.harness.T_Generic.Execute(T_Generic.java:117)\r\n\tat org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.runATest(BasicUnitTestManager.java:183)\r\n\tat org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.runTests(BasicUnitTestManager.java:245)\r\n\tat org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.boot(BasicUnitTestManager.java:92)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1996)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:290)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1831)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startServices(BaseMonitor.java:966)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:398)\r\n\tat org.apache.derby.impl.services.monitor.FileMonitor.<init>(FileMonitor.java:59)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:288)\r\n\tat org.apache.derbyTesting.unitTests.harness.UnitTestMain.main(UnitTestMain.java:50)\r\n2006-06-15 16:59:14.953 GMT Thread[main,5,main] Test 'org.apache.derbyTesting.unitTests.services.T_DaemonService' failed\r\n2006-06-15 16:59:14.953 GMT Thread[main,5,main] Test Summary - Run 1, Passed 0, Failed 1, Skipped 0.\r\n2006-06-15 16:59:14.953 GMT Thread[main,5,main] Shutting down due to unit test failure, see log for more information.\r\n2006-06-15 16:59:14.969 GMT Thread[main,5,main] 2006-06-15 16:59:14.969 GMT Thread[main,5,main] Startup failed due to an exception. See next exception for details. \r\nERROR XBM01: Startup failed due to an exception. See next exception for details. \r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:297)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.exceptionStartingModule(Monitor.java:668)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1849)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startServices(BaseMonitor.java:966)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:398)\r\n\tat org.apache.derby.impl.services.monitor.FileMonitor.<init>(FileMonitor.java:59)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:288)\r\n\tat org.apache.derbyTesting.unitTests.harness.UnitTestMain.main(UnitTestMain.java:50)\r\n============= begin nested exception, level (1) ===========\r\njava.lang.NullPointerException\r\n\tat org.apache.derby.impl.services.monitor.TopService.getService(TopService.java:129)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(BaseMonitor.java:197)\r\n\tat org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.boot(BasicUnitTestManager.java:102)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1996)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:290)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1831)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startServices(BaseMonitor.java:966)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:398)\r\n\tat org.apache.derby.impl.services.monitor.FileMonitor.<init>(FileMonitor.java:59)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:288)\r\n\tat org.apache.derbyTesting.unitTests.harness.UnitTestMain.main(UnitTestMain.java:50)\r\n============= end nested exception, level (1) ===========","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2006-06-16T06:27:35.000+0000","updated":"2006-06-16T06:27:35.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12416500","id":"12416500","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"body":"Mike Matrigali wrote:\r\nRe: are actual result files for sun's DBTG test runs kept around?\r\n> I am looking at DERBY-989 and it would help to see the derby.log file\r\n> from the reported diff.  I looked at the public web site:\r\n> http://www.multinet.no/~solberg/public/Apache/, but I could\r\n> only find reports on the results, not the actual results.  I could very\r\n> well have missed something, and also would not be surprised if for\r\n> space these were not kept.\r\n> \r\n\r\nI have attached derby.log for one case.\r\n\r\nI also put the full dump of the test run in http://www.multinet.no/~solberg/public/Apache/Derby/testlog/Linux-2.6.9-34.ELsmp_x86_64-x86_64/411220.zip (temporarily).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=olesolberg","name":"olesolberg","emailAddress":"Ole dot Solberg at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ole Solberg","active":true},"created":"2006-06-16T21:02:09.000+0000","updated":"2006-06-16T21:02:09.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12418941","id":"12418941","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I have a hypothesis, but it's hard to verify since the failure is\r\nintermittent and the test needs much time to finish.\r\n\r\nI believe there are two issues:\r\n\r\na) BasicDaemon has not enough synchronization between unsubscribe()\r\n   and serviceClient() to prevent the following order of events\r\n\r\n     1. the daemon thread fetches client N from the service queue\r\n     2. another thread invokes unsubscribe(N) which removes client N\r\n        from the queue\r\n     3. the daemon thread invokes performWork() on client N\r\n\r\n   Because of this, it is possible that performWork() is called on an\r\n   unsubscribed client, which will cause T_DaemonService.T03() to\r\n   fail.\r\n\r\nb) When the error \"unsubscribed continue to get serviced\" is raised in\r\n   T_DaemonService.T03(), s1 isn't resubscribed. A call to\r\n   t_checkStatus() after the failure therefore hangs waiting for an\r\n   unsubscribed client to be serviced. This causes the time bomb.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-03T18:08:29.000+0000","updated":"2006-07-03T18:08:29.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12418967","id":"12418967","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attached a one-line patch (derby-989-timebomb.diff) which removes the time bomb problem. The patch clears the serviceRecord vector each time runTestSet() is called. The old service records are ignored anyway if the previous iteration of the test was successful, but if a previous iteration has failed, they may cause a hang in t_checkStatus().\r\n\r\nThis patch does not fix the real problem, it only makes the test finish sooner when it fails. The failure will be reported as \"unit test failure\" not \"time bomb\". This is the same message as reported in DERBY-1537.\r\n\r\nDerbyall ran cleanly with the patch. Reviews and comments are appreciated. Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-03T21:17:28.000+0000","updated":"2006-07-03T21:17:28.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419062","id":"12419062","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The attached patch (derby-989-v1.diff) attempts to solve the real\r\nproblem. Derbyall runs cleanly with the patch. I have not been able to\r\nreproduce the bug on single-CPU machines (neither with the patch nor\r\nwithout the patch). On dual-CPU machines I got these results with\r\ndaemonService.unit:\r\n\r\nSolaris without patch: 80 runs - 5 failures\r\nSolaris with patch: 80 runs - 0 failures\r\n\r\nLinux without patch: 80 runs - 2 failures\r\nLinux with patch: 80 runs - 0 failures\r\n\r\nDescription of the patch:\r\n\r\nRight before BasicDaemon invokes performWork(), it now checks (inside\r\na synchronized block) that the client has not unsubscribed.\r\nBasicDaemon.unsubscribe() now has a synchronized block which checks\r\nwhether the client that is about to be unsubscribed is being\r\nserviced. If it is being serviced, unsubscribe() waits until\r\nperformWork() has finished before it returns.\r\n\r\nWith this patch, the behaviour of BasicDaemon.unsubscribe()\r\nchanges. Before, it would always return immediately. Now, it returns\r\nimmediately if the client that wants to unsubscribe is not being\r\nserviced. Otherwise, it waits until the client's performWork() method\r\nhas finished. This means that if performWork() enters a deadlock,\r\nunsubscribe() might never return. I think this is acceptable since the\r\njavadoc for BasicDaemon says:\r\n\r\n  [The] performWork method should be well behaved - in other words, it\r\n  should not take too long or hog too many resources or deadlock with\r\n  anyone else.\r\n\r\nComments?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-04T16:07:31.000+0000","updated":"2006-07-04T16:07:31.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419079","id":"12419079","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andreask","name":"andreask","emailAddress":"andreas dot korneliussen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andreas Korneliussen","active":true},"body":"I have reviewed the code in the patch (derby-989-v1.diff) and would recommend it being committed.\r\nI think it is acceptable that BasicDaemon.unsubscribe() returns after the client has been serviced.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andreask","name":"andreask","emailAddress":"andreas dot korneliussen at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andreas Korneliussen","active":true},"created":"2006-07-04T16:39:51.000+0000","updated":"2006-07-04T16:39:51.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419148","id":"12419148","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks for posting the patch. I think it is good work, and I am persuaded that you\r\nhave the right theory and have identified the right problem to fix. Your explanation\r\nof how this change fixes the problem seems good to me, and your testing results\r\ncertainly show that the patch is effective in removing the problem.\r\n\r\nI'm not very familiar with this code, so these comments are mostly for my own education.\r\n\r\n1) I don't really see why unsubscribe needs to block if it discovers that the service\r\nrecord being unsubscribed is currently performing work. Is this a necessary element\r\nof the fix, or just a side effect of the implementation?\r\n\r\n2) I think that it is dangerous for unsubscribe to ignore interrupts while waiting for\r\nthe service record to complete its work. I think that if unsubscribe gets an interrupt\r\nat this time, it should abandon the wait and return, or it should throw an exception.\r\n\r\n3) Introducing the \"client number\" concept into the service record seems awkward,\r\nas it doesn't seem like a natural part of the service record implementation. Also,\r\ncomparing client numbers as a way to answer the question \"is this service record\r\nalready unsubscribed\" seems somewhat convoluted. Here are two alternate\r\nideas that occurred to me:\r\n - perhaps we could refer to the new Service Record field as a \"unique id\", and have\r\n   an \"equals\" method to compare two ServiceRecord objects, so that we don't\r\n   so directly couple the Client Number concept from Basic Daemon into the\r\n   ServiceRecord class.\r\n - perhaps there should be an \"subscribed\" boolean flag in Service Record, with\r\n   methods \"isSubscribed\" and \"setSubscribed\" so that when Basic Daemon wants\r\n   to ask if a ServiceRecord is already unsubscribed, it could do so directly rather\r\n   then by fetching the client number and testing it against -1 and so forth.\r\n\r\n4) It seems a little odd that BasicDaemon sometimes synchronizes on the \"this\"\r\nobject, and sometimes depends on the fact that \"subscription\" is a Vector and\r\nthus is inherently synchronized. I'm not saying that anything is necessarily wrong here,\r\nit was just a red flag to me that there were two levels of synchronization being used\r\nin the BasicDaemon methods.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-07-04T23:17:53.000+0000","updated":"2006-07-04T23:17:53.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419163","id":"12419163","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thank you Andreas and Bryan for reviewing the patch.\r\n\r\nBryan wrote:\r\n\r\n> 1) I don't really see why unsubscribe needs to block if it discovers\r\n> that the service record being unsubscribed is currently performing\r\n> work. Is this a necessary element of the fix, or just a side effect\r\n> of the implementation?\r\n\r\nIt is a necessary element of the fix. The test case that fails does\r\nthe following (everything not related to the failure stripped away):\r\n\r\n  1 subscribe client\r\n  2 unsubscribe client\r\n  3 save the number of times the client has been serviced\r\n  4 do some other testing\r\n  5 check that the number of times the client has been serviced has\r\n    not increased\r\n\r\nIf unsubscribe() returns while the client is being serviced, parts of\r\nperformWork() might be executed after 3 and before 5. Since\r\nperformWork() is updating the number of times the client has been\r\nserviced, the check in 5 fails. The only way we can guarantee that\r\nperformWork() is not running after 3 is by waiting in unsubscribe().\r\n\r\nHowever, my fix assumes that the test is correct. I don't see anything\r\nin the code/comments saying that performWork() should never be run\r\nafter unsubscribe() has returned. Actually, the javadoc in BasicDaemon\r\nsays\r\n\r\n  Furthermore, any Serviceable subscriptions, including onDemandOnly,\r\n  must tolerate spurrious services.\r\n\r\nThis could mean that the current behaviour is as expected/designed and\r\nthe test should be changed. It should be as easy as changing point 5\r\nto \"check that the number of times the client has been serviced has\r\nnot increased by more than one\".\r\n\r\nDoes anyone have opinions on whether we should fix the Derby code or\r\nthe test? I'm fine with either one of them.\r\n\r\n> 2) I think that it is dangerous for unsubscribe to ignore interrupts\r\n> while waiting for the service record to complete its work. I think\r\n> that if unsubscribe gets an interrupt at this time, it should\r\n> abandon the wait and return, or it should throw an exception.\r\n\r\nI agree. We can't throw an exception because it would break the\r\ncontract of the DaemonService interface, but I think it's reasonable\r\nto abandon the wait and return.\r\n\r\n> 3) Introducing the \"client number\" concept into the service record\r\n> seems awkward, as it doesn't seem like a natural part of the service\r\n> record implementation. Also, comparing client numbers as a way to\r\n> answer the question \"is this service record already unsubscribed\"\r\n> seems somewhat convoluted. Here are two alternate ideas that\r\n> occurred to me:\r\n>  - perhaps we could refer to the new Service Record field as a\r\n>  \"unique id\", and have an \"equals\" method to compare two\r\n>  ServiceRecord objects, so that we don't so directly couple the\r\n>  Client Number concept from Basic Daemon into the ServiceRecord\r\n>  class.\r\n\r\nI don't think we need to have decoupling of ServiceRecord from\r\nBasicDaemon as a goal. ServiceRecord is a package protected class and\r\nits only purpose is to aid the implementation of BasicDaemon. It is\r\npurely an implementation detail of BasicDaemon, and it is not related\r\nto the DaemonService interface in any way.\r\n\r\n>  - perhaps there should be an \"subscribed\" boolean flag in Service\r\n>  Record, with methods \"isSubscribed\" and \"setSubscribed\" so that\r\n>  when Basic Daemon wants to ask if a ServiceRecord is already\r\n>  unsubscribed, it could do so directly rather then by fetching the\r\n>  client number and testing it against -1 and so forth.\r\n\r\nI agree that this sounds cleaner. Thanks for the tip!\r\n\r\n> 4) It seems a little odd that BasicDaemon sometimes synchronizes on\r\n> the \"this\" object, and sometimes depends on the fact that\r\n> \"subscription\" is a Vector and thus is inherently synchronized. I'm\r\n> not saying that anything is necessarily wrong here, it was just a\r\n> red flag to me that there were two levels of synchronization being\r\n> used in the BasicDaemon methods.\r\n\r\nI'm not a fan of this either. However, in this case it seems like the\r\nvector synchronization and the \"this\" synchronization guard different\r\nparts of the state. Synchronization on \"this\" ensures that the state\r\ncontrolling the wait() loops is consistent, and the vector\r\nsynchronization ensures that concurrent modifications of the vector\r\ndon't interfere with each other. There is probably a cleaner way to\r\nimplement BasicDaemon, but that would be outside the scope of this\r\npatch, I think.\r\n\r\n\r\n\r\nThanks for all your comments! I will wait for comments on my question\r\nabout whether this is a test issue or a code issue before submitting a\r\nnew patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-05T01:27:52.000+0000","updated":"2006-07-05T01:27:52.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419272","id":"12419272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"derby-989-testfix.diff is an alternative solution. This patch only changes what the test expects, not the behaviour of Derby. With this patch, the test allows the client to be serviced once after it has called unsubscribe().\r\n\r\nDerbyall runs cleanly with the patch, and I'm not able to reproduce the failure in daemonService.unit.\r\n\r\nComments/opinions on which solution to choose would be greatly appreciated. Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-05T20:21:32.000+0000","updated":"2006-07-05T20:21:32.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419356","id":"12419356","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Hi Knut, \r\n\r\nThanks for looking into this failure. I took a quick look at your changes,patch looks  good.  \r\n Only minor thing I noticed is :\r\n\r\nIn work() method is getting assing to the current service record:\r\n+\t\tif ((work.getClientNumber() >= 0) &&\r\n+\t\t\t(subscription.elementAt(work.getClientNumber()) == null)) {\r\n+\t\t\t/ DERBY-989: client has unsubscribed, skip it\r\n+\t\t\tcontinue;\r\n+\t\t}\r\n+\t\t\t\tcurrentlyBeingServiced = work;\r\n\t}\r\n\r\nI think the statement \"currentlyBeingServiced = work\"  can be set only when\r\nclientNumber > 0 ; in other cases anyway it is not being used; As I understantd\r\nthis patch is fixing only subscribe/unsubscribe type requests. \r\n\r\n\r\nI am also bit confused about what should be correct contract of \r\nunsubscribe() method  should be.  I looked at the derby code \r\nlittle bit for cases where unsubcribe() call makes  performWork() in \r\nexecution for that client throws weird errors.  One thing I noticed \r\nis BasicDaemon:stop() method is called either before the unsubscribe() \r\nmethod calls or  immediately after it. stop() method waits for work \r\nin progress to complete.\r\n\r\nNot sure if this patch will prevent any new issues, that is not addressed\r\nby calling the daemon stop() method. My choice would be to fix the test, \r\nunless some one finds a problem in the engine code with usage of \r\nunsubcribe() method. \r\n\r\nThanks\r\n-suresh\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-07-06T06:01:39.000+0000","updated":"2006-07-06T06:01:39.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419434","id":"12419434","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for your comments, Suresh! I think I will just fix the test for now since it doesn't seem like the current behaviour of BasicDaemon causes any real problems, and it's not clear that unsubscribe() breaks its contract.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-06T14:47:10.000+0000","updated":"2006-07-06T14:47:10.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419437","id":"12419437","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed derby-989-timebomb.diff and derby-989-testfix.diff into trunk with revision 419479.\r\n\r\nI will also update the javadoc for BasicDaemon (and possibly DaemonService). Thanks for the suggestion, Mike.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-06T15:11:21.000+0000","updated":"2006-07-06T15:11:21.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419671","id":"12419671","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attaching a patch which updates the javadoc for DaemonService and BasicDaemon with information about the case where unsubscribe() is called when the client is being serviced.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-07T16:40:20.000+0000","updated":"2006-07-07T16:40:20.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12419718","id":"12419718","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Javadoc looks great; thanks for following up on this. I feel that fixing the test and fixing the javadoc in this way is a good resolution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2006-07-07T21:10:25.000+0000","updated":"2006-07-07T21:10:25.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12420008","id":"12420008","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thank you for looking at the patch, Bryan! Committed 'derby-989-javadoc.diff' into trunk with revision 420465.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-07-10T16:07:18.000+0000","updated":"2006-07-10T16:07:18.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12442101","id":"12442101","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"body":"This diff is seen on 10.1.3.2 codeline also.   Does it make sense to backport this fix to 10.1 codeline ? \r\n\r\nThanks. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"created":"2006-10-13T21:45:42.000+0000","updated":"2006-10-13T21:45:42.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12328999/comment/12442269","id":"12442269","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Patch merged cleanly from trunk. Test passes. Committed into 10.1 with revision 463899.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2006-10-14T08:15:12.000+0000","updated":"2006-10-14T08:15:12.000+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-989/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06z1z:"}}