{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12311781","self":"https://issues.apache.org/jira/rest/api/latest/issue/12311781","key":"DERBY-407","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2005-07-26 03:12:33.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"21937","customfield_12310222":"1_*:*_1_*:*_31452084000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_43000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-06-29T06:56:13.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-407/watchers","watchCount":1,"isWatching":false},"created":"2005-06-30T06:14:49.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/10993","id":"10993","description":"","name":"10.1.1.0","archived":false,"released":true,"releaseDate":"2005-08-03"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T18:09:06.077+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11413","id":"11413","name":"Test"}],"timeoriginalestimate":null,"description":"The predicatesIntoViews test (part of the derbylang suite) fails when running the tests on a busy/slow system, but they pass when I run them on my fast Windows box.\n\nIt appears that the failure could be due to different optimizations being performed due to the difference in speed of the machines.  This needs to be confirmed that it is the case of the test failure.  I will attach the test summary to this issue.\n\nI also noticed that the test report said 0% fail even though one test failed. \n\nAll derbylang tests passed on Windows XP. \n\nThanks, \n\nJohn ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37145","summary":"predicatesIntoViews test failure on slow machine in Derby 10.1 branch version 201931","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=johnrsisson","name":"johnrsisson","emailAddress":"jsisson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sisson","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=johnrsisson","name":"johnrsisson","emailAddress":"jsisson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sisson","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Java Version:    1.4.2_04\nJava Vendor:     Hewlett-Packard Company\nJava home:       /usr/tandem/java/jre\nJava classpath:  /home/john/j2ee/derbyTests/derby-10.1-branch/jars/derby.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbytools.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbynet.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyclient.jar:/home/john/j2ee/derbyTests/common-jars/db2jcc.jar:/home/john/j2ee/derbyTests/common-jars/db2jcc_license_c.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyTesting.jar:/home/john/j2ee/derbyTests/common-jars/jakarta-oro-2.0.8.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_de_DE.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_es.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_fr.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_it.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_ja_JP.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_ko_KR.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_pt_BR.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_zh_CN.jar:/home/john/j2ee/derbyTests/derby-10.1-branch/jars/derbyLocale_zh_TW.jar:/usr/tandem/java/lib/classes.zip:/usr/tandem/javaextv20/lib/tdmext.jar:/usr/tandem/jdbcMp/current/lib/sqlmp.jar:/usr/tandem/jdbcMx/current/lib/jdbcMx.jar:.\nOS name:         NONSTOP_KERNEL\nOS architecture: mips\nOS version:      G06\nJava user name:  SUPER.JOHN\nJava user home:  /home/john\nJava user dir:   /home/john/j2ee/derbyTests/derby-10.1-branch/testOutput\njava.specification.name: Java Platform API Specification\njava.specification.version: 1.4","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":7,"total":7,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12311781/comment/12314702","id":"12314702","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=johnrsisson","name":"johnrsisson","emailAddress":"jsisson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sisson","active":true},"body":"derbylang_report.txt attached.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=johnrsisson","name":"johnrsisson","emailAddress":"jsisson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sisson","active":true},"created":"2005-06-30T06:17:02.000+0000","updated":"2005-06-30T06:17:02.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12311781/comment/12314703","id":"12314703","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=johnrsisson","name":"johnrsisson","emailAddress":"jsisson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sisson","active":true},"body":"Mail from Myrna on derby-dev:\r\n\r\nHi John,\r\n \r\nWe've been seeing an intermittent failure with this test with some of the jvms we run against on a slow machine.\r\nIt appears the test is not 'tight' enough to always pass on slower machines - sometimes one of the queries results in a table scan, sometimes an index scan. \r\nI can't right now remember if there is a JIRA_CASE for it. If not, it wouldn't harm. \r\n \r\nThere was a bug filed at one point for the summary calculation being wrong, but it looks like it was not fixed entirely - I think I saw that the sub-suites seem to get it right, but derbyall doesn't?\r\nI wanted to check into this, but never got around to it. A new bug would be good as a reminder...\r\n \r\nMyrna","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=johnrsisson","name":"johnrsisson","emailAddress":"jsisson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sisson","active":true},"created":"2005-06-30T06:20:59.000+0000","updated":"2005-06-30T06:20:59.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12311781/comment/12314704","id":"12314704","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=johnrsisson","name":"johnrsisson","emailAddress":"jsisson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sisson","active":true},"body":"Note that I wasn't running the derbyall suite, I was running derbylang.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=johnrsisson","name":"johnrsisson","emailAddress":"jsisson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sisson","active":true},"created":"2005-06-30T06:22:23.000+0000","updated":"2005-06-30T06:22:23.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12311781/comment/12316675","id":"12316675","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"If you trim out the extra lines of the diff, the failure comes\r\ndown to the following difference in query plan (this is just one\r\ntiny part of a very large query plan):\r\n\r\nMaster file --\r\n\r\n\tLeft result set  = Table scan on CLASSIFICATION_VALUES (chosen by the optimizer)\r\n\tRight result set = Hash scan on REPOSITORYOBJECTRESOURCE\r\n\r\nActual (when the test fails) --\r\n\r\n\tLeft result set = Index scan on REPOSITORYOBJECTRESOURCE (chosen by the optimizer)\r\n\tRight result set = Hash scan on CLASSIFICATION_VALUES\r\n\r\nI don't know enough about how the optimizer works to know\r\nif one of these plans is inherently \"better\" than the other\r\n(I think it depends on how many rows are in the underlying\r\ntables).  However, I have confirmed (through discussion with\r\nMike Matrigali) that the plan chosen by the optimizer _can_\r\nbe affected by the speed of the machine.  Internally,\r\nthe optimizer does a check to make sure that\r\nit doesn't spend too much time trying to find the best\r\nquery plan--and it will do a \"timeout\" if it thinks it's\r\ntaking too long.  In particular, if the optimizer has\r\nalready spent more time choosing a query plan than it\r\nthinks the best query plan so far is going to take to\r\nexecute, the optimizer will stop looking at plans and\r\njust use the best plan so far.\r\n\r\nWhat this means is that, on a faster machine, the\r\noptimizer can potentially see more query plans before\r\ntiming out than it would on a slower machine--and thus\r\nit might find a better plan on the faster machine.\r\n\r\nSo far as I can tell, that's what's happening with this\r\npredicatesIntoViews failure.  While trying to prove this\r\npoint, I noticed that there is an undocumented user\r\nproperty called \"derby.optimizer.noTimeout\" that keeps\r\nthe optimizer from timing out--i.e. the optimizer will process\r\nALL query plans and then pick the best one, regardless\r\nof how long it takes to do so.  When I set this property\r\nto true and ran the test, it passed 100% of the time,\r\nregardless of the speed of my CPU.\r\n\r\nThat said, I think an initial work-around for this problem\r\nis to set the derby.optimizer.noTimeout property for this\r\ntest to true (using the harness).  That should allow the\r\ntest to pass on a consistent basis until someone can\r\nlook further at the massive query plan to see what's\r\nhappening and to determine if this particular failure\r\nis an optimizer bug (see notes below) or is just\r\n'working as designed'.\r\n\r\n\r\n-----------\r\nOther notes\r\n-----------\r\n\r\nWhile investigating this failure, I noticed a couple of\r\nbehavioral oddities that could potentially help to\r\ndetermine if this is an optimizer bug.  I'm including\r\nthem here for tracking purposes.  Note that these\r\nbehaviors are only relevant if the noTimeout property\r\nis NOT set (if it _is_ set, then the test will always\r\npass, regardless of what I describe below).\r\n\r\n1) In an attempt to debug the failure, I added a bunch\r\nof \"select count(*)\" queries to the test to see how\r\nlarge the tables used by the query plan were, and also\r\nto see how large the result set of the query was.  As it\r\nturned out, adding such queries caused the test to\r\nconsistently choose the second query plan listed above--\r\ni.e. the \"fail\" plan--regardless of the speed of my\r\nCPU.  The specific queries I added are these\r\n(I added them just before execution of the query\r\nthat's seeing the diff):\r\n\r\n  SELECT COUNT(*) FROM XR.CLASSIFICATION_VALUES;\r\n  SELECT COUNT(*) FROM XR.REPOSITORYOBJECTRESOURCE;\r\n  SELECT COUNT(*) FROM XR.REPOSITORYOBJECTALLVERSIONVIEW;\r\n  SELECT count(*)\r\n  FROM xr.repositoryobjectallversionview rov \r\n  where (uname = UPPER('two') or uname = UPPER('my project'))\r\n  and (versionid in\r\n      (select versionid\r\n       from xr.versionlabel\r\n       where UPPER(label) = UPPER('Snapshot')))\r\n    and deletedate is null;\r\n\r\nIt would appear that executing these SELECT COUNT(*)\r\nqueries causes some internal state/statistics to be\r\nupdated, which in turn results in a different query\r\nplan than what the test usually expects (even on faster\r\nmachines).  But if that's the case, then it seems (to me)\r\nlike the updated state/statistics should cause the\r\noptimizer to choose a _better_ plan than what it would\r\notherwise choose--so it's not clear to me what's going\r\non there.  Perhaps the updated state/statistics are\r\nincorrect or are being handled incorrectly, causing\r\nthe optimizer to choose the wrong query plan...?\r\n\r\n2) If I leave noTimeout set to false (its default) and\r\ndo NOT add the \"select count(*)\" queries mentioned above,\r\nbut I add system shutdown/reconnect logic to the test just\r\nbefore executing the query in question, then the test\r\npasses regardless of how fast/slow my CPU is.  Mike\r\nMatrigali suggested that this is because system shutdown\r\ncauses all state/row counts to be flushed to disk, so\r\nreconnecting and then executing the query might allow the\r\noptimizer to use the latest state/row counts to find\r\nthe best plan.  Of course, if that's true then it seems\r\nlike we'd have at least a slight contradiction to the\r\nbehavior described in #1 above, where updated stats/row\r\ncounts are causing the test to _fail_.\r\n\r\nNote that if the \"select count(*)\" queries are included\r\nin the test, then the test will fail regardless of\r\nwhether or not we shutdown/reconnect.\r\n\r\nThe interaction between these behaviors and the noTimeout\r\nflag can be summarized as follows.\r\n\r\nLet \"TO\" correspond to a noTimeout property that is TRUE.\r\n  Then \"!TO\" is a noTimeout property that is FALSE (the\r\n  default).\r\n\r\nLet \"SC\" correspond to the presence of \"select count(*)\"\r\n queries in the test.  Then \"!SC\" means that such queries\r\n are NOT included.\r\n\r\nLet \"SH\" correspond to the presence of shutdown/reconnect\r\n logic in the test.  Then \"!SH\" means that such logic is\r\n is NOT included.\r\n\r\nThen we have the following behavior (at least, on my own\r\nlaptop):\r\n\r\n!TO && !SC && !SH ==> Intermittent failure on slower machines.\r\n!TO && !SC &&  SH ==> Test passes regardless of CPU speed.\r\n!TO &&  SC && !SH ==> Test fails regardless of CPU speed.\r\n!TO &&  SC &&  SH ==> Test fails regardless of CPU speed.\r\n TO && !SC && !SH ==> Test passes regardless of CPU speed.\r\n TO && !SC &&  SH ==> Test passes regardless of CPU speed.\r\n TO &&  SC && !SH ==> Test passes regardless of CPU speed.\r\n TO &&  SC &&  SH ==> Test passes regardless of CPU speed.\r\n\r\nAgain, I'm not sure how much of this information is\r\nrelevant info, but since these are all things I noticed\r\nwhile investigating the problem, I'm including them\r\nfor the sake of completeness/tracking, in case they'll\r\nsave someone some time in the future...\r\n\r\nIn the end, since setting noTimeout to TRUE seems like\r\nthe simplest and most reliable way to get the test to\r\npass on a consistent basis, that is what I'm proposing \r\nas a tempory workaround until further investigation can \r\nbe carried out.  I will post a patch to do that shortly.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2005-07-26T03:12:33.000+0000","updated":"2005-07-26T03:12:33.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12311781/comment/12316707","id":"12316707","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Attaching a simple patch to set the \"derby.optimizer.noTimeout\" property to true for the predicatesIntoViews test.  Before applying this patch, I set the CPU speed on my laptop to \"very slow\" and ran the test 10 times; it failed every time.  After applying this workaround patch, I ran the test 10 more times and it passed every time.  Per my earlier comments, this isn't necessarily a \"fix\" for the problem, but it's a workaround that will allow the test to pass until someone is able to look more closely at this test and figure out what the optimizer is doing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2005-07-26T07:49:01.000+0000","updated":"2005-07-26T07:49:01.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12311781/comment/12317146","id":"12317146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bandaram","name":"bandaram","emailAddress":"bandaram at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Satheesh Bandaram","active":true},"body":"Submitted this patch. Thanks for good research and for taking time to explain the research!\r\n\r\nSending        java\\testing\\org\\apache\\derbyTesting\\functionTests\\tests\\lang\\predicatesIntoViews_derby.properties\r\nTransmitting file data .\r\nCommitted revision 226308.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bandaram","name":"bandaram","emailAddress":"bandaram at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Satheesh Bandaram","active":true},"created":"2005-07-29T09:25:03.000+0000","updated":"2005-07-29T09:25:03.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12311781/comment/12418343","id":"12418343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"The derby.optimizer.noTimeout workaround (as commited almost a year ago) allows this test to run without failure and seems like the appropriate fix (different machines will optimize at different speeds, so it makes sense that optimizer \"timeout\" could lead to different plans--the best way to avoid this is to disable optimizer timeout, as is also done in other tests that print query plans).  So I'm marking this issue as resolved and closing it.\r\n\r\nIf anyone would like to do followup investigation at a later time, s/he should feel free to file another Jira issue and proceed there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-06-29T06:56:13.000+0000","updated":"2006-06-29T06:56:13.000+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-407/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06pzr:"}}