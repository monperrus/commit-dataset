{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12377603","self":"https://issues.apache.org/jira/rest/api/latest/issue/12377603","key":"DERBY-3057","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-09-06 23:05:17.305","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23402","customfield_12310222":"1_*:*_1_*:*_680855685_*|*_6_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-09-13T17:30:25.151+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3057/watchers","watchCount":0,"isWatching":false},"created":"2007-09-05T20:22:49.466+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-06-29T22:58:03.585+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11413","id":"11413","name":"Test"}],"timeoriginalestimate":null,"description":"testTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest) failed:\njava.lang.NoSuchMethodError: java/lang/String.matches(Ljava/lang/String;)Z\n\tat org.apache.derbyTesting.junit.JDBC$GeneratedId.equals(JDBC.java:49)\n\tat org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:871)\n\tat org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:779)\n\tat org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:717)\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertFunctionDBMD(TableFunctionTest.java:1154)\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.simpleDDL(TableFunctionTest.java:888)\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.testTableFunctions(TableFunctionTest.java:782)\n\tat java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)\n\tat java.lang.reflect.Method.invoke(Method.java:253)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat TimeRunner.main(TimeRunner.java:31)\n47\ttestTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38924","summary":"with weme 6.1 testTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest) failed: java.lang.NoSuchMethodError: java/lang/String.matches(Ljava/lang/String;)Z","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":5,"total":5,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377603/comment/12525550","id":"12525550","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I prodded this a little, and modified the method 'equals()' in JDBC$GeneratedID to look like this:\r\n\r\n-------------\r\n        public boolean equals(Object o) {\r\n        // unless JSR169, use String.matches...\r\n        \tif (JDBC.vmSupportsJDBC3()) \r\n        \t{\r\n        \t\treturn o instanceof String &&\r\n        \t\t((String) o).matches(\"SQL[0-9]{15}\");\r\n        \t}\r\n        \telse\r\n        \t{\r\n        \t\tString tmpstr = (String)o;\r\n        \t\tboolean b = true;\r\n        \t\tif (!(o instanceof String))\r\n        \t\t\tb = false;\r\n        \t\tif (!(tmpstr.startsWith(\"SQL\")))\r\n        \t\t\tb = false;\r\n        \t\tif (tmpstr.length() != 18)\r\n        \t\t\tb = false;\r\n        \t\tfor (int i=3 ; i<18 ; i++)\r\n        \t\t{\r\n        \t\t\tif (Character.isDigit(tmpstr.charAt(i)))\r\n        \t\t\t\tcontinue;\r\n        \t\t\telse\r\n        \t\t\t{\r\n        \t\t\t\tb = false;\r\n        \t\t\t\tbreak;\r\n        \t\t\t}\r\n        \t\t}\r\n        \t\treturn b;\r\n        \t}\r\n        }\r\n-------------------------------------\r\n\r\nAnd that does get around the problem that matches() is not available with JSR169.\r\n\r\nHowever, I then get the following stack trace upon running the test:\r\n\r\n-------------------------------------\r\n.java.sql.SQLException: Feature not implemented: {0}.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)\r\n\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:202)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1572)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)\r\n\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(EmbedResultSet.java:4320)\r\n\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:464)\r\n\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:368)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1245)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1070)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.allLegalDatatypesVTIResults(TableFunctionTest.java:986)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.testTableFunctions(TableFunctionTest.java:786)\r\n\tat java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)\r\n\tat java.lang.reflect.Method.invoke(Method.java:253)\r\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\r\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)\r\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\r\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\r\n\tat junit.framework.TestResult.run(TestResult.java:109)\r\n\tat junit.framework.TestCase.run(TestCase.java:118)\r\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\r\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\r\n\tat junit.textui.TestRunner.doRun(TestRunner.java:116)\r\n\tat junit.textui.TestRunner.start(TestRunner.java:172)\r\n\tat junit.textui.TestRunner.main(TestRunner.java:138)\r\nCaused by: ERROR 0A000: Feature not implemented: {0}.\r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:280)\r\n\tat org.apache.derby.iapi.types.BinaryDecimal.setValueFromResultSet(BinaryDecimal.java:690)\r\n\tat org.apache.derby.impl.sql.execute.VTIResultSet.populateFromResultSet(VTIResultSet.java:559)\r\n\tat org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCore(VTIResultSet.java:335)\r\n\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:463)\r\n\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:424)\r\n\t... 19 more\r\nAnd:\r\nF\r\nTime: 2.75\r\nThere was 1 failure:\r\n1) testTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)junit.framework.AssertionFailedError: Unexpected exception: java.sql.SQLException: Feature not implemented: {0}.\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.unexpectedThrowable(TableFunctionTest.java:1446)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1077)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.allLegalDatatypesVTIResults(TableFunctionTest.java:986)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.testTableFunctions(TableFunctionTest.java:786)\r\n\tat java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)\r\n\r\nAre the VTI's even supposed to work with JSR169? \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2007-09-06T23:05:17.305+0000","updated":"2007-09-06T23:05:17.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377603/comment/12526603","id":"12526603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I'm attaching a patch, which \r\n1. implements the same functionality as JDBC.matches() for JSR169\r\n    I verified this works by having the elaborate if be the code executed for jdk14 and running the test TableFuncionTest; that worked. \r\n2. placing an if (JDBC.vmsupportJDBC3()) around a ResultSet.getBigDecimal() in TableFunctionTest - this would give a method not found with JSR169\r\n3. attempting to implement BinaryDecimal.setValueFromResultSet.\r\n\r\nI have most doubts about item 3 - I implemented the method as:\r\n+\tdata2c = resultSet.getBytes(colNumber);\r\n+\tsqlScale=0;\r\nBut although this seems to work for J2ME/JSR169, I have strong doubts. Basically, I have little understanding of what this method should do, and I'm not sure that it's enough to just get the bytes. Is it necessary to do some of the manipulations found in this class to compress the bytearray obtained?\r\n\r\nI'm also not clear on why this method wasn't implemented, and I've not done much investigation in identifying where the j9/j2ME jvm chooses a different code path than e.g. jdk142.\r\n\r\nFeedback on this patch is appreciated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2007-09-11T21:02:17.896+0000","updated":"2007-09-11T21:02:17.896+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377603/comment/12526826","id":"12526826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"3) is wrong, it's not caught by the test since 2) disables the check that would catch it.\r\n\r\nFor 2) the assert should be implemented for JSR169, in this case using getString() to obtain the String is sufficient.\r\n\r\nFor 3) fetching a DECIMAL in JSR 169 requires a getString() (since getBigDecimal) is not implemented.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-09-12T15:46:45.902+0000","updated":"2007-09-12T15:46:45.902+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377603/comment/12526872","id":"12526872","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I hope I understood the clues. Another review will be appreciated...\r\n\r\nThe javadoc for class BinaryDecimal mentioned a class CDCDecimal.\r\nI *think* this was never implemented, or it has been implemented as BigIntegerDecimal? (At least, the only consumer of BinaryDecimal appears to be BigIntegerDecimal...)\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2007-09-12T18:01:25.667+0000","updated":"2007-09-12T18:01:25.667+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377603/comment/12527193","id":"12527193","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I made one minor additional change to BinaryDecimal.java; I replaced the reference to CDCDecimal with BigIntegerDecimal, and committed.\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2007-09-13T17:30:25.140+0000","updated":"2007-09-13T17:30:25.140+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3057/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i070z3:"}}