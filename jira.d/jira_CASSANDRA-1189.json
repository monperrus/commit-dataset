{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12466920","self":"https://issues.apache.org/jira/rest/api/latest/issue/12466920","key":"CASSANDRA-1189","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310865","id":"12310865","key":"CASSANDRA","name":"Cassandra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310865&avatarId=12034","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310865&avatarId=12034","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310865&avatarId=12034","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310865&avatarId=12034"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11961","id":"11961","description":"Apache Cassandra related projects","name":"Cassandra"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315251","id":"12315251","description":"","name":"0.7 beta 2","archived":false,"released":true,"releaseDate":"2010-10-01"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2010-07-09 19:11:39.923","customfield_12312322":null,"customfield_12312323":null,"customfield_12310222":"10002_*:*_1_*:*_793221761_*|*_1_*:*_1_*:*_3792632722_*|*_5_*:*_1_*:*_0","customfield_12310420":"27972","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2010-08-06T20:38:39.085+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-1189/watchers","watchCount":3,"isWatching":false},"created":"2010-06-14T18:47:44.602+0000","customfield_10022":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12311124":null,"customfield_12312334":null,"customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12333267","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12333267","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"inwardIssue":{"id":"12469204","key":"CASSANDRA-1278","self":"https://issues.apache.org/jira/rest/api/2/issue/12469204","fields":{"summary":"Make bulk loading into Cassandra less crappy, more pluggable","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-02T02:29:29.818+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312978","id":"12312978","name":"Core"}],"timeoriginalestimate":null,"description":"The current architecture is buggy because it makes the assumption that only one stream can be in process between two nodes at a given time, and stream send order never changes.  Because of this, the ACK process gets fouled up when other services wish to stream files.\r\n\r\nThe process is somewhat contorted too (request, initiate, initiate done, send).","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12450837","id":"12450837","filename":"0001-Refactored-streaming-to-make-it-more-streamlined.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-07-29T15:51:54.145+0000","size":89773,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12450837/0001-Refactored-streaming-to-make-it-more-streamlined.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12451164","id":"12451164","filename":"0002-Test-cases-for-Streaming-Messages.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-08-03T21:37:01.790+0000","size":13109,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12451164/0002-Test-cases-for-Streaming-Messages.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12451176","id":"12451176","filename":"0003-1189-Fixes-v1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-08-03T23:15:02.462+0000","size":34513,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12451176/0003-1189-Fixes-v1.patch"}],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"92004","summary":"Refactor streaming","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gdusbabek","name":"gdusbabek","emailAddress":"gdusbabek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gdusbabek&avatarId=10070","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gdusbabek&avatarId=10070","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gdusbabek&avatarId=10070","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gdusbabek&avatarId=10070"},"displayName":"Gary Dusbabek","active":true},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gdusbabek","name":"gdusbabek","emailAddress":"gdusbabek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gdusbabek&avatarId=10070","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gdusbabek&avatarId=10070","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gdusbabek&avatarId=10070","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gdusbabek&avatarId=10070"},"displayName":"Gary Dusbabek","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"customfield_12311420":null,"customfield_12311421":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":12,"total":12,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12886839","id":"12886839","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"body":"I'm just reiterating the current code to help in refactoring decisions. \r\n- Stream_Request is invoked from StorageService during init and decommission on nodes and in AntiEntropyService to perform streaming repair. \r\n- Destination invokes STREAM_REQUEST (Compiles a set of ranges that it needs from the source)\r\n- Source responds with STREAM_INITIATE (Prepares the request ranges and sends a list of pending files)\r\n- Destination acknowledge with STREAM_INITIATE_DONE (Adds to list of pending files per node)\r\n- Source  starts streaming the first file from the list of files it has prepared for that Destination node.\r\n- Destination receives the file returns a Stream_Status.\r\n- Source based on status, restreams file or streams the next file until complete.\r\n\r\nLimitations:\r\n- Source can transfer multiple streams, but only one per destination node.\r\n- Destination can receive multiple streams, but again only one per source node.\r\n- The ack process for pending files breaks for multiple streams or overlapping streams.\r\n- List of pending files streamed needs to be in order, the current scheme maintains that order\r\n- No session maintained on a per stream basis, session is loosely based on node.\r\n- Each streamed file has no header to describe the file, that metadata was transferred during STREAM_INITIATE and the destination goes off that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-07-09T19:11:39.923+0000","updated":"2010-07-09T19:11:39.923+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12890762","id":"12890762","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"body":"Here's some proposed changes, please comment with feedback. There are two occurrences of streaming: \r\n\r\nSource transfers to Destination (Anti-entropy repair, node decommission, possibly bulk import)\r\n- In each of the cases source has a list of sstable files it needs to transfer to the destination.\r\n- Source maintains a list of all the files, source creates a session id for transferring this set of files.\r\n- Source streams the first file, header contains a new StreamHeader, that has the PendingFile info embedded. \r\n- Destination receives the stream, it has all the info for the file, once done responds with a StreamStatus message.\r\n- If StreamStatus is success, Source continues with next file, if not retransfer until all files are complete.\r\n\r\n(Approach 1) Destination requests from Source (Anti-entropy repair, bootstrap, possibly bulk export)\r\n- Destination complies list of ranges and sends a StreamRequest message to Source, it attaches a session id to keep track of the request.\r\n- Source based on the ranges compiles a list of PendingFile's and sends a StreamRequestResponse message with the list of files.\r\n- Destination now has the list of files to maintain state.\r\n- Destination sends a StreamRequest for a file from the list, it has a session id and file descriptor info attached. \r\n- Source Streams the file to Destination. \r\n- Destination based on the transfer status, requests the next file or re-requests the same file, until all files are transferred. \r\n\r\n(Approach 2) Destination requests from Source (Anti-entropy repair, bootstrap, possibly bulk export)\r\n- Destination complies list of ranges and sends a StreamRequest message to Source, it attaches a session id to keep track of the request.\r\n- Source compiles list of PendingFile's from requested ranges. Source maintains state. \r\n- Source Streams file 1 with attached StreamHeader.\r\n- Destination receives file and responds with a StreamStatus. \r\n- Source based on status transfers the next file or re-transfers the same file. \r\n\r\nChanges to Protocol for File Streaming:\r\n- Current -> | Protocol magic | Header | Body (File contents) |\r\n- Proposed -> | Protocol magic | Header | StreamHeader size | StreamHeader | Body (File contents) |\r\n- The protocol for all other Message's remain the same, the format remains the same, the content will vary.\r\n\r\nEffects of the mentioned changes:\r\n- There can be multiple transfers per source and destination.\r\n- No order of files is required, prevents overlapping streams from breaking anything.\r\n- Other services can transfer files without a problem. \r\n- Initiate and Initiate Done will be removed. A little cleaner process. \r\n- Facilitates for adding a layer on top to do bulk imports/exports.\r\n\r\nQuestions:\r\n- The current streaming does not seem to maintain persistant state if a node fails during streaming, would that be something that needs to be considered. \r\n- Do we want to add checksums?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-07-21T16:13:48.510+0000","updated":"2010-07-21T16:13:48.510+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12890794","id":"12890794","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gdusbabek","name":"gdusbabek","emailAddress":"gdusbabek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gdusbabek&avatarId=10070","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gdusbabek&avatarId=10070","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gdusbabek&avatarId=10070","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gdusbabek&avatarId=10070"},"displayName":"Gary Dusbabek","active":true},"body":"This looks good.\r\n\r\nI think both approaches 1 and 2 can be combined if you're willing to throw in pending file lists as part of the stream header when the source replies to the initial stream request.  When the destination gets that data (along with the first stream), it can then request specific files that it now knows about.\r\n\r\nIf we can trust TCP I don't think we need checksums.\r\n\r\nIt sounds like we need three basic kinds of messages: request, response and status?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gdusbabek","name":"gdusbabek","emailAddress":"gdusbabek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gdusbabek&avatarId=10070","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gdusbabek&avatarId=10070","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gdusbabek&avatarId=10070","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gdusbabek&avatarId=10070"},"displayName":"Gary Dusbabek","active":true},"created":"2010-07-21T17:53:53.895+0000","updated":"2010-07-21T17:53:53.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12890813","id":"12890813","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"body":"Yes, combining 1 & 2 will work out, reducing that extra message.\r\n\r\nWe'll have the following:\r\n- Stream (The response part, it doesn't use a verb currently and will not going forward too)\r\n- StreamRequest (Reuse the Stream_Request verb)\r\n- StreamStatus (Reuse Stream_Finished verb)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-07-21T18:30:05.294+0000","updated":"2010-07-21T18:30:05.294+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12892994","id":"12892994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"body":"There's a lot of changes in this one. I'll try to explain some of the changes here.\r\n\r\n- Anything to do with StreamInitiate is removed and some of what it does is incorporated in StreamIn and StreamOut. \r\n- StreamContext is added which is InetAddress+sessionId, which acts as the key for all transactions. \r\n- StreamHeader is added, which contains info on each stream as opposed to doing all the initiate stuff.\r\n\r\nTransfers:\r\n- Source maintains the list of files to stream in StreamOutManager. There's one per context.\r\n- Destination doesn't maintain anything except for when the stream is active via StreamInManager.activeStreams.\r\n- Destination sends a FileStatus message for the received stream\r\n\r\nRequests:\r\n- Destination initiates a request context in StreamInManager.\r\n- Source compiles the list of files and adds it to a StreamOutManager, this is just for book-keeping purposes and troubleshooting.\r\n- Source streams first file with header containing info of all the other files.\r\n- Destination maintains the list of files in StreamInManager and takes control from this point.\r\n- Destination requests the next file until done and re-requests on error","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-07-27T23:59:13.201+0000","updated":"2010-07-27T23:59:13.201+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12893670","id":"12893670","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"body":"Updated with some bugfixes and more complete unit tests","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-07-29T15:51:54.328+0000","updated":"2010-07-29T15:51:54.328+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12894179","id":"12894179","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gdusbabek","name":"gdusbabek","emailAddress":"gdusbabek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gdusbabek&avatarId=10070","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gdusbabek&avatarId=10070","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gdusbabek&avatarId=10070","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gdusbabek&avatarId=10070"},"displayName":"Gary Dusbabek","active":true},"body":"I'm still testing and looking at things, but in the interest of getting you some feedback...\r\n* FileStreamTask-no point in keeping a reference to file since it could be had from header.\r\n* StreamHeader-the protected fields should be final. Consider renaming \"transfer\" to something that better indicates the stream was pushed as opposed to requested. \"containsPendingFiles\" could be made redundant by converting to a method that checks for null-ness of \"pending\".\r\n* IncomingStreamReader makes a !=null check in the constructor that is redundant.\r\n* MessageSerDeser is only used by its test.  It can the test can be removed.\r\n* StreamInManager-instance() needs a better name (\"get\" or \"put\"). remove() could be private.\r\n* StreamingRequestTest is not valid. It passes whether or not the streaming has taken place (because it adds the sstables).\r\n* StreamOut-consider renaming open() to something that indicates a flush is happening. transferSSTablesForRequest() could be private. the first debug statement doesn't include a {} for the second parameter.\r\n* StreamRequestMetadata-protected variables should be final. singleFile could be made redundant by replacing with a method that checks for null-ness of file.\r\n* Why doesn't SO.transferSSTablesForRequest enqueue multiple files and have the stream task remove from pending. I think we still have the ordering problem since SOM.removePending still pops the last file.\r\n* calls to SIM.requestFile can be inlined to SI.requestFile\r\n\r\nHaving stream metadata spread across four classes (StreamRequestMetadata, PendingFile, StreamHeader and StreamContext) makes me think that we have more room for simplification.  What do you think?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gdusbabek","name":"gdusbabek","emailAddress":"gdusbabek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gdusbabek&avatarId=10070","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gdusbabek&avatarId=10070","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gdusbabek&avatarId=10070","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gdusbabek&avatarId=10070"},"displayName":"Gary Dusbabek","active":true},"created":"2010-07-30T22:28:17.387+0000","updated":"2010-07-30T22:28:17.387+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12894389","id":"12894389","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"body":"I'll attach a fix with all the suggested changes.\r\n- SO.transferSSTablesForRequest does enqueue files, but not for transfer, it waits on the requesting node to get a file at a time. I think moving the remove to FileStreamTask will put it into one location, instead of StreamRequestVerbHandler and StreamOut. Was that what you had in mind for it?\r\n- For the streaming metadata, we can consolidate StreamRequestMetadata & StreamRequestMessage. The PendingFile contains specific file metadata, StreamContext is used for all stream related messages. StreamHeader is only used with streaming. I'll see how much I can simplify with the first fix and we can proceed from there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-08-01T15:40:45.752+0000","updated":"2010-08-01T15:40:45.752+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12895050","id":"12895050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"body":"Updated most of the suggested changes, I wasn't able to simplify StreamHeader, StreamContext and PendingFile. \r\n\r\nI've run various test for Request & Transfer and seems good, however there was one case when I got an error flushing the SSTable, looks like compaction happened before the file transfer could be completed, on a request. I'm trying to reproduce that, in the meantime here's the patch with updates. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-08-03T21:37:01.896+0000","updated":"2010-08-03T21:37:01.896+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12895080","id":"12895080","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"body":"Fixed the issue with the streaming request. Both the request/transfers are working.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnirmal","name":"rnirmal","emailAddress":"rnirmal at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nirmal Ranganathan","active":true},"created":"2010-08-03T23:15:02.533+0000","updated":"2010-08-03T23:15:02.533+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12896150","id":"12896150","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gdusbabek","name":"gdusbabek","emailAddress":"gdusbabek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gdusbabek&avatarId=10070","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gdusbabek&avatarId=10070","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gdusbabek&avatarId=10070","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gdusbabek&avatarId=10070"},"displayName":"Gary Dusbabek","active":true},"body":"+1.  committed with minor changes and a few comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gdusbabek","name":"gdusbabek","emailAddress":"gdusbabek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gdusbabek&avatarId=10070","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gdusbabek&avatarId=10070","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gdusbabek&avatarId=10070","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gdusbabek&avatarId=10070"},"displayName":"Gary Dusbabek","active":true},"created":"2010-08-06T20:38:39.026+0000","updated":"2010-08-06T20:38:39.026+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12466920/comment/12896363","id":"12896363","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"body":"Integrated in Cassandra #510 (See [http://hudson.zones.apache.org/hudson/job/Cassandra/510/])\r\n    streaming changes. removed and combined several messages. fixed out-of-order bug. introduce stream sessions, stream headers. patch by rnirmal, reviewed by gdusbabek. CASSANDRA-1189\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","emailAddress":"jira at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true},"created":"2010-08-08T13:52:27.939+0000","updated":"2010-08-08T13:52:27.939+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/CASSANDRA-1189/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0g3jj:"}}