{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12383746","self":"https://issues.apache.org/jira/rest/api/latest/issue/12383746","key":"DERBY-3243","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2008-01-24 17:45:22.74","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23516","customfield_12310222":"1_*:*_1_*:*_5605858877_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-02-05T16:13:24.632+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3243/watchers","watchCount":1,"isWatching":false},"created":"2007-12-02T19:02:25.755+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12318983","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12318983","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12387486","key":"DERBY-3365","self":"https://issues.apache.org/jira/rest/api/2/issue/12387486","fields":{"summary":"Network Server stores a duplicate entry in the lob hash map for every lob","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12319007","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319007","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12387658","key":"DERBY-3377","self":"https://issues.apache.org/jira/rest/api/2/issue/12387658","fields":{"summary":"Network Client/Server should use sqlType instead of locator value to determine if lob was sent by locator/value","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12318942","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12318942","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12370325","key":"DERBY-2702","self":"https://issues.apache.org/jira/rest/api/2/issue/12370325","fields":{"summary":"Enable Clob locator support between NetworkServer and NetworkClient and modify tests that experience changed behaviour due to this(enabling Clob Locators).","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png","name":"Sub-task","subtask":true}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:51:10.436+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"}],"timeoriginalestimate":null,"description":"Thanks again to the DERBY developers.\n\nFor my convenience I use the client/server variant of DERBY.  This is where the error occurs.  I have temporarily alleviated the problem for my case by using the embedded version.\n\nI'm forced to use outlook and have built a program which siphons the messages into a derby database (phase 1 -- table has two varchar fields and a clob).  When reading them back (phase 2 -- simple select of all records in no particular order, all 3 attributes), it has developed an exception.  This is a result of data volume.  I have reduced the problem to a single demonstration program.\n\nThis behaviour, and the fact that the error is not a \"DERBY Exception\", but a proper exception coming back from the JDBC call, leads me to the diagnosis that it is a derby network client jdbc problem.\n\nThe problem has been reproduced once by Bryan Pendleton: http://www.nabble.com/IndexOutOfBoundsException-t4926228.html\n\nI'll try to attach the code \"error.java\"; it can also be found on: http://www.os10000.net/error.java\n\nPlease use as follows:\n\njavac -classpath derby.jar:derbynet.jar error.java\njava -cp .:derby.jar:derbynet.jar error\n\nIt will create a directory \"test_db\" and fill it with approx 120mb data.\nThen you will observe the failure. \n\n/* -*- Mode:Java; c-basic-offset:8 -*- */\n\n// --------------------------------------------------------------------------------\n\npublic class error {\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static final int port = 1527;\n\tpublic static final String host = \"127.0.0.1\";\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static void log(String x) { System.out.println(x); };\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static void log_stacktrace(Exception e) {\n                java.io.StringWriter sw = new java.io.StringWriter();\n                java.io.PrintWriter pw = new java.io.PrintWriter(sw);\n                e.printStackTrace(pw);\n                log(sw.toString());\n\t};\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static void start_server() {\n\t\ttry {\n\t\t\torg.apache.derby.drda.NetworkServerControl server =\n\t\t\t\tnew org.apache.derby.drda.NetworkServerControl(java.net.InetAddress.getByName(host),port);\n\t\t\tserver.start(null);\n\t\t\ttry { java.lang.Thread.sleep(5000); } catch (Exception e) { };\n\t\t\tlog(\"started DERBY on host \"+host+\" port \"+Integer.toString(port)+\".\");\n\t\t} catch (Exception e) {\n\t\t\tlog_stacktrace(e);\n\t\t};\n\t};\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static java.sql.Connection con()\n\t\tthrows java.sql.SQLException, java.lang.ClassNotFoundException {\n\t\tClass.forName(\"org.apache.derby.jdbc.ClientDriver\");\n\t\tString x_dbse = \"test_db\";\n\t\tString x_user = \";user=os10000\";\n\t\tString x_pass = \";password=ding\";\n\t\tString x_crte = \";create=true\";\n\t\tString x_msgs = \";retrieveMessagesFromServerOnGetMessage=true\";\n\t\tString connect = \"jdbc:derby://\"+host+\":\"+port+\"/\"+x_dbse+x_user+x_crte+x_msgs;\n\t\treturn java.sql.DriverManager.getConnection(connect);\n\t};\n\n\t// ----------------------------------------------------------------------\n\n\tpublic static String getclob(java.sql.Clob b) {\n\t\tjava.io.CharArrayWriter caw = new java.io.CharArrayWriter();\n\t\ttry {\n\t\t\tjava.io.Reader rd = b.getCharacterStream();\n\t\t\tchar cb[] = new char[4096];\n\t\t\tint off=0, bts = rd.read(cb);\n\t\t\twhile (bts>0) { caw.write(cb,off,bts); off+=bts; bts=rd.read(cb); };\n\t\t\trd.close();\n\t\t} catch(Exception e) {};\n\t\tString res = caw.toString();\n\t\tcaw.close();\n\t\treturn res;\n\t};\n\n\t// ----------------------------------------------------------------------\n\n\tpublic static class myclob implements java.sql.Clob {\n\t\tString v;\n\t\tpublic myclob(String z) { v=z; };\n\t\tpublic java.io.InputStream getAsciiStream() { return new java.io.ByteArrayInputStream(v.getBytes()); };\n\t\tpublic java.io.Reader getCharacterStream() { return new java.io.CharArrayReader(v.toCharArray()); };\n\t\tpublic String getSubString(long pos, int length) { return v.substring((int)pos,(int)(pos+length)); };\n\t\tpublic long length() { return v.length(); };\n\t\tpublic long position(java.sql.Clob pattern, long start) { return 0; };\n\t        public long position(String pattern, long start) { return 0; };\n\t\tpublic java.io.OutputStream setAsciiStream(long pos) {\n\t\t\tnew java.sql.SQLException(\"setAsciiStream not implemented.\"); return null; };\n\t\tpublic java.io.Writer setCharacterStream(long pos) {\n\t\t\tnew java.sql.SQLException(\"setCharacterStream not implemented.\"); return null; };\n\t\tpublic int setString(long pos, String s) {\n\t\t\tnew java.sql.SQLException(\"setString not implemented.\"); return -1; };\n\t\tpublic int setString(long pos, String s, int offset, int len) {\n\t\t\tnew java.sql.SQLException(\"setString not implemented.\"); return -1; };\n\t\tpublic void truncate(long len) {\n\t\t\tnew java.sql.SQLException(\"truncate not implemented.\"); };\n\t};\n\n\tpublic static java.sql.Clob putclob(String x) { return new myclob(x); };\n\t\n\t// ------------------------------------------------------------------------\n\n\tpublic static String getLob(java.sql.ResultSet rs, int arg)\n\t\tthrows java.sql.SQLException { return getclob(rs.getClob(arg)); };\n\tpublic static void setLob(java.sql.PreparedStatement ps, int arg, String val)\n\t\tthrows java.sql.SQLException { ps.setClob(arg,putclob(val)); };\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static String clean_string(String x) {\n\t\treturn x.replaceAll(\"[\\0\\r\\\\\\\\]\",\"\").replaceAll(\"'\",\"\\\\\\\"\").replaceAll(\",+\",\",\");\n\t};\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static String make_string(int digits) {\n\t\tdouble dl = (Math.random()) * (Math.pow(10.0,digits*Math.random()));\n\t\tint len = (int) dl;\n\t\tbyte buf[] = new byte[len];\n\t\twhile (len>0) {\n\t\t\tdouble db = 256*Math.random();\n\t\t\tbuf[--len] = (byte)db;\n\t\t};\n\t\treturn clean_string(new String(buf));\n\t};\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static void update(java.sql.Connection c, String cmd)\n\t\tthrows java.sql.SQLException {\n\t\tc.createStatement().execute(cmd);\n\t};\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static final int entries=100000;\n\n\tpublic static void fill_db(java.sql.Connection c)\n\t\tthrows java.sql.SQLException {\n\t\ttry { update(c,\"drop table mail_raw\"); } catch (Exception e) {};\n\n\t\ttry { update(c,\"create table mail_raw ( msg varchar(999), att varchar(100), val clob )\"); } \n\t\tcatch (Exception e) { log_stacktrace(e); };\n\n\t\tjava.sql.PreparedStatement pstmt = null;\n\n\t\ttry { pstmt = c.prepareStatement(\"insert into mail_raw values ( ?, ?, ? )\"); }\n\t\tcatch (Exception e) { log_stacktrace(e); };\n\n\t\tfor (int i=0; i<entries; i++) {\n\t\t\tpstmt.setString(1,make_string(3));\n\t\t\tpstmt.setString(2,\"5 body\");\n\t\t\tsetLob(pstmt,3,make_string(4));\n\t\t\tpstmt.executeUpdate();\n\t\t\tif (i%100==0) log(\"step \"+i+\"/\"+entries);\n\t\t};\n\t};\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static void dump_db(java.sql.Connection c)\n\t\tthrows java.sql.SQLException {\n\t\tlog(\"performing dump.\");\n\t\tjava.sql.ResultSet rs = c.createStatement().executeQuery(\"select * from mail_raw\");\n\t\twhile (rs.next()) {\n\t\t\tString msg = rs.getString(1);\n\t\t\tString att = rs.getString(2);\n\t\t\tString val = getLob(rs,3);\n\t\t};\n\t};\n\n\t// ------------------------------------------------------------------------\n\n\tpublic static void main(String args[]) {\n\t\tstart_server();\n\t\ttry {\n\t\t\tjava.sql.Connection c = con();\n\t\t\tfill_db(c);\n\t\t\tdump_db(c);\n\t\t} catch (Exception e) { log_stacktrace(e); };\n\t};\n\n\t// ------------------------------------------------------------------------\n};\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37361","summary":"(jdbc net client) exception during normal iteration through \"ResultSet\" of \"select * from t\"","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=os10000","name":"os10000","emailAddress":"derbyjira at os10000 dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Oliver Seidel","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10102","value":"Patch Available","id":"10102"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=os10000","name":"os10000","emailAddress":"derbyjira at os10000 dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Oliver Seidel","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"------------------ Java Information ------------------\nJava Version:    1.4.2_03\nJava Vendor:     Sun Microsystems Inc.\nJava home:       C:\\Programme\\Java\\j2re1.4.2_03\nJava classpath:  derbyclient.jar\nOS name:         Windows XP\nOS architecture: x86\nOS version:      5.1\nJava user name:  cbdqok\nJava user home:  C:\\Dokumente und Einstellungen\\cbdqok\nJava user dir:   D:\\users\\cbdqok\\privat\\osj\\lib_derby_net\\lib\njava.specification.name: Java Platform API Specification\njava.specification.version: 1.4\n--------- Derby Information --------\nJRE - JDBC: J2SE 1.4.2 - JDBC 3.0\n[D:\\users\\cbdqok\\privat\\osj\\lib_derby_net\\lib\\derbyclient.jar] 10.3.1.4 - (561794)\n------------------------------------------------------\n----------------- Locale Information -----------------\n------------------------------------------------------\n","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10053","value":"Low","id":"10053"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":27,"total":27,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12562143","id":"12562143","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"When I run the program at:http://www.os10000.net/error.java  with trunk, 10.3.2.1, and 10.3.1.4 I get a different exception than the one reported:\r\n\r\njava.sql.SQLException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received on\r\ny -1 bytes.  The connection has been terminated.\r\n        at org.apache.derby.client.am.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:46)\r\n        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:362)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:391)\r\n        at error.fill_db(error.java:147)\r\n        at error.main(error.java:171)\r\nCaused by: org.apache.derby.client.am.DisconnectException: Insufficient data while reading from the network - expected\r\n minimum of 6 bytes and received only -1 bytes.  The connection has been terminated.\r\n        at org.apache.derby.client.net.Reply.fill(Reply.java:195)\r\n        at org.apache.derby.client.net.Reply.ensureALayerDataInBuffer(Reply.java:215)\r\n        at org.apache.derby.client.net.Reply.readDssHeader(Reply.java:317)\r\n        at org.apache.derby.client.net.Reply.startSameIdChainParse(Reply.java:1147)\r\n        at org.apache.derby.client.net.NetStatementReply.readExecute(NetStatementReply.java:69)\r\n        at org.apache.derby.client.net.StatementReply.readExecute(StatementReply.java:55)\r\n        at org.apache.derby.client.net.NetPreparedStatement.readExecute_(NetPreparedStatement.java:183)\r\n        at org.apache.derby.client.am.PreparedStatement.readExecute(PreparedStatement.java:1796)\r\n        at org.apache.derby.client.am.PreparedStatement.flowExecute(PreparedStatement.java:2116)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdateX(PreparedStatement.java:396)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:382)\r\n        ... 2 more\r\n\r\n\r\n\r\nWith 10.2.2.0 the program runs cleanly.  Marking as a regression.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-24T17:45:22.740+0000","updated":"2008-01-24T17:45:22.740+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12562255","id":"12562255","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"hmmm.. using the error.java attached to the original email thread I get the IndexOutOfBoundsException.\r\nperforming dump.\r\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n        at java.util.ArrayList.RangeCheck(ArrayList.java:572)\r\n        at java.util.ArrayList.get(ArrayList.java:347)\r\n        at org.apache.derby.client.net.NetCursor.findExtdtaData(NetCursor.java:1049)\r\n        at org.apache.derby.client.net.NetCursor.getClobColumn_(NetCursor.java:1122)\r\n        at org.apache.derby.client.am.Cursor.getClob(Cursor.java:1187)\r\n        at org.apache.derby.client.am.ResultSet.getClob(ResultSet.java:1259)\r\n        at error.getLob(error.java:97)\r\n        at error.dump_db(error.java:161)\r\n        at error.main(error.java:172)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-24T22:19:55.521+0000","updated":"2008-01-24T22:19:55.521+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12562325","id":"12562325","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"This regression was caused by the following change:\r\nDERBY-2702 Enable Clob locator support between NetworkServer and NetworkClient and modify tests that experience changed behaviour due to this(enabling Clob Locators).\r\n\r\nhttp://svn.apache.org/viewvc?view=rev&revision=544481\r\n\r\nContributed by V.Narayanan\r\n\r\nIt was a small patch but enabled code from other Jira issues I think.\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-25T01:17:08.012+0000","updated":"2008-01-25T01:23:41.931+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12562702","id":"12562702","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"At the root of this issue is this function in EmbedConnection.  We seem to increment this value for every lob value on the connection and then send it as a signed int which overflows at 32768, causing the high bit to be set and the client to think that it is getting a lob value instead of locator.\r\n\t/**\r\n\t* Return the current locator value\r\n\t* @return an integer that represents the most recent locator value.\r\n\t*/\r\n\tprivate int getIncLOBKey() {\r\n\t\treturn ++rootConnection.lobHMKey ;\r\n\t}\r\n\r\n\r\nI'd appreciate input from the lob locator folks on what is the best course of action at this point.  Should we switch to sending by value when we reach this limit? As an aside, one thing I noticed is that lobHMKey actually never gets reset, even with EmbedConnection.clearLOBMapping() .  That would not help in this case however as we don't get a commit.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-25T21:54:25.607+0000","updated":"2008-01-25T21:54:25.607+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12562868","id":"12562868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Another thing I noticed when looking at this bug is that each lob is added to the HashMap twice. Once as a side effect of getObject and then again with a call to:\r\n int locator = database.getConnection().addLOBMapping(val);\r\n\r\nso the repro fails on row 16384 instead of 32768.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-26T14:59:13.030+0000","updated":"2008-01-26T14:59:13.030+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12562915","id":"12562915","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is a patch to fix the double entry of lobs in the lob hashmap for network server.  We now store the locator in the lob so network server can retrieve it instead of doing a second store of the lob.  \r\n\r\nThe test case still fails but retrieves double the number of rows before failing, so it does not fix the core bug.  I just thought I would fix this while it was in front of me.  I didn't add a functional test. I wasn't sure how appropriate it was to add a test with a table with 32K rows to the functional tests.\r\n\r\nThe patch also resets the lob key on commit/rollback which will help prevent this bug from hitting upon retrieving 32K lobs even across transaction boundaries.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-26T20:40:38.231+0000","updated":"2008-01-26T20:40:38.231+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12562924","id":"12562924","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"partial patch available.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-26T22:04:13.518+0000","updated":"2008-01-26T22:04:13.518+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563132","id":"12563132","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Does the DRDA spec require that locators are two-byte integers, or could we use four bytes? Seems like we at least should make EmbedConnection.lobHMKey wrap around on the max value we are able to send over DRDA, and ensure that it doesn't go negative.\r\n\r\nI don't think resetting the lob key on commit/rollback works, as the client does not expect the keys to be reused. Old Clob/Blob objects on the client will then start returning data for the queries performed in the new transaction. I ran the code below to test it.\r\n\r\n-----8<-----\r\nimport java.sql.*;\r\n\r\npublic class ResetCounter {\r\n    public static void main(String[] args) throws Exception {\r\n        Class.forName(\"org.apache.derby.jdbc.ClientDriver\");\r\n        Connection c = DriverManager.getConnection(\r\n            \"jdbc:derby://localhost/db;create=true\");\r\n\r\n        Statement s1 = c.createStatement();\r\n        ResultSet rs1 = s1.executeQuery(\"values cast('first' as clob)\");\r\n        rs1.next();\r\n        Clob first = rs1.getClob(1);\r\n        rs1.close(); // auto-commit happens here\r\n\r\n        Statement s2 = c.createStatement();\r\n        ResultSet rs2 = s2.executeQuery(\"values cast('second' as clob)\");\r\n        rs2.next();\r\n        Clob second = rs2.getClob(1);\r\n\r\n        System.out.println(\"1: \" + first.getSubString(1, 100)); // should fail\r\n        System.out.println(\"2: \" + second.getSubString(1, 100));\r\n\r\n        rs2.close();\r\n    }\r\n}\r\n----->8-----\r\n\r\nWithout the patch, first.getSubString(1, 100) failed (correctly) because the transaction in which the Clob was created, had been committed. With the patch applied, it instead returned the data that the second transaction had retrieved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-28T12:48:27.409+0000","updated":"2008-01-28T12:48:27.409+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563204","id":"12563204","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Knut for looking at the patch and catching that resetting the lob key on commit/rollback doesn't work.  I will add your test to the regression test so we have a test for that.  It seems to me that we would have the same problem (albeit further removed) if we roll over the lob key at 32K.   I will look at the DRDA spec and see if there is an opportunity to send a larger value.\r\n\r\nI wonder if you had a chance to look at the rest of the patch to avoid storing the locator twice for each lob. Does that change look ok?\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-28T17:06:38.873+0000","updated":"2008-01-28T17:06:38.873+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563496","id":"12563496","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"> It seems to me that we would have the same problem (albeit further removed) if we roll over the lob key at 32K. I will look at the DRDA spec and see if there is an opportunity to send a larger value.\r\n\r\nYes, we would have the same problem. If we find a way to use e.g. 4-byte integers it would only manifest itself if someone retrieves a lob, keeps it while retrieving billions of other lobs in the same connection, and then tries to access the first lob. In that case, I think it's highly unlikely that someone will be bitten by it.\r\n\r\nI think the rest of the patch looks OK (except there's a typo in the javadoc for EmbedClob.getLocator(): loctor -> locator, and in EngineBlob/EngineClob: getLobLobMapping() -> getLOBMapping()).\r\n\r\nDo you think we should use getLocator() instead of addLOBMapping() in LobStoredProcedure.BLOBCREATELOCATOR() and CLOBCREATELOCATOR() as well? Seems like the Blobs/Clobs they create already have called addLOBMapping() in their constructors.\r\n\r\nAnother thing I came to think about: Would it be better to remove addLOBMapping() from the constructors in EmbedBlob/EmbedClob and instead call it lazily from getLocator()? Something like:\r\n\r\n  public int getLocator() {\r\n      if (locator == -1) {\r\n          locator = getEmbedConnection().addLOBMapping(this);\r\n      }\r\n      return locator;\r\n  }\r\n\r\nThen we'd also remove the overhead of maintaining the lob mapping in embedded mode.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-29T12:41:10.682+0000","updated":"2008-01-29T12:41:10.682+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563546","id":"12563546","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"I have not time to look at the details of this problem today, but I\r\nthought I would write up a few things based on what I remember from\r\nreviewing this work.\r\n\r\nI am not sure if it is a good idea, but the locator mapping table is\r\nused for two separate issues:\r\n\r\n  1. It used by the network server to store the mapping from locator\r\n     by client to EmbedBlob/EmbedClob.  This is used by stored\r\n     procedures that is called by the client for LOB operations.\r\n\r\n  2. It is used by the embedded driver to store references to LOB\r\n     objects that due to their size temporarily spills to disk.  This\r\n     is done so that the temporary files can be cleaned up on\r\n     commit/rollback.\r\n\r\nTo me it sounds like the item 2. is implemented so that all LOB\r\nobjects are stored in the mapping table, not just those that need\r\nclean-up.  (I am guessing, I have not checked the code).  That would\r\nmake two entries for every client LOB.\r\n\r\nWith respect to the wrapping locator generator, I think it should be\r\npossible to reuse locators that have been released.  Hence, one way to\r\nsolve this is to start at 0 when it wraps, and iterate until an unused\r\nlocator is found.\r\n     \r\n   \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2008-01-29T15:13:31.706+0000","updated":"2008-01-29T15:18:44.185+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563552","id":"12563552","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Oystein\r\n\r\n>With respect to the wrapping locator generator, I think it should be\r\n>possible to reuse locators that have been released. Hence, one way to\r\n>solve this is to start at 0 when it wraps, and iterate until an unused\r\n>locator is found.\r\n\r\nStill the test case attached to this issue would fail as there are no calls to Clob.free() since it appears to be written against jdk1.5. The core problem is that we are limitted to 32K entries. I was looking at the spec at section 5.6.5.13 and if I read that correctly (which  perhaps I am not) we are limitted to 4 bytes for the locator.  I am not sure how to get around this hard limit.\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-29T15:34:50.758+0000","updated":"2008-01-29T15:34:50.758+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563563","id":"12563563","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"> I was looking at the spec at section 5.6.5.13 and if I read that correctly (which perhaps I am not) we are limitted to 4 bytes for the locator. I am not sure how to get around this hard limit.\r\n\r\nI think you read it correctly (section 5.6.5 says bits 10-11 in lower box represent maximum length in bytes, not including length field or null indicator, and section 5.6.5.13 has the value 4 in bits 10-11). Note that with 4 bytes we are limited to ~4 billion entries (or ~2 billion if the sign bit is stripped off), not 32K. It's just that the current implementation only uses two bytes, hence the 32K limit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-29T16:11:47.630+0000","updated":"2008-01-29T16:11:47.630+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563668","id":"12563668","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is the patch to fix the double hashmap entries without resetting the lob key.  I plan to commit this tomorrow if I don't hear back.\r\n\r\nKathey\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-29T21:06:16.474+0000","updated":"2008-01-29T21:06:16.474+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563767","id":"12563767","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"So we do send and receive a 4 byte int, but we have this check in the locator(int column) method of NetCursor which says the highest bit will be set if it is not a locator, but it is not the highest bit that we are checking, so we end up using only two bytes for our locator.\r\n \r\nPerhaps in the case of lob value we are reading the extended length indicator which will be 0x800x.  I'm not sure if that's what's going on though.  I did try  against a 10.2 server to see if the check is necessary for sending lobs by value and found that indeed it is.\r\n\r\nRemoving the check in 10.4 and just returning the locator gets us through the repro.\r\n\r\nIt seems like maybe instead of this check we should be able to tell by the drda type whether we have a locator or a value.\r\n\r\n private int locator(int column)\r\n    {\r\n        int locator = get_INTEGER(column);\r\n        // If Lob value was sent instead of locator, highest bit will be set\r\n        // Zero is not a valid locator, it indicates a zero length value\r\n        if (((locator & 0x8000) == 0x8000) || (locator == 0)) {\r\n            return Lob.INVALID_LOCATOR;\r\n        } else {\r\n            return locator;\r\n        }\r\n    }","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-30T00:59:46.245+0000","updated":"2008-01-30T00:59:46.245+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12563922","id":"12563922","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The new patch looks fine, but it still has the typos I mentioned in an earlier comment. It should also change LOBStoredProcedure.BLOBCREATELOCATOR and LOBStoredProcedure.CLOBCREATELOCATOR so that they use getLocator() instead of addLOBMapping().\r\n\r\nI think this change also means that addLOBMapping() should be removed from EngineConnection and BrokeredConnection, and made package private in the EmbedConnection class.\r\n\r\nIt would also be good to make the locator field in EmbedBlob/EmbedClob final, so that we check on compile-time that it hasn't been forgotten in one of the constructors.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-30T09:32:20.715+0000","updated":"2008-01-30T09:32:20.715+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12564031","id":"12564031","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"I think part of the confusion here is that EmbedConnection#lobHashMap\r\nis used for two separate purposes.  It was first added as a mechanism\r\nfor the NetworkServer to add locators mapping for locators that were\r\nsent to the client.  This mechanism was intented to by driven by the\r\nNetworkServer, but EmbedConnection is used for storage since it is\r\npersistent across client requests.\r\n\r\nLater, the same hash map was used to store references to all internal\r\nLobs in order to be able to do clean-up at end of transaction.  (I was\r\nwrong when I earlier wrote that this was really only needed for LOB\r\nobjects that had associated temporary files.  This mechanism is used\r\nin order to invalidate any active LOB object at the end of\r\ntransaction.)\r\n\r\nThere are other ways to achieve invalidation at end of transaction,\r\nbut as long as we are using the current mechanism, it will be\r\nnecessary to keep track of all active LOB objects of a connection.\r\nGiven that, it is not necessary for the network server to do its own\r\nbook-keeping.  Instead, it could rely on the embedded driver for this.\r\nI think Kathey's patch is a step in the right direction here, but as\r\nKnut Anders suggest I think we should go a step further and remove all\r\ntraces of how this is currently done by the network server.\r\n\r\nI also think that it would be better if this clean-up was tied to\r\nDERBY-3354 which I feel is more related.  Then this JIRA could focus\r\non the DRDA problems that causes the reported bug. (I will discuss\r\nthat issue in a separate comment.)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2008-01-30T14:30:50.595+0000","updated":"2008-01-30T14:30:50.595+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12564040","id":"12564040","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"body":"The reasoning for the check in NetCursor#locator was to be able to\r\nboth handle pre-10.3 servers, and 10.3 servers running in soft-upgrade\r\nmode, both which ignore requests for use of locators.  I guess the\r\nfirst group could be handled by recognizing that the server is\r\npre-10.3, and it should also be possible to come up with a separate\r\nmechanism to handle soft upgrade.  However, It would be even better if\r\none where able to communicate the type of each value dynamically, but\r\nI were not able to determine how to do this with DRDA.  Does anybody\r\nknow? \r\n\r\nI think that when I added the code that checked whether a locator or\r\nLOB had been sent, I thought that the when a LOB was sent, its column\r\nposition would contain the length of the LOB with the high-order bit\r\nset.  However, it seems that what has originally been sent is not the\r\nlength of the LOB, but the length of the length field for the LOB, and\r\nit is not the high-order bit that is set, but the high-order bit of\r\nbyte 3.  When Layer B streaming was added, it seems the length of the\r\nlength field was fixed at 4 bytes so that now the client will always\r\nreceive 0x8004 for non-zero length LOBs.\r\n\r\nI do not know whether the above is in accordance with the DRDA spec,\r\nand it also seems that the client expect the high-order bit to be set when\r\nthe length is unknown.  From NetCursor#isNonTrivialDataLob:\r\n\r\n    // if the high-order bit is set, length is unknown -> set value to x'FF..FF'\r\n    if (((dataBuffer_[position]) & 0x80) == 0x80) {\r\n        length = -1;\r\n    } else {\r\n\r\nA quick, but dirty, way to fix the reported bug would be to make the\r\nserver skip 0x8004 when allocating locators, and make the client\r\ncheck for this exact value when determining whether it has received a\r\nlocator or not.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=oysteing","name":"oysteing","emailAddress":"oystein dot grovlen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Øystein Grøvlen","active":true},"created":"2008-01-30T15:08:39.400+0000","updated":"2008-01-30T15:08:39.400+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12564181","id":"12564181","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Oystein asked:\r\n>However, It would be even better if\r\n>one where able to communicate the type of each value dynamically, but\r\n>I were not able to determine how to do this with DRDA. Does anybody\r\nknow? \r\n\r\nI think that the sqlType that we send with the SQLDAGRP should be set to one of the following when we send by locator.\r\npublic\tstatic final  int DB2_SQLTYPE_BLOB_LOCATOR = 960;    // BLOB locator\r\n\tpublic\tstatic final  int DB2_SQLTYPE_NBLOB_LOCATOR = 961;\r\n\tpublic\tstatic final  int DB2_SQLTYPE_CLOB_LOCATOR = 964;    // CLOB locator\r\n\tpublic\tstatic final  int DB2_SQLTYPE_NCLOB_LOCATOR = 965;\r\n\r\nRight now we always send one of these whether it is by locator or value.\r\n\tpublic\tstatic final  int DB2_SQLTYPE_BLOB = 404;        // BLOB\r\n\tpublic\tstatic final  int DB2_SQLTYPE_NBLOB = 405;\r\n\tpublic\tstatic final  int DB2_SQLTYPE_CLOB = 408;        // CLOB\r\n\tpublic\tstatic final  int DB2_SQLTYPE_NCLOB = 409;\r\n\r\nIf we send the specific SQL Type then the client should be able to branch its logic based on that.  There are issues of backward compatibility which would have to be dealt with, but it seems a better way for the client to figure out whether it is dealing with a locator or a value.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-30T21:39:16.709+0000","updated":"2008-01-30T21:39:16.709+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12564452","id":"12564452","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Another long term drda solution might be Dynamic data format, described in section 7.8 of the drda manual.\r\nhttps://issues.apache.org/jira/browse/DERBY-3353\r\n\r\nEither this solution or branching based on the sqlType would mean version specific drda handling.  So I think I might pursue Oystein's suggestion for a quick fix and then more long term solutions can be pursued on the trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-31T18:40:33.493+0000","updated":"2008-01-31T18:40:33.493+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12564517","id":"12564517","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is a patch which implements Oystein's suggestion to exclude the extended length value from being a valid locator value.  I had to exclude 0x8000, 0x8002, 0x8004, and 0x8008 as these are all possible valid values with 10.1.\r\n\r\nI tried the repro with the patch with various version combinations of 10.1, 10.2 and  trunk with the patch.\r\nI am running tests now.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-01-31T21:50:20.719+0000","updated":"2008-01-31T21:50:20.719+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12564539","id":"12564539","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"For completeness, you may also want to skip all negative values and zero (the client only accepts positive locators). This only happens if you wrap around at ~2 billion, but with long-lived connections (for instance in a connection pool) it's possible. We're only talking about 68 lobs a second continuously for one year... ;)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-31T23:05:48.181+0000","updated":"2008-01-31T23:05:48.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12564545","id":"12564545","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"It would be good to expand the comment in getIncLOBKey() since this is quite ugly hack, and it won't be obvious to a reader why we skip those values. I propose something along these lines:\r\n\r\n// Skip 0x8000, 0x8002, 0x8004, 0x8006, for DERBY-3243\r\n// Earlier versions of the Derby Network Server (<10.3) didn't\r\n// support locators and would send an extended length field\r\n// with one of the above mentioned values instead of a\r\n// locator, even when locators were requested. To enable the\r\n// client driver to detect that locators aren't supported,\r\n// we don't use any of them as locator values.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-31T23:20:01.811+0000","updated":"2008-01-31T23:20:01.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12564843","id":"12564843","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is derby-3243_diff.txt addressing Knut's comments to skip negative and 0 locators.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-02-01T17:48:37.085+0000","updated":"2008-02-01T17:48:37.085+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12565825","id":"12565825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"This is marked 'existing application impact' but I don't see any reason why. Does the solution require some change to existing applications?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-02-05T17:26:58.962+0000","updated":"2008-02-05T17:26:58.962+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12565840","id":"12565840","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Unchecking Existing Application Impact. This fix does not require any action or have impact on existing applications.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-02-05T18:13:12.373+0000","updated":"2008-02-05T18:13:12.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12383746/comment/12566062","id":"12566062","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=os10000","name":"os10000","emailAddress":"derbyjira at os10000 dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Oliver Seidel","active":true},"body":"Hello Daniel,\r\n\r\nthank you for all the effort.  I have opened the request when my\r\napplication \"outseeker\" (copies emails from MS Outlook into Derby)\r\nstopped working beyond a certain message volume.  I was able to \"fix\"\r\nthe problem by moving to the embedded version, thereby reducing the\r\nfunctionality (location independence) of my application.\r\n\r\nSimilarly, I found \"critical\" to be a strong attribute, but reading\r\nthrough the definitions convinced me that it fit the problem.\r\n\r\nI apologise if I did make a classification mistake.\r\n\r\nBest regards,\r\n\r\nOliver Seidel\r\n\r\n\r\nhttps://issues.apache.org/jira/browse/DERBY-3243?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=12565825#action_12565825\r\nreason why.\r\n\"ResultSet\" of\r\n--------------------------------------------------------------------------------------------\r\nhttps://issues.apache.org/jira/browse/DERBY-3243\r\n------------------\r\n10.3.1.4 -\r\nis where\r\ncase by\r\nmessages\r\nclob).\r\nThis is a\r\ndemonstration\r\nException\", but a\r\ndiagnosis that\r\ndata.\r\n--------------------------------------------------------------------------------\r\n------------------------------------------------------------------------\r\n------------------------------------------------------------------------\r\n------------------------------------------------------------------------\r\njava.io.StringWriter();\r\njava.io.PrintWriter(sw);\r\n------------------------------------------------------------------------\r\norg.apache.derby.drda.NetworkServerControl(java.net.InetAddress.getByName(host),port);\r\n\"+Integer.toString(port)+\".\");\r\n------------------------------------------------------------------------\r\n----------------------------------------------------------------------\r\n};\r\n----------------------------------------------------------------------\r\n0; };\r\n0; };\r\nreturn null;\r\nreturn\r\n-1; };\r\n-1; };\r\nmyclob(x); };\r\n------------------------------------------------------------------------\r\nString\r\n------------------------------------------------------------------------\r\nx.replaceAll(\"[\\0\\r\\\\\\\\]\",\"\").replaceAll(\"'\",\"\\\\\\\"\").replaceAll(\",+\",\",\");\r\n------------------------------------------------------------------------\r\n(Math.pow(10.0,digits*Math.random()));\r\n------------------------------------------------------------------------\r\n------------------------------------------------------------------------\r\nvarchar(100),\r\n?, ?\r\n------------------------------------------------------------------------\r\nfrom\r\n------------------------------------------------------------------------\r\n------------------------------------------------------------------------\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=os10000","name":"os10000","emailAddress":"derbyjira at os10000 dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Oliver Seidel","active":true},"created":"2008-02-06T09:55:18.864+0000","updated":"2008-02-06T09:55:18.864+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3243/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06rbr:"}}