{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12379465","self":"https://issues.apache.org/jira/rest/api/latest/issue/12379465","key":"DERBY-3094","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-10-02 14:11:20.008","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23427","customfield_12310222":"1_*:*_1_*:*_13161839625_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-03-02T16:16:35.514+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3094/watchers","watchCount":0,"isWatching":false},"created":"2007-10-02T08:12:35.889+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"9.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12319175","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319175","type":{"id":"10032","name":"Blocker","inward":"is blocked by","outward":"blocks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"},"outwardIssue":{"id":"12365064","key":"DERBY-2457","self":"https://issues.apache.org/jira/rest/api/2/issue/12365064","fields":{"summary":"Use of column aliases in group by / having clauses can cause queries to fail","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12318234","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12318234","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12379534","key":"DERBY-3097","self":"https://issues.apache.org/jira/rest/api/2/issue/12379534","fields":{"summary":"Unnecessary if statement can be removed from BaseActivation.getColumnFromNow","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12319106","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319106","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12328186","key":"DERBY-883","self":"https://issues.apache.org/jira/rest/api/2/issue/12328186","fields":{"summary":"Enhance GROUP BY clause to support expressions instead of just column references.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12319174","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319174","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12347089","key":"DERBY-1624","self":"https://issues.apache.org/jira/rest/api/2/issue/12347089","fields":{"summary":"use of direct column name rather than alias make aggregation fail (Hibernate depends on that)","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:50:53.872+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"Following steps to reproduce the bug:\n\ncreate table xx (a double, b double);\ninsert into xx values (2, 3);\n\nselect a, a*(b/100.000000), count(*) from xx  group by a, a*(b/100.000000);\n\nStarting run\n\nselect a, a*(b/100.000000), count(*) from xx \ngroup by a, a*(b/100.000000)\n\nRun successful\n\nSQL State = 38000 SQL Code = 20000 SQL Message = Bei der Auswertung eines Ausdrucks wurde die Ausnahme 'java.lang.NullPointerException' ausgelöst. Exception message = java.sql.SQLException: Bei der Auswertung eines Ausdrucks wurde die Ausnahme 'java.lang.NullPointerException' ausgelöst.\n\nWork around:\n\nselect a, a*(b/100.000000), count(*) from xx group by a, b, a*(b/100.000000) \n\nStack trace from application:\n\njava.sql.SQLException: Bei der Auswertung eines Ausdrucks wurde die Ausnahme 'java.lang.NullPointerException' ausgelöst.\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\n\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\n\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\n\tat de.arcor.billy.report.views.designer.ReportViewerView.setInput(ReportViewerView.java:255)\n\tat de.arcor.billy.report.views.designer.ReportViewerView.createPartControl(ReportViewerView.java:113)\n\tat org.eclipse.ui.internal.ViewReference.createPartHelper(ViewReference.java:332)\n\tat org.eclipse.ui.internal.ViewReference.createPart(ViewReference.java:197)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:566)\n\tat org.eclipse.ui.internal.Perspective.showView(Perspective.java:1675)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:987)\n\tat org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:968)\n\tat org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:3514)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:3511)\n\tat de.arcor.billy.report.data.ReportDataAdvisor$2.perspectiveChanged(ReportDataAdvisor.java:268)\n\tat de.arcor.billy.system.actions.AbstractOpenPerspectiveActionDelegate$1.run(AbstractOpenPerspectiveActionDelegate.java:66)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3325)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1930)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1894)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat de.arcor.billy.product.Billy.run(Billy.java:15)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\nCaused by: java.sql.SQLException: Java-Ausnahme: ': java.lang.NullPointerException'.\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\n\t... 42 more\nCaused by: java.lang.NullPointerException\n\tat org.apache.derby.exe.ac9b638174x0115x5f93x1332x0000046fd8a01b.e10(Unknown Source)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.apache.derby.impl.services.reflect.ReflectMethod.invoke(Unknown Source)\n\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjection(Unknown Source)\n\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\n\tat org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.getNextRowFromSource(Unknown Source)\n\tat org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.getNextRowCore(Unknown Source)\n\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\n\t... 37 more","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37387","summary":"Grouping of expressions causes NullPointerException","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=peterb","name":"peterb","emailAddress":"balonp at googlemail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Balon","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=peterb","name":"peterb","emailAddress":"balonp at googlemail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Balon","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Windows XP, Eclipse 3.2.2, java 1.5.0.11","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":40,"total":40,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12531805","id":"12531805","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Possibly the same as DERBY-2352, which may have a different error message\r\nbecause it's in a SANE build and this one is in an INSANE build.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-02T14:11:20.008+0000","updated":"2007-10-02T14:11:20.008+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12543876","id":"12543876","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"I reproduced this in my sandbox even with the ready-to-commit patch for DERBY-2352 applied, so it's not a dup of 2352.\r\n\r\nGood news is it throws the NPE with both sane and insane builds, and here's the callstack with line numbers\r\n---\r\n2007-11-20 11:43:05.545 GMT Thread[main,5,main] (XID = 173), (SESSIONID = 0), (DATABASE = d3094), (DRDAID = null), Failed Statement is: select a, a*(b/100.000000), count(*) from xx group by a, a*(b/100.000000)\r\nERROR 38000: The exception 'java.lang.NullPointerException' was thrown while evaluating an expression.\r\n        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:294)\r\n        at org.apache.derby.iapi.error.StandardException.unexpectedUserException(StandardException.java:554)\r\n        at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:164)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjection(ProjectRestrictResultSet.java:488)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:291)\r\n        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:463)\r\n        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:424)\r\n        at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:368)\r\n        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:382)\r\n        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:338)\r\n        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:241)\r\n        at org.apache.derby.tools.JDBCDisplayUtil.DisplayResults(JDBCDisplayUtil.java:229)\r\n        at org.apache.derby.impl.tools.ij.utilMain.displayResult(utilMain.java:435)\r\n        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:509)\r\n        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:350)\r\n        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)\r\n        at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)\r\n        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)\r\n        at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)\r\n        at org.apache.derby.tools.ij.main(ij.java:59)\r\nCaused by: java.lang.NullPointerException\r\n        at org.apache.derby.exe.ac601a400fx0116x5cddx8367x000000107e400.e3(Unknown Source)\r\n        at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:145)\r\n        ... 17 more\r\n============= begin nested exception, level (1) ===========\r\njava.lang.NullPointerException\r\n        at org.apache.derby.exe.ac601a400fx0116x5cddx8367x000000107e400.e3(Unknown Source)\r\n        at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:145)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjection(ProjectRestrictResultSet.java:488)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:291)\r\n        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:463)\r\n        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:424)\r\n        at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:368)\r\n        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:382)\r\n        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:338)\r\n        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:241)\r\n        at org.apache.derby.tools.JDBCDisplayUtil.DisplayResults(JDBCDisplayUtil.java:229)\r\n        at org.apache.derby.impl.tools.ij.utilMain.displayResult(utilMain.java:435)\r\n        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:509)\r\n        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:350)\r\n        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)\r\n        at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)\r\n        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)\r\n        at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)\r\n        at org.apache.derby.tools.ij.main(ij.java:59)\r\n--\r\n\r\nProjectRestrictResultSet seems to consider the obvious case where projection == null, but it still fails\r\n   // Use reflection to do as much of projection as required\r\n   if (projection != null)\r\n   {\r\n      result = (ExecRow) projection.invoke(activation);          <== ln 488\r\n   }\r\n   else\r\n   {\r\n      result = mappedResultRow;\r\n   }","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-11-20T11:52:47.717+0000","updated":"2007-11-20T11:52:47.717+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12543878","id":"12543878","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Dropping the count(*) in the debugger actually works:\r\n\r\nij> select a, a*(b/100.000000) from xx group by a, a*(b/100.000000);\r\nA                     |2                     \r\n---------------------------------------------\r\n2.0                   |0.06                  \r\n\r\n1 row selected\r\n\r\nI traced through the ProjectRestrictResultSet code and its source GroupedAggregateResultSet, but could not immediately see where the NPE originated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-11-20T12:19:52.526+0000","updated":"2007-11-20T12:19:52.526+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12543886","id":"12543886","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"I wasn't really going to hunt this one down, but tracing a little further I see BaseActivation.getColumnFromRow() returns null @ 1359 with a comment that \"this happens\".\r\n\r\n if( row[rsNumber] == null)\r\n        {\r\n            /* This actually happens. NoPutResultSetImpl.clearOrderableCache attempts to prefetch invariant values\r\n             * into a cache. This fails in some deeply nested joins. See Beetle 4736 and 4880.\r\n             */\r\n            return null;     <==ln 1359\r\n        }\r\n\r\nThis in turn makes BaseActivation.getDataValueFactory() return null, and in the end DataValueFactoryImpl.getDecimalDataValue(NumberValue) returning null. And the NPE surfaces.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-11-20T12:55:30.286+0000","updated":"2007-11-20T12:55:30.286+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12543963","id":"12543963","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Thomas, thanks for investigating this. Your analysis is very interesting. You might\r\nwant to have a look at DERBY-3097, which refers to precisely the \"if\" statement that\r\nyou are studying.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-20T17:42:15.333+0000","updated":"2007-11-20T17:42:15.333+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12544188","id":"12544188","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"The patch for DERBY-3097 removes the if() handling row[rsNumber] == null.\r\nNot surprisingly we run into another NPE in BaseActivation on the return line following the original if() after patching.\r\n\r\n   return row[rsNumber].getColumn(colId);\r\n\r\nas row[rsNumber] still is null in our case.\r\n\r\nIt would initially seem both DERBY-3097 and this jira have the same, or a similar, root cause? Could it be the proposed patch for DERBY-3097 only remove the symptoms seen with the if(), and not the actual underlying problem?\r\n\r\nIf the patch for DERBY-3097 is applied (and fixes other problems), we will still see this one.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-11-21T08:10:01.456+0000","updated":"2007-11-21T08:10:01.456+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12544190","id":"12544190","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"It also seems that this bug only manifests itself if there is an aggregation function *and* a decimal operation.\r\n\r\nNo aggregation works:\r\nij> select a, a*(b/100.000000) from xx group by a, a*(b/100.000000);\r\nA                     |2\r\n---------------------------------------------\r\n2.0                   |0.06\r\n\r\n1 row selected\r\n\r\nNo decimal operation works:\r\nij> select a, b, count(*) from xx group by a, b;\r\nA                     |B                     |3\r\n---------------------------------------------------------\r\n2.0                   |3.0                   |1\r\n\r\n1 row selected\r\n\r\nSeemingly independent of type of decimal operation:\r\nij> select a, a/b  from xx group by a, a/b;\r\nA                     |2\r\n---------------------------------------------\r\n2.0                   |0.6666666666666666\r\n\r\n1 row selected\r\n\r\nBut add the aggregate *and* the decimal operation, and we see the NPE.\r\nij> select a, a*b, count(*) from xx group by a, a*b;\r\nA                     |2                     |3\r\n---------------------------------------------------------\r\nERROR 38000: The exception 'java.lang.NullPointerException' was thrown while evaluating an expression.\r\nERROR XJ001: Java exception: ': java.lang.NullPointerException'.\r\nij>","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-11-21T08:21:37.463+0000","updated":"2007-11-21T08:21:37.463+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12544485","id":"12544485","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Thomas, thanks for studying this problem. I think you should mark the issue as assigned\r\nto you to indicate that you are actively studying it.\r\n\r\n> row[rsNumber] still is null in our case\r\n\r\nSorry, Thomas, I think I wasn't very clear in my other comment. \r\nDERBY-3097 is definitely not a fix for this problem;\r\nit's related only in the sense that it discusses the getColumnFromRow() code.\r\n\r\nMy belief is that the \"if\" statement in getColumnFromRow is unnecessary and incorrect,\r\nbecause there should be no situations in which Derby ever needs to fetch a column's\r\nvalue from a row prior to the initialization/population of that row with valid values.\r\n\r\nThe various cases that I looked at before filing DERBY-3097 all involved situations in\r\nwhich, due to other problems, Derby was accessing the internal row/column data structures\r\nin an inconsistent manner.\r\n\r\nFor example, with this particular problem, I think that you could investigate how the\r\nResultColumn instances for the aggregate function and the arithmetic expression column\r\nare built up, and how their row and column number values are manipulated during bind\r\nprocessing.\r\n\r\nHere are some things to pay particular attention to:\r\n - when the invalid call to getColumnFromRow is made, which actual table and column\r\n   is being dereferenced?\r\n - what does the generated \"e3\" method for your case look like? You can view this code\r\n   using the techniques described at http://wiki.apache.org/db-derby/DumpClassFile\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-11-21T14:53:08.593+0000","updated":"2007-11-21T14:53:08.593+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12567333","id":"12567333","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Generated method \"e3\" is the \"projection\" method for the generated ProjectRestrictResultSet.\r\n\r\nHere is a snippet of the generated code:\r\n\r\n    private ResultSet fillResultSet()\r\n        throws StandardException\r\n    {\r\n        getLanguageConnectionContext().getAuthorizer().authorize(this, 1);\r\n        return getResultSetFactory().getScrollInsensitiveResultSet(\r\n            getResultSetFactory().getProjectRestrictResultSet(\r\n                getResultSetFactory().getGroupedAggregateResultSet(\r\n                    getResultSetFactory().getProjectRestrictResultSet(\r\n                        getResultSetFactory().getBulkTableScanResultSet(\r\n                            this, 1024, 5, getMethod(\"e0\"), 2, null, -1,\r\n                            null, -1, true, e1, \"XX\", null, null, false,\r\n                            false, -1, -1, 7, false, 0, 16, false,\r\n                            6D, 100.404D),\r\n                        null, getMethod(\"e1\"), 3, null, 4, false, true,\r\n                        6D, 100.404D),\r\n                    false, 3, 2, getMethod(\"e2\"), 224, 1, 6D, 100.404D),\r\n                null, getMethod(\"e3\"), 4, null, 1, false, true, 1D, 100.404D),\r\n            this, 0, 3, getScrollable(), 1D, 100.404D);\r\n    }\r\n\r\nNote that getMethod(\"e3\") is the 3rd argument to getProjectRestrictResultset()\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-09T16:55:44.961+0000","updated":"2008-02-09T16:55:44.961+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12567336","id":"12567336","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Note that there are *two* ProjectRestrictResultSet instances in the tree:\r\n - the inner PRN operates on the bulk table scan, and projects columns\r\n   \"a\" and \"b\" from table \"xx\" out of the table scan using projection \"e1\".\r\n - then the GroupedAggregateResultSet processes the rows, and\r\n   computes the COUNT(*) into the 3rd column of the template row\r\n - then the outer PRN takes the grouped results and projects columns\r\n   \"a\", \"(expression)\", and \"COUNT(*)\" out of the grouped result row.\r\n\r\nAt the instant of the crash, the outer PRN is performing that final\r\nprojection, and it is looking for a row from result set 2.\r\n\r\nBut this is wrong; it ought to be looking for a row from result set 1.\r\n\r\nIn the debugger, I can see that result set 1's current row is correct:\r\nit has the right columns, with the right values.\r\n\r\nI can also see that, *later* in projection method \"e3\", there is another\r\ncall to getColumnFromRow() which passes result set number 1.\r\n\r\nSo that seems like additional evidence that the core of the problem is\r\nthat projection method \"e3\" generated invalid code which is\r\ntrying to access result set 2 when it should have been accessing\r\nresult set 1.\r\n\r\nSince the column in question is column 2, which is the expression\r\na*(b/100.000000), I'm wondering whether the inner PRN and the\r\nouter PRN are somehow accidentally sharing the expression\r\ninformation for this result column expression, when one of them should\r\nhave renumbered the result set for the expression to point to the\r\ndifferent result set.\r\n\r\nThis feels really familiar, like we just worked on some problems with\r\nresult set number handling and result column expressions recently;\r\nI'll spend a bit of time searching JIRA to see if I can refresh that memory.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-09T17:56:44.579+0000","updated":"2008-02-09T17:56:44.579+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12567389","id":"12567389","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"At generate time, as the code analyzes the expression a*(b/100.000000),\r\nfor the outer PRN, the sourceColumn's resultSetNumber for the\r\nColumnReference \"a\" is '1', while for \"b\" it is '2'.\r\n\r\nSo the overall expression is inconsistent; some of the column\r\nreference point to the correct result set, others do not.\r\n\r\nThis makes me wonder whether there is some code which\r\ntraverses ResultColumn expression trees, updating the resultSetNumber,\r\nthat mistakenly visits the leftOperand of the expression tree but does\r\nnot visit the rightOperand.\r\n\r\n\"a\" is seen while visiting the leftOperand, but to visit \"b\" one must visit\r\nthe rightOperand.\r\n\r\nI thought this was a theory worth recording.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-10T00:49:08.887+0000","updated":"2008-02-10T00:49:08.887+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12567393","id":"12567393","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"As Thomas noted, it's interesting to see the differences between what provokes\r\nthis problem, and what does not. For example, this query works fine:\r\n\r\n   select a*(b/1.0), count(*) from xx group by a*(b/1.0);\r\n\r\nbut this one gets the NPE:\r\n\r\n   select a*(b/1.0), count(*) from xx group by a,a*(b/1.0);\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-10T02:02:45.101+0000","updated":"2008-02-10T02:02:45.101+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12567449","id":"12567449","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I've pretty much convinced myself that the problem happens during GroupByNode.init(),\r\nwhere we take the original PRNode for the core SELECT statement, and re-write\r\nthat section of the tree to insert a new GroupByNode above that PRNode, and a new\r\nPRNode above the GroupByNode, and manipulate the various ResultColumn lists\r\nin various ways.\r\n\r\nBut I'm not sure precisely what's going wrong:\r\n - is ResultColumnList.cloneMe failing to process sub-expression column references?\r\n - are the bindResultColumnToExpression calls in addUnAggColumns supposed\r\n   to examine the sub-expressions?\r\n - or perhaps somewhere else entirely in GroupByNode.init?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-10T16:59:00.030+0000","updated":"2008-02-10T16:59:00.030+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12567471","id":"12567471","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"OK, I think I'm getting close. Note the following:\r\n - select a*(b/1.0), count(*) from xx group by a*(b/1.0);    -- WORKS\r\n - select a*(b/1.0), count(*) from xx group by a,a*(b/1.0);  -- FAILS\r\n - select a*(b/1.0), count(*) from xx group by a,b,a*(b/1.0);  -- WORKS\r\n\r\nI think the problem is related to these lines in GroupByNode.java\r\n(near line 388 or so):\r\n\r\n\t\t\tSubstituteExpressionVisitor se = \r\n\t\t\t\tnew SubstituteExpressionVisitor(\r\n\t\t\t\t\t\tgbc.getColumnExpression(),\r\n\t\t\t\t\t\tvc,\r\n\t\t\t\t\t\tAggregateNode.class);\r\n\t\t\tparent.getResultColumns().accept(se);\r\n\r\nThis code is processing the ResultColumn instances in the\r\n\"parent\" (outer) PRNode to update their ColumnReference values.\r\n\r\nBut (I think) this code only updates the ColumnReference values\r\nfor those columns which are directly referenced as column references\r\nin the grouping list. That's why the references to column \"a\" in the\r\nexpression are correctly fixed up, but ther references to column \"b\"\r\nare not, because \"b\" wasn't directly in the group by list.\r\n\r\nIf true, this suggests a possible workaround: include all columns\r\nthat are mentioned by any expressions in the group by list\r\nredundantly, as simple column references.\r\n\r\nI'll continue to study GroupByNode.addUnAggColumns, to see if I\r\ncan construct a possible alternate way to process the columns.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-10T20:19:22.566+0000","updated":"2008-02-10T20:19:22.566+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12567666","id":"12567666","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Reversing the order of the items in the group by list also avoids the NPE:\r\n\r\n - select a*(b/1.0), count(*) from xx group by a*(b/1.0), a; -- WORKS\r\n\r\nThis possibly provides a simpler workaround.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-11T15:34:30.857+0000","updated":"2008-02-11T15:34:30.857+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12567939","id":"12567939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"My first attempt to fix this was a failure.\r\n\r\nI made the repro script pass, but broke various other\r\nGROUP BY constructions.\r\n\r\nI'm attaching the diff anyway (modifyVisitorDoesntWork.diff),\r\nbecause I feel like it's at least going in the right direction.\r\n\r\nI'm convinced that the problem involves the various\r\nmanipulations of the result column lists performed by\r\nGroupByNode.init, but I'm not yet sure what change to make.\r\n\r\nI think it's instructive to note that, with this patch applied, the\r\nfollowing statement gets \"b\" and \"a\" backward:\r\nij> select b, a, count(*) from xx group by b, a;\r\nB                     |A                     |3\r\n---------------------------------------------------------\r\n2.0                   |3.0                   |1\r\n\r\nThe proper answer, of course, would be (3.0, 2.0, 1)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-12T03:33:53.603+0000","updated":"2008-02-12T03:33:53.603+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12569749","id":"12569749","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I've been contemplating the following short script, trying to figure out what the\r\ncorrect behavior of Derby ought to be. Note that I haven't yet thrown in any ORDER BY\r\nor HAVING examples; I'm just trying to understand the interaction between the\r\nselect list and the group by list.\r\n\r\nSome of these queries work, some are rejected, and one is the DERBY-3094 query.\r\nSome of the queries which are rejected seem like they ought to work, and some of\r\nthe queries which work seem like they ought to be rejected.\r\n\r\ncreate table test (c1 int, c2 int, c3 int, c4 int);\r\ninsert into test values (1, 10, 100, 1000);\r\ninsert into test values (1, 11, 100, 1001);\r\ninsert into test values (2, 10, 100, 1000);\r\ninsert into test values (2, 11, 101, 1001);\r\ninsert into test values (2, 11, 101, 1000);\r\nselect * from test;\r\nselect c1+c2, sum(c3) from test group by c1,c2;\r\nselect c1+c2, sum(c3) from test group by c1+c2;\r\nselect c1+c2, sum(c3) from test group by c1+c2,c1;\r\nselect c1,c2, sum(c3) from test group by c1,c2,c1+c2;\r\n-- Next query is refused with 42Y30 (select list contains invalid expression):\r\nselect c1+c2, sum(c3) from test group by c1;\r\n-- Next query gets a runtime NPE (DERBY-3094):\r\nselect c1+c2, sum(c3) from test group by c1,c1+c2;\r\n-- Next query is refused with 42Y30 (select list contains invalid expression):\r\nselect c1,c2, sum(c3) from test group by c1+c2,c1;\r\n-- Next query is refused with 42Y30 (select list contains invalid expression):\r\nselect c1+c2, sum(c3) from test group by 1;\r\n-- Next query is refused with 42X04 (Column 'EXPR' not in any table)\r\nselect c1+c2 as expr, sum(c3) from test group by expr;\r\n-- Next query is refused with 42X04 (Column 'C1A' not in any table)\r\nselect c1 as c1a, c2, sum(c3) from test group by c1a,c2;\r\nselect c1 as c2, sum(c3) from test group by c1,c2;\r\n-- Next query is refused with 42Y30 (select list contains invalid expression):\r\nselect c1 as c2, sum(c3) from test group by c2;\r\nselect c1 as c2, sum(c3) from test group by c1;\r\n\r\nThe challenge is \r\na) to ensure that we understand what the intended behavior of Derby should be\r\nb) to construct a modification to the current head of trunk that resolves the NPE\r\nbut still preserves all the other desired behaviors.\r\n\r\nI'm hoping that collecting various test cases like this will help me understand this.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-17T20:07:02.732+0000","updated":"2008-02-17T20:07:02.732+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570030","id":"12570030","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"GroupByExpressionTest.java contains the following statement:\r\n\r\n   select (c1+c2)+1, sum(c3) from test group by c1+c2\r\n\r\nWith the current Derby code, this statement is accepted as legal and produces results.\r\n\r\nHowever, I'm not sure it ought to be accepted, as the select list contains\r\na non-aggregate expression which does not appear in the group by list.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-18T22:37:49.867+0000","updated":"2008-02-18T22:37:49.867+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570032","id":"12570032","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"GroupByExpressionTest.java also contains this very intriguing statement:\r\n\r\n  select (c1+c2), sum(c3)+(c1+c2) from test group by c1+c2\r\n\r\nWith the current Derby code, this statement is accepted as legal and produces results.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-18T22:45:15.814+0000","updated":"2008-02-18T22:45:15.814+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570036","id":"12570036","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is 'twoPass.diff', a patch proposal.\r\n\r\nThe idea of this patch is that, during the GroupBy tree rewriting,\r\nwe replace ResultColumn expressions with VirtualColumnNode\r\nreferences in two passes:\r\n - we first handle all expression replacements\r\n - then once all the expressions have been replaced,\r\n   we replace all column references.\r\n\r\nThis patch fixes the repro script, and makes *almost all*\r\nof the regression tests pass.\r\n\r\nHowever, two of the test cases in GroupByExpressionTest.java\r\nfail; these are the two test cases that I listed in my previous\r\ntwo comments.\r\n\r\nIt's not clear to me whether these two test cases are valid or not,\r\nthey are certainly very unusual expressions and I think an argument\r\ncan be made that they should be rejected by the compiler as invalid.\r\n\r\nPlease consider this patch as \"for discussion\", intended to\r\nrecord a possible alternate implementation, and to stimulate\r\nsome feedback regarding what the correct rules ought to be\r\nfor correlating elements in the GROUP BY list against elements\r\nin the SELECT list.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-18T22:59:45.512+0000","updated":"2008-02-18T22:59:45.512+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570055","id":"12570055","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> It's not clear to me whether [two of the test cases in\r\n> GroupByExpressionTest.java] are valid or not,\r\n\r\nI have not yet had a chance to look at the patch, but I ran those two queries--along with all of the queries posted in your Feb 17 comment--against DB2 v8.  From what I can tell, the (clean) Derby trunk and DB2 v8 agree in all of these cases--i.e. they either both throw an error or they return the same results (with the notable exception of the NPE that this issue is trying to fix).  Not sure if that's helpful or not...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-19T00:01:19.221+0000","updated":"2008-02-19T00:01:19.221+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570074","id":"12570074","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Here's an interesting essay on the sort of subtle problems that can arise\r\nfrom not being crystal-clear about the semantics of column references and\r\nexpressions in GROUP BY clauses:\r\nhttp://odetocode.com/Blogs/scott/archive/2005/04/17/1214.aspx\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-19T01:28:38.368+0000","updated":"2008-02-19T01:28:38.368+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570079","id":"12570079","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"The Postgres docs (http://www.postgresql.org/docs/8.0/interactive/sql-select.html#SQL-GROUPBY)\r\nhave this to say about the column-name-versus-column-alias subtlety referred\r\nto in the previous comment:\r\n\r\n       In case of ambiguity, a GROUP BY name will be interpreted as an input-column name \r\n       rather than an output column name.\r\n\r\nIt seems to me preferable to reject the ambiguous query rather than producing possibly\r\nsurprising results, but I can see why ambiguity-resolving behaviors are also worthwhile.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-19T01:53:13.515+0000","updated":"2008-02-19T01:53:13.515+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570358","id":"12570358","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is 'TwoPassVisitor.diff', the first working code proposal.\r\nWith this patch, the repro script passes, and all regression tests pass.\r\n\r\nI still need to:\r\n - add a bunch of new test cases\r\n - add comments to the code\r\n - add a writeup explaining the ideas behind this patch\r\n\r\nBut at least I now have code that appears to add the desired\r\nnew behavior while not breaking any (known) existing behaviors.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-19T18:31:51.639+0000","updated":"2008-02-19T18:31:51.639+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570561","id":"12570561","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Army for checking the queries against DB2, that's quite helpful.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-20T03:59:04.991+0000","updated":"2008-02-20T03:59:04.991+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570569","id":"12570569","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"It seems like there might be a similar problem with the HAVING clause. Consider:\r\n\r\nij> select c1+c2, sum(c3) from test group by c1+c2;\r\n1          |2\r\n-----------------------\r\n11         |100\r\n12         |200\r\n13         |202\r\n\r\n3 rows selected\r\nij> select c1+c2, sum(c3) from test group by c1,c1+c2;\r\n1          |2\r\n-----------------------\r\n11         |100\r\n12         |100\r\n12         |100\r\n13         |202\r\n\r\n4 rows selected\r\nij> select c1+c2, sum(c3) from test group by c1+c2 having c1+c2 > 11;\r\n1          |2\r\n-----------------------\r\n12         |200\r\n13         |202\r\n\r\n2 rows selected\r\nij> select c1+c2, sum(c3) from test group by c1, c1+c2 having c1+c2 > 11;\r\nERROR 42X24: Column C2 is referenced in the HAVING clause but is not in the GROUP BY list.\r\n\r\nI think that the proper results for that last query should have been:\r\n1          |2\r\n-----------------------\r\n12         |100\r\n12         |100\r\n13         |202\r\n\r\n3 rows selected\r\n\r\nWe could either investigate HAVING behaviors as part of this JIRA, or we could open a new one.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-20T04:23:49.912+0000","updated":"2008-02-20T04:23:49.912+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570577","id":"12570577","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached TwoPassVisitorWithCommentsAndTests.diff,\r\nwhich adds a brief comment to the GroupByNode code\r\nexplaining the reasoning behind the two pass ResultColumn\r\nrewriting algorithm, and adds a number of new tests to\r\nGroupByExpressionTest.java.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-20T05:18:28.988+0000","updated":"2008-02-20T05:18:28.988+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570783","id":"12570783","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for the updated patch, Bryan.  Is there a more detailed writeup forthcoming for this change, or are the code comments the extent of it?\r\n\r\nThe reason I ask is that, after reading the code comments and the comments in this issue, I can't quite see the correlation between the patch and the NPE that it fixes.  That is, it's clear that the patch fixes the issue, but I think I'm missing the details on _why_.  The code comments say:\r\n\r\n // then we don't want the replacement of the\r\n // simple column reference C1 to affect the\r\n // compound expression C1 * (C2 / 100).\r\n\r\nbut it's not clear to me how replacement of the simple column reference can negatively affect the compound expressions.  Is it an issue of VCN's pointing to the wrong place?  If so, any idea as to why that happens?  Similarly, in an earlier comment you noted:\r\n\r\n> I think it's instructive to note that, with this patch applied, the\r\n> following statement gets \"b\" and \"a\" backward:\r\n> ij> select b, a, count(*) from xx group by b, a;\r\n> B |A |3\r\n> ---------------------------------------------------------\r\n> 2.0 |3.0 |1\r\n\r\nIs it possible to say what it is about processing simple column references _after_ compound expressions that fixes this problem?\r\n\r\nApologies if I'm missing something obvious.  I'm not by any means opposed to the patch, I'm just hoping to gain an understanding about why it resolves the discussion/issues raised thus far for this issue...\r\n\r\nAnd thanks for your continued diligence with this one, Bryan.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-20T18:13:04.897+0000","updated":"2008-02-20T18:13:04.897+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12570822","id":"12570822","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is TwoPassForHavingClauseAlso.diff, which\r\naddresses the problem I noted with the HAVING clause\r\nin an earlier comment.\r\n\r\nArmy, thanks for having a look at the patch. I am still\r\nintending to complete a more thorough description\r\nof the \"why\" behind the changes that should hopefully\r\nmake it more clear.\r\n\r\nBut for now, two quick responses:\r\n1) substituting the column references with VCN's during\r\ngroup-by rewriting changes which result set is pointed to,\r\nbut when we process the C1 portion of the compound\r\nexpression but not the compound expression as a whole,\r\nwe never correct the C2 column reference (since C2 by\r\nitself is not a grouping column), leaving the compound\r\nexpression with C1 pointing to the correct result set, but C2\r\npointing to a non-existing result set, causing an NPE at runtime.\r\n2) the earlier comment about getting \"b\" and \"a\" backward\r\nwas simply a red herring. That particular patch attempt\r\n(modifyVisitorDoesntWork.diff) was simply flat-out wrong. :)\r\n\r\nI'll try to get a more thorough writeup completed soon.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-20T20:19:06.712+0000","updated":"2008-02-20T20:19:06.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12571445","id":"12571445","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached an attempt at a descriptive writeup. Please let me know if it\r\nmakes the patch more comprehensible.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-22T15:39:58.274+0000","updated":"2008-02-22T15:39:58.274+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12571516","id":"12571516","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thanks a ton for the detailed write-up, Bryan, that definitely makes it clear as to what is going on with this issue.\r\n\r\nIn reading through the document I gained an understanding of what the problem is, and then I began wondering if this is only an issue when a ColumnReference appears in a compound expression--or is it also an issue when one expression appears within another expression.  I came up with the following query:\r\n\r\n  select a*((a+b)/1.0), count(*) from xx group by a+b, a*((a+b)/1.0)\r\n\r\nwhich fails with an NPE even after TwoPassForHavingClauseAlso.diff is applied.  I'm attaching d3094_followup.htm, which (in theory) walks through this query in the same way that your \"notes.html\" walked through another example.  I did this mostly for my own understanding, but thought it might be useful to post it as a writeup to this issue.\r\n\r\nTo quote the conclusion:\r\n\r\n\"[T]he TwoPassVisitorWithCommentsAndTests.diff solves the specific query that was reported (and described in \"notes.html\"), and so it makes things better, which is great.  Thus I think it would be fine to commit the patch as it is and either deal with queries like the one above in a follow-up patch, or file a separate Jira altogether.\"","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-22T18:33:31.488+0000","updated":"2008-02-22T18:33:31.488+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12571751","id":"12571751","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Army! That's a keen insight about the underlying issue, and\r\na great writeup and test case.\r\n\r\nHere's yet another variant that's hard to explain: the first statement\r\nworks, the second is refused with error 42Y30:\r\n\r\nselect (a+b)+c, count(*) from t group by c, a+b;\r\nselect a+(b+c), count(*) from t group by c, a+b;\r\n\r\nI'm not quite sure how to push this problem further. The only idea\r\nI had was as follows: perhaps we could automatically and silently\r\npull up *every* column reference that is present in any GROUP BY\r\nexpression, and include that column as an extra column reference\r\nat the end of the group by list. So we could rewrite the above queries,\r\nfor example, as:\r\n\r\nselect (a+b)+c, count(*) from t group by c, a+b, a, b;\r\nselect a+(b+c), count(*) from t group by c, a+b, a, b;\r\n\r\nThat might mean we'd always have \"enough\" column references\r\nso that we could perform substitution on all the result columns\r\nin the select list successfully.\r\n\r\nYet I'm nervous about this strategy; we wouldn't want these pulled\r\nup columns to be used for the actual grouping (because it could\r\nsubdivide the actual groups further than the user intended), so we'd\r\nhave to mark these columns as \"special columns to be used for\r\nresolving column references, but not to be used for grouping.\"\r\n\r\nI'll continue to think about it, but I'm increasingly tempted to\r\ntake your suggestion to be satisfied with the patch as is, and\r\nfile some of these other issues separately to be studied more\r\nin the future. This is similar to the way that we marked DERBY-1624\r\nas resolved, while shifting the unresolved portion out to DERBY-2457. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-23T16:10:30.580+0000","updated":"2008-02-23T16:10:30.580+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12571810","id":"12571810","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Here's one other idea that might work:\r\n\r\n - Define the \"level\" of a GROUP BY expression to be\r\n   the number of column references in that expression.\r\n\r\n   For example, in this clause:\r\n\r\n        GROUP BY a, b, a+b, a+(b+c), a*(b/100.0), a*((a+b)/1.0)\r\n\r\n   the level of the various elements in the list are:\r\n\r\n   - a: 1\r\n   - b: 1\r\n   - a+b: 2\r\n   - a+(b+c): 3\r\n   - a*(b/100.0): 2\r\n   - a*((a+b)/1.0): 3\r\n\r\n - Then, when performing VCN substitution into the\r\n    parent PRNode's ResultColumnList entries from\r\n   the GroupByNode's entries, process the entires\r\n   in descending order by level, and left-to-right within\r\n   the same level. So the entries from the GROUP BY above\r\n   would be processed in the order:\r\n\r\n   a+(b+c), a*((a+b)/1.0), a+b, a*(b/100.0), a, b\r\n\r\nDoes this algorithm seem like it would be worth investigating?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-24T00:30:18.926+0000","updated":"2008-02-24T00:30:18.926+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12572144","id":"12572144","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Here's yet another variant that's hard to explain: the first statement\r\n> works, the second is refused with error 42Y30:\r\n> \r\n> select (a+b)+c, count(*) from t group by c, a+b;\r\n> select a+(b+c), count(*) from t group by c, a+b; \r\n\r\nThe tree for \"(a+b)+c\" contains the subtree \"a+b\" as the left-hand side of the top-most binary operator and \"c\" as the right-hand side.  Since each of those matches a stand-alone expression in the GROUP BY, the equivalence checking for GROUP BY processing passes.  But the tree for \"a+(b+c)\" has \"a\" on one side and \"b+c\" on the other, neither of which shows up as a stand-alone GROUP BY expression, so the second query is rejected.  I agree it's a tad non-inuititive, but it appears to be \"explainable\", for what that's worth...\r\n\r\n> Here's one other idea that might work: \r\n\r\n[ snip ]\r\n\r\n> Does this algorithm seem like it would be worth investigating?\r\n\r\nYes, I definitely think this is worth investigating.  From what I can tell it solves the problem of sub-expression substitution, and it seems a tad safer than pulling unneeded columns into the GROUP BY expression.\r\n\r\nThere's a CollectNodesVisitor class which finds all instances of a specified class within the subtree beneath a given ValueNode, so you might be able to use that to count the number of ColumnReferences in the expression.  Though ColumnReferences tend to appear in lots of places, so it'll be interesting to see if a simple CollectNodesVisitor is good enough--or will it end up counting ColumnReferences that shouldn't be counted...?\r\n\r\nIn any event, +1 to further pursuit of the suggested approach.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-25T17:44:46.126+0000","updated":"2008-02-25T17:44:46.126+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12572771","id":"12572771","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is sortExpressions.diff, which proposes to sort\r\nthe expressions based on the number of ColumnReferences\r\nthat each contains, using the technique suggested by Army\r\nof counting those refs using the CollectNodesVisitor.\r\n\r\nIt seems to handle all the existing test cases, as well\r\nas a few new ones that I added to GroupByExpressionTest.java\r\nas part of this patch.\r\n\r\nPlease have a look and tell me what you think.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-27T03:33:14.646+0000","updated":"2008-02-27T03:33:14.646+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12573053","id":"12573053","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"sortExpressions.diff looks good to me.  Thanks for continuing with that approach, Bryan.  Assuming derbyall and suites.All run cleanly, I say +1 to commit since it fixes all of the known queries and seems algorithmically correct as far as I can tell.  If additional issues/queries are discovered later, I think they can be addressed as they are found.\r\n\r\nOne nit: it seems the creation of a new ArrayList for havingRefsToSubstitute could be conditional upon the presence of a non-null havingClause, and that a single ExpressionSorter() could be used instead of two.  But in both cases the code may be easier to read as it is, so I'm not sure it's really worth changing...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-27T20:05:04.438+0000","updated":"2008-02-27T20:05:04.438+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12573309","id":"12573309","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Army, those are good suggestions.\r\n\r\nI'm intending to move ahead with final testing, cleanup, and commit.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-28T14:50:31.013+0000","updated":"2008-02-28T14:50:31.013+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12573585","id":"12573585","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is sortExpressionsFinal.diff, which incorporates\r\nthe last few suggestions from reviews, as well as some\r\nadditional comments.\r\n\r\nderbyall and junit-all were cleaning, so I'm proceeding\r\nto commit this patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-29T04:22:32.489+0000","updated":"2008-02-29T04:22:32.489+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12573588","id":"12573588","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Committed sortExpressionsFinal.diff to the trunk as revision 632221.\r\n\r\nI'll investigate merging this change back to the 10.3 branch. Until then,\r\nI'll leave this issue open.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-02-29T04:25:25.929+0000","updated":"2008-02-29T04:25:25.929+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12379465/comment/12574227","id":"12574227","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I merged revision 632221 to the 10.3 branch without incident.\r\nMy build and test runs were clean, so I committed the\r\nchange to the 10.3 branch as revision 632779.\r\n\r\nMarking the issue as resolved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-03-02T16:16:35.465+0000","updated":"2008-03-02T16:16:35.465+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3094/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06rhj:"}}