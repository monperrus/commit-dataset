{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12509816","self":"https://issues.apache.org/jira/rest/api/latest/issue/12509816","key":"LUCENE-3189","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316675","id":"12316675","description":"Major release after 3.3","name":"3.4","archived":false,"released":true,"releaseDate":"2011-09-14"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314025","id":"12314025","description":"Alpha release of the 4.x series","name":"4.0-ALPHA","archived":false,"released":true,"releaseDate":"2012-07-03"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2011-08-22 14:08:58.404","customfield_12312323":null,"customfield_12310420":"10790","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_7800015980_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-09-08T17:34:28.242+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3189/watchers","watchCount":1,"isWatching":false},"created":"2011-06-10T10:54:12.317+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-11-27T12:31:45.154+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"trunk: r1134163 \r\n\r\nran it a few times with tests.iter=200 and couldn't reproduce, but i believe you like an issue anyway.\r\n\r\n{code}\r\n    [junit] Testsuite: org.apache.lucene.index.TestIndexWriter\r\n    [junit] Testcase: testThreadInterruptDeadlock(org.apache.lucene.index.TestIndexWriter):     FAILED\r\n    [junit]\r\n    [junit] junit.framework.AssertionFailedError:\r\n    [junit]     at org.apache.lucene.index.TestIndexWriter.testThreadInterruptDeadlock(TestIndexWriter.java:1203)\r\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1403)\r\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1321)\r\n    [junit]\r\n    [junit]\r\n    [junit] Tests run: 40, Failures: 1, Errors: 0, Time elapsed: 23.79 sec\r\n    [junit]\r\n    [junit] ------------- Standard Output ---------------\r\n    [junit] CheckIndex failed\r\n    [junit] ERROR: could not read any segments file in directory\r\n    [junit] java.io.FileNotFoundException: segments_2w\r\n    [junit]     at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:407)\r\n    [junit]     at org.apache.lucene.index.codecs.DefaultSegmentInfosReader.openInput(DefaultSegmentInfosReader.java:112)\r\n    [junit]     at org.apache.lucene.index.codecs.DefaultSegmentInfosReader.read(DefaultSegmentInfosReader.java:45)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:257)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:287)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:698)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:533)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:283)\r\n    [junit]     at org.apache.lucene.index.CheckIndex.checkIndex(CheckIndex.java:311)\r\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:154)\r\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:144)\r\n    [junit]     at org.apache.lucene.index.TestIndexWriter$IndexerThreadInterrupt.run(TestIndexWriter.java:1154)\r\n    [junit]\r\n    [junit] CheckIndex FAILED: unexpected exception\r\n    [junit] java.lang.RuntimeException: CheckIndex failed\r\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:158)\r\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:144)\r\n    [junit]     at org.apache.lucene.index.TestIndexWriter$IndexerThreadInterrupt.run(TestIndexWriter.java:1154)\r\n    [junit] IndexReader.open FAILED: unexpected exception\r\n    [junit] java.io.FileNotFoundException: segments_2w\r\n    [junit]     at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:407)\r\n    [junit]     at org.apache.lucene.index.codecs.DefaultSegmentInfosReader.openInput(DefaultSegmentInfosReader.java:112)\r\n    [junit]     at org.apache.lucene.index.codecs.DefaultSegmentInfosReader.read(DefaultSegmentInfosReader.java:45)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:257)\r\n    [junit]     at org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:88)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:698)\r\n    [junit]     at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:84)\r\n    [junit]     at org.apache.lucene.index.IndexReader.open(IndexReader.java:500)\r\n    [junit]     at org.apache.lucene.index.IndexReader.open(IndexReader.java:293)\r\n    [junit]     at org.apache.lucene.index.TestIndexWriter$IndexerThreadInterrupt.run(TestIndexWriter.java:1161)\r\n\r\n    [junit] ------------- ---------------- ---------------\r\n    [junit] ------------- Standard Error -----------------\r\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestIndexWriter -Dtestmethod=testThreadInterruptDeadlock -Dtests.seed=6733070832417768606:3130345095020099096\r\n    [junit] NOTE: test params are: codec=RandomCodecProvider: {=MockRandom, f6=SimpleText, f7=MockRandom, f8=MockSep, f9=Standard, f1=SimpleText, f0=Standard, f3=Standard, f2=MockSep, f5=Pulsing(freqCutoff=12),\r\n f4=MockFixedIntBlock(blockSize=552), c=MockVariableIntBlock(baseBlockSize=43), d9=MockVariableIntBlock(baseBlockSize=43), d8=MockRandom, d5=MockSep, d4=Pulsing(freqCutoff=12), d7=MockFixedIntBlock(blockSize=55\r\n2), d6=MockVariableIntBlock(baseBlockSize=43), d25=MockSep, d0=MockVariableIntBlock(baseBlockSize=43), c29=MockFixedIntBlock(blockSize=552), d24=Pulsing(freqCutoff=12), d1=MockFixedIntBlock(blockSize=552), c28=\r\nStandard, d23=SimpleText, d2=SimpleText, c27=MockSep, d22=Standard, d3=MockRandom, d21=MockRandom, d20=SimpleText, c22=MockSep, c21=Pulsing(freqCutoff=12), c20=SimpleText, d29=SimpleText, c26=MockVariableIntBlo\r\nck(baseBlockSize=43), d28=Standard, c25=MockRandom, d27=MockVariableIntBlock(baseBlockSize=43), c24=Pulsing(freqCutoff=12), d26=MockRandom, c23=MockFixedIntBlock(blockSize=552), e9=Pulsing(freqCutoff=12), e8=St\r\nandard, e7=MockSep, e6=MockRandom, e5=SimpleText, c17=MockFixedIntBlock(blockSize=552), e3=MockFixedIntBlock(blockSize=552), d12=Pulsing(freqCutoff=12), c16=MockVariableIntBlock(baseBlockSize=43), e4=Pulsing(fr\r\neqCutoff=12), d11=MockFixedIntBlock(blockSize=552), c19=MockRandom, e1=MockSep, d14=MockVariableIntBlock(baseBlockSize=43), c18=SimpleText, e2=Standard, d13=MockRandom, e0=SimpleText, d10=MockSep, d19=MockVaria\r\nbleIntBlock(baseBlockSize=43), c11=MockVariableIntBlock(baseBlockSize=43), c10=MockRandom, d16=Standard, c13=MockRandom, c12=SimpleText, d15=MockSep, d18=Pulsing(freqCutoff=12), c15=Standard, d17=MockFixedIntBl\r\nock(blockSize=552), c14=MockSep, b3=Standard, b2=MockSep, b5=Pulsing(freqCutoff=12), b4=MockFixedIntBlock(blockSize=552), b7=MockFixedIntBlock(blockSize=552), b6=MockVariableIntBlock(baseBlockSize=43), d50=Mock\r\nRandom, b9=MockRandom, b8=SimpleText, d43=SimpleText, d42=Standard, d41=MockVariableIntBlock(baseBlockSize=43), d40=MockRandom, d47=Pulsing(freqCutoff=12), d46=MockFixedIntBlock(blockSize=552), b0=MockRandom, d\r\n45=Standard, b1=MockVariableIntBlock(baseBlockSize=43), d44=MockSep, d49=MockRandom, d48=SimpleText, c6=SimpleText, c5=Standard, c4=MockVariableIntBlock(baseBlockSize=43), c3=MockRandom, c9=MockFixedIntBlock(bl\r\nockSize=552), c8=Standard, c7=MockSep, d30=Standard, d32=Pulsing(freqCutoff=12), d31=MockFixedIntBlock(blockSize=552), c1=Pulsing(freqCutoff=12), d34=MockFixedIntBlock(blockSize=552), c2=MockSep, d33=MockVariab\r\nleIntBlock(baseBlockSize=43), d36=MockRandom, c0=SimpleText, d35=SimpleText, d38=MockSep, d37=Pulsing(freqCutoff=12), d39=MockVariableIntBlock(baseBlockSize=43), e92=MockFixedIntBlock(blockSize=552), e93=Pulsin\r\ng(freqCutoff=12), e90=MockSep, e91=Standard, e89=Standard, e88=MockVariableIntBlock(baseBlockSize=43), e87=MockRandom, e86=MockFixedIntBlock(blockSize=552), e85=MockVariableIntBlock(baseBlockSize=43), e84=MockS\r\nep, e83=Pulsing(freqCutoff=12), e80=MockFixedIntBlock(blockSize=552), e81=SimpleText, e82=MockRandom, e77=Standard, e76=MockSep, e79=Pulsing(freqCutoff=12), e78=MockFixedIntBlock(blockSize=552), e73=MockVariabl\r\neIntBlock(baseBlockSize=43), e72=MockRandom, e75=SimpleText, e74=Standard, binary=MockSep, f98=MockRandom, f97=SimpleText, f99=MockSep, f94=Pulsing(freqCutoff=12), f93=MockFixedIntBlock(blockSize=552), f96=Mock\r\nVariableIntBlock(baseBlockSize=43), f95=MockRandom, e95=MockRandom, e94=SimpleText, e97=Standard, e96=MockSep, e99=MockSep, e98=Pulsing(freqCutoff=12), id=Standard, f34=SimpleText, f33=Standard, f32=MockVariabl\r\neIntBlock(baseBlockSize=43), f31=MockRandom, f30=MockFixedIntBlock(blockSize=552), f39=SimpleText, f38=MockVariableIntBlock(baseBlockSize=43), f37=MockRandom, f36=Pulsing(freqCutoff=12), f35=MockFixedIntBlock(b\r\nlockSize=552), f43=MockSep, f42=Pulsing(freqCutoff=12), f45=MockFixedIntBlock(blockSize=552), f44=MockVariableIntBlock(baseBlockSize=43), f41=Standard, f40=MockSep, f47=SimpleText, f46=Standard, f49=MockSep, f4\r\n8=Pulsing(freqCutoff=12), content=Standard, e19=Standard, e18=MockSep, e17=SimpleText, f12=MockRandom, e16=Standard, f11=SimpleText, f10=MockFixedIntBlock(blockSize=552), e15=MockVariableIntBlock(baseBlockSize=\r\n43), e14=MockRandom, f16=MockFixedIntBlock(blockSize=552), e13=MockSep, e12=Pulsing(freqCutoff=12), f15=MockVariableIntBlock(baseBlockSize=43), e11=SimpleText, f14=MockSep, e10=Standard, f13=Pulsing(freqCutoff=\r\n12), f19=Standard, f18=MockVariableIntBlock(baseBlockSize=43), f17=MockRandom, e29=MockRandom, e26=MockSep, f21=Standard, e25=Pulsing(freqCutoff=12), f20=MockSep, e28=MockFixedIntBlock(blockSize=552), f23=Pulsi\r\nng(freqCutoff=12), e27=MockVariableIntBlock(baseBlockSize=43), f22=MockFixedIntBlock(blockSize=552), f25=MockRandom, e22=MockFixedIntBlock(blockSize=552), f24=SimpleText, e21=MockVariableIntBlock(baseBlockSize=\r\n43), f27=Standard, e24=MockRandom, f26=MockSep, e23=SimpleText, f29=MockSep, f28=Pulsing(freqCutoff=12), e20=Pulsing(freqCutoff=12), field=MockSep, string=MockVariableIntBlock(baseBlockSize=43), e30=MockFixedIn\r\ntBlock(blockSize=552), e31=Pulsing(freqCutoff=12), a98=MockSep, e34=SimpleText, a99=Standard, e35=MockRandom, f79=MockSep, e32=MockVariableIntBlock(baseBlockSize=43), e33=MockFixedIntBlock(blockSize=552), b97=M\r\nockRandom, f77=MockRandom, e38=MockVariableIntBlock(baseBlockSize=43), b98=MockVariableIntBlock(baseBlockSize=43), f78=MockVariableIntBlock(baseBlockSize=43), e39=MockFixedIntBlock(blockSize=552), b99=Standard,\r\n f75=MockFixedIntBlock(blockSize=552), e36=Pulsing(freqCutoff=12), f76=Pulsing(freqCutoff=12), e37=MockSep, f73=Pulsing(freqCutoff=12), f74=MockSep, f71=Standard, f72=SimpleText, f81=Standard, f80=MockSep, e40=\r\nMockVariableIntBlock(baseBlockSize=43), e41=Standard, e42=SimpleText, e43=MockSep, e44=Standard, e45=MockFixedIntBlock(blockSize=552), e46=Pulsing(freqCutoff=12), f86=Standard, e47=SimpleText, f87=SimpleText, e\r\n48=MockRandom, f88=Pulsing(freqCutoff=12), e49=MockSep, f89=MockSep, f82=MockVariableIntBlock(baseBlockSize=43), f83=MockFixedIntBlock(blockSize=552), f84=SimpleText, f85=MockRandom, f90=Pulsing(freqCutoff=12),\r\n f92=MockVariableIntBlock(baseBlockSize=43), f91=MockRandom, str=MockRandom, a76=Standard, e56=Standard, f59=Pulsing(freqCutoff=12), a77=SimpleText, e57=SimpleText, a78=Pulsing(freqCutoff=12), e54=MockRandom, f\r\n57=Standard, a79=MockSep, e55=MockVariableIntBlock(baseBlockSize=43), f58=SimpleText, e52=MockVariableIntBlock(baseBlockSize=43), e53=MockFixedIntBlock(blockSize=552), e50=Pulsing(freqCutoff=12), e51=MockSep, f\r\n51=MockSep, f52=Standard, f50=MockRandom, f55=MockVariableIntBlock(baseBlockSize=43), f56=MockFixedIntBlock(blockSize=552), f53=Pulsing(freqCutoff=12), e58=MockFixedIntBlock(blockSize=552), f54=MockSep, e59=Pul\r\nsing(freqCutoff=12), a80=Pulsing(freqCutoff=12), e60=Pulsing(freqCutoff=12), a82=MockVariableIntBlock(baseBlockSize=43), a81=MockRandom, a84=MockRandom, a83=SimpleText, a86=Standard, a85=MockSep, a89=SimpleText\r\n, f68=MockVariableIntBlock(baseBlockSize=43), e65=Pulsing(freqCutoff=12), f69=MockFixedIntBlock(blockSize=552), e66=MockSep, a87=MockVariableIntBlock(baseBlockSize=43), e67=MockVariableIntBlock(baseBlockSize=43\r\n), a88=MockFixedIntBlock(blockSize=552), e68=MockFixedIntBlock(blockSize=552), e61=SimpleText, e62=MockRandom, e63=MockSep, e64=Standard, f60=MockFixedIntBlock(blockSize=552), f61=Pulsing(freq\r\n\r\nCutoff=12), f62=MockRandom, f63=MockVariableIntBlock(baseBlockSize=43), e69=Standard, f64=SimpleText, f65=MockRandom, f66=MockSep, f67=Standard, f70=MockFixedIntBlock(blockSize=552), a93=MockSep, a92=Pulsing(freqCutoff=12), a91=SimpleText, e71=SimpleText, a90=Standard, e70=Standard, a97=MockVariableIntBlock(baseBlockSize=43), a96=MockRandom, a95=Pulsing(freqCutoff=12), a94=MockFixedIntBlock(blockSize=552), c58=MockRandom, a63=MockFixedIntBlock(blockSize=552), a64=Pulsing(freqCutoff=12), c59=MockVariableIntBlock(baseBlockSize=43), c56=MockFixedIntBlock(blockSize=552), d59=MockRandom, a61=MockSep, c57=Pulsing(freqCutoff=12), a62=Standard, c54=Pulsing(freqCutoff=12), c55=MockSep, a60=SimpleText, c52=Standard, c53=SimpleText, d53=SimpleText, d54=MockRandom, d51=MockVariableIntBlock(baseBlockSize=43), d52=MockFixedIntBlock(blockSize=552), d57=Pulsing(freqCutoff=12), b62=Standard, d58=MockSep, b63=SimpleText, d55=Standard, b60=MockRandom, d56=SimpleText, b61=MockVariableIntBlock(baseBlockSize=43), b56=Standard, b55=MockSep, b54=MockRandom, b53=SimpleText, d61=MockVariableIntBlock(baseBlockSize=43), b59=MockVariableIntBlock(baseBlockSize=43), d60=MockRandom, b58=MockSep, b57=Pulsing(freqCutoff=12), c62=Standard, c61=MockSep, a59=MockVariableIntBlock(baseBlockSize=43), c60=MockRandom, a58=MockRandom, a57=MockFixedIntBlock(blockSize=552), a56=MockVariableIntBlock(baseBlockSize=43), a55=MockSep, a54=Pulsing(freqCutoff=12), a72=MockRandom, c67=Standard, a73=MockVariableIntBlock(baseBlockSize=43), c68=SimpleText, a74=Standard, c69=Pulsing(freqCutoff=12), a75=SimpleText, c63=MockVariableIntBlock(baseBlockSize=43), c64=MockFixedIntBlock(blockSize=552), a70=MockVariableIntBlock(baseBlockSize=43), c65=SimpleText, a71=MockFixedIntBlock(blockSize=552), c66=MockRandom, d62=MockSep, d63=Standard, d64=MockFixedIntBlock(blockSize=552), b70=Standard, d65=Pulsing(freqCutoff=12), b71=Pulsing(freqCutoff=12), d66=MockVariableIntBlock(baseBlockSize=43), b72=MockSep, d67=MockFixedIntBlock(blockSize=552), b73=MockVariableIntBlock(baseBlockSize=43), d68=SimpleText, b74=MockFixedIntBlock(blockSize=552), d69=MockRandom, b65=Pulsing(freqCutoff=12), b64=MockFixedIntBlock(blockSize=552), b67=MockVariableIntBlock(baseBlockSize=43), b66=MockRandom, d70=SimpleText, b69=MockRandom, b68=SimpleText, d72=MockSep, d71=Pulsing(freqCutoff=12), c71=Pulsing(freqCutoff=12), c70=MockFixedIntBlock(blockSize=552), a69=Pulsing(freqCutoff=12), c73=MockVariableIntBlock(baseBlockSize=43), c72=MockRandom, a66=MockRandom, a65=SimpleText, a68=Standard, a67=MockSep, c32=MockSep, c33=Standard, c30=SimpleText, c31=MockRandom, c36=MockVariableIntBlock(baseBlockSize=43), a41=Pulsing(freqCutoff=12), c37=MockFixedIntBlock(blockSize=552), a42=MockSep, a0=MockRandom, c34=Pulsing(freqCutoff=12), c35=MockSep, a40=SimpleText, b84=MockSep, d79=MockFixedIntBlock(blockSize=552), b85=Standard, b82=SimpleText, d77=MockSep, c38=Standard, b83=MockRandom, d78=Standard, c39=SimpleText, b80=MockRandom, d75=Standard, b81=MockVariableIntBlock(baseBlockSize=43), d76=SimpleText, d73=MockRandom, d74=MockVariableIntBlock(baseBlockSize=43), d83=MockRandom, a9=MockFixedIntBlock(blockSize=552), d82=SimpleText, d81=MockFixedIntBlock(blockSize=552), d80=MockVariableIntBlock(baseBlockSize=43), b79=MockFixedIntBlock(blockSize=552), b78=MockSep, b77=Pulsing(freqCutoff=12), b76=SimpleText, b75=Standard, a1=Pulsing(freqCutoff=12), a35=Pulsing(freqCutoff=12), a2=MockSep, a34=MockFixedIntBlock(blockSize=552), a3=MockVariableIntBlock(baseBlockSize=43), a33=Standard, a4=MockFixedIntBlock(blockSize=552), a32=MockSep, a5=MockRandom, a39=MockRandom, c40=SimpleText, a6=MockVariableIntBlock(baseBlockSize=43), a38=SimpleText, a7=Standard, a37=MockFixedIntBlock(blockSize=552), a8=SimpleText, a36=MockVariableIntBlock(baseBlockSize=43), c41=MockFixedIntBlock(blockSize=552), c42=Pulsing(freqCutoff=12), c43=MockRandom, c44=MockVariableIntBlock(baseBlockSize=43), c45=SimpleText, a50=MockVariableIntBlock(baseBlockSize=43), c46=MockRandom, a51=MockFixedIntBlock(blockSize=552), c47=MockSep, a52=SimpleText, c48=Standard, a53=MockRandom, b93=MockFixedIntBlock(blockSize=552), d88=MockRandom, c49=MockVariableIntBlock(baseBlockSize=43), b94=Pulsing(freqCutoff=12), d89=MockVariableIntBlock(baseBlockSize=43), b95=MockRandom, b96=MockVariableIntBlock(baseBlockSize=43), d84=Pulsing(freqCutoff=12), b90=SimpleText, d85=MockSep, b91=Pulsing(freqCutoff=12), d86=MockVariableIntBlock(baseBlockSize=43), b92=MockSep, d87=MockFixedIntBlock(blockSize=552), d92=Standard, d91=MockSep, d94=Pulsing(freqCutoff=12), d93=MockFixedIntBlock(blockSize=552), b87=MockFixedIntBlock(blockSize=552), b86=MockVariableIntBlock(baseBlockSize=43), d90=SimpleText, b89=MockRandom, b88=SimpleText, a44=MockVariableIntBlock(baseBlockSize=43), a43=MockRandom, a46=SimpleText, a45=Standard, a48=Standard, a47=MockSep, c51=MockFixedIntBlock(blockSize=552), a49=MockFixedIntBlock(blockSize=552), c50=MockVariableIntBlock(baseBlockSize=43), d98=MockFixedIntBlock(blockSize=552), d97=MockVariableIntBlock(baseBlockSize=43), d96=MockSep, d95=Pulsing(freqCutoff=12), d99=MockRandom, a20=MockVariableIntBlock(baseBlockSize=43), c99=SimpleText, c98=Standard, c97=MockVariableIntBlock(baseBlockSize=43), c96=MockRandom, b19=MockVariableIntBlock(baseBlockSize=43), a16=Pulsing(freqCutoff=12), a17=MockSep, b17=Pulsing(freqCutoff=12), a14=Standard, b18=MockSep, a15=SimpleText, a12=SimpleText, a13=MockRandom, a10=MockVariableIntBlock(baseBlockSize=43), a11=MockFixedIntBlock(blockSize=552), b11=MockFixedIntBlock(blockSize=552), b12=Pulsing(freqCutoff=12), b10=Standard, b15=SimpleText, b16=MockRandom, a18=MockRandom, b13=MockVariableIntBlock(baseBlockSize=43), a19=MockVariableIntBlock(baseBlockSize=43), b14=MockFixedIntBlock(blockSize=552), b30=MockRandom, a31=MockSep, a30=Pulsing(freqCutoff=12), b28=SimpleText, a25=MockVariableIntBlock(baseBlockSize=43), b29=MockRandom, a26=MockFixedIntBlock(blockSize=552), a27=SimpleText, a28=MockRandom, a21=MockSep, a22=Standard, a23=MockFixedIntBlock(blockSize=552), a24=Pulsing(freqCutoff=12), b20=MockRandom, b21=MockVariableIntBlock(baseBlockSize=43), b22=Standard, b23=SimpleText, a29=Pulsing(freqCutoff=12), b24=MockSep, b25=Standard, b26=MockFixedIntBlock(blockSize=552), b27=Pulsing(freqCutoff=12), b41=Pulsing(freqCutoff=12), b40=MockFixedIntBlock(blockSize=552), c77=MockRandom, c76=SimpleText, c75=MockFixedIntBlock(blockSize=552), c74=MockVariableIntBlock(baseBlockSize=43), c79=SimpleText, c78=Standard, c80=MockSep, c83=MockRandom, c84=MockVariableIntBlock(baseBlockSize=43), c81=MockFixedIntBlock(blockSize=552), b39=MockFixedIntBlock(blockSize=552), c82=Pulsing(freqCutoff=12), b37=Standard, b38=SimpleText, b35=MockRandom, b36=MockVariableIntBlock(baseBlockSize=43), b33=MockVariableIntBlock(baseBlockSize=43), b34=MockFixedIntBlock(blockSize=552), b31=Pulsing(freqCutoff=12), b32=MockSep, str2=MockSep, b50=MockVariableIntBlock(baseBlockSize=43), b52=SimpleText, str3=MockVariableIntBlock(baseBlockSize=43), b51=Standard, c86=Standard, tvtest=MockSep, c85=MockSep, c88=Pulsing(freqCutoff=12), c87=MockFixedIntBlock(blockSize=552), c89=MockVariableIntBlock(baseBlockSize=43), c90=SimpleText, c91=MockRandom, c92=Standard, c93=SimpleText, c94=Pulsing(freqCutoff=12), c95=MockSep, content1=MockRandom, b46=Pulsing(freqCutoff=12), b47=MockSep, content3=MockFixedIntBlock(blockSize=552), b48=MockVariableIntBlock(baseBlockSize=43), content4=MockVariableIntBlock(baseBlockSize=43), b49=MockFixedIntBlock(blockSize=552), content5=Pulsing(freqCutoff=12), b42=SimpleText, b43=MockRandom, b44=MockSep, b45=Standard}, locale=sk, timezone=America/Rainy_River\r\n    [junit] NOTE: all tests run in this JVM:\r\n    [junit] [TestDateTools, TestDeletionPolicy, TestDocsAndPositions, TestFlex, TestIndexReaderCloneNorms, TestIndexWriter]\r\n    [junit] NOTE: Linux 2.6.39-gentoo amd64/Sun Microsystems Inc. 1.6.0_25 (64-bit)/cpus=8,threads=1,free=86065896,total=127401984\r\n    [junit] ------------- ---------------- ---------------\r\n    [junit] TEST org.apache.lucene.index.TestIndexWriter FAILED\r\n{code}","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"24826","summary":"TestIndexWriter.testThreadInterruptDeadlock failed (can't reproduce)","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=selckin","name":"selckin","emailAddress":"selckin at selckin dot be","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"selckin","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=selckin","name":"selckin","emailAddress":"selckin at selckin dot be","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"selckin","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":4,"total":4,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509816/comment/13073339","id":"13073339","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=selckin","name":"selckin","emailAddress":"selckin at selckin dot be","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"selckin","active":true},"body":"had this fail a few days ago too but lost the log, hard to repro\r\ntrunk r1152530:\r\n{code}\r\n  [junit] Testsuite: org.apache.lucene.index.TestIndexWriter\r\n    [junit] Testcase: testThreadInterruptDeadlock(org.apache.lucene.index.TestIndexWriter):     FAILED\r\n    [junit] \r\n    [junit] junit.framework.AssertionFailedError: \r\n    [junit]     at org.apache.lucene.index.TestIndexWriter.testThreadInterruptDeadlock(TestIndexWriter.java:1204)\r\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1522)\r\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1427)\r\n    [junit] \r\n    [junit] \r\n    [junit] Tests run: 40, Failures: 1, Errors: 0, Time elapsed: 19.376 sec\r\n    [junit] \r\n    [junit] ------------- Standard Output ---------------\r\n    [junit] CheckIndex failed\r\n    [junit] ERROR: could not read any segments file in directory\r\n    [junit] java.io.FileNotFoundException: segments_27\r\n    [junit]     at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:411)\r\n    [junit]     at org.apache.lucene.index.codecs.DefaultSegmentInfosReader.openInput(DefaultSegmentInfosReader.java:112)\r\n    [junit]     at org.apache.lucene.index.codecs.DefaultSegmentInfosReader.read(DefaultSegmentInfosReader.java:45)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:258)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:288)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:699)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:534)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:284)\r\n    [junit]     at org.apache.lucene.index.CheckIndex.checkIndex(CheckIndex.java:334)\r\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:158)\r\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:148)\r\n    [junit]     at org.apache.lucene.index.TestIndexWriter$IndexerThreadInterrupt.run(TestIndexWriter.java:1155)\r\n    [junit] \r\n    [junit] CheckIndex FAILED: unexpected exception\r\n    [junit] java.lang.RuntimeException: CheckIndex failed\r\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:162)\r\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:148)\r\n    [junit]     at org.apache.lucene.index.TestIndexWriter$IndexerThreadInterrupt.run(TestIndexWriter.java:1155)\r\n    [junit] IndexReader.open FAILED: unexpected exception\r\n    [junit] java.io.FileNotFoundException: segments_27\r\n    [junit]     at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:411)\r\n    [junit]     at org.apache.lucene.index.codecs.DefaultSegmentInfosReader.openInput(DefaultSegmentInfosReader.java:112)\r\n    [junit]     at org.apache.lucene.index.codecs.DefaultSegmentInfosReader.read(DefaultSegmentInfosReader.java:45)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:258)\r\n    [junit]     at org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:90)\r\n    [junit]     at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:699)\r\n    [junit]     at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:86)\r\n    [junit]     at org.apache.lucene.index.IndexReader.open(IndexReader.java:497)\r\n    [junit]     at org.apache.lucene.index.IndexReader.open(IndexReader.java:290)\r\n    [junit]     at org.apache.lucene.index.TestIndexWriter$IndexerThreadInterrupt.run(TestIndexWriter.java:1162)\r\n    [junit] ------------- ---------------- ---------------\r\n    [junit] ------------- Standard Error -----------------\r\n    [junit] NOTE: test params are: codec=RandomCodecProvider: {=MockSep, f6=MockSep, f7=Pulsing(freqCutoff=11), f8=SimpleText, f9=Memory, f1=Memory, f0=SimpleText, f3=Standard, f2=MockRandom, f5=MockVariableIntBlock(baseBlockSize=47), f4=MockFixedIntBlock(blockSize=390), c=Memory, d9=Standard, d8=MockRandom, d5=Pulsing(freqCutoff=11), d4=MockSep, d7=Memory, d6=SimpleText, d25=MockVariableIntBlock(baseBlockSize=47), d0=MockRandom, c29=SimpleText, d24=MockFixedIntBlock(blockSize=390), d1=Standard, c28=Pulsing(freqCutoff=11), d23=Standard, d2=MockFixedIntBlock(blockSize=390), c27=MockSep, d22=MockRandom, d3=MockVariableIntBlock(baseBlockSize=47), d21=Memory, d20=SimpleText, c22=Memory, c21=SimpleText, c20=Pulsing(freqCutoff=11), d29=Memory, c26=MockVariableIntBlock(baseBlockSize=47), d28=SimpleText, c25=MockFixedIntBlock(blockSize=390), d27=Pulsing(freqCutoff=11), c24=Standard, d26=MockSep, c23=MockRandom, e9=MockRandom, e8=Memory, e7=SimpleText, e6=Pulsing(freqCutoff=11), e5=MockSep, c17=Pulsing(freqCutoff=11), e3=MockFixedIntBlock(blockSize=390), d12=Standard, c16=MockSep, e4=MockVariableIntBlock(baseBlockSize=47), d11=MockRandom, c19=Memory, e1=MockRandom, d14=MockVariableIntBlock(baseBlockSize=47), c18=SimpleText, e2=Standard, d13=MockFixedIntBlock(blockSize=390), e0=Memory, d10=Memory, d19=MockRandom, c11=Memory, c10=SimpleText, d16=Pulsing(freqCutoff=11), c13=Standard, d15=MockSep, c12=MockRandom, d18=Memory, c15=MockVariableIntBlock(baseBlockSize=47), d17=SimpleText, c14=MockFixedIntBlock(blockSize=390), b3=Pulsing(freqCutoff=11), b2=MockSep, b5=Memory, b4=SimpleText, b7=Standard, b6=MockRandom, d50=MockVariableIntBlock(baseBlockSize=47), b9=MockVariableIntBlock(baseBlockSize=47), b8=MockFixedIntBlock(blockSize=390), d43=Memory, d42=SimpleText, d41=Pulsing(freqCutoff=11), d40=MockSep, d47=MockVariableIntBlock(baseBlockSize=47), d46=MockFixedIntBlock(blockSize=390), b0=MockFixedIntBlock(blockSize=390), d45=Standard, b1=MockVariableIntBlock(baseBlockSize=47), d44=MockRandom, d49=Pulsing(freqCutoff=11), d48=MockSep, c6=Memory, c5=SimpleText, c4=Pulsing(freqCutoff=11), c3=MockSep, c9=MockFixedIntBlock(blockSize=390), c8=Standard, c7=MockRandom, d30=Pulsing(freqCutoff=11), d32=Memory, d31=SimpleText, c1=MockFixedIntBlock(blockSize=390), d34=Standard, c2=MockVariableIntBlock(baseBlockSize=47), d33=MockRandom, d36=MockVariableIntBlock(baseBlockSize=47), c0=Standard, d35=MockFixedIntBlock(blockSize=390), d38=Pulsing(freqCutoff=11), d37=MockSep, d39=SimpleText, e92=MockFixedIntBlock(blockSize=390), e93=MockVariableIntBlock(baseBlockSize=47), e90=MockRandom, e91=Standard, e89=MockFixedIntBlock(blockSize=390), e88=Standard, e87=MockRandom, e86=Memory, e85=SimpleText, e84=Pulsing(freqCutoff=11), e83=MockSep, e80=Standard, e81=MockFixedIntBlock(blockSize=390), e82=MockVariableIntBlock(baseBlockSize=47), e77=Standard, e76=MockRandom, e79=MockVariableIntBlock(baseBlockSize=47), e78=MockFixedIntBlock(blockSize=390), e73=Pulsing(freqCutoff=11), e72=MockSep, e75=Memory, e74=SimpleText, binary=Pulsing(freqCutoff=11), f98=Standard, f97=MockRandom, f99=MockFixedIntBlock(blockSize=390), f94=Pulsing(freqCutoff=11), f93=MockSep, f96=Memory, f95=SimpleText, e95=Pulsing(freqCutoff=11), e94=MockSep, e97=Memory, e96=SimpleText, e99=Standard, e98=MockRandom, id=Memory, f34=MockVariableIntBlock(baseBlockSize=47), f33=MockFixedIntBlock(blockSize=390), f32=Standard, f31=MockRandom, f30=Memory, f39=MockRandom, f38=Memory, f37=SimpleText, f36=Pulsing(freqCutoff=11), f35=MockSep, f43=Standard, f42=MockRandom, f45=MockVariableIntBlock(baseBlockSize=47), f44=MockFixedIntBlock(blockSize=390), f41=Memory, f40=SimpleText, f47=Pulsing(freqCutoff=11), f46=MockSep, f49=Memory, f48=SimpleText, content=Pulsing(freqCutoff=11), e19=Standard, e18=MockRandom, e17=Memory, f12=MockVariableIntBlock(baseBlockSize=47), e16=SimpleText, f11=MockFixedIntBlock(blockSize=390), e15=Pulsing(freqCutoff=11), f10=Standard, e14=MockSep, f16=Memory, e13=MockVariableIntBlock(baseBlockSize=47), f15=SimpleText, e12=MockFixedIntBlock(blockSize=390), f14=Pulsing(freqCutoff=11), e11=Standard, e10=MockRandom, f13=MockSep, f19=MockFixedIntBlock(blockSize=390), f18=Standard, f17=MockRandom, e29=MockRandom, e26=Pulsing(freqCutoff=11), f21=Standard, e25=MockSep, f20=MockRandom, e28=Memory, f23=MockVariableIntBlock(baseBlockSize=47), e27=SimpleText, f22=MockFixedIntBlock(blockSize=390), f25=Pulsing(freqCutoff=11), e22=Standard, f24=MockSep, e21=MockRandom, f27=Memory, e24=MockVariableIntBlock(baseBlockSize=47), f26=SimpleText, e23=MockFixedIntBlock(blockSize=390), f29=Standard, f28=MockRandom, e20=Memory, field=SimpleText, string=Pulsing(freqCutoff=11), e30=SimpleText, e31=Memory, a98=MockSep, e34=MockFixedIntBlock(blockSize=390), a99=Pulsing(freqCutoff=11), e35=MockVariableIntBlock(baseBlockSize=47), f79=MockSep, e32=MockRandom, e33=Standard, b97=MockSep, f77=MockFixedIntBlock(blockSize=390), e38=SimpleText, b98=Pulsing(freqCutoff=11), f78=MockVariableIntBlock(baseBlockSize=47), e39=Memory, b99=SimpleText, f75=MockRandom, e36=MockSep, f76=Standard, e37=Pulsing(freqCutoff=11), f73=SimpleText, f74=Memory, f71=MockSep, f72=Pulsing(freqCutoff=11), f81=MockVariableIntBlock(baseBlockSize=47), f80=MockFixedIntBlock(blockSize=390), e40=Pulsing(freqCutoff=11), e41=SimpleText, e42=Memory, e43=MockRandom, e44=Standard, e45=MockFixedIntBlock(blockSize=390), e46=MockVariableIntBlock(baseBlockSize=47), f86=MockRandom, e47=MockSep, f87=Standard, e48=Pulsing(freqCutoff=11), f88=MockFixedIntBlock(blockSize=390), e49=SimpleText, f89=MockVariableIntBlock(baseBlockSize=47), f82=MockSep, f83=Pulsing(freqCutoff=11), f84=SimpleText, f85=Memory, f90=Standard, f92=MockVariableIntBlock(baseBlockSize=47), f91=MockFixedIntBlock(blockSize=390), str=Pulsing(freqCutoff=11), a76=MockSep, e56=MockFixedIntBlock(blockSize=390), f59=SimpleText, a77=Pulsing(freqCutoff=11), e57=MockVariableIntBlock(baseBlockSize=47), a78=SimpleText, e54=MockRandom, f57=MockSep, a79=Memory, e55=Standard, f58=Pulsing(freqCutoff=11), e52=SimpleText, e53=Memory, e50=MockSep, e51=Pulsing(freqCutoff=11), f51=SimpleText, f52=Memory, f50=Pulsing(freqCutoff=11), f55=MockFixedIntBlock(blockSize=390), f56=MockVariableIntBlock(baseBlockSize=47), f53=MockRandom, e58=MockSep, f54=Standard, e59=Pulsing(freqCutoff=11), a80=Pulsing(freqCutoff=11), e60=MockVariableIntBlock(baseBlockSize=47), a82=Memory, a81=SimpleText, a84=Standard, a83=MockRandom, a86=MockVariableIntBlock(baseBlockSize=47), a85=MockFixedIntBlock(blockSize=390), a89=SimpleText, f68=MockSep, e65=MockRandom, f69=Pulsing(freqCutoff=11), e66=Standard, a87=MockSep, e67=MockFixedIntBlock(blockSize=390), a88=Pulsing(freqCutoff=11), e68=MockVariableIntBlock(baseBlockSize=47), e61=MockSep, e62=Pulsing(freqCutoff=11), e63=SimpleText, e64=Memory, f60=MockSep, f61=Pulsing(freqCutoff=11), f62=SimpleText, f63=Memory, e69=MockSep, f64=MockRandom, f65=Standard, f66=MockFixedIntBlock(blockSize=390), f67=MockVariableIntBlock(baseBlockSize=47), f70=MockVariableIntBlock(baseBlockSize=47), a93=Memory, a92=SimpleText, a91=Pulsing(freqCutoff=11), e71=MockVariableIntBlock(baseBlockSize=47), a90=MockSep, e70=MockFixedIntBlock(blockSize=390), a97=MockVariableIntBlock(baseBlockSize=47), a96=MockFixedIntBlock(blockSize=390), a95=Standard, a94=MockRandom, a63=MockFixedIntBlock(blockSize=390), c58=MockFixedIntBlock(blockSize=390), a64=MockVariableIntBlock(baseBlockSize=47), c59=MockVariableIntBlock(baseBlockSize=47), c56=MockRandom, d59=MockSep, a61=MockRandom, c57=Standard, a62=Standard, c54=SimpleText, c55=Memory, a60=Memory, c52=MockSep, c53=Pulsing(freqCutoff=11), d53=SimpleText, d54=Memory, d51=MockSep, d52=Pulsing(freqCutoff=11), d57=MockFixedIntBlock(blockSize=390), b62=MockFixedIntBlock(blockSize=390), b63=MockVariableIntBlock(baseBlockSize=47), d58=MockVariableIntBlock(baseBlockSize=47), d55=MockRandom, b60=MockRandom, d56=Standard, b61=Standard, b56=Memory, b55=SimpleText, b54=Pulsing(freqCutoff=11), b53=MockSep, d61=MockVariableIntBlock(baseBlockSize=47), b59=MockFixedIntBlock(blockSize=390), d60=MockFixedIntBlock(blockSize=390), b58=Standard, b57=MockRandom, c62=MockVariableIntBlock(baseBlockSize=47), c61=MockFixedIntBlock(blockSize=390), a59=Standard, c60=Standard, a58=MockRandom, a57=Memory, a56=SimpleText, a55=Pulsing(freqCutoff=11), a54=MockSep, a72=MockRandom, c67=MockRandom, a73=Standard, c68=Standard, a74=MockFixedIntBlock(blockSize=390), c69=MockFixedIntBlock(blockSize=390), a75=MockVariableIntBlock(baseBlockSize=47), c63=MockSep, c64=Pulsing(freqCutoff=11), a70=SimpleText, c65=SimpleText, a71=Memory, c66=Memory, d62=MockSep, d63=Pulsing(freqCutoff=11), d64=SimpleText, b70=Memory, d65=Memory, b71=MockRandom, d66=MockRandom, b72=Standard, d67=Standard, b73=MockFixedIntBlock(blockSize=390), d68=MockFixedIntBlock(blockSize=390), b74=MockVariableIntBlock(baseBlockSize=47), d69=MockVariableIntBlock(baseBlockSize=47), b65=Pulsing(freqCutoff=11), b64=MockSep, b67=Memory, b66=SimpleText, d70=Standard, b69=Standard, b68=MockRandom, d72=MockVariableIntBlock(baseBlockSize=47), d71=MockFixedIntBlock(blockSize=390), c71=Standard, c70=MockRandom, a69=MockRandom, c73=MockVariableIntBlock(baseBlockSize=47), c72=MockFixedIntBlock(blockSize=390), a66=Pulsing(freqCutoff=11), a65=MockSep, a68=Memory, a67=SimpleText, c32=SimpleText, c33=Memory, c30=MockSep, c31=Pulsing(freqCutoff=11), c36=MockFixedIntBlock(blockSize=390), a41=MockFixedIntBlock(blockSize=390), c37=MockVariableIntBlock(baseBlockSize=47), a42=MockVariableIntBlock(baseBlockSize=47), a0=MockVariableIntBlock(baseBlockSize=47), c34=MockRandom, c35=Standard, a40=Standard, b84=MockFixedIntBlock(blockSize=390), d79=MockFixedIntBlock(blockSize=390), b85=MockVariableIntBlock(baseBlockSize=47), b82=MockRandom, d77=MockRandom, c38=MockSep, b83=Standard, d78=Standard, c39=Pulsing(freqCutoff=11), b80=SimpleText, d75=SimpleText, b81=Memory, d76=Memory, d73=MockSep, d74=Pulsing(freqCutoff=11), d83=MockVariableIntBlock(baseBlockSize=47), a9=MockSep, d82=MockFixedIntBlock(blockSize=390), d81=Standard, d80=MockRandom, b79=MockRandom, b78=Memory, b77=SimpleText, b76=Pulsing(freqCutoff=11), b75=MockSep, a1=MockSep, a35=Memory, a2=Pulsing(freqCutoff=11), a34=SimpleText, a3=SimpleText, a33=Pulsing(freqCutoff=11), a4=Memory, a32=MockSep, a5=MockRandom, a39=MockVariableIntBlock(baseBlockSize=47), c40=MockVariableIntBlock(baseBlockSize=47), a6=Standard, a38=MockFixedIntBlock(blockSize=390), a7=MockFixedIntBlock(blockSize=390), a37=Standard, a8=MockVariableIntBlock(baseBlockSize=47), a36=MockRandom, c41=MockSep, c42=Pulsing(freqCutoff=11), c43=SimpleText, c44=Memory, c45=MockRandom, a50=MockRandom, c46=Standard, a51=Standard, c47=MockFixedIntBlock(blockSize=390), a52=MockFixedIntBlock(blockSize=390), c48=MockVariableIntBlock(baseBlockSize=47), a53=MockVariableIntBlock(baseBlockSize=47), b93=MockRandom, d88=MockRandom, c49=MockSep, b94=Standard, d89=Standard, b95=MockFixedIntBlock(blockSize=390), b96=MockVariableIntBlock(baseBlockSize=47), d84=MockSep, b90=Pulsing(freqCutoff=11), d85=Pulsing(freqCutoff=11), b91=SimpleText, d86=SimpleText, b92=Memory, d87=Memory, d92=Standard, d91=MockRandom, d94=MockVariableIntBlock(baseBlockSize=47), d93=MockFixedIntBlock(blockSize=390), b87=Pulsing(freqCutoff=11), b86=MockSep, d90=Memory, b89=Memory, b88=SimpleText, a44=Pulsing(freqCutoff=11), a43=MockSep, a46=Memory, a45=SimpleText, a48=Standard, a47=MockRandom, c51=MockVariableIntBlock(baseBlockSize=47), a49=MockFixedIntBlock(blockSize=390), c50=MockFixedIntBlock(blockSize=390), d98=Memory, d97=SimpleText, d96=Pulsing(freqCutoff=11), d95=MockSep, d99=MockRandom, a20=MockVariableIntBlock(baseBlockSize=47), c99=Memory, c98=SimpleText, c97=Pulsing(freqCutoff=11), c96=MockSep, b19=SimpleText, a16=MockFixedIntBlock(blockSize=390), a17=MockVariableIntBlock(baseBlockSize=47), b17=MockSep, a14=MockRandom, b18=Pulsing(freqCutoff=11), a15=Standard, a12=SimpleText, a13=Memory, a10=MockSep, a11=Pulsing(freqCutoff=11), b11=SimpleText, b12=Memory, b10=Pulsing(freqCutoff=11), b15=MockFixedIntBlock(blockSize=390), b16=MockVariableIntBlock(baseBlockSize=47), a18=MockSep, b13=MockRandom, a19=Pulsing(freqCutoff=11), b14=Standard, b30=MockVariableIntBlock(baseBlockSize=47), a31=MockVariableIntBlock(baseBlockSize=47), a30=MockFixedIntBlock(blockSize=390), b28=MockSep, a25=MockRandom, b29=Pulsing(freqCutoff=11), a26=Standard, a27=MockFixedIntBlock(blockSize=390), a28=MockVariableIntBlock(baseBlockSize=47), a21=MockSep, a22=Pulsing(freqCutoff=11), a23=SimpleText, a24=Memory, b20=MockSep, b21=Pulsing(freqCutoff=11), b22=SimpleText, b23=Memory, a29=MockSep, b24=MockRandom, b25=Standard, b26=MockFixedIntBlock(blockSize=390), b27=MockVariableIntBlock(baseBlockSize=47), b41=MockVariableIntBlock(baseBlockSize=47), b40=MockFixedIntBlock(blockSize=390), c77=Memory, c76=SimpleText, c75=Pulsing(freqCutoff=11), c74=MockSep, c79=Standard, c78=MockRand\r\n\r\nom, c80=Memory, c83=MockFixedIntBlock(blockSize=390), c84=MockVariableIntBlock(baseBlockSize=47), c81=MockRandom, b39=MockSep, c82=Standard, b37=MockFixedIntBlock(blockSize=390), b38=MockVariableIntBlock(baseBlockSize=47), b35=MockRandom, b36=Standard, b33=SimpleText, b34=Memory, b31=MockSep, b32=Pulsing(freqCutoff=11), str2=Pulsing(freqCutoff=11), b50=Standard, b52=MockVariableIntBlock(baseBlockSize=47), str3=SimpleText, b51=MockFixedIntBlock(blockSize=390), c86=Pulsing(freqCutoff=11), c85=MockSep, tvtest=SimpleText, c88=Memory, c87=SimpleText, c89=MockRandom, c90=SimpleText, c91=Memory, c92=MockRandom, c93=Standard, c94=MockFixedIntBlock(blockSize=390), c95=MockVariableIntBlock(baseBlockSize=47), content1=MockFixedIntBlock(blockSize=390), b46=MockRandom, b47=Standard, content3=MockRandom, b48=MockFixedIntBlock(blockSize=390), content4=MockVariableIntBlock(baseBlockSize=47), b49=MockVariableIntBlock(baseBlockSize=47), content5=MockRandom, b42=MockSep, b43=Pulsing(freqCutoff=11), b44=SimpleText, b45=Memory}, locale=ko, timezone=America/Santa_Isabel\r\n    [junit] NOTE: all tests run in this JVM:\r\n    [junit] [TestCharTermAttributeImpl, TestBinaryDocument, TestBackwardsCompatibility, TestCodecs, TestCrash, TestDeletionPolicy, TestIndexInput, TestIndexWriter]\r\n    [junit] NOTE: Linux 2.6.39-gentoo amd64/Sun Microsystems Inc. 1.6.0_26 (64-bit)/cpus=8,threads=1,free=146659256,total=196214784\r\n    [junit] ------------- ---------------- ---------------\r\n    [junit] TEST org.apache.lucene.index.TestIndexWriter FAILED\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=selckin","name":"selckin","emailAddress":"selckin at selckin dot be","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"selckin","active":true},"created":"2011-07-31T10:36:33.143+0000","updated":"2011-07-31T10:36:33.143+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509816/comment/13088711","id":"13088711","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"This just popped in the maven build also on 3.x","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-08-22T14:08:58.404+0000","updated":"2011-08-22T14:08:58.404+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509816/comment/13100407","id":"13100407","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"I think I found the cause here -- we are missing a synchronized around one of the calls to IFD.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2011-09-08T15:49:19.168+0000","updated":"2011-09-08T15:49:19.168+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12509816/comment/13100432","id":"13100432","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Patch, adding missing sync in 2 places.  I also added an assert inside IFD that we hold IW's lock.\r\n\r\nI plan to commit shortly, and port this to 3.4.x.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2011-09-08T16:32:54.460+0000","updated":"2011-09-08T16:32:54.460+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3189/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04lzb:"}}