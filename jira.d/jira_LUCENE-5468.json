{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12535087","self":"https://issues.apache.org/jira/rest/api/latest/issue/12535087","key":"LUCENE-5468","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326269","id":"12326269","description":"Major release after 4.7","name":"4.8","archived":false,"released":true,"releaseDate":"2014-04-28"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321663","id":"12321663","description":"Current trunk","name":"Trunk","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2011-12-14 13:12:30.864","customfield_12312323":null,"customfield_12310420":"220771","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_69710463024_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2014-02-27T22:52:15.508+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-5468/watchers","watchCount":7,"isWatching":false},"created":"2011-12-14T02:51:12.527+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317877","id":"12317877","description":"Major release after 3.4","name":"3.5","archived":false,"released":true,"releaseDate":"2011-11-27"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-04-27T23:25:43.924+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"Hunspell stemmer requires gigantic (for the task) amounts of memory to load dictionary/rules files. \r\nFor example loading a 4.5 MB polish dictionary (with empty index!) will cause whole core to crash with various out of memory errors unless you set max heap size close to 2GB or more.\r\nBy comparison Stempel using the same dictionary file works just fine with 1/8 of that (and possibly lower values as well).\r\n\r\nSample error log entries:\r\nhttp://pastebin.com/fSrdd5W1\r\nhttp://pastebin.com/Lmi0re7Z\r\n","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"18267","summary":"Hunspell very high memory use when loading dictionary","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=c2h5oh","name":"c2h5oh","emailAddress":"c2h5oh at poczta dot fm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Maciej Lisiewski","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=c2h5oh","name":"c2h5oh","emailAddress":"c2h5oh at poczta dot fm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Maciej Lisiewski","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":71,"total":71,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169314","id":"13169314","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nBy comparison Stempel using the same dictionary file works just fine with 1/8 of that (and possibly lower values as well).\r\n{quote}\r\n\r\nI imagine Stempel's Trie is good, but have you also compared Morfologik (http://svn.apache.org/repos/asf/lucene/dev/trunk/modules/analysis/morfologik/) ?\r\nIts precompiled FST might be the most space-efficient for polish.\r\n\r\nBut really I think Hunspell's dictionary structure should be more efficient, we could build the FST on-the-fly (if case-insensitive mode is off). But when \r\nthis is on, entries must be merged.\r\n\r\nInstead it might be better for the hunspell stuff to support loading FSTs (where we would do any case-sensitivity tweaking/merging of entries, then build FST).\r\nIt might be possible to re-use some of the same code from SOLR-2888 that does a similar thing to build a suggester FST.\r\n\r\nIn my opinion its worth it to build the FST not just for the words, but also the affixes (in some files these are humungous too!)\r\n\r\nFor lucene I think we would just allow HunspellDictionary to also be instantiated from these FST inputstreams. The solr factory / configuration would need\r\nto be tweaked to make this easy and intuitive.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-14T13:12:30.864+0000","updated":"2011-12-14T13:12:30.864+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169347","id":"13169347","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Morfologik will be exactly the same size in memory as its unzipped dictionary, so about 1.8MB + 3.5MB if you use both pl (morfologik) and pl-sgjp (morfeusz) dictionaries. These are fixed dictionaries (that is unknown words won't be stemmed) but the coverage is decent for contemporary Polish.\r\n\r\nIf you explain what you're trying to do/ achieve then perhaps we'll be able to give you some more hints.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2011-12-14T13:40:28.689+0000","updated":"2011-12-14T13:40:28.689+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169353","id":"13169353","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"+1 to your idea Robert.  I've been thinking along the same lines that FSTs might help us out here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2011-12-14T13:47:04.373+0000","updated":"2011-12-14T13:47:04.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169356","id":"13169356","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=c2h5oh","name":"c2h5oh","emailAddress":"c2h5oh at poczta dot fm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Maciej Lisiewski","active":true},"body":"The last time I checked Morfologik was just mentioned as a possible new stemmer - I have used it before and I prefer it to Stempel/Hunspell, so I guess this solves my problem for now, thanks :-)\r\n\r\nAs for Hunspell IMHO 2GB heap just to load dictionary makes it borderline unusable for some languages.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=c2h5oh","name":"c2h5oh","emailAddress":"c2h5oh at poczta dot fm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Maciej Lisiewski","active":true},"created":"2011-12-14T13:47:34.999+0000","updated":"2011-12-14T13:48:43.525+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169358","id":"13169358","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nAs for Hunspell IMHO 2GB heap just to load dictionary makes it borderline unusable for some languages.\r\n{quote}\r\n\r\nRight but honestly the original motivation was to get something up quickly when you have no other choice: for minority languages, etc.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-14T13:51:53.082+0000","updated":"2011-12-14T13:51:53.082+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169362","id":"13169362","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"You know what they say these days -- just buy more ram and get rid of the problem by covering it with money :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2011-12-14T13:55:52.214+0000","updated":"2011-12-14T13:55:52.214+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169371","id":"13169371","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"yeah but the HunspellDictionary really is ridiculous if you try to use a large dictionary with it, \r\neven without cutting over to an FST it could probably be improved.\r\n\r\nfor minority languages without really nice dictionaries it probably doesnt matter much, but for\r\nthe languages with really nice dictionaries you also tend to have language-specific options available.\r\n\r\njust another crazy idea: I don't know how much of morfologik is dependent upon polish itself, but \r\nif it already knows how to compile ispell/hunspell into an efficient form and work with it, maybe\r\nwe should just be seeing if we can 'generalize' that and work it from that angle.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-14T14:05:34.523+0000","updated":"2011-12-14T14:05:34.523+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169390","id":"13169390","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"I must disappoint you here -- morfologik simply compiles a list of inflected-base-tag triples, it has no logic for generating these forms from lexical flags/ base dictionaries. Marcin Miłkowski has a set of scripts for that and he, as far as I recall, used aspell/ ispell to \"dump\" all of their forms by feeding the input dictionary basically. I think hunspell provides more intelligent handling of words outside of the dictionary so there's value in it that morfologik doesn't have.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2011-12-14T14:24:51.784+0000","updated":"2011-12-14T14:24:51.784+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169394","id":"13169394","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nMarcin Miłkowski has a set of scripts for that and he, as far as I recall, used aspell/ ispell to \"dump\" all of their forms by feeding the input dictionary basically. I think hunspell provides more intelligent handling of words outside of the dictionary so there's value in it that morfologik doesn't have.\r\n{quote}\r\n\r\nI think what you describe is essentially at a highlevel exactly what the hunspellfilter does. Theoretically there is more intelligent handling possible (correcting spelling), but this isn't implemented, not interesting for search anyway for the most part, and there is definitely no OOV mechanism. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-14T14:29:39.984+0000","updated":"2011-12-14T14:29:39.984+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13169527","id":"13169527","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"You're probably right -- my opinion was based on my inspection of hunspell's source code that I did once or twice in the past -- I remember there's logic to perform more advanced stuff than dictionary lookup, but I never got the full picture if or how it's used.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2011-12-14T17:46:26.306+0000","updated":"2011-12-14T17:46:26.306+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170312","id":"13170312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I'm working on a quick 80/20 stab here. I think it will help a lot.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-15T16:06:41.900+0000","updated":"2011-12-15T16:06:41.900+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170453","id":"13170453","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"here's a patch cutting this thing over to use less ram once its started. but it probably uses more initially when parsing, mainly because we cannot guarantee the input is in sorted order. I think we should fix that, so that jumping thru hoops is the exception rather than the rule:\r\n* we allow multiple dictionary files... is this really needed?\r\n* if you use ignoreCase it means entries can be out of sorted order too.\r\n* in some strange encodings the order in the original file could differ from binary order.\r\n\r\nthe building could just do the 2-phase thing it does now for the crazy cases and be efficient for the 90% case if we clean up.\r\n\r\nThe remaining problems:\r\n* fix existing confusion in the dictionary api (like multiple input files) so that most of the time we can rely upon sorted order.\r\n* solr should never instantiate more than one of the same dictionary across different fields (thats a factory issue, i'm not going to deal with it here, but its just stupid if the factory does this).\r\n* anything in the patch with nocommit, TODO, or bogus should be fixed.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-15T20:01:12.782+0000","updated":"2011-12-15T20:01:12.782+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170725","id":"13170725","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Hey, patch looks cool Robert.\r\n\r\nbq. we allow multiple dictionary files... is this really needed?\r\nI don't think so.\r\n\r\nbq. solr should never instantiate more than one of the same dictionary across different fields (thats a factory issue, i'm not going to deal with it here, but its just stupid if the factory does this)\r\nThats a really good point actually.  Makes me wonder whether there are other files / datastructures in analysis factories that are in the same boat?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2011-12-16T03:07:19.766+0000","updated":"2011-12-16T03:07:19.766+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170741","id":"13170741","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nMakes me wonder whether there are other files / datastructures in analysis factories that are in the same boat?\r\n{quote}\r\n\r\nMaybe synonyms too? I dunno, just seems like if factories implement ResourceLoaderAware, \r\ninstead of calling init() and inform() on all of them, instead they should be able to parse \r\ntheir params in init(), override equals/hashcode based on their parameters, and some mechanism\r\nwould just then reuse existing ones instead of creating duplicates.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-16T03:38:28.766+0000","updated":"2011-12-16T03:38:28.766+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170817","id":"13170817","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Looks good to me from looking at the diff. Btw., we really should pull out the getOutputForInput(FST, input) logic currently present in lookupOrd somewhere where it's reusable -- I've seen it in a few places (or needed it a few times)... ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2011-12-16T07:54:27.934+0000","updated":"2011-12-16T07:54:27.934+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170865","id":"13170865","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=janhoy","name":"janhoy","emailAddress":"jh at cominvent dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=janhoy&avatarId=10130","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=janhoy&avatarId=10130","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=janhoy&avatarId=10130","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=janhoy&avatarId=10130"},"displayName":"Jan Høydahl","active":true},"body":"Background for supporting multiple dictionaries is here: http://code.google.com/p/lucene-hunspell/issues/detail?id=4 and is invaluable for adding local customizations or overrides without touching the official dictionaries.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=janhoy","name":"janhoy","emailAddress":"jh at cominvent dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=janhoy&avatarId=10130","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=janhoy&avatarId=10130","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=janhoy&avatarId=10130","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=janhoy&avatarId=10130"},"displayName":"Jan Høydahl","active":true},"created":"2011-12-16T09:43:50.246+0000","updated":"2011-12-16T09:43:50.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170886","id":"13170886","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"at least the local override/customizations files can surely require sorted order? \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-16T10:24:34.449+0000","updated":"2011-12-16T10:24:34.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170906","id":"13170906","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=c2h5oh","name":"c2h5oh","emailAddress":"c2h5oh at poczta dot fm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Maciej Lisiewski","active":true},"body":"Those overrides/customizations will be tiny when compared to the main dictionary - is the sorting really an issue here?\r\nSimple example: default PL dictionary is close to 200k words. Largest custom dictionaries (legal, military, medical) will be 5-10k words (I'm basing those estimates on the best sources that I have found to generate those dictionaries from). In most cases we should expect <1k words. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=c2h5oh","name":"c2h5oh","emailAddress":"c2h5oh at poczta dot fm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Maciej Lisiewski","active":true},"created":"2011-12-16T11:24:02.559+0000","updated":"2011-12-16T11:24:02.559+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170911","id":"13170911","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nThose overrides/customizations will be tiny when compared to the main dictionary - is the sorting really an issue here?\r\n{quote}\r\n\r\nDoesn't matter here, our FST requires that it be built in-order. doesn't matter if even one single word is out of order.\r\n\r\nbecause of this, we can't build the data structure efficiently.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-16T11:27:34.829+0000","updated":"2011-12-16T11:27:34.829+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170917","id":"13170917","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=c2h5oh","name":"c2h5oh","emailAddress":"c2h5oh at poczta dot fm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Maciej Lisiewski","active":true},"body":"What I was trying to say is that the custom dictionaries are small enough to be loaded and sorted in memory before building FST.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=c2h5oh","name":"c2h5oh","emailAddress":"c2h5oh at poczta dot fm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Maciej Lisiewski","active":true},"created":"2011-12-16T11:38:08.575+0000","updated":"2011-12-16T11:38:08.575+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170918","id":"13170918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Also, its required by the hunspell format itself. So this is not crazy to enforce.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-16T11:39:26.048+0000","updated":"2011-12-16T11:39:26.048+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170921","id":"13170921","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"I don't see any problem mandating that overrides/customizations adhere to a sorted order.  I don't think we can assume custom dictionaries are going to be small - there's nothing in the APIs which force that.  Using FSTs gives us the performance benefit we're seeking in this issue, I think the small sacrifice is worth the huge benefit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2011-12-16T11:41:25.647+0000","updated":"2011-12-16T11:41:25.647+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170926","id":"13170926","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"You can always sort inside your application if you're not sure if the words come or not in sorted order, Maciej. Lucene/Solr now even has on-disk merge sort which you can use for large(r) data sets -- this code is along FSTCompletion in trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2011-12-16T11:59:14.876+0000","updated":"2011-12-16T11:59:14.876+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170927","id":"13170927","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"note: in some cases we will still have to use the throwaway treemap or similar like the patch i uploaded does.\r\n\r\nbut we could then know these two cases up front:\r\n* someone enables ignoreCase=true\r\n* when binary sort order of the charset != utf8 binary order\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-16T11:59:33.426+0000","updated":"2011-12-16T11:59:33.426+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13170928","id":"13170928","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nYou can always sort inside your application if you're not sure if the words come or not in sorted order, Maciej\r\n{quote}\r\n\r\nWell someone has to sort to 'test' any dictionary customizations with hunspells tools anyway.\r\n\r\nSo i assume people are already doing 'sort foo.dic my_foo_customizations.dic > combined.dic' then using 'analyze'\r\nand other commands to test... otherwise how are they testing their customizations ?! ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2011-12-16T12:03:10.663+0000","updated":"2011-12-16T12:03:10.663+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13559680","id":"13559680","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=maho","name":"maho","emailAddress":"heinun at gmx dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mathias H.","active":true},"body":"Dictionaries with the same file location should be shared across all field and all indexes. This would minimize the problem if you're using multiple indexes. \r\n\r\nCurrently I can't use Solr because I have 10 indexes with 5 field and for each field a DictionaryCompoundWordTokenFilterFactory is assigned. So the dictionary will be loaded 50 times. This is too much for my RAM.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=maho","name":"maho","emailAddress":"heinun at gmx dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mathias H.","active":true},"created":"2013-01-22T14:42:57.304+0000","updated":"2013-01-22T14:42:57.304+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13804030","id":"13804030","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=maho","name":"maho","emailAddress":"heinun at gmx dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mathias H.","active":true},"body":"I now solved the problem in my special case. I wrote a custom TokenFilterFactory that wraps the DictionaryCompoundWordTokenFilterFactory / HunspellStemFilterFactory and caches the factories, so they will be reused across indexes and fieldtypes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=maho","name":"maho","emailAddress":"heinun at gmx dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mathias H.","active":true},"created":"2013-10-24T10:10:05.062+0000","updated":"2013-10-24T10:10:05.062+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13909908","id":"13909908","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I don't think we should let some esoteric options like multiple dictionaries keep this stuff unusable.\r\n\r\nSo I'm happy to just fork the entire stuff into a different package (hunspell2 or something), so we have a reasonably efficient version that doesnt have these esoteric options. The old stuff can stay as is, i do not care.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-23T21:29:47.034+0000","updated":"2014-02-23T21:29:47.034+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13909943","id":"13909943","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Multiple dictionaries was never in the original design either.  Having an efficient and usable design seems to be of higher priority so +1 to not forking and doing this in place.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2014-02-24T00:17:28.017+0000","updated":"2014-02-24T00:17:28.017+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13909949","id":"13909949","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Well, I don't want the whole issue to get hung up on that stuff. Basically i'm working on a number of changes (especially tests though, to ensure the stuff is really working correctly). If we want, we can just lay down my new files on top of the existing stuff, or we can keep it/deprecate it, whatever we want to do. \r\n\r\nI just want to make some progress on a few improvements I've been investigating to try to make this thing more usable :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-24T00:31:56.699+0000","updated":"2014-02-24T00:31:56.699+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13909952","id":"13909952","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Sounds good","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2014-02-24T00:35:19.695+0000","updated":"2014-02-24T00:35:19.695+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13910015","id":"13910015","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1571137 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1571137 ]\r\n\r\nLUCENE-5468: commit current state","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-24T04:41:05.328+0000","updated":"2014-02-24T04:41:05.328+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13910017","id":"13910017","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I brought the previous FST patch up to speed, and then built a test to parse many dictionaries and compare memory. When it says FAIL, thats because the current code can't parse the dictionary (i fixed all the issues here).\r\n\r\nIn general, RAM use is better, but in some cases its still bad because of how the affixes are represented. I still havent removed my Treemap yet either (i wanted to have a way to test all the dictionaries like this before really locking things down).\r\n\r\n||dict||old RAM||new RAM||\r\n|af_ZA.zip|18 MB|899 KB|\r\n|ak_GH.zip|1.5 MB|71 KB|\r\n|bg_BG.zip|FAIL|1.1 MB|\r\n|ca_ANY.zip|28.9 MB|1.2 MB|\r\n|ca_ES.zip|15.1 MB|1.2 MB|\r\n|cop_EG.zip|2.1 MB|489.3 KB|\r\n|cs_CZ.zip|50.4 MB|2.8 MB|\r\n|cy_GB.zip|FAIL|1.6 MB|\r\n|da_DK.zip|FAIL|750.8 KB|\r\n|de_AT.zip|1.3 MB|293.1 KB|\r\n|de_CH.zip|12.6 MB|895.6 KB|\r\n|de_DE.zip|12.6 MB|895 KB|\r\n|de_DE_comb.zip|102.2 MB|4.8 MB|\r\n|de_DE_frami.zip|20.9 MB|1.2 MB|\r\n|de_DE_neu.zip|101.5 MB|4.8 MB|\r\n|el_GR.zip|74.3 MB|1.1 MB|\r\n|en_AU.zip|8.1 MB|1.2 MB|\r\n|en_CA.zip|9.8 MB|436.7 KB|\r\n|en_GB-oed.zip|8.2 MB|1.2 MB|\r\n|en_GB.zip|8.3 MB|1.2 MB|\r\n|en_NZ.zip|8.4 MB|1.2 MB|\r\n|eo.zip|4.9 MB|1.3 MB|\r\n|eo_EO.zip|4.9 MB|1.3 MB|\r\n|es_AR.zip|14.8 MB|3.9 MB|\r\n|es_BO.zip|14.8 MB|3.9 MB|\r\n|es_CL.zip|14.7 MB|3.9 MB|\r\n|es_CO.zip|14.3 MB|3.8 MB|\r\n|es_CR.zip|14.8 MB|3.9 MB|\r\n|es_CU.zip|14.7 MB|3.9 MB|\r\n|es_DO.zip|14.7 MB|3.9 MB|\r\n|es_EC.zip|14.8 MB|3.9 MB|\r\n|es_ES.zip|15.1 MB|4.1 MB|\r\n|es_GT.zip|14.8 MB|3.9 MB|\r\n|es_HN.zip|14.8 MB|3.9 MB|\r\n|es_MX.zip|14.3 MB|3.8 MB|\r\n|es_NEW.zip|15.5 MB|4.2 MB|\r\n|es_NI.zip|14.8 MB|3.9 MB|\r\n|es_PA.zip|14.8 MB|3.9 MB|\r\n|es_PE.zip|14.2 MB|3.8 MB|\r\n|es_PR.zip|14.7 MB|3.9 MB|\r\n|es_PY.zip|14.8 MB|3.9 MB|\r\n|es_SV.zip|14.8 MB|3.9 MB|\r\n|es_UY.zip|14.8 MB|3.9 MB|\r\n|es_VE.zip|14.3 MB|3.8 MB|\r\n|et_EE.zip|53.6 MB|5.9 MB|\r\n|fo_FO.zip|18.6 MB|485.7 KB|\r\n|fr_FR-1990_1-3-2.zip|14 MB|636.4 KB|\r\n|fr_FR-classique_1-3-2.zip|14 MB|743.1 KB|\r\n|fr_FR_1-3-2.zip|14.5 MB|755.2 KB|\r\n|fy_NL.zip|4.2 MB|272.8 KB|\r\n|ga_IE.zip|14 MB|674.8 KB|\r\n|gd_GB.zip|2.7 MB|111 KB|\r\n|gl_ES.zip|FAIL|1.2 MB|\r\n|gsc_FR.zip|FAIL|1.4 MB|\r\n|gu_IN.zip|20.3 MB|914.9 KB|\r\n|he_IL.zip|53.3 MB|1.8 MB|\r\n|hi_IN.zip|2.7 MB|136.9 KB|\r\n|hil_PH.zip|3.4 MB|164.8 KB|\r\n|hr_HR.zip|29.7 MB|564.8 KB|\r\n|hu_HU.zip|FAIL|17.6 MB|\r\n|hu_HU_comb.zip|FAIL|19.9 MB|\r\n|ia.zip|4.9 MB|211.9 KB|\r\n|id_ID.zip|3.9 MB|218.4 KB|\r\n|it_IT.zip|15.3 MB|1.6 MB|\r\n|ku_TR.zip|1.6 MB|147.6 KB|\r\n|la.zip|5.1 MB|2.5 MB|\r\n|lt_LT.zip|15 MB|2.8 MB|\r\n|lv_LV.zip|36.3 MB|1.9 MB|\r\n|mg_MG.zip|2.9 MB|131.7 KB|\r\n|mi_NZ.zip|FAIL|171.2 KB|\r\n|mk_MK.zip|FAIL|436.9 KB|\r\n|mos_BF.zip|13.3 MB|210 KB|\r\n|mr_IN.zip|FAIL|115.5 KB|\r\n|ms_MY.zip|4.1 MB|221.6 KB|\r\n|nb_NO.zip|22.9 MB|1.4 MB|\r\n|ne_NP.zip|5.5 MB|495.6 KB|\r\n|nl_NL.zip|22.9 MB|1.1 MB|\r\n|nl_med.zip|1.2 MB|60.2 KB|\r\n|nn_NO.zip|16.5 MB|1 MB|\r\n|nr_ZA.zip|3.1 MB|171.1 KB|\r\n|ns_ZA.zip|1.7 MB|85.8 KB|\r\n|ny_MW.zip|FAIL|69.6 KB|\r\n|oc_FR.zip|9.1 MB|690.5 KB|\r\n|pl_PL.zip|43.9 MB|4.9 MB|\r\n|pt_BR.zip|FAIL|3.9 MB|\r\n|pt_PT.zip|5.8 MB|773.4 KB|\r\n|ro_RO.zip|5.1 MB|226.2 KB|\r\n|ru_RU.zip|21.7 MB|1.4 MB|\r\n|ru_RU_ye.zip|43.7 MB|1.6 MB|\r\n|ru_RU_yo.zip|21.7 MB|1.4 MB|\r\n|rw_RW.zip|1.6 MB|70.1 KB|\r\n|sk_SK.zip|25.1 MB|2.3 MB|\r\n|sl_SI.zip|38.3 MB|806.6 KB|\r\n|sq_AL.zip|28.9 MB|654.6 KB|\r\n|ss_ZA.zip|3.1 MB|176.3 KB|\r\n|st_ZA.zip|1.7 MB|86.5 KB|\r\n|sv_SE.zip|9.5 MB|668.8 KB|\r\n|sw_KE.zip|6.3 MB|286 KB|\r\n|tet_ID.zip|2 MB|92.4 KB|\r\n|th_TH.zip|FAIL|377.4 KB|\r\n|tl_PH.zip|2.6 MB|116.5 KB|\r\n|tn_ZA.zip|1.5 MB|61.6 KB|\r\n|ts_ZA.zip|1.6 MB|81 KB|\r\n|uk_UA.zip|17.6 MB|3 MB|\r\n|ve_ZA.zip|FAIL|108.8 KB|\r\n|vi_VN.zip|1.7 MB|53.6 KB|\r\n|xh_ZA.zip|3 MB|158.9 KB|\r\n|zu_ZA.zip|24.5 MB|13.5 MB|\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-24T04:45:05.063+0000","updated":"2014-02-24T04:45:05.063+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13910413","id":"13910413","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1571321 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1571321 ]\r\n\r\nLUCENE-5468: factor OfflineSorter out of suggest","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-24T15:45:09.107+0000","updated":"2014-02-24T15:45:09.107+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13910509","id":"13910509","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1571356 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1571356 ]\r\n\r\nLUCENE-5468: sort dictionary data with offline sorter","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-24T17:11:09.309+0000","updated":"2014-02-24T17:11:09.309+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13911914","id":"13911914","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1571788 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1571788 ]\r\n\r\nLUCENE-5468: deduplicate patterns used by affix condition check","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-25T19:18:10.939+0000","updated":"2014-02-25T19:18:10.939+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13911953","id":"13911953","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1571802 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1571802 ]\r\n\r\nLUCENE-5468: remove redundant 'append' in Affix","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-25T19:44:33.820+0000","updated":"2014-02-25T19:44:33.820+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13911985","id":"13911985","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1571807 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1571807 ]\r\n\r\nLUCENE-5468: Stem -> CharsRef","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-25T20:07:07.246+0000","updated":"2014-02-25T20:07:07.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13912169","id":"13912169","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1571844 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1571844 ]\r\n\r\nLUCENE-5468: make Affix fixed-width","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-25T22:29:29.166+0000","updated":"2014-02-25T22:29:29.166+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13914696","id":"13914696","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1572643 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1572643 ]\r\n\r\nLUCENE-5468: don't create unnecessary objects","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-27T16:19:22.647+0000","updated":"2014-02-27T16:19:22.647+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13914755","id":"13914755","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1572660 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1572660 ]\r\n\r\nLUCENE-5468: encode affix data as 8 bytes per affix, before cutting over to FST","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-27T17:19:17.427+0000","updated":"2014-02-27T17:19:17.427+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13914795","id":"13914795","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1572666 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1572666 ]\r\n\r\nLUCENE-5468: convert affixes to FST","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-27T17:53:31.685+0000","updated":"2014-02-27T17:53:31.685+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13914799","id":"13914799","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I am finished compressing for now. I think its pretty reasonable across all the languages.\r\n\r\nI will cleanup and try to add back the multiple dictionary/ignore case stuff and clean up some other things.\r\n\r\n||dict||old RAM||new RAM||\r\n|af_ZA.zip|18 MB|917.1 KB|\r\n|ak_GH.zip|1.5 MB|103.2 KB|\r\n|bg_BG.zip|FAIL|465.7 KB|\r\n|ca_ANY.zip|28.9 MB|675.4 KB|\r\n|ca_ES.zip|15.1 MB|639.8 KB|\r\n|cop_EG.zip|2.1 MB|144.5 KB|\r\n|cs_CZ.zip|50.4 MB|1.5 MB|\r\n|cy_GB.zip|FAIL|627.4 KB|\r\n|da_DK.zip|FAIL|669.8 KB|\r\n|de_AT.zip|1.3 MB|123.9 KB|\r\n|de_CH.zip|12.6 MB|725.4 KB|\r\n|de_DE.zip|12.6 MB|726 KB|\r\n|de_DE_comb.zip|102.2 MB|4.2 MB|\r\n|de_DE_frami.zip|20.9 MB|1023.5 KB|\r\n|de_DE_neu.zip|101.5 MB|4.2 MB|\r\n|el_GR.zip|74.3 MB|1 MB|\r\n|en_AU.zip|8.1 MB|521 KB|\r\n|en_CA.zip|9.8 MB|450.5 KB|\r\n|en_GB-oed.zip|8.2 MB|526.6 KB|\r\n|en_GB.zip|8.3 MB|527.3 KB|\r\n|en_NZ.zip|8.4 MB|532.4 KB|\r\n|eo.zip|4.9 MB|310.5 KB|\r\n|eo_EO.zip|4.9 MB|310.5 KB|\r\n|es_AR.zip|14.8 MB|734.9 KB|\r\n|es_BO.zip|14.8 MB|735 KB|\r\n|es_CL.zip|14.7 MB|734.9 KB|\r\n|es_CO.zip|14.3 MB|722.1 KB|\r\n|es_CR.zip|14.8 MB|733.9 KB|\r\n|es_CU.zip|14.7 MB|732.8 KB|\r\n|es_DO.zip|14.7 MB|731.9 KB|\r\n|es_EC.zip|14.8 MB|733.5 KB|\r\n|es_ES.zip|15.1 MB|743 KB|\r\n|es_GT.zip|14.8 MB|734.5 KB|\r\n|es_HN.zip|14.8 MB|735.2 KB|\r\n|es_MX.zip|14.3 MB|723.8 KB|\r\n|es_NEW.zip|15.5 MB|768.5 KB|\r\n|es_NI.zip|14.8 MB|734.5 KB|\r\n|es_PA.zip|14.8 MB|733.8 KB|\r\n|es_PE.zip|14.2 MB|721.3 KB|\r\n|es_PR.zip|14.7 MB|732.4 KB|\r\n|es_PY.zip|14.8 MB|734.1 KB|\r\n|es_SV.zip|14.8 MB|733.6 KB|\r\n|es_UY.zip|14.8 MB|736.9 KB|\r\n|es_VE.zip|14.3 MB|722.7 KB|\r\n|et_EE.zip|53.6 MB|473.6 KB|\r\n|fo_FO.zip|18.6 MB|517.9 KB|\r\n|fr_FR-1990_1-3-2.zip|14 MB|526.7 KB|\r\n|fr_FR-classique_1-3-2.zip|14 MB|539.2 KB|\r\n|fr_FR_1-3-2.zip|14.5 MB|550.4 KB|\r\n|fy_NL.zip|4.2 MB|265.6 KB|\r\n|ga_IE.zip|14 MB|460.6 KB|\r\n|gd_GB.zip|2.7 MB|143.1 KB|\r\n|gl_ES.zip|FAIL|479.4 KB|\r\n|gsc_FR.zip|FAIL|1.3 MB|\r\n|gu_IN.zip|20.3 MB|947 KB|\r\n|he_IL.zip|53.3 MB|539.2 KB|\r\n|hi_IN.zip|2.7 MB|169 KB|\r\n|hil_PH.zip|3.4 MB|197 KB|\r\n|hr_HR.zip|29.7 MB|573 KB|\r\n|hu_HU.zip|FAIL|1.2 MB|\r\n|hu_HU_comb.zip|FAIL|5.4 MB|\r\n|ia.zip|4.9 MB|222.9 KB|\r\n|id_ID.zip|3.9 MB|226.3 KB|\r\n|it_IT.zip|15.3 MB|612.9 KB|\r\n|ku_TR.zip|1.6 MB|118.7 KB|\r\n|la.zip|5.1 MB|199.3 KB|\r\n|lt_LT.zip|15 MB|682.5 KB|\r\n|lv_LV.zip|36.3 MB|763.9 KB|\r\n|mg_MG.zip|2.9 MB|163.8 KB|\r\n|mi_NZ.zip|FAIL|191.4 KB|\r\n|mk_MK.zip|FAIL|469.1 KB|\r\n|mos_BF.zip|13.3 MB|242.2 KB|\r\n|mr_IN.zip|FAIL|147.7 KB|\r\n|ms_MY.zip|4.1 MB|226.9 KB|\r\n|nb_NO.zip|22.9 MB|1.2 MB|\r\n|ne_NP.zip|5.5 MB|328.1 KB|\r\n|nl_NL.zip|22.9 MB|1.1 MB|\r\n|nl_med.zip|1.2 MB|92.3 KB|\r\n|nn_NO.zip|16.5 MB|914 KB|\r\n|nr_ZA.zip|3.1 MB|203.3 KB|\r\n|ns_ZA.zip|1.7 MB|118 KB|\r\n|ny_MW.zip|FAIL|101.8 KB|\r\n|oc_FR.zip|9.1 MB|401.5 KB|\r\n|pl_PL.zip|43.9 MB|1.7 MB|\r\n|pt_BR.zip|FAIL|2.1 MB|\r\n|pt_PT.zip|5.8 MB|379.4 KB|\r\n|ro_RO.zip|5.1 MB|256.3 KB|\r\n|ru_RU.zip|21.7 MB|882 KB|\r\n|ru_RU_ye.zip|43.7 MB|1.5 MB|\r\n|ru_RU_yo.zip|21.7 MB|897.3 KB|\r\n|rw_RW.zip|1.6 MB|102.3 KB|\r\n|sk_SK.zip|25.1 MB|1.2 MB|\r\n|sl_SI.zip|38.3 MB|604 KB||af_ZA.zip|18 MB|917.1 KB|\r\n|ak_GH.zip|1.5 MB|103.2 KB|\r\n|bg_BG.zip|FAIL|465.7 KB|\r\n|ca_ANY.zip|28.9 MB|675.4 KB|\r\n|ca_ES.zip|15.1 MB|639.8 KB|\r\n|cop_EG.zip|2.1 MB|144.5 KB|\r\n|cs_CZ.zip|50.4 MB|1.5 MB|\r\n|cy_GB.zip|FAIL|627.4 KB|\r\n|da_DK.zip|FAIL|669.8 KB|\r\n|de_AT.zip|1.3 MB|123.9 KB|\r\n|de_CH.zip|12.6 MB|725.4 KB|\r\n|de_DE.zip|12.6 MB|726 KB|\r\n|de_DE_comb.zip|102.2 MB|4.2 MB|\r\n|de_DE_frami.zip|20.9 MB|1023.5 KB|\r\n|de_DE_neu.zip|101.5 MB|4.2 MB|\r\n|el_GR.zip|74.3 MB|1 MB|\r\n|en_AU.zip|8.1 MB|521 KB|\r\n|en_CA.zip|9.8 MB|450.5 KB|\r\n|en_GB-oed.zip|8.2 MB|526.6 KB|\r\n|en_GB.zip|8.3 MB|527.3 KB|\r\n|en_NZ.zip|8.4 MB|532.4 KB|\r\n|eo.zip|4.9 MB|310.5 KB|\r\n|eo_EO.zip|4.9 MB|310.5 KB|\r\n|es_AR.zip|14.8 MB|734.9 KB|\r\n|es_BO.zip|14.8 MB|735 KB|\r\n|es_CL.zip|14.7 MB|734.9 KB|\r\n|es_CO.zip|14.3 MB|722.1 KB|\r\n|es_CR.zip|14.8 MB|733.9 KB|\r\n|es_CU.zip|14.7 MB|732.8 KB|\r\n|es_DO.zip|14.7 MB|731.9 KB|\r\n|es_EC.zip|14.8 MB|733.5 KB|\r\n|es_ES.zip|15.1 MB|743 KB|\r\n|es_GT.zip|14.8 MB|734.5 KB|\r\n|es_HN.zip|14.8 MB|735.2 KB|\r\n|es_MX.zip|14.3 MB|723.8 KB|\r\n|es_NEW.zip|15.5 MB|768.5 KB|\r\n|es_NI.zip|14.8 MB|734.5 KB|\r\n|es_PA.zip|14.8 MB|733.8 KB|\r\n|es_PE.zip|14.2 MB|721.3 KB|\r\n|es_PR.zip|14.7 MB|732.4 KB|\r\n|es_PY.zip|14.8 MB|734.1 KB|\r\n|es_SV.zip|14.8 MB|733.6 KB|\r\n|es_UY.zip|14.8 MB|736.9 KB|\r\n|es_VE.zip|14.3 MB|722.7 KB|\r\n|et_EE.zip|53.6 MB|473.6 KB|\r\n|fo_FO.zip|18.6 MB|517.9 KB|\r\n|fr_FR-1990_1-3-2.zip|14 MB|526.7 KB|\r\n|fr_FR-classique_1-3-2.zip|14 MB|539.2 KB|\r\n|fr_FR_1-3-2.zip|14.5 MB|550.4 KB|\r\n|fy_NL.zip|4.2 MB|265.6 KB|\r\n|ga_IE.zip|14 MB|460.6 KB|\r\n|gd_GB.zip|2.7 MB|143.1 KB|\r\n|gl_ES.zip|FAIL|479.4 KB|\r\n|gsc_FR.zip|FAIL|1.3 MB|\r\n|gu_IN.zip|20.3 MB|947 KB|\r\n|he_IL.zip|53.3 MB|539.2 KB|\r\n|hi_IN.zip|2.7 MB|169 KB|\r\n|hil_PH.zip|3.4 MB|197 KB|\r\n|hr_HR.zip|29.7 MB|573 KB|\r\n|hu_HU.zip|FAIL|1.2 MB|\r\n|hu_HU_comb.zip|FAIL|5.4 MB|\r\n|ia.zip|4.9 MB|222.9 KB|\r\n|id_ID.zip|3.9 MB|226.3 KB|\r\n|it_IT.zip|15.3 MB|612.9 KB|\r\n|ku_TR.zip|1.6 MB|118.7 KB|\r\n|la.zip|5.1 MB|199.3 KB|\r\n|lt_LT.zip|15 MB|682.5 KB|\r\n|lv_LV.zip|36.3 MB|763.9 KB|\r\n|mg_MG.zip|2.9 MB|163.8 KB|\r\n|mi_NZ.zip|FAIL|191.4 KB|\r\n|mk_MK.zip|FAIL|469.1 KB|\r\n|mos_BF.zip|13.3 MB|242.2 KB|\r\n|mr_IN.zip|FAIL|147.7 KB|\r\n|ms_MY.zip|4.1 MB|226.9 KB|\r\n|nb_NO.zip|22.9 MB|1.2 MB|\r\n|ne_NP.zip|5.5 MB|328.1 KB|\r\n|nl_NL.zip|22.9 MB|1.1 MB|\r\n|nl_med.zip|1.2 MB|92.3 KB|\r\n|nn_NO.zip|16.5 MB|914 KB|\r\n|nr_ZA.zip|3.1 MB|203.3 KB|\r\n|ns_ZA.zip|1.7 MB|118 KB|\r\n|ny_MW.zip|FAIL|101.8 KB|\r\n|oc_FR.zip|9.1 MB|401.5 KB|\r\n|pl_PL.zip|43.9 MB|1.7 MB|\r\n|pt_BR.zip|FAIL|2.1 MB|\r\n|pt_PT.zip|5.8 MB|379.4 KB|\r\n|ro_RO.zip|5.1 MB|256.3 KB|\r\n|ru_RU.zip|21.7 MB|882 KB|\r\n|ru_RU_ye.zip|43.7 MB|1.5 MB|\r\n|ru_RU_yo.zip|21.7 MB|897.3 KB|\r\n|rw_RW.zip|1.6 MB|102.3 KB|\r\n|sk_SK.zip|25.1 MB|1.2 MB|\r\n|sl_SI.zip|38.3 MB|604 KB|\r\n|sq_AL.zip|28.9 MB|581.7 KB|\r\n|ss_ZA.zip|3.1 MB|208.5 KB|\r\n|st_ZA.zip|1.7 MB|118.7 KB|\r\n|sv_SE.zip|9.5 MB|535.4 KB|\r\n|sw_KE.zip|6.3 MB|318.2 KB|\r\n|tet_ID.zip|2 MB|124.5 KB|\r\n|th_TH.zip|FAIL|409.6 KB|\r\n|tl_PH.zip|2.6 MB|148.7 KB|\r\n|tn_ZA.zip|1.5 MB|93.7 KB|\r\n|ts_ZA.zip|1.6 MB|113.1 KB|\r\n|uk_UA.zip|17.6 MB|979.1 KB|\r\n|ve_ZA.zip|FAIL|140.9 KB|\r\n|vi_VN.zip|1.7 MB|85.8 KB|\r\n|xh_ZA.zip|3 MB|191.1 KB|\r\n|zu_ZA.zip|24.5 MB|827.1 KB|\r\n\r\n|sq_AL.zip|28.9 MB|581.7 KB|\r\n|ss_ZA.zip|3.1 MB|208.5 KB|\r\n|st_ZA.zip|1.7 MB|118.7 KB|\r\n|sv_SE.zip|9.5 MB|535.4 KB|\r\n|sw_KE.zip|6.3 MB|318.2 KB|\r\n|tet_ID.zip|2 MB|124.5 KB|\r\n|th_TH.zip|FAIL|409.6 KB|\r\n|tl_PH.zip|2.6 MB|148.7 KB|\r\n|tn_ZA.zip|1.5 MB|93.7 KB|\r\n|ts_ZA.zip|1.6 MB|113.1 KB|\r\n|uk_UA.zip|17.6 MB|979.1 KB|\r\n|ve_ZA.zip|FAIL|140.9 KB|\r\n|vi_VN.zip|1.7 MB|85.8 KB|\r\n|xh_ZA.zip|3 MB|191.1 KB|\r\n|zu_ZA.zip|24.5 MB|827.1 KB|\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-27T17:57:35.129+0000","updated":"2014-02-27T17:57:35.129+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13914954","id":"13914954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Those are some pretty amazing reductions, well done!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2014-02-27T19:38:19.328+0000","updated":"2014-02-27T19:38:19.328+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13914960","id":"13914960","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I have the previous options added back too locally. so i will fix up tests and so on and just copy over the old filter and make a patch. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-27T19:41:39.291+0000","updated":"2014-02-27T19:41:39.291+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915004","id":"13915004","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1572718 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1572718 ]\r\n\r\nLUCENE-5468: hunspell2 -> hunspell (with previous options and tests)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-27T20:19:29.134+0000","updated":"2014-02-27T20:19:29.134+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915025","id":"13915025","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1572724 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1572724 ]\r\n\r\nLUCENE-5468: fix precommit+test","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-27T20:39:36.501+0000","updated":"2014-02-27T20:39:36.501+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915028","id":"13915028","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1572727 from [~rcmuir] in branch 'dev/branches/lucene5468'\r\n[ https://svn.apache.org/r1572727 ]\r\n\r\nLUCENE-5468: add additional change","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-27T20:42:53.473+0000","updated":"2014-02-27T20:42:53.473+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915033","id":"13915033","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I think the change is ready. There are other improvements that can be done (for example, maybe an option for the factory to cache these things in case you use same ones across multiple fields, and more efficient affix handling against the FST, and so on), but it would be better on different issues I think?\r\n\r\nHere is a patch (from diff-sources), sorry its not so useful, as I renamed some things. I tried making one from svn diff after reintegration, but it was equally useless. If you want you can also review my commits on this issue to the branch, too.\r\n\r\nhere is CHANGES entry:\r\n\r\nAPI Changes:\r\n\r\n* LUCENE-5468: Move offline Sort (from suggest module) to OfflineSort. (Robert Muir)\r\n\r\nOptimizations:\r\n\r\n* LUCENE-5468: HunspellStemFilter uses 10 to 100x less RAM. It also loads\r\n  all known openoffice dictionaries without error, and supports an additional\r\n  longestOnly option for a less aggressive approach.  (Robert Muir)\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-27T20:48:46.647+0000","updated":"2014-02-27T20:48:46.647+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915045","id":"13915045","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Is the longestOnly option a standard Hunspell thing? (more a question of general interest)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2014-02-27T21:05:22.599+0000","updated":"2014-02-27T21:05:22.599+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915051","id":"13915051","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"No, but when testing relevance, outputting all the stems leads to slower indexing, a much larger index, and significantly impacts precision for some languages.\r\n\r\nSo after reading CLEF experiments done with hungarian (http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.105.8036&rep=rep1&type=pdf) where they suggest a simple disambiguation heuristic (shortest stem for most aggressive), i experimented with the opposite, and found it was quite useful :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-27T21:11:28.874+0000","updated":"2014-02-27T21:11:28.874+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915053","id":"13915053","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Awesome, sounds like a great addition then.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2014-02-27T21:14:31.995+0000","updated":"2014-02-27T21:14:31.995+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915083","id":"13915083","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"These are incredible reductions on RAM usage from cutting over to\r\nFSTs.  And it's nice that you are using IntSequenceOutputs, and\r\nthat you are now able to load dictionaries that failed before!\r\n\r\nI'm not sure it matters here, but do you handle the FST Builder returning\r\nnull for the built FST (when there was nothing added)?  Just a common\r\ngotchya...\r\n\r\nDo you have any sense of how the lookup speed changed?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2014-02-27T21:42:19.826+0000","updated":"2014-02-27T21:42:19.826+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915094","id":"13915094","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nI'm not sure it matters here, but do you handle the FST Builder returning\r\nnull for the built FST (when there was nothing added)? Just a common\r\ngotchya...\r\n\r\nDo you have any sense of how the lookup speed changed?\r\n{quote}\r\n\r\nMany dictionaries have either no prefixes or no suffixes: the code comment below this also answers your other question about NULL FST I think.\r\nAdmittedly its probably no faster now, but it can be faster if we make the Stemmer smarter when walking the possibilities in the word:\r\n{code}\r\n  // TODO: this is pretty stupid, considering how the stemming algorithm works\r\n  // we can speed it up to be significantly faster!\r\n  IntsRef lookupAffix(FST<IntsRef> fst, char word[], int offset, int length) {\r\n    if (fst == null) {\r\n      return null;\r\n    }\r\n{code}\r\n\r\nGiven the fact this thing takes sometimes 100MB per field and makes it nearly unusable, I made such larger changes a TODO for a separate issue?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-27T21:47:43.782+0000","updated":"2014-02-27T21:47:43.782+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915095","id":"13915095","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Definitely +1 to commit this and worry about speedups separately!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2014-02-27T21:50:39.806+0000","updated":"2014-02-27T21:50:39.806+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915115","id":"13915115","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1572754 from [~rcmuir] in branch 'dev/trunk'\r\n[ https://svn.apache.org/r1572754 ]\r\n\r\nLUCENE-5468: reduce RAM usage of hunspell","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-27T22:13:29.466+0000","updated":"2014-02-27T22:13:29.466+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915152","id":"13915152","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1572774 from [~rcmuir] in branch 'dev/branches/branch_4x'\r\n[ https://svn.apache.org/r1572774 ]\r\n\r\nLUCENE-5468: reduce RAM usage of hunspell","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-02-27T22:51:56.547+0000","updated":"2014-02-27T22:51:56.547+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915171","id":"13915171","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"body":"Amazing improvement!\r\n\r\nWhile we are on Hunspell I would like to make a proposal for additional enhancements but first I would like to ask if you would be interested in seeing such improvements in the code. I would be happy to open a new ticket for this in such case.\r\n\r\n1) AFAIR Hunspell token filter has an option to setup level of recursion. Originally hardcoded to 2 if I am not mistaken. But the level of recursion counts for both prefix and postfix rules - meaning if it is set to 2 and 1 prefix rule is applied, then we can only apply 2-1 suffix rules. What I would like to propose is adding an option to explicitly specify recursion level for both the prefix and for postfix rules. This probably depends a lot on how the affix rules are constructed but I can clearly see this would help in case of Czech dictionary - hopefully this might be found useful for other languages too.\r\n\r\n2) Case sensitivity is a tricky part. Czech dictionary is case sensitive and it can deliver very nice results but users can not always fully benefit from this. The biggest problem I remember are tokens at the beginning of sentences. They start with capitals and thus they may not be found in dict where only lowercased variation is recorded.\r\nI was thinking that one useful solution to this issue can be adding an option to lowercase given token if it hasn't been found in dict and making a second pass through the filter again with lowercased token (it is costly but would be only optional so user is the one to decide if this is worth the indexing time).\r\n\r\n3) Also it would be really useful if Hunspell token filter provided an option to output all terms that are the result of application of relevant rules to input token (so in essence quite opposite transformation to what is used during stemming). Such functionality would be useful if users want to add custom extension to existing dictionary (having an option to load several dict files is really useful IMO) and they want to check that they constructed valid rules for specific words. Having Lucene directly supporting them via exposed API would be great I think (especially when thinking about later applications in Solr and Elasticsearch).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"created":"2014-02-27T23:12:14.559+0000","updated":"2014-02-27T23:12:14.559+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915178","id":"13915178","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"All 3 of these options are still supported by both the filter/dictionary and the factory. look at 'recursionCap',  'ignoreCase', and dictionaries is a List<InputStream>. And by default it outputs all terms (unless you supply longestMatch=true). So I'm not really sure what is needed here?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-27T23:15:36.629+0000","updated":"2014-02-27T23:15:36.629+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915222","id":"13915222","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"body":"Robert,\r\n\r\nI did not check the latest code so please forgive my ignorance but let me try to explain:\r\n\r\nrecursionCap does not distinguishes between how many prefix and suffix rules were applied. Does it? It counts just the total. If I set recursionCap to 1 it actually includes all the following options:\r\n- 2 prefix rules, 0 suffix rules\r\n- 1prefix rule, 1 suffix rule\r\n- 0 prefix rules, 2 suffix rules\r\n\r\nThis may not play well with some affix rule dictionaries. For example the czech dictionary is constructed in such a way that only one suffix rule can be applied otherwise the filter can generate irrelevant tokens. So the recursionCap MUST be set to 0.\r\nHowever, if this recursion level is consumed on removal of prefix then it can not continue and manipulate also the suffix. So what I am proposing is having an option to set recursionCap separately for prefix and suffix. In case of czech dict I would say: you can apply only one prefix rule and only one suffix rule (meaning you can NEVER apply two prefix rules or two affix rules).\r\n\r\nAs for ignoreCase - how does it work if the dictionary contains terms like \"Xx\" and \"xx\" and each is allowed to use different set of rules? I need to distinguish between them. But at the same hand if the dictionary contains only \"yy\" but I get \"Yy\" as input (because it was the first word of the sentence) would it be able to process it correctly and still distinguish between \"Xx\" and \"xx\"?\r\n\r\nAs for the last feature I probably confused you. What I am looking for is not output of all possible root words for given term but all possible inflections for given (root) word. For example: input is \"tell\" and based on loaded dictionary the output would be [\"tell\",\"tells\",\"telling\", ...]. I think it wold not be hard to expose such API and I believe users would appreciate this when constructing custom dictionaries (I tried that and I was missing such feature, sure I can implement it myself but I believe having it in Solr and Elasticsearch would be great, definitely this is not useful for indexing process but as a part of tuning your dictionary this would be helpful).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"created":"2014-02-27T23:46:56.516+0000","updated":"2014-02-27T23:46:56.516+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915230","id":"13915230","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"ok, i was a little confused. I thought perhaps you referred to the previous discussion above about removing things :)\r\n\r\nI just want to make it clear i kept all the additional options we already had!\r\n\r\n{quote}\r\nSo what I am proposing is having an option to set recursionCap separately for prefix and suffix. In case of czech dict I would say: you can apply only one prefix rule and only one suffix rule (meaning you can NEVER apply two prefix rules or two affix rules).\r\n{quote}\r\n\r\n+1, can you open an issue for this?\r\n\r\n{quote}\r\nAs for ignoreCase - how does it work if the dictionary contains terms like \"Xx\" and \"xx\" and each is allowed to use different set of rules? I need to distinguish between them. \r\n{quote}\r\n\r\nRight, thats why it does nothing by default :)\r\n\r\n{quote}\r\nBut at the same hand if the dictionary contains only \"yy\" but I get \"Yy\" as input (because it was the first word of the sentence) would it be able to process it correctly and still distinguish between \"Xx\" and \"xx\"?\r\n{quote}\r\n\r\nIn my opinion, this is not the responsibility of this filter (it simply has ignoreCase on or off). This has more to do with your analysis chain? So if you want to put a lowercase filter first always, thats one approach. If you want to use some rule/heuristic for sentence tokenization or other fancy stuff, you can selectively lowercase and get what you want. But this filter knows nothing about that :)\r\n\r\n{quote}\r\nI think it wold not be hard to expose such API and I believe users would appreciate this when constructing custom dictionaries (I tried that and I was missing such feature, sure I can implement it myself but I believe having it in Solr and Elasticsearch would be great, definitely this is not useful for indexing process but as a part of tuning your dictionary this would be helpful).\r\n{quote}\r\n\r\nWhy not just use the hunspell command-line tools like 'unmunch', 'analyze', etc for that?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-27T23:53:58.941+0000","updated":"2014-02-27T23:53:58.941+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915231","id":"13915231","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"I dont think we should make the recusionCap anymore complex.  I put it in there simply to prevent languages from getting into infinite loops.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2014-02-27T23:56:05.765+0000","updated":"2014-02-27T23:56:05.765+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915236","id":"13915236","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Chris but Lukas has a real use-case and its probably like 5 total lines of code to split that out? I dunno, it seems fine to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-27T23:59:21.464+0000","updated":"2014-02-27T23:59:21.464+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915240","id":"13915240","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"body":"Yeah I guess.  We can go over that in a new issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmale","name":"cmale","emailAddress":"gento0nz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Male","active":true},"created":"2014-02-28T00:01:30.691+0000","updated":"2014-02-28T00:01:30.691+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915266","id":"13915266","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"body":"OK, I will open a new ticket for the recursionCap tomorrow (it is late on my end now).\r\n\r\nJust a real quick comments on my two other suggestions:\r\n\r\nLowercasing in Hunspell - Robert, when you think about it there is really no simple solution to this using existing Lucene analysis flow AFAIK. If you apply lowercase BEFORE Hunspell you lose the option to correctly stem the uppercased token (if there is any record for it in the dictionary). If you apply if after Hunspell you have the problem with first token in sentences (in most cases). The other option is (as you mentioned) employ some more sophisticated analysis chain (but is there any suitable in Lucene out of the box or do I have to go down the road and setup complex language library or framework?)\r\nSo the option to allow lowercasing for second pass is IMO nice compromise that can help a lot with really minimal effort (and it is also easy to explain to users what it does and when to use it). It is not perfect solution but may be good enough to solve 80/20 principle.\r\n\r\nGetting all inflections - yes, there are CL tools for this. But this is really more about user experience comfort, and again, it is easy to explain how to use it, what it does and users do not have to mess with CL tools and things like that. Not sure how hard it would be to implement this with what is in Hunspell now.\r\nAlso one thing is some CL tool used against some dictionary files and other thing can be using Lucene code on dictionary loaded into memory by Lucene. If there are issues in the code these two approaches can give different results (yes, they should be the same...)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"created":"2014-02-28T00:23:45.705+0000","updated":"2014-02-28T00:23:45.705+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13915281","id":"13915281","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nLowercasing in Hunspell - Robert, when you think about it there is really no simple solution to this using existing Lucene analysis flow AFAIK. If you apply lowercase BEFORE Hunspell you lose the option to correctly stem the uppercased token (if there is any record for it in the dictionary). If you apply if after Hunspell you have the problem with first token in sentences (in most cases). The other option is (as you mentioned) employ some more sophisticated analysis chain (but is there any suitable in Lucene out of the box or do I have to go down the road and setup complex language library or framework?)\r\nSo the option to allow lowercasing for second pass is IMO nice compromise that can help a lot with really minimal effort (and it is also easy to explain to users what it does and when to use it). It is not perfect solution but may be good enough to solve 80/20 principle.\r\n{quote}\r\n\r\nThere may not be, but its about where the responsibility should be. Its more than the first token in sentences: named entities etc are involved too. If you want to get this right, yes, you need a more sophisticated analysis chain! That being said, I'm not against your 80/20 heuristic, I'm just not sure how 80/20 it is :)\r\n\r\n{quote}\r\nGetting all inflections - yes, there are CL tools for this. But this is really more about user experience comfort, and again, it is easy to explain how to use it, what it does and users do not have to mess with CL tools and things like that. Not sure how hard it would be to implement this with what is in Hunspell now.\r\nAlso one thing is some CL tool used against some dictionary files and other thing can be using Lucene code on dictionary loaded into memory by Lucene. If there are issues in the code these two approaches can give different results (yes, they should be the same...)\r\n{quote}\r\n\r\nOn this one i honestly do disagree. I dont mean to sound rude, but if you are smart enough to make a custom dictionary, I don't think I need to baby such users around and make them comfortable by duplicating command line tools they can install themselves in java :) The tools provided by hunspell are the best here, and if someone is making a custom dictionary they already need to be digging into these tools/docs to know what they are doing. I don't see a value in duplicating this stuff and providing morphological generation and other super-advanced esoteric stuff, when there are more basic things needed (like decomposition).  As far as if things differ, then those are bugs that should be fixed...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-02-28T00:37:38.484+0000","updated":"2014-02-28T00:37:38.484+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13917384","id":"13917384","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"body":"Hi Robert,\r\n\r\nI created a new ticket LUCENE-5484 for distinct recursion levels per pre/suffix rules.\r\n\r\n{quote}\r\nThere may not be, but its about where the responsibility should be. Its more than the first token in sentences: named entities etc are involved too. If you want to get this right, yes, you need a more sophisticated analysis chain! That being said, I'm not against your 80/20 heuristic, I'm just not sure how 80/20 it is :)\r\n{quote}\r\n\r\nI fully understand YPOW. The question of responsibility is important. But if I consider that workaround like lowercasing for optional second pass could be easier than telling user to setup complicated analysis chain (or employ external system) then I believe it might make sense to do a qualified exception. :) Heh...\r\n\r\nBut seriously. How about if I open a ticket for this to allow to fly this idea around. WDYT?\r\n\r\nI would like to try to implement it as well (if no one else will do it) though I will not get to it soon. As for the 80/20 aspect the good thing about this feature is that it could be measured (precision, recall, ...). And may be only implementing this feature cold tell us if it is useful or not.\r\n\r\n{quote}\r\n\\[...\\] if you are smart enough to make a custom dictionary, I don't think I need to baby such users around and make them comfortable by duplicating command line tools they can install themselves in java \\[...\\]\r\n{quote}\r\n\r\nShort: I agree\r\n\r\nLong: Creating a new dictionary is very hard. It is for wizards... but the thing here Robert is that *creating* a new dictionary from scratch is something completely different than *extending* existing dictionary. At least for average users (like me), they probably can hardly do the former but can relatively easy do the later. The former involves creating the affix rules, the later means using given affix rules and build on top of it.\r\n\r\nWhen I was trying to extend existing dictionary then in fact I had to do the following:\r\n1) identify words that were missing in the dict file (or files)\r\n2) assigning some of existing rules to each of them\r\n3) verify #2 was done right\r\n\r\nAs for 1) that is easy (the only trick when creating a new file with missing words is to stick to encoding defined in aff file)\r\nAs for 2) that is harder but in my case I was building on top of relatively large dictionary so I could bet on the fact that language morphology has been already cover well in affix rules (so I assumed I was not introducing words with new/unique morphology to the dictionary). So in fact instead of trying to understand the rules (see my note about this below) I searched for words that should have similar morphology features and used their rules (for example if I were to add a word \"fail\" I would search for \"sail\" and use the same rules).\r\nAs for 3) this in fact means expanding token in root form according to all possible valid rules and check it all makes sense. As you pointed out, there are CL tools for this but I simply did not want to learn them (I did not feel like a wizard). And the good question is if Lucene should be able to provide API that could be used for this task. In the end of the day Lucene is said to be a IR library and has language analysis capabilities, so why not? But I am fine to leave this feature out now. Just wanted to explain some of my motivations for this feature.\r\n\r\n{color:gray}\r\nNote:\r\nAs for understanding the affix rules - this is probably complex topic and I did not have a time to dig deep enough to say anything qualified about it yet. However, as far as I understand various \\*spell systems have various limitations. For example in case of the Czech dictionary, it is an ispell which allowed only limited number of affix rules (that is what I understood from conversation with an author of Czech dictionary). Which means that if the number of rules is limited then what we see being shipped in aff file is more a result of some preprocessing that takes set of rules that are understandable to human and produces more compact set that might not be easily understood by humans.\r\n\r\nBut this is unrelated topic, except that it can illustrate the situation of average user who just want to add some new words into existing dictionary and do not have the capacity to become an expert on ispell (or myspell, or aspell, ... or ... you name it).\r\n{color}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"created":"2014-03-02T12:31:11.265+0000","updated":"2014-03-02T12:34:23.773+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13917408","id":"13917408","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nI fully understand YPOW. The question of responsibility is important. But if I consider that workaround like lowercasing for optional second pass could be easier than telling user to setup complicated analysis chain (or employ external system) then I believe it might make sense to do a qualified exception.\r\n{quote}\r\n\r\nThis responsibility is really important though. Maybe you should break away from the czech dictionary and look at the others before you decide that its \"easiest\" here. For example the german dictionary has lots of complex casing rules encoded in the affix file itself for decompounding purposes. This feature already is *plenty complicated*. If you can do *ANYTHING* and I mean *ANYTHING* outside of it in any way, we should keep it out of here.\r\n\r\n{quote}\r\nAs you pointed out, there are CL tools for this but I simply did not want to learn them (I did not feel like a wizard). And the good question is if Lucene should be able to provide API that could be used for this task. In the end of the day Lucene is said to be a IR library and has language analysis capabilities, so why not? But I am fine to leave this feature out now. Just wanted to explain some of my motivations for this feature.\r\n{quote}\r\n\r\nBecause its an IR library, not a tool for building lexical resources. We just dont have the resources to \"compete\" with that, we don't have people that need it, and why waste our time when there are perfectly good tools available? I don't know why you refuse to \"learn\" the hunspell tools, they are trivial to learn!\r\n\r\nBesides the commandline tools, quick searches reveal GUI tools too, such as http://marcoagpinto.cidadevirtual.pt/proofingtoolgui.html. Quote from the page: \"My tool is so intuitive that even a 6-year-old kid can use it.\"\r\n\r\nI don't think such work should be duplicated inside the apache lucene project.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2014-03-02T13:25:43.862+0000","updated":"2014-03-02T13:25:43.862+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13918508","id":"13918508","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"body":"Good points, I did not know that about the german dictionary. In this perspective my suggestion sounds really hack-ish and should be left out.\r\n{quote}\r\n\\[...\\] even a 6-year-old kid can use it.\r\n{quote}\r\nI am always amazed about what kids these days can achieve...\r\n\r\nThanks for your time Robert!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lukas.vlcek","name":"lukas.vlcek","emailAddress":"lukas dot vlcek at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lukas.vlcek&avatarId=19000","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lukas.vlcek&avatarId=19000","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lukas.vlcek&avatarId=19000","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lukas.vlcek&avatarId=19000"},"displayName":"Lukas Vlcek","active":true},"created":"2014-03-03T19:48:44.105+0000","updated":"2014-03-03T19:48:44.105+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13934860","id":"13934860","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tkrah","name":"tkrah","emailAddress":"krah dot tm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Torsten Krah","active":true},"body":"Just for interest - are multiple dictionaries still supported with this change (after reading all comments its not clear if it was dropped or not)?\r\nThis option is nice to have, because you can make local modifications and can update the main dictionary from upstream (libreoffice etc.) without need for merging or something.\r\nIf not - is there already a ticket to get this working again?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tkrah","name":"tkrah","emailAddress":"krah dot tm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Torsten Krah","active":true},"created":"2014-03-14T10:51:10.233+0000","updated":"2014-03-14T10:51:10.233+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12535087/comment/13982557","id":"13982557","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Close issue after release of 4.8.0","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2014-04-27T23:25:43.920+0000","updated":"2014-04-27T23:25:43.920+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-5468/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i03hhr:"}}