{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12345948","self":"https://issues.apache.org/jira/rest/api/latest/issue/12345948","key":"LUCENE-627","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12310854","id":"12310854","description":"","name":"2.1","archived":false,"released":true,"releaseDate":"2007-02-17"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2006-07-14 02:33:26.0","customfield_12312323":null,"customfield_12310420":"13126","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_184168000_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-07-16T03:19:47.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-627/watchers","watchCount":2,"isWatching":false},"created":"2006-07-14T00:10:19.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12310854","id":"12310854","description":"","name":"2.1","archived":false,"released":true,"releaseDate":"2007-02-17"}],"issuelinks":[{"id":"12404228","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12404228","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12763793","key":"LUCENE-6139","self":"https://issues.apache.org/jira/rest/api/2/issue/12763793","fields":{"summary":"TokenGroup.getStart|EndOffset should return matchStart|EndOffset not start|endOffset","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-12-31T22:01:07.277+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310233","id":"12310233","name":"core/other","description":"issues related to any code under core. Usage of this document is discouraged. Please create (or ask for) a proper component."}],"timeoriginalestimate":null,"description":"The lucene highlighter has problems when tokens that overlap are generated.\n\nFor example, if analysis of iPod generates the tokens \"i\", \"pod\", \"ipod\" (with pod and ipod in the same position),\nthen the highlighter will output this as iipod, regardless of if any of those tokens are highlighted.\n\nDiscovered via http://issues.apache.org/jira/browse/SOLR-24\n","customfield_10010":null,"timetracking":{},"customfield_12310120":null,"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"27421","summary":"highlighter problems with overlapping tokens","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":26,"total":26,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420915","id":"12420915","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"body":"Works OK for me - just added this to the Highlighter's Junit test and all is well.\r\nSomething up with your analyzer?\r\n\r\n\r\n\tpublic void testOverlapAnalyzer2() throws Exception\r\n\t{\r\n\t\tHashMap synonyms = new HashMap();\r\n\t\tsynonyms.put(\"ipod\", \"i,pod\");\r\n\t\tAnalyzer analyzer = new SynonymAnalyzer(synonyms);\r\n\t\tString srchkey = \"ipod\";\r\n\r\n\t\tString s = \"I want an ipod\";\r\n\t\tQueryParser parser=new QueryParser(\"text\",new WhitespaceAnalyzer());\r\n\t\tQuery query = parser.parse(srchkey);\r\n\r\n\t\tHighlighter highlighter = new Highlighter(new QueryScorer(query));\r\n\t\tTokenStream tokenStream =\r\n\t\t\tanalyzer.tokenStream(null, new StringReader(s));\r\n\t\t// Get 3 best fragments and seperate with a \"...\"\r\n\t\tString result = highlighter.getBestFragments(tokenStream, s, 3, \"...\");\r\n\t\tString expectedResult=\"I want an <B>ipod</B>\";\r\n\t\tassertEquals(expectedResult,result);\r\n\t}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"created":"2006-07-14T02:33:26.000+0000","updated":"2006-07-14T02:33:26.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420916","id":"12420916","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"The start and end offsets also overlap... I wonder if that's what is different.\r\n\r\nSolr's analyzer output:\r\nhttp://localhost:8983/solr/admin/analysis.jsp?name=text&verbose=on&val=iPod\r\n\r\nterm position 1, 2\r\nterm text \ti, pod/ipod\r\nterm type    word, word/word\r\nsource start,end (0,1),\t(1,4)/(0,4)\r\n\r\nI'll try and come up with a junit test that demonstrates it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T02:42:57.000+0000","updated":"2006-07-14T02:42:57.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420919","id":"12420919","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"OK, here we go... the following test fails with\r\nExpected :ipod <B>foo</B>\r\nActual  :iiPod <B>foo</B>\r\n\r\n\r\n  public void testOverlapAnalyzer2() throws Exception\r\n  {\r\n\r\n    String s = \"iPod foo\";\r\n    // the token stream for the string above:\r\n    TokenStream ts = new TokenStream() {\r\n      Iterator iter;\r\n      {\r\n        List lst = new ArrayList();\r\n        Token t;\r\n        t = new Token(\"i\",0,1);\r\n        lst.add(t);\r\n        t = new Token(\"pod\",1,4);\r\n        t.setPositionIncrement(0);\r\n        lst.add(t);\r\n        t = new Token(\"ipod\",0,4);\r\n        lst.add(t);\r\n        t = new Token(\"foo\",5,8);\r\n        lst.add(t);\r\n        iter = lst.iterator();\r\n      }\r\n      public Token next() throws IOException {\r\n        return iter.hasNext() ? (Token)iter.next() : null;\r\n      }\r\n    };\r\n\r\n    String srchkey = \"foo\";\r\n\r\n    QueryParser parser=new QueryParser(\"text\",new WhitespaceAnalyzer());\r\n    Query query = parser.parse(srchkey);\r\n\r\n    Highlighter highlighter = new Highlighter(new QueryScorer(query));\r\n\r\n// Get 3 best fragments and seperate with a \"...\"\r\n    String result = highlighter.getBestFragments(ts, s, 3, \"...\");\r\n    String expectedResult=\"ipod <B>foo</B>\";\r\n    assertEquals(expectedResult,result);\r\n  }","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T03:05:29.000+0000","updated":"2006-07-14T03:05:29.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420920","id":"12420920","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"body":"The problem appears to be because the \"pod\" token advances the start position to 1 while the next token \"ipod\" takes a step back (to 0)\r\n\r\nI've found if you just arrange the tokens to be emitted in start pos order all is fine - see below\r\n\r\n\r\n\t  public void testOverlapAnalyzer2() throws Exception\r\n\t  {\r\n\r\n\t    String s = \"iPod foo\";\r\n\t    // the token stream for the string above:\r\n\t    TokenStream ts = new TokenStream() {\r\n\t      Iterator iter;\r\n\t      {\r\n\t        List lst = new ArrayList();\r\n\t        Token t;\r\n                             //moved this token to start\r\n\t        t = new Token(\"ipod\",0,4);\r\n\t        lst.add(t);\r\n\t        t = new Token(\"i\",0,1);\r\n\t        lst.add(t);\r\n\t        t = new Token(\"pod\",1,4);\r\n\t        t.setPositionIncrement(0);\r\n\t        lst.add(t);\r\n\t        t = new Token(\"foo\",5,8);\r\n\t        lst.add(t);\r\n\t        iter = lst.iterator();\r\n\t      }\r\n\t      public Token next() throws IOException {\r\n\t        return iter.hasNext() ? (Token)iter.next() : null;\r\n\t      }\r\n\t    };\r\n\r\n\t    String srchkey = \"foo\";\r\n\r\n\t    QueryParser parser=new QueryParser(\"text\",new WhitespaceAnalyzer());\r\n\t    Query query = parser.parse(srchkey);\r\n\r\n\t    Highlighter highlighter = new Highlighter(new QueryScorer(query));\r\n\r\n//\t Get 3 best fragments and seperate with a \"...\"\r\n\t    String result = highlighter.getBestFragments(ts, s, 3, \"...\");\r\n                         //had to upper case the P in the test here\r\n\t    String expectedResult=\"iPod <B>foo</B>\";\r\n\t    assertEquals(expectedResult,result);\r\n\t  }\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"created":"2006-07-14T03:22:02.000+0000","updated":"2006-07-14T03:22:02.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420923","id":"12420923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"body":"Position increments wrong in my  above code but the solution of sequencing start offsets correctly still holds true:\r\n\r\n\t        t = new Token(\"ipod\",0,4);\r\n\t        t.setPositionIncrement(0);\r\n\t        lst.add(t);\r\n\t        t = new Token(\"i\",0,1);\r\n\t        t.setPositionIncrement(0);\r\n\t        lst.add(t);\r\n\t        t = new Token(\"pod\",1,4);\r\n\t        lst.add(t);\r\n\t        t = new Token(\"foo\",5,8);\r\n\t        lst.add(t);\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"created":"2006-07-14T03:26:01.000+0000","updated":"2006-07-14T03:26:01.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420924","id":"12420924","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"The original token stream is a valid one though right?  If so, it seems like the fix should be in the highlighter module.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T03:31:22.000+0000","updated":"2006-07-14T03:31:22.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420950","id":"12420950","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"body":">>The original token stream is a valid one though right? \r\n\r\nI don't think so, see below...\r\n\r\n       List lst = new ArrayList(); \r\n        Token t; \r\n        t = new Token(\"i\",0,1); \r\n        lst.add(t); \r\n        t = new Token(\"pod\",1,4); \r\n        t.setPositionIncrement(0); \r\n        lst.add(t); \r\n        t = new Token(\"ipod\",0,4); \r\n!! Missing a t.setPositionIncrement(0) here.\r\n        lst.add(t); \r\n        t = new Token(\"foo\",5,8); \r\n        lst.add(t); \r\n        iter = lst.iterator(); \r\n\r\nHaving fixed the above I believe this change below is all that is required to fix the highlighter:\r\n\r\nTokenGroup.java\r\n\r\n\tboolean isDistinct(Token token)\r\n\t{\r\n//\t\treturn token.startOffset()>=endOffset;\r\n\t\treturn token.getPositionIncrement()>0;\r\n\t}\r\n\r\nAll my Junit  tests pass with this change - can you verify this is true for you too?\r\nThis change would break highlighting for any analyzers that had position increments but whose offsets somehow overlapped - text would potentially be duplicated in the same way you originally reported your problem. I can't verify this to be true for CJK analyzers etc so feel a little uneasy about committing this. \r\n\r\nCheers\r\nMark","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"created":"2006-07-14T05:10:04.000+0000","updated":"2006-07-14T05:10:04.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420954","id":"12420954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":">>The original token stream is a valid one though right?\r\n> I don't think so, see below...\r\n\r\nAh, right... I constructed the wrong one first.  I wanted pod and ipod in the same position... so the token stream looks like \"i\" (\"pod\"|\"ipod\") \"foo\".\r\nNow this token-stream is correct, I believe, but the same problem happens.\r\n\r\nA work-around is to swap the order that \"pod\" and \"ipod\" tokens appear, but it seems like any such workaround should be put into the highlighter rather than external to it.\r\n\r\n\r\n  public void testOverlapAnalyzer2() throws Exception\r\n  {\r\n\r\n    String s = \"iPod foo\";\r\n    // the token stream for the string above:\r\n    TokenStream ts = new TokenStream() {\r\n      Iterator iter;\r\n      {\r\n        List lst = new ArrayList();\r\n        Token t;\r\n        t = new Token(\"i\",0,1);\r\n        lst.add(t);\r\n        t = new Token(\"pod\",1,4);\r\n        lst.add(t);\r\n        t = new Token(\"ipod\",0,4);\r\n        t.setPositionIncrement(0);   // pod and ipod occupy the same token position.\r\n        lst.add(t);\r\n        t = new Token(\"foo\",5,8);\r\n        lst.add(t);\r\n        iter = lst.iterator();\r\n      }\r\n      public Token next() throws IOException {\r\n        return iter.hasNext() ? (Token)iter.next() : null;\r\n      }\r\n    };\r\n\r\n    String srchkey = \"foo\";\r\n\r\n    QueryParser parser=new QueryParser(\"text\",new WhitespaceAnalyzer());\r\n    Query query = parser.parse(srchkey);\r\n\r\n    Highlighter highlighter = new Highlighter(new QueryScorer(query));\r\n\r\n// Get 3 best fragments and seperate with a \"...\"\r\n    String result = highlighter.getBestFragments(ts, s, 3, \"...\");\r\n    String expectedResult=\"iPod <B>foo</B>\";\r\n    assertEquals(expectedResult,result);\r\n  }","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T05:25:06.000+0000","updated":"2006-07-14T05:25:06.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420971","id":"12420971","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"I just tried the change to isDistinct, and it didn't work for the corrected tokenstream I posted.\r\nI agree that it doesn't seem like the right fix anyway.   It seems like things should be based on startOffset and endOffset.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T07:40:51.000+0000","updated":"2006-07-14T07:40:51.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420972","id":"12420972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Here's another fun one :-)\r\n\r\njunit.framework.ComparisonFailure: \r\nExpected :zooPod<B>Foo</B>\r\nActual  :zoozooPod<B>zooPodFoo</B>\r\n\r\n\r\n  public void testOverlapAnalyzer3() throws Exception\r\n  {\r\n\r\n    String s = \"zooPodFoo\";\r\n    // the token stream for the string above:\r\n    TokenStream ts = new TokenStream() {\r\n      Iterator iter;\r\n      {\r\n        List lst = new ArrayList();\r\n        Token t;\r\n        t = new Token(\"zoo\",0,3);\r\n        lst.add(t);\r\n        t = new Token(\"pod\",3,6);\r\n        lst.add(t);\r\n        t = new Token(\"zoopod\",0,6);\r\n        t.setPositionIncrement(0);\r\n        lst.add(t);\r\n        t = new Token(\"foo\",6,9);\r\n        lst.add(t);\r\n        t = new Token(\"zoopodfoo\",0,9);\r\n        t.setPositionIncrement(0);        \r\n        lst.add(t);\r\n        iter = lst.iterator();\r\n      }\r\n      public Token next() throws IOException {\r\n        return iter.hasNext() ? (Token)iter.next() : null;\r\n      }\r\n    };\r\n\r\n    String srchkey = \"foo\";\r\n\r\n    QueryParser parser=new QueryParser(\"text\",new WhitespaceAnalyzer());\r\n    Query query = parser.parse(srchkey);\r\n\r\n    Highlighter highlighter = new Highlighter(new QueryScorer(query));\r\n\r\n// Get 3 best fragments and seperate with a \"...\"\r\n    String result = highlighter.getBestFragments(ts, s, 3, \"...\");\r\n    String expectedResult=\"zooPod<B>Foo</B>\";\r\n    assertEquals(expectedResult,result);\r\n  }\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T07:58:17.000+0000","updated":"2006-07-14T07:58:17.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12420978","id":"12420978","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"It seems like maybe the only way to handle some of this stuff is two passes... one to collect the scores & offsets of matches, and then a second pass to generate the fragments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T09:04:05.000+0000","updated":"2006-07-14T09:04:05.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12421024","id":"12421024","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"body":">>It seems like maybe the only way to handle some of this stuff is two passes\r\n\r\nThe highlighter does not expect token positions to \"rewind\" in this manner. I'm not sure where this ends. Imagine an analyzer, which having considered and emitted tokens for a whole document, chooses to append some  tokens positioned which  has offsets referencing much earlier sections of the document. (Why, I'm not sure but there's nothing to say this couldn't happen).\r\n\r\n>>It seems like maybe the only way to handle some of this stuff is two passes\r\n\r\nMaybe a special \"OrderFixer\" TokenStream could be used by to wrap \"rewinding\" token streams such as yours and then accumulate all tokens in a  buffer before then sorting and outputting them in ascending start offset order. If the Highlighter ignored position increment and just used offsets (as it does currently) I suspect all would be OK\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"created":"2006-07-14T13:53:51.000+0000","updated":"2006-07-14T13:53:51.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12421128","id":"12421128","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Right... I'm not sure the highlighter should be expected to handle all cases, but WordDelimiterFilter doesn't seem *that* complex or atypical.\r\n\r\n\"a-b-c\" would be indexed as \"a\",\"b\",\"c\"/\"abc\"\r\n(c and abc occupy the same token position)\r\n\r\nAnother thing I ran across is the addition of non-scoring tokens to a TokenGroup... this ends up highlighting the widest token in the token group, rather than the widest that matched.  I was able to get around this by checking that score>0 in TokenGroup, but was this indended?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T14:51:19.000+0000","updated":"2006-07-14T14:51:19.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12421162","id":"12421162","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"I'm going with the OrderFixer approach for now... if startOffsets are equal, but endOffsets are not, does it matter which comes first?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T16:58:06.000+0000","updated":"2006-07-14T16:58:06.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12421220","id":"12421220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Here is a patch that makes the tests work after tokens are re-ordered.\r\nI basically keep track of the start and end offsets of what matches, not just of the TokenGroup, so highlighting is more specific.\r\n\r\nSorry about the messy patch - my IDE collapses the tabs so I don't even see them (I only realize there are tabs after I do a diff).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-14T20:41:32.000+0000","updated":"2006-07-14T20:41:32.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12421332","id":"12421332","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"So Mark, does this patch look OK?\r\nWithout it, even if I order the tokens by startOffset, I get things like\r\nHiHi-Speed <em>USB</em>\r\n\r\nWordDelimiterFilter (that's what is producing these types of tokens) is widely used in Solr-land, so I'm eager to get this fixed.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-15T19:40:18.000+0000","updated":"2006-07-15T19:40:18.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12421342","id":"12421342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"body":"Hi Yonik,\r\nBeen away for a little while and just managed to catch up with your changes. Thanks for this.\r\n\r\nLooking at the patch all seems good. I would just change a couple of things:\r\n\r\n1) TokenGroup.getTotalScore should just return your new \"tot\" variable\r\n2) TokenGroup.clear() needs to reinitialize \"tot\" to zero.\r\n\r\n\r\nOther than that all looks good to me. Let me know if you're happy and I'll commit it.\r\n\r\nThanks again","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"created":"2006-07-15T20:52:04.000+0000","updated":"2006-07-15T20:52:04.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12421347","id":"12421347","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"> 1) TokenGroup.getTotalScore should just return your new \"tot\" variable\r\n\r\nOK, I had considered that change before, but because all the vars were package protected rather than private, I wasn't sure if it was safe.\r\n\r\n> 2) TokenGroup.clear() needs to reinitialize \"tot\" to zero.\r\n\r\nOops... that one I missed.\r\n\r\n> Other than that all looks good to me. Let me know if you're happy and I'll commit it.\r\n\r\nLooks fine to me... please do!\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-15T21:14:26.000+0000","updated":"2006-07-15T21:14:26.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12421372","id":"12421372","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Closing... works fine for me now.\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-07-16T03:19:47.000+0000","updated":"2006-07-16T03:19:47.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12434087","id":"12434087","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lhelper","name":"lhelper","emailAddress":"lhelper at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kerang Lv","active":true},"body":"Hi Yonik, \r\nI'm trying to add support for some overlapping bigram analyzer, e.g. the CJKAnalyzer(http://svn.apache.org/repos/asf/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/) onto your patch.\r\n\r\nWith your patch, the following test fails with:\r\nExpected :?<B>??</B>??<B>??</B>???\r\nActual :?<B>??????</B>\r\n\r\npublic void testOverlapAnalyzer4() throws Exception\r\n{\r\n    String s = \"??????????\";\r\n    // the token stream for the string above:\r\n    TokenStream ts = new TokenStream() {\r\n      Iterator iter;\r\n      {\r\n        List lst = new ArrayList();\r\n        Token t;\r\n        t = new Token(\"??\",0,2);\r\n        lst.add(t);\r\n        t = new Token(\"??\",1,3);\r\n        lst.add(t);\r\n        t = new Token(\"??\",2,4);\r\n        lst.add(t);\r\n        t = new Token(\"??\",3,5);\r\n        lst.add(t);\r\n        t = new Token(\"??\",4,6);\r\n        lst.add(t);\r\n        t = new Token(\"??\",5,7);\r\n        lst.add(t);\r\n        t = new Token(\"??\",6,8);\r\n        lst.add(t);\r\n        t = new Token(\"??\",7,9);\r\n        lst.add(t);\r\n        t = new Token(\"??\",8,10);\r\n        lst.add(t);\r\n        iter = lst.iterator();\r\n      }\r\n      public Token next() throws IOException {\r\n        return iter.hasNext() ? (Token)iter.next() : null;\r\n      }\r\n    };\r\n\r\n    String srchkey = \"?? ??\";\r\n\r\n    QueryParser parser=new QueryParser(\"text\",new WhitespaceAnalyzer());\r\n    Query query = parser.parse(srchkey);\r\n\r\n    Highlighter highlighter = new Highlighter(new QueryScorer(query));\r\n\r\n    // Get 3 best fragments and seperate with a \"...\"\r\n    String result = highlighter.getBestFragments(ts, s, 3, \"...\");\r\n    String expectedResult=\"?<B>??</B>??<B>??</B>???\";\r\n    assertEquals(expectedResult,result);\r\n} \r\n\r\nWith some overlapping bigram analyzer, the current token's startOffset is the previous token's endOffset - 1, so the TokenGroup.isDistinct(token) returns false the most time, which lead to bad range tokenText.\r\n\r\nHere is a patch that makes the tests work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lhelper","name":"lhelper","emailAddress":"lhelper at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kerang Lv","active":true},"created":"2006-09-12T08:12:52.000+0000","updated":"2006-09-12T08:12:52.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12434291","id":"12434291","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"body":"Hi Kerang, can you supply a patch/tests against the latest version?\r\n\r\nI committed a change to highlighter on the 16th August with what I beleived to be a fix for  this problem:   http://issues.apache.org/jira/browse/LUCENE-645\r\n\r\nLooking at the patch you provided it seems to be old code which is missing support for this fix.\r\n\r\nCheers\r\nMark","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"created":"2006-09-12T21:57:00.000+0000","updated":"2006-09-12T21:57:00.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12438333","id":"12438333","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lhelper","name":"lhelper","emailAddress":"lhelper at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kerang Lv","active":true},"body":"Hi Mark, sorry for the long time missing!\r\n\r\nHere is the test, it fails again with the lastest version (Revision 450719):\r\n\r\nExpected :A<B>BC</B>DE<B>FG</B>HIJ\r\nActual:A<B>BCDEFG</B>HIJ\r\n\r\npublic void testOverlapAnalyzer4() throws Exception \r\n{ \r\n    String s = \"ABCDEFGHIJ\"; \r\n    // the token stream for the string above: \r\n    TokenStream ts = new TokenStream() { \r\n      Iterator iter; \r\n      { \r\n        List lst = new ArrayList(); \r\n        Token t; \r\n        t = new Token(\"AB\",0,2); \r\n        lst.add(t); \r\n        t = new Token(\"BC\",1,3); \r\n        lst.add(t); \r\n        t = new Token(\"CD\",2,4); \r\n        lst.add(t); \r\n        t = new Token(\"DE\",3,5); \r\n        lst.add(t); \r\n        t = new Token(\"EF\",4,6); \r\n        lst.add(t); \r\n        t = new Token(\"FG\",5,7); \r\n        lst.add(t); \r\n        t = new Token(\"GH\",6,8); \r\n        lst.add(t); \r\n        t = new Token(\"HI\",7,9); \r\n        lst.add(t); \r\n        t = new Token(\"IJ\",8,10); \r\n        lst.add(t); \r\n        iter = lst.iterator(); \r\n      } \r\n      public Token next() throws IOException { \r\n        return iter.hasNext() ? (Token)iter.next() : null; \r\n      } \r\n    }; \r\n\r\n    String srchkey = \"BC FG\"; \r\n\r\n    QueryParser parser=new QueryParser(\"text\",new WhitespaceAnalyzer()); \r\n    Query query = parser.parse(srchkey); \r\n\r\n    Highlighter highlighter = new Highlighter(new QueryScorer(query)); \r\n\r\n    // Get 3 best fragments and seperate with a \"...\" \r\n    String result = highlighter.getBestFragments(ts, s, 3, \"...\"); \r\n    String expectedResult=\"A<B>BC</B>DE<B>FG</B>HIJ\"; \r\n    assertEquals(expectedResult,result); \r\n} \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lhelper","name":"lhelper","emailAddress":"lhelper at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kerang Lv","active":true},"created":"2006-09-28T06:57:47.000+0000","updated":"2006-09-28T06:57:47.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12438531","id":"12438531","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"body":"Thanks for the test Kerang.\r\n\r\nI no longer have a clear view as to what is expected behaviour here and whether this is a test that needs to pass.\r\n\r\nIt seems to conflict with the expected results for Yonik's test method \"testOverlapAnalyzer2\".\r\nIn that test, (like yours) for a cluster of overlapping tokens with search terms identified at the beginning and end, Yonik expects the whole cluster from search term 1's start offset to search term 2's end offset to be surrounded by one highlight tag. Your test expected 2 tags.\r\n\r\nWho is right?\r\n\r\nThis is a snippet from Yonik's test:\r\n    query = new QueryParser(\"text\",new WhitespaceAnalyzer()).parse(\"hi speed\");\r\n    highlighter = new Highlighter(new QueryScorer(query));\r\n    result = highlighter.getBestFragments(getTS2(), s, 3, \"...\");\r\n    assertEquals(\"<B>Hi-Speed</B>10 foo\",result);\r\n\r\nand yours:\r\n\r\n      String srchkey = \"BC FG\"; \r\n      String expectedResult=\"A<B>BC</B>DE<B>FG</B>HIJ\"; \r\n\r\nI don't really have an opinion either way so I'll turn it over to you\r\n\r\nCheers\r\nMark\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markh","name":"markh","emailAddress":"markharw00d at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Harwood","active":true},"created":"2006-09-28T19:17:00.000+0000","updated":"2006-09-28T19:17:00.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12438553","id":"12438553","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"I agree with Kerang about the expected behavior (of this specific case at least).\r\nThe test case of mine quoted above was not what I was shooting for, but was an acceptable unintended side-effect of fixing the other cases.\r\n\r\nSo I'm fine with this case being changed to\r\n    query = new QueryParser(\"text\",new WhitespaceAnalyzer()).parse(\"hi speed\");\r\n    highlighter = new Highlighter(new QueryScorer(query));\r\n    result = highlighter.getBestFragments(getTS2(), s, 3, \"...\");\r\n    assertEquals(\"<B>Hi</B>-<B>Speed</B>10 foo\",result);","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2006-09-28T21:11:08.000+0000","updated":"2006-09-28T21:11:08.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/12662579","id":"12662579","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryguasu","name":"ryguasu","emailAddress":"ryguasu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Harris","active":true},"body":"I'm here two years after the last comment, trying to create a sense of closure for myself regarding the above conversation:\r\n\r\n * It appears that Mark Harwood committed a slightly modified version of Yonik's 2006-07-14 01:41 PM patch in r422031 and r422302.\r\n * It's not clear to me whether there was any actual code or test suite changes that eventually resulted from Mark, Yonik and Kerang's subsequent discussion about what, exactly, should be considered correct highlighting of multiple tokens.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryguasu","name":"ryguasu","emailAddress":"ryguasu at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Harris","active":true},"created":"2009-01-10T00:35:44.380+0000","updated":"2009-01-10T00:35:44.380+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12345948/comment/14262458","id":"14262458","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"body":"[~ryguasu] HighlighterTest was affected by r422302.\r\n\r\nI think that _either_ {{<B>Hi</B>-<B>Speed</B>10 foo}} OR {{<B>Hi-Speed</B>10 foo}} are acceptable results from a boolean query of \"hi\" and \"speed\".","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dsmiley","name":"dsmiley","emailAddress":"dsmiley at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dsmiley&avatarId=10110","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dsmiley&avatarId=10110","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dsmiley&avatarId=10110","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dsmiley&avatarId=10110"},"displayName":"David Smiley","active":true},"created":"2014-12-31T22:01:07.277+0000","updated":"2014-12-31T22:01:07.277+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-627/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i051zz:"}}