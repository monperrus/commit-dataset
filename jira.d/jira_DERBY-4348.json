{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12432866","self":"https://issues.apache.org/jira/rest/api/latest/issue/12432866","key":"DERBY-4348","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314182","id":"12314182","description":"Old head of 10.5 branch","name":"10.5.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-08-12 12:29:17.714","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24201","customfield_12310222":"3_*:*_1_*:*_505494158_*|*_1_*:*_1_*:*_1123294910_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-08-31T07:47:52.279+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4348/watchers","watchCount":0,"isWatching":false},"created":"2009-08-12T11:21:23.211+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"7.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/10991","id":"10991","description":"snapshot","name":"10.0.2.1","archived":false,"released":true,"releaseDate":"2004-12-06"},{"self":"https://issues.apache.org/jira/rest/api/2/version/10993","id":"10993","description":"","name":"10.1.1.0","archived":false,"released":true,"releaseDate":"2005-08-03"},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313345","id":"12313345","description":"","name":"10.4.2.0","archived":false,"released":true,"releaseDate":"2008-09-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:52:32.716+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"I had to change a the primary key of a table and used ddlutils to do so. Ddlutils recreated the table to perform this task.\r\nAfter the schema conversion the row data of the changed table were corrupted. \r\nThe values of the last table column were filled with values from other rows!\r\n\r\nAfter performing a few tests I could break down the problem to the SQL statement \"INSERT INTO table SELECT FROM (...)\"\r\n\r\nTo reprocude the effect do the following:\r\n\r\n1. unpack attached database 'rmdb.zip'\r\n\r\n2. connect to the database with embedded driver \r\n    User: IGEL\r\n    Password: test \r\n\r\n3. read data of an example row from database\r\n    select * from stringrangenew where classname = 'x.xserver%.colordepth';\r\n\r\nresult is \r\n    x.xserver%.colordepth\t2\t[16] [24] [32]\r\n\r\n4. now copy the data to the second table (column INSTANCENR has been added to this table)\r\n    INSERT INTO STRINGRANGENEW_ (CLASSNAME,FIRMWAREID,RVALUE) SELECT CLASSNAME,FIRMWAREID,RVALUE FROM STRINGRANGENEW;\r\n\r\n5. select data of example row from second table\r\n    select * from stringrangenew_ where classname = 'x.xserver%.colordepth';\r\n\r\nresult is \r\n    x.xserver%.colordepth\t2\t-1\t[CCW][CW][XX]\r\n\r\n-> value of last column is not the same as in orignal table!\r\n\r\n\r\nHere some additional information i worked out during my tests:\r\n\r\n* if you change the copy statement to include the additional column INSTANCENR, the copied data are correct.\r\n    delete from STRINGRANGENEW_;\r\n    INSERT INTO STRINGRANGENEW_ (CLASSNAME,FIRMWAREID, INSTANCENR, RVALUE) SELECT CLASSNAME,FIRMWAREID, -1, RVALUE FROM STRINGRANGENEW;\r\n\r\n* if you select the rows only 'SELECT CLASSNAME,FIRMWAREID,RVALUE FROM STRINGRANGENEW', the result shows correct data\r\n\r\nNote: \r\nThe effect is not restricted to this row but also applies to other rows. But it's always the same rows, that get corrupted.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10364","value":"Data corruption","id":"10364"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37220","summary":"Copy table content with \"INSERT INTO table SELECT FROM (...)\" statement leads to corrupt data","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s_huber","name":"s_huber","emailAddress":"huste at vr-web dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stefan Huber","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s_huber","name":"s_huber","emailAddress":"huste at vr-web dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stefan Huber","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Derby: embedded driver 10.5.1.1 - (764942); testet with 10.4 and client driver also\r\nOS: Windows XP\r\nSQL statements executed using SQuirrel SQL Client, but behavior is the same with ij","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10051","value":"Urgent","id":"10051"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":14,"total":14,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12742315","id":"12742315","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Verified in trunk with the provided repro database.\r\n\r\nObservations:\r\n - database is in 10.4 format\r\n(experiments below run with trunk)\r\n - consistency checks pass\r\n - exporting data, importing and repeating the repro procedure seems to work (at least the exact row is the not corrupt). I didn't create any indexes.\r\n - dropping and recreating STRINGRANGENEW_ without indexes works without corruption\r\n - dropping and recreating STRINGRANGENEW_ with primary key works without corruption\r\n\r\nThis issue needs further qualification.\r\nWhen I ran the repro, 42 rows got corrupted.\r\nThe attached sql script executes the steps required to reproduce (download and unzip database, then run script with ij - 'ij d4348.sql').\r\n\r\nI don't have time to follow up on this issue (finally some vacation :) ), but maybe it would be good to figure out if any of the tables are corrupt, or if it is a single index or a combination of indexes that causes the corruption.\r\n\r\nMaybe the reporter can post the SQL that created the indexes for completeness?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-08-12T12:29:17.714+0000","updated":"2009-08-12T12:29:17.714+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12742316","id":"12742316","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attached repro script 'd4348.sql'.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-08-12T12:30:19.907+0000","updated":"2009-08-12T12:30:19.907+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12742343","id":"12742343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s_huber","name":"s_huber","emailAddress":"huste at vr-web dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stefan Huber","active":true},"body":"Orignal table create statements:\r\n\r\nCREATE TABLE STRINGRANGENEW\r\n(\r\n    CLASSNAME VARCHAR(200) NOT NULL,\r\n    FIRMWAREID INTEGER NOT NULL,\r\n    RVALUE LONG VARCHAR NOT NULL,\r\n    PRIMARY KEY (CLASSNAME, FIRMWAREID)\r\n);\r\nCREATE INDEX IDX_CLASSNAME_05 ON STRINGRANGENEW (CLASSNAME);\r\n\r\n\r\nStatements for second table:\r\n\r\nCREATE TABLE STRINGRANGENEW_\r\n(\r\n    CLASSNAME VARCHAR(200) NOT NULL,\r\n    FIRMWAREID INTEGER NOT NULL,\r\n    INSTANCENR INTEGER DEFAULT -1 NOT NULL,\r\n    RVALUE LONG VARCHAR NOT NULL,\r\n    PRIMARY KEY (CLASSNAME, FIRMWAREID, INSTANCENR)\r\n);\r\n\r\n(All statements are created by DDLUTILS automatically)\r\n\r\n\r\nThere are no explicit indexes created for table STRINGRANGENEW_.\r\n\r\nThe orignial table STRINGRANGENEW has additional foreign keys (one on column CLASSNAME and another one on column FIRMWAREID) in production environment. If you need the complete production database for further examination, please let me know.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s_huber","name":"s_huber","emailAddress":"huste at vr-web dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stefan Huber","active":true},"created":"2009-08-12T13:22:21.428+0000","updated":"2009-08-12T13:22:21.428+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12742365","id":"12742365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks, Stefan.\r\n\r\nI'm not seeing the same behavior when I use your exact table definition, so the index is probably a dead end.  Right now my suspicion is directed at the combination of DEFAULT and NOT NULL for the newly added column.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-08-12T14:03:21.555+0000","updated":"2009-08-12T14:03:21.555+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12742436","id":"12742436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attaching a new repro - which imports the data ('d4348-import.sql' contains the script, 'out.dat' the data to import).\r\nI removed all the indexes to simplify the script. Note the comments for the SQL creating the two tables.\r\n\r\nAs it is now, the repro fails (by showing 42 rows where RVALUE differs from the original).\r\nBy tweaking the DDL slightly, it passes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-08-12T16:28:06.118+0000","updated":"2009-08-12T16:28:06.118+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12742438","id":"12742438","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Note that I haven't checked if the bug occurs in versions prior to 10.3 (didn't have the jars easily available at the moment).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-08-12T16:31:48.200+0000","updated":"2009-08-12T16:31:48.200+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12744983","id":"12744983","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I checked three random samples out of the 42 corrupt rows, and all of them had an RVALUE identical to the row 15 places ahead of it. So at least there seems to be some kind of pattern.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-19T10:26:55.892+0000","updated":"2009-08-19T10:26:55.892+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12745012","id":"12745012","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"More info about the pattern (thanks to Dag for his DERBY-3634 patch which made it a lot easier to find!):\r\n\r\nThe corrupted rows in STRINGRANGENEW_ are all rows whose row number (counting from the beginning of the the table, starting with 1) is 16*N, N in {2,3,4,...,40} or N in {49,50,51}.\r\n\r\nEach corrupted row in STRINGRANGENEW_ with row number RN, has the same RVALUE as the row in STRINGRANGENEW with row number RN-15.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-19T11:48:56.258+0000","updated":"2009-08-19T11:48:56.258+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12745033","id":"12745033","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The attached class D4348.java reproduces the bug with a simpler schema and data set.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-19T12:37:01.363+0000","updated":"2009-08-19T12:37:01.363+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12745035","id":"12745035","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I'm able to reproduce this bug all the way back to 10.0.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-19T12:39:22.690+0000","updated":"2009-08-19T12:39:22.690+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12746003","id":"12746003","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I've had a look at the repro in a debugger. It looks like the rows returned by the BulkTableScanResultSet that reads the source table are correct. The corruption seems to happen somewhere in the normalization after a chunk of 16 rows has been fetched from the BTSRS (BTSRS has an internal fetch buffer which holds 16 rows) and before the rows are inserted into the destination table. When the (16N+1)th row is normalized (N>0), the contents of the LONG VARCHAR column are actually copied into the SQLLongVarchar that holds the value for the (16N+16)th row. Why that happens is still not clear to me, but I suspect there's some kind of aliasing problem where two SQLLongVarchar references point to the same underlying instance.\r\n\r\nDataTypeDescriptor.normalize() has a special case for LONG VARCHAR (see below). If I comment out the special case, the repro doesn't produce a corrupt table, which is also an indication that the problem is related to the normalization.\r\n\r\n\t\t\t//doing the following check after normalize so that normalize method would get called on long varchs and long varbinary\r\n\t\t\t//Need normalize to be called on long varchar for bug 5592 where we need to enforce a lenght limit in db2 mode\r\n\t\t\tif ((jdbcId == Types.LONGVARCHAR) || (jdbcId == Types.LONGVARBINARY)) {\r\n\t\t\t\t// special case for possible streams\r\n\t\t\t\tif (source.getClass() == cachedDest.getClass()) \r\n\t\t\t\t\treturn source;\r\n\t\t\t}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-21T14:59:27.932+0000","updated":"2009-08-21T14:59:27.932+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12747355","id":"12747355","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Here's a patch (derby-4348-1a.diff) that adds a regression test case\r\nand fixes the problem.\r\n\r\nIt turns out that there in fact is a problem with the special case for\r\nLONG VARCHAR and LONG VARBINARY when performing normalization of the\r\nvalues. Normally, DataTypeDescriptor.normalize() normalizes a\r\nDataValueDescriptor by copying it into another DataValueDescriptor and\r\nreturning the copy. This destination DVD is cached and reused so that\r\none doesn't need to reallocate it for every value to normalize.\r\n\r\nThe special case for LONG VARCHAR and LONG VARBINARY changes this\r\nslightly by returning the source DVD instead of the destination DVD,\r\napparently to avoid problems with shared streams.\r\n\r\nNow, NormalizeResultSet has an ExecRow field, called normalizedRow, in\r\nwhich the cached destination DVDs are stored. It is reused so that\r\nNormalizeResultSet.getNextRowCore() returns the exact same instance\r\nfor every row. But since DataTypeDescriptor.normalize() returns the\r\nsource DVD instead of the copy for LONG VARCHAR, the cached ExecRow\r\nwill contain the original DVD and not the copy. When the next row is\r\nrequested from the NormalizeResultSet, it will therefore use the\r\nsource DVD for the previous row as the destination DVD for the call to\r\nnormalize().\r\n\r\nCopying a column from the current row to the previous row is not a\r\nproblem for most of the rows, as the previous row has already been\r\nprocessed. However, when processing the first row in a new chunk\r\nreturned from BulkTableScanResultSet, the DVDs in the previous row\r\nhave also been reused in the fetch buffer to hold the last row in the\r\nchunk. Since that row has not yet been processed, copying into it from\r\nthe current row will affect what we see when we get to it later.\r\n\r\nThe problem here is that NormalizeResultSet.normalizedRow serves two\r\npurposes: (1) Hold an ExecRow object that can be reused, and (2) hold\r\none DataValueDescriptor per column that can be reused. This works fine\r\nas long as the actual DVD references in the ExecRow are not changed,\r\nbut when one of the values is a LONG VARCHAR/LONG VARBINARY the\r\nreferences are changed.\r\n\r\nThe patch addresses the problem by having a separate data structure\r\nfor each of the two purposes. NormalizeResultSet.normalizedRow\r\ncontinues to cache the ExecRow object for reuse. A new field\r\n(cachedDestinations[]) is added to hold each individual\r\nDataValueDescriptor that should be reused. This way, changing the DVD\r\nreferences in normalizedRow does not change which destination DVD is\r\nused when processing the next row, and we don't end up modifying a DVD\r\nwhich is also present later in the fetch buffer of the bulk scan.\r\n\r\nDescription of changes:\r\n\r\n* NormalizeResultSet.java:\r\n\r\n- new field cachedDestinations which takes over some of the\r\n  responsibility from normalizedRow\r\n\r\n- new helper methods getCachedDestination() and getDesiredType() to\r\n  reduce the complexity of normalizeRow()\r\n\r\n- removed unneeded throws clause from fetchResultTypes() to prevent\r\n  getDesiredType() from having to inherit the unneeded clause\r\n\r\n* DataTypeDescriptor.java:\r\n\r\n- removed code in normalize() that initializes the cached destination\r\n  if it is null, since this is now handled by\r\n  NormalizeResultSet.getCachedDestination()\r\n\r\n* InsertTest.java:\r\n\r\n- new JUnit test which exposes the bug\r\n\r\n\r\nThe regression tests ran cleanly with this patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-25T11:24:08.846+0000","updated":"2009-08-25T11:24:08.846+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12748783","id":"12748783","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed revision 808850.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-28T11:18:23.562+0000","updated":"2009-08-28T11:18:23.562+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12432866/comment/12749407","id":"12749407","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Merged fix to 10.5 and committed revision 809490.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-31T07:47:52.197+0000","updated":"2009-08-31T07:47:52.197+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4348/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06qgf:"}}