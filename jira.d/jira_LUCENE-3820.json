{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12543784","self":"https://issues.apache.org/jira/rest/api/latest/issue/12543784","key":"LUCENE-3820","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12319070","id":"12319070","description":"Major release after 3.5","name":"3.6","archived":false,"released":true,"releaseDate":"2012-04-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314025","id":"12314025","description":"Alpha release of the 4.x series","name":"4.0-ALPHA","archived":false,"released":true,"releaseDate":"2012-07-03"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-02-23 02:13:25.592","customfield_12312323":null,"customfield_12310420":"229023","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_386755788_*|*_5_*:*_2_*:*_22533118_*|*_4_*:*_1_*:*_98945322","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-02-28T23:13:56.917+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3820/watchers","watchCount":1,"isWatching":false},"created":"2012-02-23T02:03:23.628+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-10T10:43:27.857+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"Reimplementation of PatternReplaceCharFilter to pass randomized tests (used to throw exceptions previously). Simplified code, dropped boundary characters, full input buffered for pattern matching.","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"24197","summary":"Wrong trailing index calculation in PatternReplaceCharFilter","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":22,"total":22,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214197","id":"13214197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"A patch with reimplementation of getReplaceBlock and a test case that is failing with AIOOB (apply test changes without modifying PatternReplaceCharFilter to get the error).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-23T02:05:05.659+0000","updated":"2012-02-23T02:05:05.659+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214203","id":"13214203","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Unrelated to this change: we should be using StringBuilder here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-02-23T02:13:25.592+0000","updated":"2012-02-23T02:13:25.592+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214225","id":"13214225","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Here's a simple random test showing some existing bugs in the filter... \r\n* there are offsets problems as dawid notices...\r\n* blockbuffer should always oversize by 1 character, if a block ends on a high surrogate (rare) it should do one additional read() so it doesnt create invalid unicode\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-02-23T02:34:08.987+0000","updated":"2012-02-23T02:34:08.987+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214235","id":"13214235","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"to fix dawid's problem we can probably modify this test only for ascii, i suspect the unicode \"problems\"\r\nare going to be impossible to fix given java's regex library (i think it does not treat \".\" as codepoint\r\nbut code unit). I'll take another stab at that just to tackle the offsets issue he is seeing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-02-23T02:41:05.189+0000","updated":"2012-02-23T02:41:05.189+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214247","id":"13214247","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"updated patch, this tests only ascii (to avoid stupid problems in outdated regex support).\r\n\r\nBut there are a lot of offset problems (perhaps this corresponds to the warning in the class's javadocs?), including things like offsets being corrected to negative numbers...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-02-23T03:01:55.755+0000","updated":"2012-02-23T03:01:55.755+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214412","id":"13214412","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Thanks for looking at this, Robert. I'll go back to this later today, but I can tell you right now that from my paper considerations negative indexes make logical sense in case of \"prepended\" characters. So:\r\n\r\nPATTERN: A\r\nINPUT: ABCDEF\r\nREPLACEMENT: XYZ\r\nOUTPUT:XYZBCDEF\r\n\r\nthen (in my patch) X and Y would have negative offsets. It's a matter of agreement I guess. Negative indexes are consistent with something like this:\r\n\r\nPATTERN: ^\r\nINPUT: ABC\r\nREPLACEMENT: XYZ\r\nOUTPUT:XYZABC\r\n\r\nthen all three characters (XYZ) have a negative index to indicate they're prepended. Thoughts?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-23T07:21:01.429+0000","updated":"2012-02-23T07:21:01.429+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214498","id":"13214498","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"bq. Unrelated to this change: we should be using StringBuilder here.\r\n\r\nif you mean the pattern matching bit then Matcher simply doesn't accept a StringBuilder... :(","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-23T09:28:30.779+0000","updated":"2012-02-23T09:28:30.779+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214508","id":"13214508","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"A simplifying patch that includes Robert's random tests (and passes).\r\n\r\nI've made a deliberate decision to deprecate and not use block delimiters and block processing. If you think this is a backwards no-no then feel free to correct this patch... I think block processing may be worth dropping given the code clarity without it. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-23T09:43:16.129+0000","updated":"2012-02-23T09:43:16.129+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214554","id":"13214554","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nI'll go back to this later today, but I can tell you right now that from my paper considerations negative indexes make logical sense\r\n{quote}\r\n\r\nWe cannot do this... this is the offset (character position in the reader). \r\n\r\nOffsets can never be negative.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-02-23T11:22:36.463+0000","updated":"2012-02-23T11:22:36.463+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214556","id":"13214556","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"The patch I attached works around this by pushing negative offsets to zero. Works for me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-23T11:26:34.407+0000","updated":"2012-02-23T11:26:34.407+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214606","id":"13214606","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"OK, after reviewing in detail...\r\n\r\n+1 I like the cleanup here! \r\n\r\nI don't have an opinion / don't know the use case behind block delimiters, but this is a \r\nsmall, clean, elegant implementation that doesnt cause offsets problems (from my futzing\r\naround there seemed to be at least 2 bugs, one at the beginning and one at the end?)\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-02-23T12:55:01.023+0000","updated":"2012-02-23T12:55:01.023+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13214856","id":"13214856","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"I'll put this on hold and commit in a few days if nobody has anything against. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-23T17:06:47.972+0000","updated":"2012-02-23T17:06:47.972+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13217451","id":"13217451","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"I'm seeing TestPatternReplaceCharFilter.testRandomData sometimes take a REALLY long time (longer than I can wait :) ).\r\n\r\nThe test is not hung (CPU is pegged).\r\n\r\nI don't have a seed (can we somehow tap into kill -QUIT so that in addition to the JRE printing stack traces for all threads, it also prints our seed?)... but here's the stack trace:\r\n\r\n{noformat}\r\n\"main\" prio=10 tid=0x00007fbc64008000 nid=0x4095 runnable [0x00007fbc69b32000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4304)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.match(Pattern.java:4295)\r\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4227)\r\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:3782)\r\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:3744)\r\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4168)\r\n\tat java.util.regex.Pattern$Loop.matchInit(Pattern.java:4311)\r\n\tat java.util.regex.Pattern$Prolog.match(Pattern.java:4251)\r\n\tat java.util.regex.Pattern$Start.match(Pattern.java:3055)\r\n\tat java.util.regex.Matcher.search(Matcher.java:1105)\r\n\tat java.util.regex.Matcher.find(Matcher.java:535)\r\n\tat org.apache.lucene.analysis.pattern.PatternReplaceCharFilter.processPattern(PatternReplaceCharFilter.java:100)\r\n\tat org.apache.lucene.analysis.pattern.PatternReplaceCharFilter.read(PatternReplaceCharFilter.java:80)\r\n\tat java.io.Reader.read(Reader.java:104)\r\n\tat org.apache.lucene.analysis.MockTokenizer.readCodePoint(MockTokenizer.java:138)\r\n\tat org.apache.lucene.analysis.MockTokenizer.incrementToken(MockTokenizer.java:105)\r\n\tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:346)\r\n\tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:304)\r\n\tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:259)\r\n\tat org.apache.lucene.analysis.pattern.TestPatternReplaceCharFilter.testRandomStrings(TestPatternReplaceCharFilter.java:297)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat org.apache.lucene.util.LuceneTestCase$SubclassSetupTeardownRule$1.evaluate(LuceneTestCase.java:707)\r\n\tat org.apache.lucene.util.LuceneTestCase$InternalSetupTeardownRule$1.evaluate(LuceneTestCase.java:606)\r\n\tat org.apache.lucene.util.LuceneTestCase$TestResultInterceptorRule$1.evaluate(LuceneTestCase.java:511)\r\n\tat org.apache.lucene.util.LuceneTestCase$RememberThreadRule$1.evaluate(LuceneTestCase.java:569)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:165)\r\n\tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:136)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:117)\r\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:98)\r\n\tat org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:53)\r\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:45)\r\n{noformat}\r\n\r\nI guess the random regexp ({{_TestUtil.randomRegexpishString(random)}}) is sometimes too evil...?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-02-27T19:43:59.185+0000","updated":"2012-02-27T19:43:59.185+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13217452","id":"13217452","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Reopening to somehow fix the too-evil regexp...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-02-27T19:44:52.520+0000","updated":"2012-02-27T19:44:52.520+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13217485","id":"13217485","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"That's Robert's evil piece of random pattern generation... I told him this would stress the pattern engine more than our code and this seems to be the case ;) The above seems like a heavy backtracking/ recursion pattern, something Russ Cox was writing about (http://swtch.com/~rsc/regexp/regexp1.html).\r\n\r\nI'd just add @Ignore to this test? Alternatively, I'd make it absolute-time bound and simply terminate after, say, 3 seconds.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-27T20:03:12.019+0000","updated":"2012-02-27T20:03:12.019+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13217546","id":"13217546","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"I've added a time limit of 2 seconds. Seems to do the trick for me.\r\n\r\nbq. can we somehow tap into kill -QUIT so that in addition to the JRE printing stack traces for all threads, it also prints our seed?)\r\n\r\nYes, put the seed in your test running thread's name. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-27T20:51:15.985+0000","updated":"2012-02-27T20:51:15.985+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13217547","id":"13217547","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Mike, resolve if this fix works for you.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-27T20:51:45.638+0000","updated":"2012-02-27T20:51:45.638+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13217716","id":"13217716","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. Yes, put the seed in your test running thread's name.\r\n\r\nHmm maybe LTC can somehow do this for us...?  EG maybe we make a utility method to launch a new thread... and it sets the name?\r\n\r\nbq. Mike, resolve if this fix works for you.\r\n\r\nWell... I beasted w/ this change, but after 156 iterations it got a bad regexp again.\r\n\r\nWould be ashame to just @Ignore it though... can we somehow make the regexp generation less \"evil\"?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-02-28T00:07:56.938+0000","updated":"2012-02-28T00:07:56.938+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13217991","id":"13217991","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"I've committed that thread-name-contains-seed thing. I've also tried to reproduce the long pattern but it's been running on my machine for a few minutes in a tight loop and all of them end below one second. Can you try to reproduce it again? I'm curious what's causing this. I'll add @Ignore once we know what the problem is.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-28T08:14:03.914+0000","updated":"2012-02-28T08:14:03.914+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13218152","id":"13218152","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. I've committed that thread-name-contains-seed thing.\r\n\r\nAwesome!  Using this, I re-beasted and found this seed (was still going after 75 minutes when I killed it...):\r\n\r\n{noformat}\r\nant test -Dtestcase=TestPatternReplaceCharFilter -Dtestmethod=testRandomStrings -Dtests.seed=-27d641cb49b46a8e:-4b59e6886f1953b6:7d2fb14a457a628\r\n{noformat}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-02-28T13:22:57.842+0000","updated":"2012-02-28T13:22:57.842+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13218515","id":"13218515","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"body":"Yep, nice catch. That test case causes a beautiful exponential time pattern to be generated (I've added it as an @Ignored test :). I limited the input size to 40 characters. With such input it should be possible to traverse the entire search space, even if it's exponential. I don't see a way to easily verify if a pattern is exponential or not (without resigning from certain types of patterns).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dweiss","name":"dweiss","emailAddress":"dawid dot weiss at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dawid Weiss","active":true},"created":"2012-02-28T19:27:11.619+0000","updated":"2012-02-28T19:27:11.619+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12543784/comment/13218680","id":"13218680","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Thanks Dawid!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-02-28T23:13:57.454+0000","updated":"2012-02-28T23:13:57.454+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3820/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04i3j:"}}