{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12545007","self":"https://issues.apache.org/jira/rest/api/latest/issue/12545007","key":"LUCENE-3841","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12319070","id":"12319070","description":"Major release after 3.5","name":"3.6","archived":false,"released":true,"releaseDate":"2012-04-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314025","id":"12314025","description":"Alpha release of the 4.x series","name":"4.0-ALPHA","archived":false,"released":true,"releaseDate":"2012-07-03"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-03-03 16:31:10.28","customfield_12312323":null,"customfield_12310420":"230193","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_1007256815_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-03-14T15:43:39.932+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3841/watchers","watchCount":3,"isWatching":false},"created":"2012-03-02T23:56:03.254+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317877","id":"12317877","description":"Major release after 3.4","name":"3.5","archived":false,"released":true,"releaseDate":"2011-11-27"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-10T10:44:05.161+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310233","id":"12310233","name":"core/other","description":"issues related to any code under core. Usage of this document is discouraged. Please create (or ask for) a proper component."}],"timeoriginalestimate":null,"description":"We tracked down a large memory leak (effectively a leak anyway) caused\r\nby how Analyzer users CloseableThreadLocal.\r\nCloseableThreadLocal.hardRefs holds references to Thread objects as\r\nkeys.  The problem is that it only frees these references in the set()\r\nmethod, and SnowballAnalyzer will only call set() when it is used by a\r\nNEW thread.\r\n\r\nThe problem scenario is as follows:\r\n\r\nThe server experiences a spike in usage (say by robots or whatever)\r\nand many threads are created and referenced by\r\nCloseableThreadLocal.hardRefs.  The server quiesces and lets many of\r\nthese threads expire normally.  Now we have a smaller, but adequate\r\nthread pool.  So CloseableThreadLocal.set() may not be called by\r\nSnowBallAnalyzer (via Analyzer) for a _long_ time.  The purge code is\r\nnever called, and these threads along with their thread local storage\r\n(lucene related or not) is never cleaned up.\r\n\r\nI think calling the purge code in both get() and set() would have\r\navoided this problem, but is potentially expensive.  Perhaps using \r\nWeakHashMap instead of HashMap may also have helped.  WeakHashMap \r\npurges on get() and set().  So this might be an efficient way to\r\nclean up threads in get(), while set() might do the more expensive\r\nMap.keySet() iteration.\r\n\r\nOur current work around is to not share SnowBallAnalyzer instances\r\namong HTTP searcher threads.  We open and close one on every request.\r\n\r\nThanks,\r\nMatt","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"24176","summary":"CloseableThreadLocal does not work well with Tomcat thread pooling","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mbellew","name":"mbellew","emailAddress":"matthewb at labkey dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Matthew Bellew","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mbellew","name":"mbellew","emailAddress":"matthewb at labkey dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Matthew Bellew","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Lucene/Tika/Snowball running in a Tomcat web application","customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":6,"total":6,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545007/comment/13221629","id":"13221629","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eksdev","name":"eksdev","emailAddress":"eksdev at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eks Dev","active":true},"body":"This is indeed a problem. Recently we moved to solr on tomcat and we hit it, slightly different form. \r\n\r\nThe nature of the problem is in high thread churn on tomcat, and when combined with expensive analyzers it wracks gc() havoc (*even without stale ClosableThreadLocals from this issue*). We are attacking this problem currently by reducing maxThreads and increasing minSpareThreads (also reducing time to forced thread renew). The goal is to increase life-time of threads, and to contain them to reasonable limits. I would appreciate any tips into this direction.\r\n\r\nThe problem with this strategy is if some cheep requests, not really related to your search saturate smallish thread pool... I am looking for a way to define separate thread pools for search/update requests and one for the rest as it does not make sense to have 100 search threads searching lucene on dual core box. Not really experienced with tomcat... \r\n\r\nOf course, keeping Analyzer creation cheep helps(e.g. make expensive, background structures thread-safe that can be shared and only thin analyzer using them). But this is not always easy.\r\n\r\nJust sharing experience here, maybe someone finds it helpful. Hints always welcome :)\r\n\r\n    \r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eksdev","name":"eksdev","emailAddress":"eksdev at yahoo dot co dot uk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eks Dev","active":true},"created":"2012-03-03T16:31:10.280+0000","updated":"2012-03-03T16:31:10.280+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545007/comment/13227049","id":"13227049","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"I think it should be safe to use a WeakHashMap for the hardRefs instead of HashMap?\r\n\r\nThis way, if a thread has finished and its Thread object is otherwise GCable, the entries in hardRefs should be cleared... though, it's not clear to me precisely when they will be cleared.  If it's only on future access to the WeakHashMap (get or set), which seems likely because I think WeakHashMap uses a WeakReference for the keys and therefore won't really remove an entry util it's later \"touched\", then again only on set will the object be cleared and we haven't really improved the situation.\r\n\r\nMatthew, did you try that change, and, did it improve the scenario above?\r\n\r\nFailing that, I think we have to purge it get... maybe we can amortize it (every Nth get, where N is a factor of how many entries are in the map...).\r\n\r\nAlso: I don't think PagedBytes should use CloseableThreadLocal... I think it should just new byte[].\r\n\r\nSeparately: maybe SnowballAnalyzer is too heavy...?  Does it have some static data that ought to be loaded once and shared across analyzers... but isn't today?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-03-11T14:00:37.326+0000","updated":"2012-03-11T14:00:37.326+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545007/comment/13227055","id":"13227055","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nSeparately: maybe SnowballAnalyzer is too heavy...? Does it have some static data that ought to be loaded once and shared across analyzers... but isn't today?\r\n{quote}\r\n\r\nI think the analyzers are going to be heavy.\r\n\r\nIf we start going down the path of trying to speed up their instantiation time, then I vote to remove reusable tokenstreams completely.\r\n\r\nThat is: i don't think we should suffer the 'worst of both worlds'. either we go thru all the effort to make things reusable, or we dont\r\nand instead worry about instantiation time, etc.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2012-03-11T14:24:12.432+0000","updated":"2012-03-11T14:24:12.432+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545007/comment/13227099","id":"13227099","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Patch.\r\n\r\nI cutover to WeakHashMap for the hard refs, and now purge periodically\r\nfrom both set and get.  The purge frequency is 20X the number of\r\nthreads in the map, so that the amortized cost remains linear.\r\n\r\nI also stopped using CTL in PagedBytes, and added some additional\r\ntests for it.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-03-11T17:17:27.441+0000","updated":"2012-03-11T17:17:27.441+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545007/comment/13227100","id":"13227100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"{quote}\r\nI think the analyzers are going to be heavy.\r\n\r\nIf we start going down the path of trying to speed up their instantiation time, then I vote to remove reusable tokenstreams completely.\r\n\r\nThat is: i don't think we should suffer the 'worst of both worlds'. either we go thru all the effort to make things reusable, or we dont\r\n and instead worry about instantiation time, etc.\r\n{quote}\r\n\r\nSorry, you're right: it's fine for the Analyzer to be heavy/slow to\r\ninit/etc., as long as the TokenStreams then share static state.\r\n\r\nSo, what I meant is: are the TokenStreams returned from\r\nSnowballAnalyzer somehow not sharing static stuff...?  Or, why would\r\nthey be so heavy...?\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-03-11T17:21:55.802+0000","updated":"2012-03-11T17:21:55.802+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545007/comment/13229267","id":"13229267","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Thanks Matthew!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2012-03-14T15:43:40.034+0000","updated":"2012-03-14T15:43:40.034+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-3841/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04hyv:"}}