{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12333512","self":"https://issues.apache.org/jira/rest/api/latest/issue/12333512","key":"DERBY-1315","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311972","id":"12311972","description":"","name":"10.1.3.2","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-05-11 23:41:41.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22430","customfield_12310222":"1_*:*_1_*:*_10253331000_*|*_6_*:*_2_*:*_1108445000_*|*_5_*:*_2_*:*_86464000_*|*_4_*:*_1_*:*_166841000","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-09-22T15:57:59.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1315/watchers","watchCount":0,"isWatching":false},"created":"2006-05-11T05:33:33.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"8.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12313303","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12313303","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12349344","key":"DERBY-1818","self":"https://issues.apache.org/jira/rest/api/2/issue/12349344","fields":{"summary":"Renable largeCodeGen test to run with 10,000 UNIONs.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/task.png","name":"Task","subtask":false}}}},{"id":"12313110","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12313110","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12327441","key":"DERBY-805","self":"https://issues.apache.org/jira/rest/api/2/issue/12327441","fields":{"summary":"Push join predicates into union and other set operations. DERBY-649 implemented scalar (single table) predicate pushdown. Adding join predicate push down could improve performance significantly.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png","name":"Sub-task","subtask":true}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-07-01T12:59:20.621+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"The test case lang/largeCodeGen.java was run as is without giving any -Djvmflags=\"-mx512M -ms512M\" and gave the following error:\r\n\r\n*** Start: largeCodeGen jdk1.4.2 largeDataTests:largeDataTests 2006-04-29 08:30:04 ***\r\n27a28\r\n> JVMST109: Insufficient space in Javaheap to satisfy allocation request\r\nTest Failed.\r\n*** End:   largeCodeGen jdk1.4.2 largeDataTests:largeDataTests 2006-04-29 08:32:01 ***\r\n \r\nThen the test case lang/largeCodeGen.java was run with -Djvmflags=\"-mx512M -ms512M\", and it gave the following error:\r\n< PASS: IN clause with 97000 parameters\r\n20 del\r\n< PASS: PREPARE: IN clause with 98000 parameters\r\n21 del\r\n< PASS: IN clause with 98000 parameters\r\n22 del\r\n< FAILED QUERY: IN clause with 99000 parameters. \r\n22a19\r\n> FAILED QUERY: IN clause with 97000 parameters.\r\nTest Failed.\r\n\r\nThen I modified test case lang/largeCodeGen.java to set PRINT_FAILURE_EXCEPTION  to true and ran the test again. This time I got the following error and stack trace:\r\n\r\nMasterFileName = master/largeCodeGen.out\r\n15a16,18\r\n> java.sql.SQLException: Statement too complex. Try rewriting the query to remove \r\ncomplexity. Eliminating many duplicate expressions or breaking up the query and \r\nstoring interim results in a temporary table can often help resolve this error\r\n. SQLSTATE: XBCM4: Java class file format limit(s) exceeded: method:e1 code_leng\r\nth (65577 > 65535) in generated class org.apache.derby.exe.ac46a08075x010bx203ax \r\nd010x000050a9065e9.\r\n\r\n> Caused by: org.apache.derby.client.am.SqlException: Statement too complex. Try\r\n rewriting the query to remove complexity. Eliminating many duplicate expression\r\ns or breaking up the query and storing interim results in a temporary table can \r\noften help resolve this error. SQLSTATE: XBCM4: Java class file format limit(s)\r\n\r\nexceeded: method:e1 code_length (65577 > 65535) in generated class \r\norg.apache.derby.exe.ac46a08075x010bx203axd010x000050a9065e9 .\r\n>       ... 4 more\r\n19 del\r\n< PASS: IN clause with 97000 parameters\r\n20 del\r\n< PASS: PREPARE: IN clause with 98000 parameters\r\n21 del\r\n< PASS: IN clause with 98000 parameters\r\n22 del\r\n\r\n< FAILED QUERY: IN clause with 99000 parameters. \r\n22a22,29\r\n> FAILED QUERY: IN clause with 97000 parameters.\r\n> java.sql.SQLException: The parameter position '31,465' is out of range.  The \r\nnumber of parameters for this prepared  statement is '31,464'.\r\n>       at org.apache.derby.client.am.PreparedStatement.setInt(PreparedStatement\r\n.java(Compiled Code))\r\n> Caused by: org.apache.derby.client.am.SqlException: The parameter position '31\r\n,465' is out of range.  The number of parameters for this prepared  statement is \r\n '31,464'.\r\n>       at org.apache.derby.client.am.PreparedStatement.checkForValidParameterIn\r\ndex(PreparedStatement.java(Compiled Code))\r\n>       at org.apache.derby.client.am.PreparedStatement.checkSetterPreconditions \r\n(PreparedStatement.java(Inlined Compiled Code))\r\n>       at org.apache.derby.client.am.PreparedStatement.setIntX(PreparedStatemen\r\nt.java(Inlined Compiled Code))\r\n>       ... 5 more\r\n\r\n27a35,37\r\n> java.sql.SQLException : Statement too complex. Try rewriting the query to remove \r\ncomplexity. Eliminating many duplicate expressions or breaking up the query and \r\nstoring interim results in a temporary table can often help resolve this error \r\n. SQLSTATE: XBCM4: Java class file format limit(s) exceeded: method:fillResultSe\r\nt code_length (69127 > 65535) in generated class \r\norg.apache.derby.exe.ac46a08075x010bx203axd010x000050a9065e11.\r\n> Caused by: org.apache.derby.client.am.SqlException: Statement too complex. Try\r\n rewriting the query to remove complexity. Eliminating many duplicate expression\r\ns or breaking up the query and storing interim results in a temporary table can \r\noften help resolve this error. SQLSTATE: XBCM4: Java class file format limit(s)\r\nexceeded: method:fillResultSet code_length (69127 > 65535) in generated class \r\norg.apache.derby.exe.ac46a08075x010bx203axd010x000050a9065e11 .\r\n>       ... 3 more\r\n28 add\r\n> java.sql.SQLException: Java exception: ': java.lang.OutOfMemoryError'.\r\n> Caused by: org.apache.derby.client.am.SqlException: Java exception: ': \r\njava.lang.OutOfMemoryError '.\r\n>       ... 3 more\r\nTest Failed.\r\n\r\n\r\n\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38426","summary":"Statement optimization/compilation fails with OutOfMemoryException in largeCodeGen test  with embedded and framework DerbyNetClient","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ramank","name":"ramank","emailAddress":"ramank at Yngvi dot Org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ramandeep Kaur","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10101","value":"Release Note Needed","id":"10101"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ramank","name":"ramank","emailAddress":"ramank at Yngvi dot Org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ramandeep Kaur","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Linux - Suse 2.6.5-7.252","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10051","value":"Urgent","id":"10051"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":25,"total":25,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12379099","id":"12379099","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Raman told  us that client fails with this error:\r\n\r\n>\r\n> MasterFileName = master/largeCodeGen.out\r\n> 15a16,18\r\n> > java.sql.SQLException: Statement too complex. Try rewriting the query to remove\r\n> complexity. Eliminating many duplicate expressions or breaking up the query and\r\n> storing interim results in a temporary table can often help resolve this error\r\n> . SQLSTATE: XBCM4: Java class file format limit(s) exceeded: method:e1 code_leng\r\n> th (65577 > 65535) in generated class org.apache.derby.exe.ac46a08075x010bx203ax\r\n\r\n\r\n This tells us that we are still dealing with the expected error.  The question is what is the difference between the embedded limits and the client limits. If you do a visual diff you can see more clearly.  Perhaps the starting value of the loop in the largeCodeGenTest will  have to be adjusted to see.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-05-11T23:41:41.000+0000","updated":"2006-05-11T23:41:41.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12379100","id":"12379100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Changing priority to Minor. There is no indication right now that this is a major functionalitiy impact for client.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-05-11T23:42:48.000+0000","updated":"2006-05-11T23:42:48.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12425806","id":"12425806","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"body":"This test also fails in embedded mode. As far as I can tell, this test has not passed on this test machine for a long time now. I dont have the entire history to verify\r\n\r\n ********* Diff file largeDataTests/largeDataTests/largeCodeGen.diff\r\n*** Start: largeCodeGen jdk1.4.2 largeDataTests:largeDataTests 2006-07-29 05:54:45 ***\r\n23 del\r\n< PASS: PREPARE: SELECT with 800 unions\r\n24 del\r\n< PASS: EXECUTE SELECT with 800 unions Row data check ok\r\n25 del\r\n< PASS: PREPARE: SELECT with 900 unions\r\n26 del\r\n< PASS: EXECUTE SELECT with 900 unions Row data check ok\r\n27 del\r\n< FAILED QUERY: SELECT with 1000 unions.\r\n27a23,24\r\n> FAILED QUERY: SELECT with 800 unions.\r\n> JVMST109: Insufficient space in Javaheap to satisfy allocation request\r\nTest Failed.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"created":"2006-08-04T18:12:24.000+0000","updated":"2006-08-04T18:12:24.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12425810","id":"12425810","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"When running this I saw the out of memory exception was during optimization.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-08-04T18:19:31.000+0000","updated":"2006-08-04T18:19:31.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12425861","id":"12425861","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"body":"Here is 4 line sql script to recreate the issue, hope this will help in debugging and fixing the OOM error. I also plan\r\nto bump this issue from being a Minor to atleast a Major or higher.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"created":"2006-08-04T21:17:38.000+0000","updated":"2006-08-04T21:17:38.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426689","id":"12426689","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"body":"I ran the largeCodeGen test as a stand alone application in Embedded mode against:\r\n10.0.2.2.349072  \t\r\n10.1.2.4.384995  \t\r\n10.1.3.2.424154  \t\r\n10.2.0.5 alpha.424456\r\n\r\nWhile 10.2 now works in more number of complex cases (Logical operators with 800 parameters, IN clause with 98000 parameters) in comparision to 10.0 and 10.1, there has been a regression.\r\n - The scenario with SELECT with 800 and 900 unions used to PASS in 10.0 and 10.1 now FAILs in 10.2\r\n-  The scenario  with SELECT with 10000 unions used to fail after compilation in 10.0 and 10.1.2. But with 10.1.3 and 10.2\r\n  the statement fails during compile with OutOfMemory error.\r\n\r\nIn addition, under default settings, I noticed that in Derby 10.0, 10.1 if the exception (SQLSTATE= XBCM1, SQL Exception: Java linkage error thrown during load of generated class ) occurs during execution of the generated class, the generated  file is left behind on the file system. \r\n\r\nFor example:\r\n-rwxrwxrwa   1 Administrators  None             172052 Aug  8 10:53 ace5214067x010cxeeebx20c8x00001f6fcec04.class\r\n-rwxrwxrwa   1 Administrators  None            5082617 Aug  8 10:53 ace5214067x010cxeeebx20c8x00001f6fcec05.class\r\n\r\nWhereas with 10.2, no files are left behind, which I think should be the right behaviour.\r\n\r\nAttaching the html file of my findings and the largeCodeGen.java\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"created":"2006-08-08T19:45:55.000+0000","updated":"2006-08-08T19:45:55.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426692","id":"12426692","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"body":"Regression: Select scenarios started failing in 10.2 that used to pass in 10.1.x, hence raising its priority to Critical. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"created":"2006-08-08T19:53:28.000+0000","updated":"2006-08-08T19:53:28.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426693","id":"12426693","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"This is a potential regression, which we should examine. Bumping the urgency of this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2006-08-08T19:54:04.000+0000","updated":"2006-08-08T19:54:04.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426695","id":"12426695","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"body":"Forgot to add:\r\nThe test was run using -Xms512M -Xmx512M settings for Sun jdk1.5\r\n\r\njava  -Xms512M -Xmx512M largeCodeGen","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"created":"2006-08-08T19:57:57.000+0000","updated":"2006-08-08T19:57:57.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426696","id":"12426696","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"This is not a test issue, it's a bug in the SQL system.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-08-08T19:58:41.000+0000","updated":"2006-08-08T19:58:41.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426705","id":"12426705","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> - The scenario with SELECT with 10000 unions used to fail after compilation in 10.0 \r\n>    and 10.1.2. But with 10.1.3 and 10.2 the statement fails during compile with OutOfMemory error.\r\n\r\nI hate to say it, but it looks like this regression is caused by the changes for DERBY-805.   Before the DERBY-805 changes Derby was generating plans for subqueries that did not agree with the optimizer's choices.  Phase 1 of the DERBY-805 patches made it so that Derby generates the plans chosen by the optimizer, as one might expect.  In order to do that, I added extra state to the optimizable nodes to keep track of which query plan went with which level of query.\r\n\r\nMy guess is that this extra state is causing the optimizer to increase its memory usage--and thus for very large queries, we end up running out of memory  This is backed by two things: 1) the changes for DERBY-805 apply specifically to UNIONs, and the query that's failing has 10,000 unions in it; 2) the DERBY-805 changes were checked into the 10.1.2.4 snapshot and thus are part of 10.1.3--which explains the behavior quoted above from Rajesh.\r\n\r\nI ran the repro with 512M against a version of the 10.1 jars that immediately precedes any DERBY-805 check-ins and it \"passes\" (i.e. fails with linkage error); I then ran it against another version that was created shortly after all of DERBY-805 was ported to 10.1; it fails with OOM.\r\n\r\nSo there's the regression.\r\n\r\nThat said, it'll be virtually impossible for me to try to address this issue for the 10th--I'm already booked with DERBY-1633 (the other regression...*sigh*).\r\n\r\nNot sure where that leaves us.  Sorry.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-08-08T20:36:16.000+0000","updated":"2006-08-08T20:36:16.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426708","id":"12426708","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Hard to test if the code generation is better if the query fails in optimization. :-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-08-08T20:49:48.000+0000","updated":"2006-08-08T20:49:48.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426775","id":"12426775","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"From what  I understand from the comments, this  should be marked as \r\n1) A regression\r\n2) Existing application impact.\r\n3) At least major, maybe critical priority\r\n4) Urgent Urgency for 10.2\r\n\r\nAny objections to these adjustments?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-08-08T23:21:46.000+0000","updated":"2006-08-08T23:21:46.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426780","id":"12426780","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"body":"I agree this can be marked  a Medium (I had marked it as Critical in the morning) . It is already marked as Regression.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kartha","name":"kartha","emailAddress":"kartha02 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rajesh Kartha","active":true},"created":"2006-08-08T23:52:58.000+0000","updated":"2006-08-08T23:52:58.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12426783","id":"12426783","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Army wrote on derby-dev:\r\n\r\n>\r\n> Any pointers to the type of extra state kept around. Is it query tree\r\n> nodes, collections, something else?\r\n\r\n\r\nWith Phase 1 of DERBY-805, a HashMap was added to each query tree node.  The map holds an Object->AccessPathImpl mapping for each OptimizerImpl that occurs above the node in the query tree.  The \"Object\" in this mapping is an object that already existed; the AccessPathImpl is a new object.\r\n\r\nSee FromTable.addOrLoadBestPlanMapping()\r\n\r\nWith Phase 4, additional entries to the HashMap are added for every UnionNode, PRN, or JoinNode that occurs above the node...and also for every occurrence of a node that doesn't implement \"optimizeIt()\".  *Ouch*.  After writing that, I find myself feeling rather ill.\r\n\r\nThe comments around these additional calls explain why they are there:\r\n\r\n// It's possible that a call to optimize the [ node ] will cause\r\n// a new \"truly the best\" plan to be stored in the underlying base\r\n// tables.  If that happens and then we decide to skip that plan\r\n// (which we might do if the call to \"considerCost()\" below decides\r\n// the current path is infeasible or not the best) we need to be\r\n// able to revert back to the \"truly the best\" plans that we had\r\n// saved before we got here.  So with this next call we save the\r\n// current plans using \"this\" node as the key.  If needed, we'll\r\n// then make the call to revert the plans in OptimizerImpl's\r\n// getNextDecoratedPermutation() method. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-08-09T00:12:46.000+0000","updated":"2006-08-09T00:12:46.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12429317","id":"12429317","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"To see this problem with largeCodeGen one must increase the number of union clauses created in the testUnions method of largeCodeGen (now a JUnit test run as part of derbyall)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-08-21T01:32:00.000+0000","updated":"2006-08-21T01:32:00.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12431943","id":"12431943","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Attaching a patch, d1315_v1.patch, to address this issue.  This patch adds a small amount of logic to remove entries from an Optimizable's \"best plan\" HashMap when they are no longer needed.  For more on when this is possible, see the discussion here:\r\n\r\n  http://article.gmane.org/gmane.comp.apache.db.derby.devel/26051\r\n\r\nI built a set of insane jars with this patch applied and then ran some of the tests related to this issue:\r\n\r\n  1. largeCodeGen.sql (with Xmx512M):\r\n\r\n    This test now passes with the patch applied.  Or rather, the\r\n    OutOfMemory error no longer occurs; instead, the query results\r\n    in a java linkage error with message:\r\n\r\n      'constant_pool(70288 > 65535): java.io.IOException'\r\n\r\n    This is the same behavior that occurs with 10.1, and thus\r\n    is no longer a regression.\r\n\r\n  2. largeCodeGen.java (as attached to this issue, with Xmx512M):\r\n\r\n    When run as-is with Sun jdk15, the logical operator tests fail\r\n    with error 42ZA0 for 900 params; the IN tests fail with error\r\n    42ZA0 with 99000 params; and the union tests fail with an OOM\r\n    error for the 4700 union test case.  HOWEVER, this OOM appears\r\n    to be caused by something other than the optimizer changes for\r\n    Derby-805.  There are several reasons why I think (hope) this:\r\n\r\n    a. Sun jdk15 throws an error \"OOMError: PermGen space\" (or\r\n       something like that); when I did a Google for that, all of\r\n       the pages I (very quickly) browsed indicated that this is\r\n       frequently the result of missed opportunities for garbage\r\n       collection.\r\n\r\n    b. If I change largeCodeGen to start counting from 4500 unions\r\n       (instead of 800), then the case of 4700, 4800, 4900, and\r\n       5000 unions all pass.  I killed the test after that so I\r\n       don't know how far it would have gone.\r\n\r\n    c. If I run with ibm142 instead of Sun jdk15, the test succeeds\r\n       for as many as 6200 unions without problem (though memory\r\n       usage does creep up for every iteration, suggesting that it\r\n       would have run out of memory at some point).  I killed the\r\n       test after that so I don't know how far it would have gone.\r\n\r\n    d. If I ONLY run the largeCodeGen test with 10000 unions (no\r\n       other tests before it), then the query will fail with error\r\n       42ZA0 instead of with an OOM.  I.e. this is the expected\r\n       behavior (...isn't it?)\r\n\r\n    One other interesting thing to note with this test: if I change\r\n    it so that it ONLY runs with 7500 unions (no other tests before\r\n    it), the query compiles successfully for both ibm142 and jdk15.\r\n    Then, for ibm142, it fails AT EXECUTION TIME with an OOM error,\r\n    while for Sun jdk15 it executes without error.  Again, this\r\n    suggests a difference between JVMs more than a problem with Derby.\r\n    In either case the fact that compilation succeeds shows that the\r\n    regression reported for DERBY-1315 is fixed with d1315_v1.patch\r\n    (at least for insane builds).  The OOM error for ibm142 is an\r\n    error that we never would have  reached with 10.1 because 10.1\r\n    fails during compilation (or more specifically, during code\r\n    generation) and thus never makes it to execution.  So this is\r\n    a case where functionality that didn't work in 10.1 still doesn't\r\n    work in 10.2--at least not with ibm142--and thus this wouldn't be\r\n    a regression.\r\n \r\n    This fact is further backed by the observation that a test of\r\n    10000 unions will fail with error 42ZA0 on ibm142 during\r\n    compilation--which means we never get to execution and thus\r\n    no OOM error occurs in that case.\r\n\r\n  3. lang/largeCodeGen.java as a standalone JUnit test:\r\n\r\n    I uncommented the lines in lang/largeCodeGen that test 10000\r\n    unions and then ran the test as a standalone JUnit with the\r\n    following command (against an INSANE build):\r\n\r\n    java -Xmx512M junit.textui.TestRunner\r\n      org.apache.derbyTesting.functionTests.test.lang.largeCodeGen\r\n\r\n    The result was:\r\n\r\n    ....\r\n    Time: 593.543\r\n\r\n    OK (4 tests) \r\n\r\n    In other words, it took a good chunk of time (10 minutes), but the\r\n    test *did* pass with a max heap size of 512M.  Note that, of the\r\n    10 minutes spent running the test, it looks like less than 20% of\r\n    that time is spent in optimization; the rest of the time is\r\n    (apparently?) used for generating code.\r\n\r\n    NOTE: If I try to run the same test with a SANE build, it fails\r\n    with an OOM error.  So this perhaps requires more investigation.\r\n    But d1315_v1.patch at least makes things better.\r\n\r\nI ran derbyall against sane jars with this patch on Red Hat Linux using ibm142 and there were no failures.  So I think the patch itself can be committed (pending review).  There is still more work, though, to figure out how to run largeCodeGen as part of derbyall: the test requires up to 512M of memory and maxes out my CPU for 10 minutes before completing--is it reasonable to add such a test derbyall?  Also, more investigation is required in order to figure out why the test passes with insane jars but fails (due to OOM) with sane jars.  At the very least, some kind of logic would be necessary to only run the test for insane builds, and I have no idea how (or if) that logic would work in JUnit.\r\n\r\nComments/feedback would be appreciated....","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-08-31T18:50:02.000+0000","updated":"2006-08-31T18:50:02.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12432000","id":"12432000","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":" d1315_v1.patch applied to trunk Committed revision 439083. - Thanks Army","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-08-31T23:04:47.000+0000","updated":"2006-08-31T23:04:47.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12432222","id":"12432222","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Fix merged to 10.2 branch as part of \"mega-merge\":\r\nr439377 | rhillegas | 2006-09-01 10:05:02 -0700 (Fri, 01 Sep 2006) | 1 line\r\n\r\nDERBY-1725: Merge the following patches from the trunk to the 10.2 branch: No JI\r\nRA (439048), DERBY-1702 (439209), DERBY-1783 (439128), DERBY-1315 (439098, 43908\r\n3), DERBY-1566 (439093).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2006-09-01T19:56:45.000+0000","updated":"2006-09-01T19:56:45.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12432974","id":"12432974","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"A fix for this issue has been checked into 10.3 and ported to 10.2 (thanks Dan and Rick).  The remaining work is to update largeCodeGen to run with 10,000 unions and to investigate related issues.  I''ve filed DERBY-1818 for tracking of that test work and am thus resolving this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-09-06T21:42:24.000+0000","updated":"2006-09-06T21:42:24.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12433248","id":"12433248","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Haven't heard any futher comments/reactions to the fix, so closing the issue.  If any further issues arise, please file a new Jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-09-07T21:43:13.000+0000","updated":"2006-09-07T21:43:13.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12436288","id":"12436288","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Reopening this issue as I would like to see the fix ported to 10.1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-09-20T17:37:18.000+0000","updated":"2006-09-20T17:37:18.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12436291","id":"12436291","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Attaching a patch for merging this change to 10.1.  There was a small conflict when I tried the \"svn merge\" command so I had to create the patch manually.  I confirmed that the patch works as expected by running the \"go.sql\" and \"largeCodeGen.java\" repros (as attached to this issue) against insane jars.  Without the patch I see OOM errors in both cases; with the applied, the OOM errors go away and are replaced with the expected 10.1 errors:\r\n\r\ngo.sql:\r\n\r\nERROR XJ001: Java exception: 'constant_pool(70285 > 65535): java.io.IOException'.\r\n\r\nlargeCodeGen:\r\n\r\n SQL Exception: Java linkage error thrown during load of generated class ...\r\n\r\nI'm running derbyall now and will post the results when it finishes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-09-20T17:47:47.000+0000","updated":"2006-09-20T17:47:47.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12436331","id":"12436331","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> I'm running derbyall now and will post the results when it finishes.\r\n\r\nderbyall on Red Hat Linux with ibm142 ran with no new failuers against sane 10.1 jars built with d1315_10_1_merge.patch applied.  So that patch is ready for port to 10.1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-09-20T20:18:38.000+0000","updated":"2006-09-20T20:18:38.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12333512/comment/12436897","id":"12436897","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thanks for commtting the merge patch to 10.1, Mike.  The fix is now in all three codelines so I've updated the Fix-in and am closing the issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2006-09-22T15:57:59.000+0000","updated":"2006-09-22T15:57:59.000+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-1315/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06xwf:"}}