{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12416511","self":"https://issues.apache.org/jira/rest/api/latest/issue/12416511","key":"DERBY-4088","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313401","id":"12313401","description":"Head of 10.4 branch","name":"10.4.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-03-10 13:33:14.511","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24018","customfield_12310222":"3_*:*_1_*:*_671476584_*|*_1_*:*_1_*:*_106973441_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-03-19T10:45:45.025+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4088/watchers","watchCount":0,"isWatching":false},"created":"2009-03-10T10:31:35.653+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313345","id":"12313345","description":"","name":"10.4.2.0","archived":false,"released":true,"releaseDate":"2008-09-05"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:52:18.799+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11410","id":"11410","name":"Network Server"}],"timeoriginalestimate":null,"description":"DDMReader.readBytes(int length) checks the length vs DssConstants.MAX_DSS_LENGTH, but ignores the fact that the buffer position \"pos\" might not be 0. If pos is non-zero then the pos + length can be larger than the size of \"buffer\" causing an ArrayIndexOutOfBoundsException.\r\n\r\nFor me this happened when sending a BLOB that was 32766 bytes long. The value of pos was 2 in that method.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37247","summary":"DDMReader readBytes ArrayIndexOutOfBoundsException","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10422","value":"High Value Fix","id":"10422"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"CentOS 5, java 1.6.0_11","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":17,"total":17,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12680421","id":"12680421","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"body":"Attached patch changes the if-statement to include buffer position. I have only tested this with my own database and the 32766 byte BLOB where it seems to work fine.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"created":"2009-03-10T10:33:25.514+0000","updated":"2009-03-10T10:33:25.514+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12680461","id":"12680461","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for the bug report. If possible, could you also provide step-by-step description of how to reproduce the bug? The stack trace of the ArrayIndexOutOfBoundsException would also be helpful.\r\n\r\nI haven't been able to reproduce the bug myself, so I can't say if the patch is correct. My understanding of that code is that the check against MAX_DSS_LENGTH is used to determine the format of the byte string, which should not be affected by the current position in the read buffer. It is the call to ensureBLayerDataInBuffer() that is supposed to ensure that the read buffer is large enough and prevent that the AIOOBE is thrown. So my initial reaction is that the bug is probably somewhere else.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-10T13:33:14.511+0000","updated":"2009-03-10T13:33:14.511+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12680496","id":"12680496","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"body":"I am not necessarily saying the patch is correct, just that making the change made it work for me. I do not claim any knowledge whatsoever about DRDA or DSS :)  Have also verified that the data is transfered correctly after the patch by checking md5 sums of the data objects inside and outside the database.\r\n\r\nreadBytes is called with pos=2, length=32766, the buffer length is 32767 and is not changed by the call to ensureBLayerDataInBuffer.\r\n\r\nServer stacktrace:\r\njava.lang.ArrayIndexOutOfBoundsException\r\n        at java.lang.System.arraycopy(Native Method)\r\n        at org.apache.derby.impl.drda.DDMReader.readBytes(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.readAndSetParams(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA_work(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(Unknown Source)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(Unknown Source)\r\n\r\nClient stacktrace:\r\norg.apache.derby.client.am.DisconnectException: The DDM object 0x1232 is not supported.  The connection has been terminated.\r\n        at org.apache.derby.client.net.NetConnectionReply.doObjnsprmSemantics(Unknown Source)\r\n        at org.apache.derby.client.net.NetConnectionReply.parseCommonError(Unknown Source)\r\n        at org.apache.derby.client.net.NetStatementReply.parseExecuteError(Unknown Source)\r\n        at org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreply(Unknown Source)\r\n        at org.apache.derby.client.net.NetStatementReply.readExecute(Unknown Source)\r\n        at org.apache.derby.client.net.StatementReply.readExecute(Unknown Source)\r\n        at org.apache.derby.client.net.NetPreparedStatement.readExecute_(Unknown Source)\r\n        at org.apache.derby.client.am.PreparedStatement.readExecute(Unknown Source)\r\n        at org.apache.derby.client.am.PreparedStatement.flowExecute(Unknown Source)\r\n        at org.apache.derby.client.am.PreparedStatement.executeUpdateX(Unknown Source)\r\n        ... 2 more\r\n\r\nI am also attaching a tiny testprogram that triggers this bug for me. Reproduced by:\r\n\r\njava -classpath derbynet.jar org.apache.derby.drda.NetworkServerControl start\r\njavac DerbyBug.java && java -cp .:derbyclient.jar DerbyBug\r\n\r\nDatabase definition inside the java source. Tested vs 10.4.2.0 binary release and 10.4 svn branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"created":"2009-03-10T14:56:09.564+0000","updated":"2009-03-10T14:56:09.564+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12680498","id":"12680498","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"body":"Testprogram that triggers the problem for me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"created":"2009-03-10T14:57:22.880+0000","updated":"2009-03-10T14:57:22.880+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12680503","id":"12680503","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I downloaded the test program, and can confirm that it triggers the bug.\r\nNote that you should use Java SE 6 and derbyclient.jar, because the drivers isn't loaded explicitly by the test program.\r\n\r\nHere's the stack trace:\r\n2009-03-10 15:04:28.064 GMT:\r\n Booting Derby version The Apache Software Foundation - Apache Derby - 10.5.0.0 alpha - (752129M): instance a816c00e-011f-f0e9-8206-000003d35e00\r\non database directory /tmp/db  \r\n\r\nDatabase Class Loader started - derby.database.classpath=''\r\n2009-03-10 15:05:36.546 GMT Thread[DRDAConnThread_3,5,main] (DATABASE = db), (DRDAID = NF000001.D3F3-4110940798161594440{2}), null\r\n2009-03-10 15:05:36.546 GMT : null\r\njava.lang.ArrayIndexOutOfBoundsException\r\n        at java.lang.System.arraycopy(Native Method)\r\n        at org.apache.derby.impl.drda.DDMReader.readBytes(DDMReader.java:1509)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.readAndSetParams(DRDAConnThread.java:4697)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA_work(DRDAConnThread.java:4507)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA(DRDAConnThread.java:4379)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAConnThread.java:4254)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:4084)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:1003)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:290)\r\n2009-03-10 15:05:36.547 GMT Thread[DRDAConnThread_3,5,main] (DATABASE = db), (DRDAID = NF000001.D3F3-4110940798161594440{2}), Execution failed because of Permanent Agent Error: SVRCOD = 40; RDBNAM = db; diagnostic msg = null\r\n2009-03-10 15:05:36.547 GMT : Execution failed because of Permanent Agent Error: SVRCOD = 40; RDBNAM = db; diagnostic msg = null\r\norg.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of Permanent Agent Error: SVRCOD = 40; RDBNAM = db; diagnostic msg = null\r\n        at org.apache.derby.impl.drda.DRDAProtocolException.newAgentError(DRDAProtocolException.java:339)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.sendUnexpectedException(DRDAConnThread.java:7993)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.handleException(DRDAConnThread.java:7944)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:315)\r\n2009-03-10 15:05:36.547 GMT : null\r\njava.lang.ArrayIndexOutOfBoundsException\r\n        at java.lang.System.arraycopy(Native Method)\r\n        at org.apache.derby.impl.drda.DDMReader.readBytes(DDMReader.java:1509)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.readAndSetParams(DRDAConnThread.java:4697)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA_work(DRDAConnThread.java:4507)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA(DRDAConnThread.java:4379)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAConnThread.java:4254)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:4084)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:1003)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:290)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-03-10T15:09:06.730+0000","updated":"2009-03-10T15:09:06.730+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12680563","id":"12680563","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks, I see the exception too now.\r\n\r\nI haven't worked out all the details yet, but here's what I've found\r\nso far:\r\n\r\nreadBytes() calls ensureBLayerDataInBuffer() which again calls\r\nensureALayerDataInBuffer(). ensureALayerDataInBuffer() ends up\r\nenlarging the buffer and shifting the contents to the left so there is\r\nenough space in the buffer (there is in fact enough space in the\r\nbuffer when that method returns) and fills the buffer with data.\r\n\r\nAfter calling ensureALayerDataInBuffer(), ensureBLayerDataInBuffer()\r\ndetects that the DSS is shorter than the requested length, which means\r\nthat the data continues in a subsequent DSS. It calls\r\ncompressBLayerData() to remove DSS header bytes from the buffer so\r\nthat the buffer only contains the pure byte string and nothing\r\nelse. Since we only requested length bytes from the network, and some\r\nof those bytes are header bytes, this means that the buffer contains\r\nless than length bytes after we have \"compressed\" the buffer. This is\r\nwhat's eventually causing the exception when we try to copy more bytes\r\nfrom the buffer than we actually have available.\r\n\r\nI think one possible fix is to make compressBLayerData() fill the\r\nbuffer with the missing bytes from the continuation DSS.\r\n\r\n(One other thing to investigate is why the client splits the data into\r\nsmaller chunks when it is small enough to fit in a single DSS. It\r\nsounds suboptimal.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-10T18:08:59.162+0000","updated":"2009-03-10T18:08:59.162+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12680586","id":"12680586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"> why the client splits the data into smaller chunks when it is small enough to fit in a single DSS\r\n\r\nYes, this is quite intriguing. It might be more than suboptimal. I vaguely recall thinking\r\nthat the algorithms for assembling fragments across buffers assumed that the\r\nonly 'short' segment was the last segment.\r\n\r\nBut it's been several years since I studied this code, so I may be misremembering.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2009-03-10T18:57:44.214+0000","updated":"2009-03-10T18:57:44.214+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12680924","id":"12680924","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Here's a first attempt to fix the bug. I haven't investigated why the\r\nclient splits the value yet, but since the protocol seems to allow it,\r\nit seems like we should fix it on the server anyway.\r\n\r\nThe important part of the patch is that it adds calls to\r\nensureALayerDataInBuffer() two places in compressBLayerData() to\r\nensure that we never try to access bytes that haven't been buffered\r\nyet. compressBLayerData() takes multiple DSSs and concatenates them so\r\nthat they look like a single DSS for the caller. Since the new calls\r\nto ensureALayerDataInBuffer() ensures that we have all the bytes for\r\nthe low-level DSSs in the buffer, it means that we also have all the\r\nbytes needed to construct the concatenated \"super DSS\" created by\r\ncompressBLayerData(). This again ensures that when\r\nensureBLayerDataInBuffer() returns in readBytes(), we have the entire\r\nbyte string in the buffer, and System.arraycopy() won't go out of\r\nbounds.\r\n\r\n(Some might find it a bit confusing that compressBLayerData() calls\r\nensureALayerDataInBuffer() and not ensureBLayerDataInBuffer(). The\r\nexplanation is that ensureBLayerDataInBuffer() uses\r\nensureALayerDataInBuffer() as a lower-level primitive to actually\r\nfetch the physical bytes, whereas the Layer B method provides a\r\nhigher-level logical view of those bytes. Representing a sequence of\r\nDSSs as a single DSS is one example of this. compressBLayerData() is\r\nperforming work for ensureBLayerDataInBuffer() to turn the physical\r\nview of the bytes into the logical view, and therefore needs to use\r\nthe Layer A methods that give the physical view.)\r\n\r\nNow, the use of ensureALayerDataInBuffer() in compressBLayerData()\r\nmade it necessary to make some more changes. compressBLayerData() has\r\na local variable called tempPos which specifies a position in the read\r\nbuffer. This position variable is used to access parts of the read\r\nbuffer without destructively skipping bytes up to the interesting\r\nportion of the buffer. This is effectively the same as the position of\r\nthe first valid byte in the read buffer plus an offset, and it depends\r\non the position of the first valid byte being constant throughout the\r\nmethod.\r\n\r\nHowever, ensureALayerDataInBuffer() may shift bytes to the left in\r\norder to free up space at the end of the buffer. Then the position of\r\nthe first valid byte will change, and tempPos will need to be updated\r\naccordingly. To compensate for this shift, I renamed the tempPos\r\nvariable to tempOffset and replaced all occurrences of tempPos with\r\n(pos + tempOffset). This means that the local variable is just an\r\noffset from the start of the valid region of the buffer, and it\r\ndoesn't change even if the valid region is shifted left or\r\nright. Since pos is added to the offset each time it is used, we'll\r\nautomatically compensate for the shift.\r\n\r\nI haven't run the full regression test suite yet, but I have added a\r\ntest case to derbynet/PrepareStatementTest that fails with an\r\nArrayIndexOutOfBoundsException without the fix and passes with the\r\nfix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-11T16:58:16.874+0000","updated":"2009-03-11T16:58:16.874+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12681017","id":"12681017","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"All the regression tests ran cleanly. Reviews would be appreciated. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-11T20:22:02.015+0000","updated":"2009-03-11T20:22:02.015+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12681091","id":"12681091","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Knut for fixing this issue. I was really surprised that we had never tried inserting a blob of length 32766.  Just for good measure, with your patch,  I made sure we could insert byte[]'s from 0 to 40000 and select them back again individually to hopefully make sure we don't have any more gaps and it all passed.\r\n\r\nI wonder if the client's Reply.java has a similar problem with its compressBLayerData and how we might trigger that.  The javadoc says it shouldn't be used but we do cover it in code coverage.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-03-11T23:24:19.557+0000","updated":"2009-03-11T23:24:19.557+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12681220","id":"12681220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"body":"Works for me after applying Knut's patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=urban","name":"urban","emailAddress":"urban dot widmark at enlight dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Urban Widmark","active":true},"created":"2009-03-12T08:53:59.176+0000","updated":"2009-03-12T08:53:59.176+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12681226","id":"12681226","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for testing the patch, Urban and Kathey.\r\nCommitted revision 752813.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-12T09:34:43.849+0000","updated":"2009-03-12T09:34:43.849+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12681375","id":"12681375","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"> I wonder if the client's Reply.java has a similar problem with its\r\n> compressBLayerData and how we might trigger that. The javadoc says\r\n> it shouldn't be used but we do cover it in code coverage.\r\n\r\nIt looks like it has the same problem. I've made that method throw an\r\nexception when it's called and started suites.All so that I can see\r\nwhich tests are triggering it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-12T16:18:07.406+0000","updated":"2009-03-12T16:18:07.406+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12682303","id":"12682303","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Two of the test cases (testBigTable and testLargeReplies) in derbynet/PrepareStatementTest trigger the method in Reply.java. Looking more closely at the code in Reply.java, I don't think the problem is present on the client. When it calls compressBLayerData(), it does this:\r\n\r\n            ensureALayerDataInBuffer(desiredDataSize + (continueDssHeaderCount * 2));\r\n            compressBLayerData(continueDssHeaderCount);\r\n\r\nNote that we add (continueDssHeaderCount*2) before calling ensureALayerDataInBuffer(). (continueDssHeaderCount*2) is equal to the overhead imposed by splitting the data, so it ensures that we have all the data we need before we enter compressBLayerData().\r\n\r\nFor consistency, it might be a good idea to do the same both places. I think that the solution in Reply.java is simpler than the solution I chose in DDMReader.java, so I think I'll back out those changes and use the other approach in DDMReader too.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-16T12:40:25.741+0000","updated":"2009-03-16T12:40:25.741+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12683068","id":"12683068","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The attached patch reverts the changes to DDMReader.compressBLayerData() made in revision 752813 and instead makes ensureBLayerDataInBuffer() use the same approach as Reply.java. All the regression tests, including the regression test for this issue, still pass.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-18T16:43:29.237+0000","updated":"2009-03-18T16:43:29.237+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12683351","id":"12683351","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed derby-4088-2.diff to trunk with revision 755866.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-19T07:48:43.642+0000","updated":"2009-03-19T07:48:43.642+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416511/comment/12683421","id":"12683421","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed derby-4088-2.diff to 10.5 with revision 755906.\r\nCommitted derby-4088.diff and derby-4088-2.diff to 10.4 with revision 755907.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-03-19T10:45:44.938+0000","updated":"2009-03-19T10:45:44.938+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4088/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06qmf:"}}