{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12436909","self":"https://issues.apache.org/jira/rest/api/latest/issue/12436909","key":"DERBY-4391","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314182","id":"12314182","description":"Old head of 10.5 branch","name":"10.5.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-10-09 18:18:09.468","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24228","customfield_12310222":"3_*:*_1_*:*_818658144_*|*_1_*:*_1_*:*_430492832_*|*_6_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-10-14T22:24:27.334+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4391/watchers","watchCount":0,"isWatching":false},"created":"2009-09-30T11:25:16.358+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313345","id":"12313345","description":"","name":"10.4.2.0","archived":false,"released":true,"releaseDate":"2008-09-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314117","id":"12314117","description":"Next release after 10.5.2.0 release candidate #1","name":"10.5.3.0","archived":false,"released":true,"releaseDate":"2009-08-21"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12327369","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12327369","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12438246","key":"DERBY-4411","self":"https://issues.apache.org/jira/rest/api/2/issue/12438246","fields":{"summary":"Scalar subquery erroneously rejected for not returning exactly one row","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-10-15T21:01:08.398+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"I'm reporting this issue on behalf of Bernt M. Johnsen.\r\n\r\nIf an indexed column is compared with a UNION query (or some other set operation), a NullPointerException is raised, as can be seen by this sequence of statements in ij:\r\n\r\nij> create table t(a int not null primary key, b int);\r\n0 rows inserted/updated/deleted\r\nij> select * from t where a < (values 4 union values 4);\r\nERROR XJ001: Java exception: ': java.lang.NullPointerException'.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"38304","summary":"NullPointerException when comparing indexed column with result from a set operation","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":10,"total":10,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12760888","id":"12760888","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Full stack trace:\r\n\r\njava.lang.NullPointerException\r\n        at org.apache.derby.impl.sql.compile.PredicateList.markReferencedColumns(PredicateList.java:1641)\r\n        at org.apache.derby.impl.sql.compile.FromBaseTable.changeAccessPath(FromBaseTable.java:2957)\r\n        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.modifyAccessPath(ProjectRestrictNode.java:772)\r\n        at org.apache.derby.impl.sql.compile.OptimizerImpl.modifyAccessPaths(OptimizerImpl.java:2459)\r\n        at org.apache.derby.impl.sql.compile.SelectNode.modifyAccessPaths(SelectNode.java:1867)\r\n        at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatement(DMLStatementNode.java:323)\r\n        at org.apache.derby.impl.sql.compile.CursorNode.optimizeStatement(CursorNode.java:573)\r\n        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:373)\r\n        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)\r\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:824)\r\n        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)\r\n        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)\r\n        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)\r\n        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:521)\r\n        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:366)\r\n        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:261)\r\n        at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)\r\n        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)\r\n        at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)\r\n        at org.apache.derby.tools.ij.main(ij.java:59)\r\n        at org.apache.derby.iapi.tools.run.main(run.java:53)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-09-30T11:25:49.082+0000","updated":"2009-09-30T11:25:49.082+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12760894","id":"12760894","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"It looks like the NPE is thrown if the left side of the set operation has a column which is not a simple column reference. So the following queries (with expressions or constants on the left side of the union) fail:\r\n\r\nselect * from t where a < (select 4 from t except select b from t)\r\nselect * from t where a < (select a+b from t except select 4 from t)\r\nselect * from t where a < (select a+b from t except select a from t)\r\nselect * from t where a < (select sum(a) from t intersect select b from t)\r\n\r\nWhereas these don't raise a NPE:\r\n\r\nselect * from t where a < (select a from t intersect all select b from t)\r\nselect * from t where a < (select b from t except select 4 from t)\r\nselect * from t where a < (select a from t except select a+b from t)\r\nselect * from t where a < (select b from t union select sum(a) from t)\r\n\r\nAlso worth to notice is that the NPE is not raised if the binary arithmetic operator is =, only if it is <, >, <= or >=.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-09-30T12:08:07.537+0000","updated":"2009-09-30T12:08:07.537+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12762149","id":"12762149","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"It looks like checking whether ref.getSource() is null in PredicateList.markReferencedColumns() and only calling markAllRCsInChainReferenced() on it if it's non-null makes the NPE go away and the queries return the expected results. I'm not sure, but I think it is OK for ColumnReference.getSource() to return null (see for example the comment in BaseTableNumbersVisitor.visit()), in which case markReferencedColumns() should be prepared for it. The ColumnReference with no source is generated by ResultColumnList.setUnionResultExpression().\r\n\r\nThe attached patch (d4391-1a.diff) adds the null check and also adds test cases to lang/union.sql. All the regression tests ran cleanly with the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-05T11:00:00.522+0000","updated":"2009-10-05T11:00:00.522+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12764130","id":"12764130","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"I looked at this patch and verified that the patch solved the issue, and that the new test case fails without the patch.\r\nThanks!\r\n\r\nI wonder if it is meaningful for the visitor in PredicateList.markReferencedColumns() to go down into subqueries. This\r\nColumnReference with the empty source here, stems from inside the subquery, and looking at the logic in FromBaseTable#changeAccessPath, what we are doing here is to collect needed columns from the outer table. I think that means that we do not need to look inside a subquery? \r\n\r\nChanging to this visitor declaration makes the query work too:\r\n\r\n\t\tCollectNodesVisitor collectCRs = \r\n            new CollectNodesVisitor(ColumnReference.class,\r\n\t\t\t\t\t\t\t\t\tSubqueryNode.class);\r\n\r\nAs for the question of the empty source, \r\nlooking at the query tree, I see that there is indeed a column reference which has an empty source, which I also\r\nsee, e.g in this query: \r\n\r\n   select * from (values 2 union values 2) x\r\n\r\nAt the corresponding place (column reference) in a query tree for \r\n\r\n   select * from (select * from t union select * from t) x\r\n\r\nI see that the column reference source actually points to a result column of the PRN wrapping the base table in the *left* query tree of the UNION. (That also seems a bit arbitrary, why not the right? :)  If it is sound for the VALUE case to have an empty column reference, I can't answer that, because I don't fully understand how the column references are used in later phases.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-09T18:18:09.468+0000","updated":"2009-10-09T18:18:09.468+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12764670","id":"12764670","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for looking at the patch, Dag.\r\n\r\n> I wonder if it is meaningful for the visitor in\r\n> PredicateList.markReferencedColumns() to go down into subqueries.\r\n\r\nIf the sub-query is correlated, I think we'll need to go down into it to see if\r\nit references any of the columns in the index. Now, it doesn't look like\r\nmarkReferencedColumns() is called if we have a correlated sub-query. It is only\r\ncalled when bulk-fetching from a non-covering index, and perhaps bulk-fetching\r\nis disabled when we have a correlated sub-query in the predicate list?\r\n\r\n> At the corresponding place (column reference) in a query tree for\r\n>\r\n>    select * from (select * from t union select * from t) x\r\n>\r\n> I see that the column reference source actually points to a result column of\r\n> the PRN wrapping the base table in the *left* query tree of the UNION. (That\r\n> also seems a bit arbitrary, why not the right?  :)\r\n\r\nI had the same feeling that it was somewhat arbitrary when I looked at the\r\nlogic in ResultColumnList.setUnionResultExpression(). For EXCEPT queries, it\r\nmay make sense, since all the rows in the result come from the left side. For\r\nUNION and INTERSECT, they could just as well come from the right side, though.\r\n\r\n> If it is sound for the VALUE case to have an empty column reference, I can't\r\n> answer that, because I don't fully understand how the column references are\r\n> used in later phases.\r\n\r\nNeither do I. BaseTableNumbersVisitor.visit() says this about the case where\r\ngetSource() returns null:\r\n\r\n        if (rc == null) {\r\n        // this can happen if column reference is pointing to a column\r\n        // that is not from a base table.  For example, if we have a\r\n        // VALUES clause like\r\n        //\r\n        //    (values (1, 2), (3, 4)) V1 (i, j)\r\n        //\r\n        // and then a column reference to VI.i, the column reference\r\n        // won't have a source.\r\n            return node;\r\n        }\r\n\r\nThis is actually just a variant of the case we're looking at, since a multi-row\r\nvalue statement is rewritten to a union internally. So it's possible to\r\nreproduce the NPE without explicitly using a set operation, as seen here:\r\n\r\nij(CONNECTION2)> select * from t where a < (values 1,2,3);\r\nERROR XJ001: Java exception: ': java.lang.NullPointerException'.\r\nij(CONNECTION2)> select * from t where a < (select max(x) from (values 1,2,3) v(x));\r\nERROR XJ001: Java exception: ': java.lang.NullPointerException'.\r\n\r\nAlthough I'm still not 100% convinced it is correct that the CR is null in the\r\nfirst place, I'm inclined to go for the 1a patch, but with a comment like the\r\none in BTNV.visit() added to markReferencedColumns(). Since such a change only\r\naffects statements that previously raised a NPE, it should at least not make\r\nthe situation worse for queries that used to work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-12T12:55:08.604+0000","updated":"2009-10-12T12:55:08.604+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12764923","id":"12764923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"> perhaps bulk-fetching is disabled when we have a correlated sub-query in the predicate list? \r\n\r\nI don't know, but even if it is, I think it is more convoluted to rely on that when pruning subquery visits.\r\nSo, your present patch in view of this is fine. \r\n\r\n+1\r\n\r\nBtw, I saw this inside setUnionResultExpression\r\n\r\n /* DB2 requires both sides of union to have same name for the result to\r\n  * have that name. Otherwise, leave it or set it to a generated name */\r\n\r\nWonder what the standard says about this? (I came across it when playing with Bryan's patch for DERBY-4).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-13T02:04:40.675+0000","updated":"2009-10-13T02:04:40.675+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12765036","id":"12765036","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Uploading patch 1b which is the same as 1a plus an extra comment.\r\nCommitted revision 824694.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-13T11:15:33.955+0000","updated":"2009-10-13T11:15:33.955+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12765048","id":"12765048","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"> Btw, I saw this inside setUnionResultExpression\r\n>\r\n>  /* DB2 requires both sides of union to have same name for the result to\r\n>   * have that name. Otherwise, leave it or set it to a generated name */\r\n>\r\n> Wonder what the standard says about this?\r\n\r\nSounds like it's compliant. See SQL:2003, part 2, 7.13 <query expression>, syntax rules:\r\n\r\n16) If a <query term> immediately contains a set operator, then:\r\n    a) Let C be the <column name> of the i-th column of T1. If the <column name> of the i-th column of T2\r\n         is C, then the <column name> of the i-th column of TR is C; otherwise, the <column name> of the i-th\r\n         column of TR is implementation-dependent.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-13T11:44:45.439+0000","updated":"2009-10-13T11:44:45.439+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12765382","id":"12765382","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Right, thx. The comment could use an update, then! :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-10-14T03:40:12.466+0000","updated":"2009-10-14T03:40:12.466+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12436909/comment/12765789","id":"12765789","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Merged fix to 10.5 and committed revision 825312.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-10-14T22:24:27.292+0000","updated":"2009-10-14T22:24:27.292+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4391/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06x5b:"}}