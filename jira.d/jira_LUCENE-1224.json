{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12390825","self":"https://issues.apache.org/jira/rest/api/latest/issue/12390825","key":"LUCENE-1224","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324143","id":"12324143","description":"Major release after 4.2","name":"4.3","archived":false,"released":true,"releaseDate":"2013-05-05"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2008-03-15 18:08:17.28","customfield_12312323":null,"customfield_12310420":"12522","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_161700590359_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2013-04-26T22:20:07.118+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-1224/watchers","watchCount":6,"isWatching":false},"created":"2008-03-12T09:30:16.795+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[{"id":"12319529","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319529","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12390830","key":"LUCENE-1225","self":"https://issues.apache.org/jira/rest/api/2/issue/12390830","fields":{"summary":"NGramTokenizer creates bad TokenStream","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-10T10:34:38.691+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310230","id":"12310230","name":"modules/analysis","description":"issues related to analysis module"}],"timeoriginalestimate":null,"description":"With current trunk NGramTokenFilter(min=2,max=4) , I index \"abcdef\" string into an index, but I can't query it with \"abc\". If I query with \"ab\", I can get a hit result.\r\n\r\nThe reason is that the NGramTokenFilter generates badly ordered TokenStream. Query is based on the Token order in the TokenStream, that how stemming or phrase should be anlayzed is based on the order (Token.positionIncrement).\r\n\r\nWith current filter, query string \"abc\" is tokenized to : ab bc abc \r\nmeaning \"query a string that has ab bc abc in this order\".\r\nExpected filter will generate : ab abc(positionIncrement=0) bc\r\nmeaning \"query a string that has (ab|abc) bc in this order\"\r\n\r\nI'd like to submit a patch for this issue. :-)\r\n","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10120","value":"Patch Available","id":"10120"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"26823","summary":"NGramTokenFilter creates bad TokenStream","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":20,"total":20,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12578239","id":"12578239","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"body":"Modified to set a right start/end offset value in Token properties.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"created":"2008-03-13T10:54:51.811+0000","updated":"2008-03-13T10:54:51.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12579069","id":"12579069","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"body":"Please add unit tests to the patch demonstrating the issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"created":"2008-03-15T18:08:17.280+0000","updated":"2008-03-15T18:08:17.280+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12579196","id":"12579196","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"body":"Patch updated with unit test.\r\n\r\nLUCENE-1225 is easier to understand this problem. This patch also includes token filter issues that is more complicated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"created":"2008-03-16T14:46:30.291+0000","updated":"2008-03-16T14:46:30.291+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12596729","id":"12596729","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"body":"Hi Hiroaki,\r\n\r\nI have been reviewing the tests for this and have a couple of comments.  First, I don't see why you need to bring indexing into the equation.  Second, the changes to testNGrams still don't test the issue, namely they don't examine that the output ngrams are actually in the correct position.  I think you deduce this later in testIndexAndQuery, but it is never explicitly stated.  I'd drop testIndexAndQuery and just fix testNGrams such that it checks the positions appropriately.  \r\n\r\nOn a more philosophical level, it is a bit curious to me that if we have the strings \"abcde fghi\" that we are fine with \"b\" being at position 1, and not at position 0, but \"ab\" needs to be at position 0.  I wonder if there is any thoughts on what the relative positions of ngrams should be.  Should they all occur at the same position?  It seems to me, that it doesn't make sense that the \"f\" ngrams don't start until some position other than 1.  This would currently prevent doing phrase queries such as \"ab fg\" with no slop.\r\n\r\nI'm assuming this applies to LUCENE-1225 as well.\r\n\r\nI will link 1225 to this issue, and you can attach a single patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"created":"2008-05-14T11:24:56.502+0000","updated":"2008-05-14T11:24:56.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597069","id":"12597069","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"body":"Q: Why it is necessary to index\r\nA: Because it was necessary to show how the query is performed. \r\nThat is the point I wanted to address. \r\n\r\nQ: testNGrams don't test the issue\r\nA: Exactlly. it don't test the issue.\r\nI modified the test because it failed with my patch, that\r\nToken.toString() prints additional incrementPosition information.\r\nI read the existing test program, and found that current test\r\nprogram depends on Token.toString() method.\r\nI thought we'd better test it without Token.toString().\r\nCurrent test program tests that the Token have NO positionIncrement.\r\n\r\ntestIndexAndQuery is the very test that address the issue.\r\nPlease don't drop it. Think the case, we want to search a word \r\nthat contain \"abcd\" with 2-gram index.\r\nThe test does searching \"abcd\" with 2,3-gram.\r\n\r\nWe have the 2gram of abcde; 'ab', 'bc', 'cd', 'de'.\r\nReffering the current lucene implementation, the position gap \r\nof 'ab' and 'bc' must be 1.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"created":"2008-05-15T09:29:29.244+0000","updated":"2008-05-15T09:29:29.244+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597079","id":"12597079","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"body":"OK, let me change the comment.  You can test this problem without indexing and querying.  All of the information is available on the token.  I would suggest you revert the test to it's original and then modify testNGrams()  by adding asserts that check that the positionIncrement value is set properly.   By going the indexing/querying route, you are not only testing the token filters, but pretty much all of Lucene and are thus subject to any problems there.  In other words, it ain't a unit test.  If you set the posiitionIncrement properly and test for it, it will work in Lucene for the queries, etc.  If it doesn't, we have much bigger problems than ngrams.  That being said, if you want to fix testNgrams, and leave the query case in, that is fine by me.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"created":"2008-05-15T10:25:55.156+0000","updated":"2008-05-15T10:25:55.156+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597080","id":"12597080","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"body":"FWIW, I also think we should address the more philosophical question of what the intermediate positions should be of the tokens.  The more I think about it, the more I think all \"grams\" of a given word should be at the same position, but I would like to hear from others on this before deciding.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"created":"2008-05-15T10:27:25.880+0000","updated":"2008-05-15T10:27:25.880+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597094","id":"12597094","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"body":"Umm..., if you don't like indexing and querying in the unit test, where should I place the join test that use NGramTokenizer? It might be nice if we could place that join test in a proper place.\r\n\r\nI placed the testIndexAndQuery in the code because the other code like KeywordAnalyzer (in the core) test code has index&query test code in its unit tests.\r\n\r\nI'm fine with separating the codes into different files.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"created":"2008-05-15T11:36:58.449+0000","updated":"2008-05-15T11:36:58.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597098","id":"12597098","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"body":"In my understanding,\r\n----------\r\nThe sequence we have \"This is an example\"\r\n\r\nIf we want to tokenize with white space tokenizer, the tokens are\r\n\"This\", \"is\", \"an\", \"example\"\r\npositions are 0,1,2,3\r\n\r\nIf we want to tokenize with 2-gram, the tokens are\r\n\"Th\" \"hi\" \"is\" \"s \" \" i\" \"is\" \"s \" \" a\" \"an\" \"n \" \" e\" \"ex\" \"xa\" \"am\" \"mp\" \"pl\" \"le\"\r\npositions are 0,1,2,3,4,...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"created":"2008-05-15T11:45:14.866+0000","updated":"2008-05-15T11:45:14.866+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597107","id":"12597107","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"body":"{quote}Umm..., if you don't like indexing and querying in the unit test, where should I place the join test that use NGramTokenizer? It might be nice if we could place that join test in a proper place.{quote}\r\n\r\nMy point is, I don't think the test needs to do any indexing/querying at all to satisfy the change.  It adds absolutely nothing to the test and only complicates the matter.\r\n\r\n{quote}I placed the testIndexAndQuery in the code because the other code like KeywordAnalyzer (in the core) test code has index&query test code in its unit tests.{quote}\r\n\r\nJust because another does it doesn't make it right.\r\n\r\n{quote}\r\nIf we want to tokenize with white space tokenizer, the tokens are\r\n\"This\", \"is\", \"an\", \"example\"\r\npositions are 0,1,2,3\r\n\r\nIf we want to tokenize with 2-gram, the tokens are\r\n\"Th\" \"hi\" \"is\" \"s \" \" i\" \"is\" \"s \" \" a\" \"an\" \"n \" \" e\" \"ex\" \"xa\" \"am\" \"mp\" \"pl\" \"le\"\r\npositions are 0,1,2,3,4,...\r\n{quote}\r\n\r\nYes, I understand how it currently works.  My question is more along the lines of is this the right way of doing it?  I don't know that it is, but it is a bigger question than you and me.  I mean, if we are willing to accept that this issue is a bug, then it presents plenty of other problems in terms of position related queries.  For example, I think it makes sense to search for \"th ex\" as a phrase query, but that is not possible do to the positions (at least not w/o a lot of slop)\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"created":"2008-05-15T12:03:20.607+0000","updated":"2008-05-15T12:03:20.607+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597112","id":"12597112","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmsmith","name":"dmsmith","emailAddress":"dmsmith555 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"DM Smith","active":true},"body":"My take as a user:\r\n\r\nMaybe, I don't understand the application of an n-gram filter, but my expectation is that words from the input that are indexed are positioned. Isn't that required to be able to do \"near\" searches?\r\n\r\nIt would not matter to me if the n-grams have sub-positions to distinguish them (e.g. 1.a, 1.b, 1.c, 1,d, 2.a, ... for the example above. note: not implying any representation in this notation)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmsmith","name":"dmsmith","emailAddress":"dmsmith555 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"DM Smith","active":true},"created":"2008-05-15T12:32:58.744+0000","updated":"2008-05-15T12:32:58.744+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597156","id":"12597156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"body":"About test code: I'm not going to say that \"I'm right\". I just wanted to address the issue and share what we should solve. If you don't like the code, please just tell me how I should do (the better way). I initially put the code there because I thought it was reasonable and proper, but I'm fine with changing it.\r\n\r\n{quote}\r\nFor example, I think it makes sense to search for \"th ex\" as a phrase query\r\n{quote}\r\n\r\nFor example, I think it makes sense to search for \"example\" as a phrase query instead.\r\n\r\nI want to address that NGramTokenizer is very useful for non-white-space-separated languages, for example Japanese. In that case, we won't search \"th ex\", because it assumes sentences are separated by whte space. I want to search by a fragment of a text sequence.\r\n\r\nI agree that this might be a big problem. IMHO, the issues comes from concept mismatch of TokenFilter and TermPosition. The discussion should moved to mailing-list?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"created":"2008-05-15T15:15:30.180+0000","updated":"2008-05-15T15:15:30.180+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597161","id":"12597161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"body":"\r\n\r\n\r\n\r\nI think the right way is simply to change the existing test to check  \r\nthat the term positions are correct per the changes.  Right now, it  \r\ndoesn't check the position increment and it should.  This can be done  \r\nby looking at the positionIncrement on the Token that is produced by  \r\nthe TokenStream and doesn't require indexing. \r\n  \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gsingers","name":"gsingers","emailAddress":"gsingers at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Grant Ingersoll","active":true},"created":"2008-05-15T15:32:56.652+0000","updated":"2008-05-15T15:32:56.652+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597174","id":"12597174","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=otis","name":"otis","emailAddress":"otis at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=otis&avatarId=15859","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=otis&avatarId=15859","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=otis&avatarId=15859","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=otis&avatarId=15859"},"displayName":"Otis Gospodnetic","active":true},"body":"Hiroaki:\r\nI agree with Grant about unit tests.  I looked at the unit tests and thought the same thing as Grant - why is Hiroaki adding indexing/searching into the mix?  Your change is about modifying the positions of n-grams, and you don't need to index or search for that.  The test will be a lot simpler if you just test for positions, like Grant suggested.\r\n\r\nAlso, once you change the unit test this way, it will be a lot easier to play with positions and figure out what the \"right\" way to handle positions is.\r\n\r\nFinally, it might turn out that people have different needs or different expectations for n-gram positions.  Thus, when making changes, perhaps you can think of a mechanism that allows the caller to instruct the n-gram tokenizer which token positioning approach to take (e.g. the \"incremental\" one, or the one based on the position of the originating token, or...)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=otis","name":"otis","emailAddress":"otis at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=otis&avatarId=15859","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=otis&avatarId=15859","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=otis&avatarId=15859","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=otis&avatarId=15859"},"displayName":"Otis Gospodnetic","active":true},"created":"2008-05-15T16:05:08.324+0000","updated":"2008-05-15T16:07:45.735+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12597489","id":"12597489","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"body":"After all, where should I place the testIndexAndQuery? Does anybody have a suggestion?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kawai","name":"kawai","emailAddress":"kawai at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hiroaki Kawai","active":true},"created":"2008-05-16T14:32:04.115+0000","updated":"2008-05-16T14:32:04.115+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12638423","id":"12638423","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tfeak","name":"tfeak","emailAddress":"tfeak at smss dot sony dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Todd Feak","active":true},"body":"This bug caused me *major* headaches trying to figure out why substring matching with an NGramTokenFilter wasn't working for anything other then when setting min and max to the same values. \r\n\r\nThe patch seems to fix the issue when applied locally, however it also has a bug in it. It will stop parsing a token stream if a token comes through that is less then the minGramSize, even if there are tokens yet in the stream that are greater then minGramSize.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tfeak","name":"tfeak","emailAddress":"tfeak at smss dot sony dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Todd Feak","active":true},"created":"2008-10-09T23:04:15.343+0000","updated":"2008-10-09T23:04:15.343+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12741628","id":"12741628","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"body":"Sounds like this should really be addressed ... along with LUCENE-1225","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markrmiller%40gmail.com","name":"markrmiller@gmail.com","emailAddress":"markrmiller at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=markrmiller%40gmail.com&avatarId=17267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=markrmiller%40gmail.com&avatarId=17267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=markrmiller%40gmail.com&avatarId=17267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=markrmiller%40gmail.com&avatarId=17267"},"displayName":"Mark Miller","active":true},"created":"2009-08-10T23:56:14.232+0000","updated":"2009-08-10T23:56:14.232+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/12834471","id":"12834471","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"I too think its really important we fix this. I have to agree with Hiroaki's analysis of the situation, and the problems can be seen by looking at the code in both the filter/tokenizers and the tests themselves.\r\n\r\nCurrently the tokenizers are limited to 1024 characters (LUCENE-1227), this is very related to this issue.\r\nLook at the test for 1,3 ngrams of \"abcde\":\r\n{code}\r\npublic void testNgrams() throws Exception {\r\n        NGramTokenizer tokenizer = new NGramTokenizer(input, 1, 3);\r\n        assertTokenStreamContents(tokenizer,\r\n          new String[]{\"a\",\"b\",\"c\",\"d\",\"e\", \"ab\",\"bc\",\"cd\",\"de\", \"abc\",\"bcd\",\"cde\"}, \r\n{code}\r\n\r\nin my opinion the output should instead be: a, ab, ...\r\nOtherwise the tokenizer will either always be limited to 1024 chars or must read the entire document into RAM.\r\nThis same problem exists for the EdgeNgram variants.\r\n\r\nI agree with Grant's comment about the philosophical discussion about positions of the tokens, perhaps we need an option for this (where they are all posInc=1, or the posInc=0 is generated based on whitespace). I guess I think we could accomodate both needs by having tokenizer/filter variants too, but I'm not sure.\r\n\r\nThe general problem i have with trying to determine a fix is that it will break backwards compatibility, and I also know that EdgeNGram is being used for some purposes such as \"auto-suggest\". So I don't really have any idea beyond making new filters/tokenizers, as I think there is another use case where the old behavior fits?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2010-02-16T21:11:42.347+0000","updated":"2010-02-16T21:11:42.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/13643307","id":"13643307","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jpountz","name":"jpountz","emailAddress":"jpountz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jpountz&avatarId=16520","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jpountz&avatarId=16520","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jpountz&avatarId=16520","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jpountz&avatarId=16520"},"displayName":"Adrien Grand","active":true},"body":"All n-grams now have the same position and offsets as the original token (LUCENE-4955).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jpountz","name":"jpountz","emailAddress":"jpountz at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jpountz&avatarId=16520","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jpountz&avatarId=16520","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jpountz&avatarId=16520","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jpountz&avatarId=16520"},"displayName":"Adrien Grand","active":true},"created":"2013-04-26T22:20:07.131+0000","updated":"2013-04-26T22:20:07.131+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12390825/comment/13654280","id":"13654280","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Closed after release.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2013-05-10T10:34:38.679+0000","updated":"2013-05-10T10:34:38.679+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-1224/votes","votes":2,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04yb3:"}}