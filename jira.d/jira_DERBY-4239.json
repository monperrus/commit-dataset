{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12425976","self":"https://issues.apache.org/jira/rest/api/latest/issue/12425976","key":"DERBY-4239","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313478","id":"12313478","description":"Head of 10.1 branch. Maintenance version bump for sps update ","name":"10.1.3.3","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312251","id":"12312251","description":"Head of 10.2 branch","name":"10.2.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313143","id":"12313143","description":"Head of 10.3 branch","name":"10.3.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313401","id":"12313401","description":"Head of 10.4 branch","name":"10.4.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314116","id":"12314116","description":"10.5.2 Release July 30 2009 (794445) Now deprecated","name":"10.5.2.0","archived":false,"released":true,"releaseDate":"2009-07-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-05-21 21:53:46.784","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24124","customfield_12310222":"1_*:*_1_*:*_1353419336_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-06-05T15:33:25.593+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4239/watchers","watchCount":0,"isWatching":false},"created":"2009-05-20T23:36:26.257+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"13.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313478","id":"12313478","description":"Head of 10.1 branch. Maintenance version bump for sps update ","name":"10.1.3.3","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312251","id":"12312251","description":"Head of 10.2 branch","name":"10.2.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313345","id":"12313345","description":"","name":"10.4.2.0","archived":false,"released":true,"releaseDate":"2008-09-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12325129","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12325129","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12387958","key":"DERBY-3393","self":"https://issues.apache.org/jira/rest/api/2/issue/12387958","fields":{"summary":"Database corruption when adding sleep() in RAFContainer4.writePage()","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12325481","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12325481","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12415707","key":"DERBY-4075","self":"https://issues.apache.org/jira/rest/api/2/issue/12415707","fields":{"summary":"ERROR XSDBB: Unknown page format at page Page(613,Container(0, 1024)) when running MailJdbc (Embedded) system tests","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12325083","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12325083","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12426921","key":"DERBY-4252","self":"https://issues.apache.org/jira/rest/api/2/issue/12426921","fields":{"summary":"intermittent corruption./java.io.EOFException in RandomAccessFile.readInt() on boot after compress with background checkpoint","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12325051","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12325051","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12387958","key":"DERBY-3393","self":"https://issues.apache.org/jira/rest/api/2/issue/12387958","fields":{"summary":"Database corruption when adding sleep() in RAFContainer4.writePage()","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12325485","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12325485","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12402150","key":"DERBY-3833","self":"https://issues.apache.org/jira/rest/api/2/issue/12402150","fields":{"summary":"OnlineCompressTest fails with ERROR XSDBB: Unknown page format at page Page(1,Container(0, 1440)) on 10.3 with ibm 1.5","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-12T22:24:29.930+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11412","id":"11412","name":"Store"}],"timeoriginalestimate":null,"description":"corruption with storerecovery oc_rec? tests.  ERROR XSLA7: Cannot redo operation null in the log when compress occurs during checkpoint, then jvm exits\r\n\r\nI saw corruption on z/OS with the storerecovery tests and 10.5.1.1.  The failure comes in oc_rec3 trying to connect to the database, but the actual problem seems to have occurred with the prior test oc_rec2.  The problem is somewhat intermittent, happening approximately 1/4 times.  I extracted the case from the harness and will attach the reproduction and run the script repro.ksh.  The script will loop up to 50 times until it gets the failure which looks like.\r\n\r\nERROR XSLA7: Cannot redo operation null in the log.\r\n\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.redo(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.recover(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)\r\n\tat org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)\r\n\tat org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Unknown Source)\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(Unknown Source)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:311)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:268)\r\n\tat CheckTables.main(CheckTables.java:8)\r\nCaused by: ERROR XSDBB: Unknown page format at page Page(16,Container(0, 1073)), page dump follows: Hex dump:\r\n00000000: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n00000010: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n<snip lots of 000's>\r\n\r\nI ran it with 10.3 and it completed all 50 iterations, so whether JVM or Derby issue it seems new since 10.3. (I haven't tried with 10.4).  Oddly I have run tests many times before on this machine using in the 10.5.1.1 release and the same jvm and have never seen this failure, so am looking into whether maybe something changed on the machine or environment.\r\n\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10364","value":"Data corruption","id":"10364"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37705","summary":"Possible corruption if SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE is called during checkpoint ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"z/OS z10 processor. \r\njava version \"1.6.0\"\r\nJava(TM) SE Runtime Environment (build pmz3160sr4-20090219_01(SR4))\r\nIBM J9 VM (build 2.4, J2RE 1.6.0 IBM J9 2.4 z/OS s390-31 jvmmz3160-20090215_29883 (JIT enabled, AOT enabled)\r\nJ9VM - 20090215_029883_bHdSMr\r\nJIT  - r9_20090213_2028\r\nGC   - 20090213_AA)\r\nJCL  - 20090218_01\r\nalso \r\njava version \"1.6.0\"\r\nJava(TM) SE Runtime Environment (build pmz3160sr2ifix-20081021_01(SR2+IZ32776+IZ33456))\r\nIBM J9 VM (build 2.4, J2RE 1.6.0 IBM J9 2.4 z/OS s390-31 jvmmz3160ifx-20081010_24288 (JIT enabled, AOT enabled)\r\nJ9VM - 20081009_024288_bHdSMr\r\nJIT  - r9_20080721_1330ifx2\r\nGC   - 20080724_AA)\r\nJCL  - 20080808_02\r\n","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":26,"total":26,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12711425","id":"12711425","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attaching wombat_with_keeplog.zip -  the database after a failing  run with derby.storage.keepTransactionLog=true\r\nderby.log - the derby.log from a failing run.\r\nreproDerby4239.zip - java files and repro.ksh.\r\n\r\nTo reproduce, on z/OS unzip reproDerby4239.zip \r\njavac -g *.java\r\nrepro.ksh\r\n\r\nI tried on Windows and Myrna on Linux and we were not able to reproduce on those platforms.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-20T23:42:13.467+0000","updated":"2009-05-20T23:42:13.467+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12711664","id":"12711664","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I have not been able to reproduce with 100 iterations with -Xint, so at first glance it would appear to be a JIT issue.  It does reproduce with -Xjit:optLevel=noOpt,count=0 which removes most of  JIT optimizations.   I was incorrect that it does not produce with 10.3.  I was able to pop the issue with 10.3.3.1 - (765035). I had done the original run with a slightly earlier sane build.  I am not sure yet whether it only reproduces with insane builds.\r\n\r\nTypically with JIT problems you can generate a log of all the compiled methods and their optimization level and 1) Feed that back into the next run to get a consistent reproduction. and 2) Do a binary search with iterative runs with half the log file to narrow down the failing method.\r\nUnfortunately, neither of these methods work in this case, suggesting some timing or order of compilation issue.\r\n\r\nI would like some tips on how to identify  issue earlier, preferably as the  bad log record as it was written to disk.   Is there any way to do this?\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-21T15:57:04.199+0000","updated":"2009-05-21T15:57:04.199+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12711832","id":"12711832","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Kathey asked that I log suggestions about what to look at in corrupt db's, so logging them here.  I don't have any conclusions yet what is happening, just\r\nposting info as I see it.\r\n\r\nThe information I am posting is from looking at the wombat_with_keeplog.zip \r\nposted to this issue.  This is a good one to look at as kathey has managed to \r\nreproduce and had it set up so that all transaction logs are kept.   This means that\r\nit is possible to read through these records and get an exact history of all \"writing\"\r\noperations.   There a couple of ways to do this.  With a sane server you can set \r\nderby.storage.keepTransactionLog=true (i am not sure if this works with insane \r\nserver or not).  A supported way of almost doing this is to take a online backup, \r\nwhich I believe will then stop logs from being deleted - but note that online backup\r\nmay change the behavior of some operations which are documented in the backup\r\ndocs.\r\n\r\n\r\nIn this case we are debugging a reproducible boot error, so just starting up \r\nreproduces the error.   First I set the following which will only work in a SANE\r\nserver.:\r\nderby.debug.true=LogTrace\r\nThis will dump a short description of each log record that is processed.  For \r\nrecovery this will include all the records that are read at boot time.  Note this \r\nwill not be all the records in the log, it will just dump out the ones looked at during\r\nnormal reboot.\r\n\r\nThe first thing I look for is the first occurence of the error and if it is nested the lowest nested error.  In this case I get the following.  From this I get that recovery\r\nreboot is trying to redo a delete on page 16 of container 1073.  The page version\r\nis 775 so there have been 775 updates to this page before this.  The instant\r\nis the basically the log record address (6,447354) - the first part 6 means it is\r\nin log6.dat, second part is the byte offset into log6.dat:\r\nPage(16,Container(0, 1073)) pageVersion 775 :  Delete : Slot=1 recordId=7 delete=true instant =\r\n (6,447354) logEnd = (6,447413) logIn at 25 available 18^M\r\n\r\nFrom the stack the operation is reading the page in from disk and getting a page\r\nof all zero's when it expects to get a formated page at pageVersion 774.\r\n\r\nsnip from log:\r\nDEBUG LogTrace OUTPUT: scanned 64300 : Page Operation: Page(17,Container(0, 1041)) pageVersion 776 :  Delete : Slot=1 recordId=7 delete=true instant =\r\n (6,447236) logEnd = (6,447295) logIn at 25 available 18^M\r\nDEBUG LogTrace OUTPUT: scanned 64300 : Page Operation: Page(16,Container(0, 1057)) pageVersion 775 :  Delete : Slot=1 recordId=7 delete=true instant =\r\n (6,447295) logEnd = (6,447354) logIn at 25 available 18^M\r\nDEBUG LogTrace OUTPUT: scanned 64300 : Page Operation: Page(16,Container(0, 1073)) pageVersion 775 :  Delete : Slot=1 recordId=7 delete=true instant =\r\n (6,447354) logEnd = (6,447413) logIn at 25 available 18^M\r\n\r\n------------  BEGIN SHUTDOWN ERROR STACK -------------\r\n^M\r\nERROR XSLA7: Cannot redo operation Page Operation: Page(16,Container(0, 1073)) pageVersion 775 :  Delete : Slot=1 recordId=7 delete=true in the log.^M\r\n    at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:296)^M\r\n    at org.apache.derby.impl.store.raw.log.FileLogger.redo(FileLogger.java:1525)^M\r\n    at org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:924)^M\r\n    at org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:339)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)^M\r\n    at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)^M\r\n    at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)^M\r\n    at org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1019)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)^M\r\n    at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)^M\r\n    at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)^M\r\n    at org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:780)^M\r\n    at org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:196)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)^M\r\n    at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1858)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(BaseMonitor.java:1724)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1602)^M\r\n    at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:1021)^M\r\n    at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:550)^M\r\n    at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2581)^M\r\n    at org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:374)^M\r\n    at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)^M\r\n    at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)^M\r\n    at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)^M\r\n    at java.sql.DriverManager.getConnection(DriverManager.java:316)^M\r\n    at java.sql.DriverManager.getConnection(DriverManager.java:297)^M\r\n    at org.apache.derby.impl.tools.ij.util.startJBMS(util.java:462)^M\r\n    at org.apache.derby.impl.tools.ij.util.startJBMS(util.java:542)^M\r\n    at org.apache.derby.impl.tools.ij.ConnectionEnv.init(ConnectionEnv.java:64)^M\r\n    at org.apache.derby.impl.tools.ij.utilMain.initFromEnvironment(utilMain.java:164)^M\r\n    at org.apache.derby.impl.tools.ij.Main.<init>(Main.java:225)^M\r\n    at org.apache.derby.impl.tools.ij.Main.getMain(Main.java:189)^M\r\n    at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:174)^M\r\n    at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)^M\r\n    at org.apache.derby.tools.ij.main(ij.java:59)^M\r\nCaused by: ERROR XSDBB: Unknown page format at page Page(16,Container(0, 1073)), page dump follows: Hex dump:\r\n00000000: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n00000010: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n00000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n00000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n00000040: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n00000050: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n... complete page dump of a page of all ZERO's\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-21T21:53:46.784+0000","updated":"2009-05-21T21:53:46.784+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12712063","id":"12712063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"attached is a database from when we are able to reconnect and run CheckTables successfully (wombat_keeplog_notcorrupt.zip)  and also two text files showing the log file sizes on 4 good (able to reconnect) with checktables and 4 bad (corrupt) databases, created  with the attached reproduction and derby.storage.keepTransactionLog=true\r\nalong with badlogsizes.txt and goodlogsizes.txt showing the log file sizes.\r\n\r\nI notice the good ones all have 7 log files and the bad ones all have 6, but even between good databases the log sizes vary somewhat.   Why the difference?\r\n\r\nAlso I looked at first corrupted database that I posted  and found the corruption in the  index TEST1_IDX_INDCOL2.\r\n\r\nTo map the index to the container number  1073, I doctored up the database so I could connect to it and then ran.\r\nSELECT  C.CONGLOMERATENUMBER, C.CONGLOMERATENAME  FROM SYS.SYSCONGLOMERATES C WHERE CONGLOMERATENUMBER=1073;\r\n\r\nI will check other corrupt databases and see if it is corruption of the same index and  see if the reproduction works without the index.\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-22T12:30:54.170+0000","updated":"2009-05-22T12:30:54.170+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12712102","id":"12712102","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Looking at some corrupt databases I saw issues with the TEST1 table, TEST1_IDX_INDCOL3, TEST1_IDX_INDCOL1,  and TEST1_IDX_KEYCOL, so it seems to be all over the place except that it is the TEST1 table  and its indexes.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-22T14:17:43.663+0000","updated":"2009-05-22T14:17:43.663+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12712107","id":"12712107","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"reattaching goodlogsizes.txt and badlogsizes.txt as the original ones were unreadable (still in EBCDIC)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-22T14:26:08.182+0000","updated":"2009-05-22T14:26:08.182+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12712134","id":"12712134","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I used this little script to identify the bad containers.  It should only be run on a copy of the corrupted db in case anything goes wrong.\r\n\r\nYou have to get the container number out of derby.log and then run. \r\n\r\nindentifyBadContainer.ksh <database> <containernumber>\r\n\r\nIt could be smarter and grep or awk the containernumber out of the log for you and  determine whether this is a table or index and just output the name instead of the query output, but it sufficed for my purposes.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-22T15:17:44.922+0000","updated":"2009-05-22T15:17:44.922+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12712245","id":"12712245","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Just a few more notes.  \r\n- I reproduced the issue on  IBM 1.5 again on z/OS.\r\njava version \"1.5.0\"\r\nJava(TM) 2 Runtime Environment, Standard Edition (build pmz31devifx-20090408 (SR9-2 ))\r\nIBM J9 VM (build 2.3, J2RE 1.5.0 IBM J9 2.3 z/OS s390-31 j9vmmz3123ifx-20090324 (JIT enabled)\r\nJ9VM - 20090319_32038_bHdSMr\r\nJIT  - 20081112_1511ifx1_r8\r\nGC   - 200811_07)\r\nJCL  - 20090408\r\n\r\n- I put a wait for post commit after the delete and again after the compress before exiting the jvm and it still reproduced, so the issue does not seem related to any contention between the delete postcommit operations and the compress or any problem related to not completing the postcommit before exiting the JVM.\r\n\r\n- It does not seem to reproduce with a clean shutdown, so seems specific to recovery and the log files that were written.  Mike thinks perhaps some timing issue related to when the checkpoint record gets laid down and what log records are after the checkpoint record.\r\n\r\n- Mike said the log records appear to be well formed.  There is not just the random corruption that I would have expected if this were a JVM bug.\r\n\r\n- I am running with 1.4.2 and haven't seen it yet after 34  runs. (It of course always seems to pop just after I hit send saying it hasn't happened.)    I know there are significant changes in the JVM from 1.4.2 to 1.5 and I think also the I/O behavior of Derby under 1.4.2 is different than it is with 1.5 with the incorporation of nio  so this doesn't really help us determine if it is a JVM or Derby issue.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-22T20:41:21.183+0000","updated":"2009-05-22T20:41:21.183+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12712265","id":"12712265","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Looking again I see nio is available in 1.4.2.  Does the Derby store behavior change in anyway using 1.4.2. vs 1.5?\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-22T21:12:12.926+0000","updated":"2009-05-22T21:12:12.926+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12712555","id":"12712555","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The cache manager that uses a ConcurrentHashMap is only loaded on JVM>=1.5, and this may affect the timing of the checkpoints.\r\n\r\nI'm wondering if this could be related to the new background cleaner which is used in a different way than the old one. Does the problem reproduce if you make ConcurrentCache.getBackgroundCleaner() always return null?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-05-24T14:19:16.208+0000","updated":"2009-05-24T14:19:16.208+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12712720","id":"12712720","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I am not sure if this is another bug or the same problem or a combination of both, but the attached reprodcution reproBackgroundCheckpoint.zip reproduces corruption on Windows with IBM 1.6 Sun JDK 1.6.\r\n\r\nThe reproduction is the same as the original one except it has a thread which continually runs checkpoints while the program runs and therefore makes it more likely there is a conflict between the normal checkpoint and the one initiated by the compress.\r\n\r\nTo run, compile the java programs and run the script  reprobckchkpt.ksh.  It may take a dozen iterations or so.\r\n\r\nWith the Sun JVM, got the same \r\nCaused by: ERROR XSDBB: Unknown page format at page Page(98,Container(0, 1024)), page dump follows: Hex dump:...\r\n\r\nThe exceptions with IBM 1.6 were  different though:\r\n============= begin nested exception, level (4) ===========\r\n\r\njava.io.EOFException: Reached end of file while attempting to read a whole page.\r\n\r\n\tat org.apache.derby.impl.store.raw.data.RAFContainer4.readFull(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.RAFContainer4.readPage0(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.RAFContainer4.readPage(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.CachedPage.readPage(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.CachedPage.setIdentity(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.cache.ConcurrentCache.find(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.FileContainer.getAnyPage(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.BaseContainer.getAnyPage(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.BaseContainerHandle.getAnyPage(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.PageBasicOperation.findpage(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.data.PageBasicOperation.needsRedo(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.redo(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.recover(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)\r\n\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Unknown Source)\r\n\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)\r\n\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(Unknown Source)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:316)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:273)\r\n\r\n\tat CheckTables.main(CheckTables.java:8)\r\n\r\nand\r\n\r\nCaused by: ERROR XSLAM: Cannot verify database format at {1} due to IOException.\r\n\r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:296)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1882)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtPosition(LogToFile.java:2985)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(LogToFile.java:2944)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecordForward(Scan.java:704)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecord(Scan.java:206)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.redo(FileLogger.java:1176)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:924)\r\n\r\n\tat org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:339)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1019)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:780)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:196)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1858)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(BaseMonitor.java:1724)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1602)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:1021)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:550)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2581)\r\n\r\n\t... 7 more\r\n\r\nCaused by: java.io.EOFException\r\n\r\n\tat java.io.RandomAccessFile.readInt(RandomAccessFile.java:739)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1869)\r\n\r\n\t... 33 more\r\n\r\n============= begin nested exception, level (1) ===========\r\n\r\njava.sql.SQLException: Cannot verify database format at {1} due to IOException.\r\n\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)\r\n\r\n\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:201)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2614)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:374)\r\n\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)\r\n\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)\r\n\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:316)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:273)\r\n\r\n\tat CheckTables.main(CheckTables.java:8)\r\n\r\nCaused by: java.sql.SQLException: Cannot verify database format at {1} due to IOException.\r\n\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)\r\n\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)\r\n\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)\r\n\r\n\t... 9 more\r\n\r\nCaused by: ERROR XSLAM: Cannot verify database format at {1} due to IOException.\r\n\r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:296)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1882)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtPosition(LogToFile.java:2985)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(LogToFile.java:2944)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecordForward(Scan.java:704)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecord(Scan.java:206)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.redo(FileLogger.java:1176)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:924)\r\n\r\n\tat org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:339)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1019)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:780)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:196)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1858)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(BaseMonitor.java:1724)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1602)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:1021)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:550)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2581)\r\n\r\n\t... 7 more\r\n\r\nCaused by: java.io.EOFException\r\n\r\n\tat java.io.RandomAccessFile.readInt(RandomAccessFile.java:739)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1869)\r\n\r\n\t... 33 more\r\n\r\n============= end nested exception, level (1) ===========\r\n\r\n============= begin nested exception, level (2) ===========\r\n\r\njava.sql.SQLException: Cannot verify database format at {1} due to IOException.\r\n\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)\r\n\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)\r\n\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)\r\n\r\n\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:201)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2614)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:374)\r\n\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)\r\n\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)\r\n\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:316)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:273)\r\n\r\n\tat CheckTables.main(CheckTables.java:8)\r\n\r\nCaused by: ERROR XSLAM: Cannot verify database format at {1} due to IOException.\r\n\r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:296)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1882)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtPosition(LogToFile.java:2985)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(LogToFile.java:2944)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecordForward(Scan.java:704)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecord(Scan.java:206)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.redo(FileLogger.java:1176)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:924)\r\n\r\n\tat org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:339)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1019)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:780)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:196)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1858)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(BaseMonitor.java:1724)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1602)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:1021)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:550)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2581)\r\n\r\n\t... 7 more\r\n\r\nCaused by: java.io.EOFException\r\n\r\n\tat java.io.RandomAccessFile.readInt(RandomAccessFile.java:739)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1869)\r\n\r\n\t... 33 more\r\n\r\n============= end nested exception, level (2) ===========\r\n\r\n============= begin nested exception, level (3) ===========\r\n\r\nERROR XSLAM: Cannot verify database format at {1} due to IOException.\r\n\r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:296)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1882)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtPosition(LogToFile.java:2985)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(LogToFile.java:2944)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecordForward(Scan.java:704)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecord(Scan.java:206)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.redo(FileLogger.java:1176)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:924)\r\n\r\n\tat org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:339)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1019)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:780)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:196)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1858)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(BaseMonitor.java:1724)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1602)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:1021)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:550)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2581)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:374)\r\n\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)\r\n\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)\r\n\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:316)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:273)\r\n\r\n\tat CheckTables.main(CheckTables.java:8)\r\n\r\nCaused by: java.io.EOFException\r\n\r\n\tat java.io.RandomAccessFile.readInt(RandomAccessFile.java:739)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1869)\r\n\r\n\t... 33 more\r\n\r\n============= end nested exception, level (3) ===========\r\n\r\n============= begin nested exception, level (4) ===========\r\n\r\njava.io.EOFException\r\n\r\n\tat java.io.RandomAccessFile.readInt(RandomAccessFile.java:739)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.verifyLogFormat(LogToFile.java:1869)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtPosition(LogToFile.java:2985)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(LogToFile.java:2944)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecordForward(Scan.java:704)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.Scan.getNextRecord(Scan.java:206)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.redo(FileLogger.java:1176)\r\n\r\n\tat org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:924)\r\n\r\n\tat org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:339)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1019)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:573)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:780)\r\n\r\n\tat org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:196)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)\r\n\r\n\tat org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1858)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(BaseMonitor.java:1724)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1602)\r\n\r\n\tat org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:1021)\r\n\r\n\tat org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:550)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:2581)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:374)\r\n\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)\r\n\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)\r\n\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:316)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:273)\r\n\r\n\tat CheckTables.main(CheckTables.java:8)\r\n\r\n============= end nested exception, level (4) ===========\r\n\r\n2009-05-25 02:28:24.156 GMT Thread[main,5,main] Less severe exception raised during cleanup (ignored) An attempt was made to close a transaction that was still active. The transaction has been aborted.\r\n\r\nERROR 40XT4: An attempt was made to close a transaction that was still active. The transaction has been aborted.\r\n\r\n\tat org.apache.derby.iapi.error.StandardException.newException(StandardException.java:276)\r\n\r\n\tat org.apache.derby.impl.store.raw.xact.Xact.close(Xact.java:1136)\r\n\r\n\tat org.apache.derby.impl.store.raw.xact.XactContext.cleanupOnError(XactContext.java:140)\r\n\r\n\tat org.apache.derby.iapi.services.context.ContextManager.cleanupOnError(ContextManager.java:333)\r\n\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.cleanupOnError(TransactionResourceImpl.java:419)\r\n\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.<init>(EmbedConnection.java:584)\r\n\r\n\tat org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)\r\n\r\n\tat org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)\r\n\r\n\tat org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:316)\r\n\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:273)\r\n\r\n\tat CheckTables.main(CheckTables.java:8)\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-25T13:32:10.763+0000","updated":"2009-05-25T13:32:10.763+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12713059","id":"12713059","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"derby_dumponly.log is a derby.log booted on the database that won't boot, with the following debug flag.  This forces the boot to just print all the log records rather than \r\nprocess them:\r\nderby.debug.true=DumpLogOnly,LogTrace\r\n\r\nUsing this I can see what was going on in the db after the problem log record \r\ncausing the crash.  What I see is that toward the end the is a log record for \r\nthe compress of container 1073:\r\nDEBUG LogTrace OUTPUT: scanned 64851 : Page Operation: Page(0,Container(0, 1073)) pageVersion 107 :  CompressSpaceOperation: newHighestPage = 13;num_p\r\nages_truncated = 31 to Page(0,Container(0, 1073)) instant = (6,3249863) logEnd = (6,3249908) logIn at 25 available 4^M\r\n\r\nIf I look backward in the log from this point I find the most recent operation on 1073:\r\nDEBUG LogTrace OUTPUT: scanned 64820 : Page Operation: Page(29,Container(0, 1024)) pageVersion 66 : Purge : 1 slots starting at 12 (recordId=18) insta\r\nnt = (6,3210739) logEnd = (6,3210791) logIn at 23 available 13^M\r\n\r\nAnd If I again start at that Compress log record and search backward for a \r\ncheckpoint record I find:\r\nDEBUG LogTrace OUTPUT: scanned 61634 : Checkpoint :     redoLWM (4,943)\r\n        undoLWM (4,943)\r\n**************************\r\norg.apache.derby.impl.store.raw.xact.TransactionTable@16ca16ca\r\nTransaction Table: size = 1 largestUpdateXactId = 61634\r\nXid=61634 gid=null firstLog=(4,943) lastLog=null transactionStatus=0 myxact=null update=true recovery=true prepare=false needExclusion=true\r\n--------------------------- instant = (4,981) logEnd = (4,1056) logIn at 55 available 4^M\r\n\r\nAnd the last checkpoint in the log is:\r\nDEBUG LogTrace OUTPUT: scanned 64191 : Checkpoint :     redoLWM (6,24)\r\n        undoLWM (5,61)\r\n**************************\r\norg.apache.derby.impl.store.raw.xact.TransactionTable@64a864a8\r\nTransaction Table: size = 2 largestUpdateXactId = 64852\r\nXid=64191 gid=null firstLog=(6,3250100) lastLog=null transactionStatus=0 myxact=null update=true recovery=true prepare=false needExclusion=true\r\nXid=64852 gid=null firstLog=(6,3249980) lastLog=(6,3250018) transactionStatus=0 myxact=null update=true recovery=true prepare=false needExclusion=true\r\n--------------------------- instant = (6,3250138) logEnd = (6,3250245) logIn at 87 available 4^M\r\n\r\nThe problem with this is that for redo recovery of compress space record to work\r\nproperly, there must be a checkpoint with a redo lwm (low water mark) that is after any operation on the container before the compress operation happens.\r\nCompress calls checkpoint to make this happen.  The reason is that redo \r\nrecovery wants to replay any log record it has making pages march orderly from\r\nversion n to version n+1, ...   But the compress space operation shrinks the file\r\non disk losing version n, so version n+1 can't be redone.  \r\n\r\nIn this case the last checkpoint has redo lwm of (6,24) and the last operation is\r\nafter that at (6,3210739)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-26T15:37:31.457+0000","updated":"2009-05-26T15:37:31.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12713062","id":"12713062","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"It looks like the problem is when compress asks for a checkpoint while another checkpoint is in progress.  The current  checkpoint code will either wait for current checkpoint to finish or just return if one is already in progress.  compress needs a path that will wait for current one \r\nto finish and restart another one, and wait for that one to finish.\r\n\r\nI'll concentrate on a patch for this.   I am not sure if the last stack that kathey posted is this same bug.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-26T15:44:10.902+0000","updated":"2009-05-26T15:44:10.902+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12713069","id":"12713069","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Mike for looking at this.  If we still see the EOFException  with my background checkpoint repro after your fix,  I will file a separate bug.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-26T16:02:59.374+0000","updated":"2009-05-26T16:02:59.374+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12713125","id":"12713125","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Changing the affects version to include past versions.   I haven't actually seen it  with 10.2, but did with 10.1.3.3 and see no reason why 10.2 wouldn't be affected.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-26T17:23:11.502+0000","updated":"2009-05-26T17:23:11.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12713208","id":"12713208","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Preliminary patch for this issue.  I have not run full tests yet, but would like feedback from anyone who could reproduce the original error - I have not actually reproduced\r\nit myself.  \r\n\r\nThis patch only includes code changes, no new tests.\r\n\r\nThe fix is to add interfaces that allow compress table to tell the underlying store that\r\nit needs a new checkpoint and needs to wait until that checkpoint has made it into\r\nthe log before proceeding with the operation which will shrink the file destroying \r\npages that may otherwise participate in redo recovery.\r\n\r\nI have only altered the behavior for the compress operation and left all other\r\ncheckpoint() calling paths the same, but reading some \r\ncomments while looking at the code makes me concerned that some of the\r\nbackup code and backup for encryption code may have also have problems with\r\nan ongoing checkpoint.  But would rather address those problems if they exist in\r\nanother issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-26T19:44:40.076+0000","updated":"2009-05-26T19:44:40.076+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12713314","id":"12713314","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Mike for the quick fix.  With the patch, I got 200 clean runs on z/OS and also 200 clean runs on Windows (IBM 1.6) with the windows repro.\r\n\r\nI took a quick look at the patch and have no useful technical comments but noticed that the patch mixes spaces and tabs.  Also there is an extra @param wait in javadoc(LogFactory:107).\r\n\r\nI have a question though.  Under what conditions would we not want to queue the checkpoint requests and force a new checkpoint?\r\n\r\nWhen we look at the other cases,  in addition to backup, I think it would be good to look at:\r\nCALL SYSCS_UTIL.SYSCS_CHECKPOINT_DATABASE() to make sure it has no issues.  It seems like it should  force a new checkpoint as well.\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-26T23:00:34.753+0000","updated":"2009-05-26T23:00:34.753+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12713331","id":"12713331","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"The normal case where we ask for a checkpoint, which is triggered by default when we think \r\nwe have logged approximately 10meg of log is a case where we don't want to start a new one.\r\nThe only reason we are doing a checkpoint in this case is to minimize recovery time if we happen to crash.  If there is already a checkpoint in progress, then that is good enough.  There\r\nis no correctness of needed a checkpoint to start NOW and wait for it to finish.\r\nCheckpoints can really slow down the over all throughput of the system, especially if user\r\nhas increased the cache size, so we don't want to do additional ones if they are\r\nunnecessary.\r\n\r\nI am not sure what backup needs.\r\n\r\nIn the case of the user callable routine we don't really say much about what it does:\r\nThe SYSCS_UTIL.SYSCS_CHECKPOINT_DATABASE system procedure checkpoints the database by flushing all cached data to disk.  But I would lean toward changing its behavior to\r\nalso do another checkpoint.  \r\n\r\nI am tempted to change the patch to eliminate the wait parameter, and instead all code that \r\ncurrently calls wait will always force a new checkpoint and wait for it if it finds a checkpoint in\r\nprogress.  If I do this change I will make sure the \"normal\" checkpoint does not call this path.  Any opinions?  It would be nice if we could generate bug scripts that show the\r\nspecific bugs that are fixed by adding the additional checkpoints, but this is hard as is\r\nevidenced we still don't have a perfect repro for the compress bug.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-26T23:55:39.744+0000","updated":"2009-05-26T23:55:39.744+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12713449","id":"12713449","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"First patch hung the tests.  Needed to move the retry of the checkpoint out of the synchronized block.  Still not ready for commit, rerunning all tests.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-27T06:58:07.868+0000","updated":"2009-05-27T06:58:07.868+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12714208","id":"12714208","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Derby-4239_3.diff is the patch I intend to commit.  It passes complete set of nightly tests.\r\n\r\nAfter looking at the backup code it seemed like backup really wanted to have the same behavior\r\nthat compress was looking for.  I also changed the behavior of the system procedure checkpoint\r\nto match backup and compress checkpoint.  \r\n\r\nI moved the waiting code into the subroutine so that it could differ between a checkpoint returning\r\nfalse because another a checkpoint was in progress and a couple of other possible conditions.\r\nWithout this change system could get in a state where it looped forever trying to get a checkpoint\r\n(one case was trying to force a clean shutdown after we had already closed down the logging\r\nsystem).\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-28T22:44:03.496+0000","updated":"2009-05-28T22:44:03.496+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12714796","id":"12714796","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Do you think this could be the same as the problem reported in DERBY-3393? I've run the storerecovery suite once without the patch and twice with the patch. Without the patch, DERBY-3393 was reproduced, but none of the runs with the patch reproduced it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-05-31T00:07:17.619+0000","updated":"2009-05-31T00:07:17.619+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12714868","id":"12714868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I was doing some more runs on Windows with the patch because I accidentally deleted the database/log with the EOFException and I got a hang.   I don't really understand what is getting hung up though.\r\nThis is with IBM 1.6 and ReproCorruptionBackgroundCheckpoint.\r\n\r\n2XMFULLTHDDUMP Full thread dump J9 VM (J2RE 6.0 IBM J9 2.4 Windows XP x86-32 build jvmwi3260sr5-20090516_3558820090516_035588_lHdSMr, native threads):\r\n3XMTHREADINFO      \"JIT Compilation Thread\" TID:0x41CB1900, j9thread_t:0x00292630, state:CW, prio=10\r\n3XMTHREADINFO1            (native thread ID:0x1028, native priority:0xB, native policy:UNKNOWN)\r\n3XMTHREADINFO      \"Gc Slave Thread\" TID:0x4209C500, j9thread_t:0x00292FC0, state:CW, prio=5\r\n3XMTHREADINFO1            (native thread ID:0x1638, native priority:0x5, native policy:UNKNOWN)\r\n3XMTHREADINFO      \"derby.antiGC\" TID:0x41ED2100, j9thread_t:0x4276259C, state:CW, prio=1\r\n3XMTHREADINFO1            (native thread ID:0x970, native priority:0x1, native policy:UNKNOWN)\r\n4XESTACKTRACE          at java/lang/Object.wait(Native Method)\r\n4XESTACKTRACE          at java/lang/Object.wait(Object.java:167)\r\n4XESTACKTRACE          at org/apache/derby/impl/services/monitor/AntiGC.run(Bytecode PC:15)\r\n4XESTACKTRACE          at java/lang/Thread.run(Thread.java:735)\r\n3XMTHREADINFO      \"Thread-2\" TID:0x42934500, j9thread_t:0x42762A64, state:CW, prio=5\r\n3XMTHREADINFO1            (native thread ID:0x13E8, native priority:0x5, native policy:UNKNOWN)\r\n4XESTACKTRACE          at java/lang/Object.wait(Native Method)\r\n4XESTACKTRACE          at java/lang/Object.wait(Object.java:167)\r\n4XESTACKTRACE          at java/util/Timer$TimerImpl.run(Timer.java:221)\r\n3XMTHREADINFO      \"derby.rawStoreDaemon\" TID:0x42933300, j9thread_t:0x42762F2C, state:CW, prio=5\r\n3XMTHREADINFO1            (native thread ID:0xF30, native priority:0x5, native policy:UNKNOWN)\r\n4XESTACKTRACE          at java/lang/Object.wait(Native Method)\r\n4XESTACKTRACE          at java/lang/Object.wait(Object.java:196(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/services/daemon/BasicDaemon.rest(Bytecode PC:3(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/services/daemon/BasicDaemon.run(Bytecode PC:22)\r\n4XESTACKTRACE          at java/lang/Thread.run(Thread.java:735)\r\n3XMTHREADINFO      \"Thread-6\" TID:0x42933900, j9thread_t:0x42763190, state:CW, prio=5\r\n3XMTHREADINFO1            (native thread ID:0x143C, native priority:0x5, native policy:UNKNOWN)\r\n4XESTACKTRACE          at sun/nio/ch/FileChannelImpl.force0(Native Method)\r\n4XESTACKTRACE          at sun/nio/ch/FileChannelImpl.force(FileChannelImpl.java:364(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/io/DirRandomAccessFile4.sync(Bytecode PC:77(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/store/raw/log/LogToFile.syncFile(Bytecode PC:77(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/store/raw/log/LogToFile.writeControlFile(Bytecode PC:394(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/store/raw/log/LogToFile.checkpointWithTran(Bytecode PC:341(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/store/raw/log/LogToFile.checkpoint(Bytecode PC:16(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/store/raw/RawStore.checkpoint(Bytecode PC:16(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/store/access/RAMAccessManager.checkpoint(Bytecode PC:16(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/db/BasicDatabase.checkpoint(Bytecode PC:16(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/catalog/SystemProcedures.SYSCS_CHECKPOINT_DATABASE(Bytecode PC:16(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/exe/acd381409ax0121x944ex95fex00000008ed900.g0(Bytecode PC:16(Compiled Code))\r\n4XESTACKTRACE          at sun/reflect/GeneratedMethodAccessor3.invoke(Bytecode PC:16(Compiled Code))\r\n4XESTACKTRACE          at sun/reflect/DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java(Compiled Code))\r\n4XESTACKTRACE          at java/lang/reflect/Method.invoke(Method.java:578(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/services/reflect/ReflectMethod.invoke(Bytecode PC:6(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/execute/CallStatementResultSet.open(Bytecode PC:6(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/GenericPreparedStatement.executeStmt(Bytecode PC:6(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/sql/GenericPreparedStatement.execute(Bytecode PC:4(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.executeStatement(Bytecode PC:4(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.execute(Bytecode PC:152(Compiled Code))\r\n4XESTACKTRACE          at org/apache/derby/impl/jdbc/EmbedStatement.execute(Bytecode PC:7(Compiled Code))\r\n4XESTACKTRACE          at ReproCorruptionBackgroundCheckpoint$1.run(ReproCorruptionBackgroundCheckpoint.java:97(Compiled Code))\r\n3XMTHREADINFO      \"DestroyJavaVM helper thread\" TID:0x41CB1300, j9thread_t:0x002923CC, state:CW, prio=5\r\n3XMTHREADINFO1            (native thread ID:0x808, native priority:0x5, native policy:UNKNOWN)\r\nNULL           ------------------------------------------------------------------------","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-31T14:38:09.560+0000","updated":"2009-05-31T14:38:09.560+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12714882","id":"12714882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I am not sure what the expected behavior is of the ReproCorruptionBackgroundCheckpoint() test.   Reading \r\nthe current test it seems like it starts a thread that loops forever doing checkpoints one after another.  The\r\nstack that you posted doesn't seem like anything is hanging, it looks like there is a single thread actively doing\r\na checkpoint.  \r\n\r\nIt seems like the test should stop the user checkpoint thread after the main test has finished.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-31T15:44:23.090+0000","updated":"2009-05-31T15:44:23.090+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12714887","id":"12714887","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"It seems likely that DERBY-3393 is related to this.  Changing the write as is suggested in 3393 changes up the timing of checkpoints, and I can imagine that could cause the circumstances \r\nof 4239.  The errors reported do seem like redo on records that could be explained if compress\r\nhappened on them and a checkpoint was not put down properly to stop redo recovery happening\r\non them.\r\n\r\nI am going to run the 3393 case a bunch of times and if it still does not repeat probably close that\r\nerror.  If anyone can cause an error reported in 3393 after the patch for 4239 please post.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-05-31T15:53:51.355+0000","updated":"2009-05-31T15:53:51.355+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12714941","id":"12714941","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I did another thread dump and confirmed that as you suspected, it was not hung but still looping.\r\nThe thread doing the checkpoint,  is set as a daemon thread, so should have terminated when System.exit() was  called. I am not quite sure why it didn't with this particular run, but it doesn't look like a Derby issue, so I won't pursue it for now.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-06-01T00:07:36.007+0000","updated":"2009-06-01T00:07:36.007+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425976/comment/12724132","id":"12724132","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Changing title to be more descriptive and reflect that the problem is not z/OS specific.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-06-25T15:41:09.150+0000","updated":"2009-06-25T15:41:09.150+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4239/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06tg7:"}}