{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12401523","self":"https://issues.apache.org/jira/rest/api/latest/issue/12401523","key":"DERBY-3813","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313143","id":"12313143","description":"Head of 10.3 branch","name":"10.3.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313345","id":"12313345","description":"","name":"10.4.2.0","archived":false,"released":true,"releaseDate":"2008-09-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313771","id":"12313771","description":"build: 764942, 14/Apr/09. Voted release: 28/Apr/09. Announced: 1/May/09","name":"10.5.1.1","archived":false,"released":true,"releaseDate":"2009-04-28"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2008-08-04 21:15:29.536","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23856","customfield_12310222":"1_*:*_1_*:*_529264239_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-08-08T03:47:06.195+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3813/watchers","watchCount":1,"isWatching":false},"created":"2008-08-02T00:46:01.956+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:52:05.325+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"I received the following problem report:\n\nHaving failures running with our VM that is a subset of Java 5.   Failure is with the handling of the BigDecimal class in the org.apache.derby.iapi.types.SQLDecimal class.  \n\nThe SQLDecimal class does reflection to determine if the methods toPlainString and bdPrecison are present or not\n private static final Method toPlainString;\n    private static final Method bdPrecision;\n    static {\n        Method m;\n        try {\n            m = BigDecimal.class.getMethod(\"toPlainString\", null);\n        } catch (NoSuchMethodException e) {\n            m = null;\n        }\n        toPlainString = m;\n        try {\n            m = BigDecimal.class.getMethod(\"precision\", null);\n        } catch (NoSuchMethodException e) {\n            m = null;\n        }\n        bdPrecision = m;\n    }\n\nhowever, when it comes time to use them, it does not check whether it found the methods, but rather the JVM level, equating JVM specification level with method existence\n\n\tpublic String\tgetString()\n\t{\n\t\tBigDecimal localValue = getBigDecimal();\n\t\tif (localValue == null)\n\t\t\treturn null;\n\t\telse if (JVMInfo.JDK_ID < JVMInfo.J2SE_15)\n\t\t\treturn localValue.toString();\n        else\n        {\n            // use reflection so we can still compile using JDK1.4\n            // if we are prepared to require 1.5 to compile then this can be a direct call\n            try {\n                return (String) toPlainString.invoke(localValue, null);\n            } catch (IllegalAccessException e) {\n\n\nand\n\tprivate static int getWholeDigits(BigDecimal decimalValue)\n\t{\n        /**\n         * if ONE > abs(value) then the number of whole digits is 0\n         */\n        decimalValue = decimalValue.abs();\n        if (ONE.compareTo(decimalValue) == 1)\n        {\n            return 0;\n        }\n        \n        if (JVMInfo.JDK_ID >= JVMInfo.J2SE_15)\n\t\t{\n\t        // use reflection so we can still compile using JDK1.4\n\t\t\t// if we are prepared to require 1.5 to compile then this can be a\n\t\t\t// direct call\n\t\t\ttry {\n\t\t\t\t// precision is the number of digits in the unscaled value,\n\t\t\t\t// subtracting the scale (positive or negative) will give the\n\t\t\t\t// number of whole digits.\n\t\t\t\tint precision = ((Integer) bdPrecision.invoke(decimalValue,\n\t\t\t\t\t\tnull)).intValue();\n\t\t\t\treturn precision - decimalValue.scale();\n\nSince the JVM is claiming 1.5 specification, the code assumes the methods exist,  and result in NullPointerExceptions at the low level Derby class, resulting in SQLExceptions thrown to the caller.   \n\n>>>> ***Created table: dish\n***Created table: VNMEDICALRECORD\nFail to make the query to database:\njava.lang.NullPointerException\n        at org.apache.derby.iapi.types.SQLDecimal.getString(Unknown Source)\n        at org.apache.derby.iapi.types.DataType.getTraceString(Unknown Source)\n        at org.apache.derby.impl.sql.GenericParameter.toString(Unknown Source)\n        at org.apache.derby.impl.sql.GenericParameterValueSet.toString(Unknown Source)\n        at org.apache.derby.impl.sql.conn.GenericStatementContext.appendErrorInfo(Unknown Source)\n        at org.apache.derby.iapi.services.context.ContextManager.cleanupOnError(Unknown Source)\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\n        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\n        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(Unknown Source)\n        at com.ibm.rcp.samples.derby.Derby.updateDB(Derby.java:175)\n        at com.ibm.rcp.samples.derby.Derby.run(Derby.java:89)\n        at java.lang.Thread.run(Unknown Source)\nFail to close:\njava.sql.SQLException: Cannot issue rollback in a nested connection when there is a pending operation in the parent connection.\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\n        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\n        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\n        at org.apache.derby.impl.jdbc.EmbedConnection.close(Unknown Source)\n        at org.apache.derby.impl.jdbc.EmbedConnection.close(Unknown Source)\n        at com.ibm.rcp.samples.derby.Derby.updateDB(Derby.java:258)\n        at com.ibm.rcp.samples.derby.Derby.run(Derby.java:89)\n        at java.lang.Thread.run(Unknown Source)\nCaused by: ERROR X0Y67: Cannot issue rollback in a nested connection when there is a pending operation in the parent connection.\n        at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doRollback(Unknown Source)\n        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.userRollback(Unknown Source)\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.rollback(Unknown Source)\n        ... 5 more\n\n\nMaking the following change would fix the problem of running on our VM\nInstead of this test\n        if (JVMInfo.JDK_ID >= JVMInfo.J2SE_15)\ntest if (toPlainString == null), or if (bdPrecision == null) or equivalent, this should achieved the same results\n\t","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37271","summary":"Derby tests for the existance of BigDecimal methods toPlainString and bdPrecison but does not check if they were found before using them.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stan","name":"stan","emailAddress":"Stan dot Bradbury at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stan Bradbury","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stan","name":"stan","emailAddress":"Stan dot Bradbury at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stan Bradbury","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Using a VM that is a subset of Java 5 without full BigDecimal support","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":6,"total":6,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12401523/comment/12619709","id":"12619709","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is some links with info on the jvm in question.\r\nUnderstanding the jclDekstop JRE:  http://publib.boulder.ibm.com/infocenter/ledoc/v6r11/topic/com.ibm.rcp.tools.doc.appdev/devapps_understandingthejcldesktopjre.html\r\nJavadoc - overview: http://publib.boulder.ibm.com/infocenter/ledoc/v6r11/topic/com.ibm.rcp.jcl.desktop.javadoc/doc/overview-summary.html\r\nJavadoc - differences between jclDesktop and Java 5.0: http://publib.boulder.ibm.com/infocenter/ledoc/v6r11/topic/com.ibm.rcp.jcl.desktop.javadoc/jclDesktop-J2SE50-Differences.html\r\n\r\nI'll download the trial version and see if I can reproduce the problem.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-08-04T21:15:29.536+0000","updated":"2008-08-04T21:15:29.536+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12401523/comment/12619940","id":"12619940","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is a patch to correct this issue.  I reproduced the NPE with the JVM in question and verified that this fixes it.  I ran suites.All and derbyall on weme 6.1, suites.All on jdk142.  Still need to run more tests, but here is the patch for review.   \r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-08-05T16:10:32.556+0000","updated":"2008-08-05T16:10:32.556+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12401523/comment/12620315","id":"12620315","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I  plan to go ahead and check this in and backport to 10.4 and 10.3.  I ran suites.All and derbyall with weme 6.1, jdk142, and jdk 1.6.  I ran the repro with the jvm in question and saw the NullPointerException and saw it run clean with the fix, so this is likely to fix the problem for this particular case.  That doesn't say anything for how Derby will run in general against a 1.5 subset.     \r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-08-06T16:50:32.122+0000","updated":"2008-08-06T16:50:32.122+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12401523/comment/12620789","id":"12620789","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=blebert","name":"blebert","emailAddress":"berthold_lebert at us dot ibm dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Berthold Lebert","active":true},"body":"What are the reasons you go through reflection to use toPlainString() and precision() if in the Java 1.4 case toString() and your code to determine the precision seem to be just fine?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=blebert","name":"blebert","emailAddress":"berthold_lebert at us dot ibm dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Berthold Lebert","active":true},"created":"2008-08-07T23:32:01.105+0000","updated":"2008-08-07T23:32:01.105+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12401523/comment/12620826","id":"12620826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Committed fix to trunk, 10.4 and 10.5 codeline.  Dan do you know the answer to Berthold's question?\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-08-08T03:47:06.133+0000","updated":"2008-08-08T03:47:06.133+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12401523/comment/12620964","id":"12620964","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"The issue is that the format of the value issued by toString() changed from Java 1.4 to 1.5, an unusual incompatibility introduced into java.\r\n\r\nThus the code to determine precision from toString() works in 1.4 but will not work in 1.5, would have to use toPlainString() instead, but since 1.5 introduced a precision() method it makes most sense to use that in 1.5.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2008-08-08T15:57:05.617+0000","updated":"2008-08-08T15:57:05.617+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3813/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06qrr:"}}