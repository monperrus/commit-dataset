{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12325539","self":"https://issues.apache.org/jira/rest/api/latest/issue/12325539","key":"DERBY-700","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313478","id":"12313478","description":"Head of 10.1 branch. Maintenance version bump for sps update ","name":"10.1.3.3","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313143","id":"12313143","description":"Head of 10.3 branch","name":"10.3.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313401","id":"12313401","description":"Head of 10.4 branch","name":"10.4.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314182","id":"12314182","description":"Old head of 10.5 branch","name":"10.5.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2005-11-11 09:40:47.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22098","customfield_12310222":"1_*:*_1_*:*_119699210841_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-08-27T16:23:24.841+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-700/watchers","watchCount":2,"isWatching":false},"created":"2005-11-11T06:36:34.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"25.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313478","id":"12313478","description":"Head of 10.1 branch. Maintenance version bump for sps update ","name":"10.1.3.3","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312251","id":"12312251","description":"Head of 10.2 branch","name":"10.2.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313143","id":"12313143","description":"Head of 10.3 branch","name":"10.3.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313401","id":"12313401","description":"Head of 10.4 branch","name":"10.4.2.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314182","id":"12314182","description":"Old head of 10.5 branch","name":"10.5.3.1","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12332743","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12332743","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12463933","key":"DERBY-4646","self":"https://issues.apache.org/jira/rest/api/2/issue/12463933","fields":{"summary":"Implement dual boot protection on CDC Foundation 1.1/phoneME platform for non-Windows platforms.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12326377","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12326377","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12433427","key":"DERBY-4356","self":"https://issues.apache.org/jira/rest/api/2/issue/12433427","fields":{"summary":"testStartStopManagementFromApplication(org.apache.derbyTesting.functionTests.tests.management.ManagementMBeanTest)junit.framework.AssertionFailedError: expected:<2> but was:<%>","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12316061","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12316061","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"outwardIssue":{"id":"12369362","key":"DERBY-2649","self":"https://issues.apache.org/jira/rest/api/2/issue/12369362","fields":{"summary":"An unsuccessful boot attempt of an booted database can potentially delete files in the temp directory that are in use. ","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-05-02T02:29:06.199+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11412","id":"11412","name":"Store"}],"timeoriginalestimate":null,"description":"Derby does not prevent dual boot from two different classloaders on Linux and Mac OS X.\r\n\r\n\r\nTo reproduce run the  program DualBootRepro with no derby jars in your classpath. The program assumes derby.jar is in 10.1.2.1/derby.jar, you can change the location by changing the DERBY_LIB_DIR variable.\r\n\r\nOn Linux the output is:\r\n\r\n$java -cp . DualBootRepro\r\nLoading derby from file:10.1.2.1/derby.jar\r\n10.1.2.1/derby.jar\r\nBooted database in loader java.net.URLClassLoader@8ed465\r\nFAIL: Booted database in 2nd loader java.net.URLClassLoader@dc6a77\r\n\r\n\r\nOn Windows I get the expected output.\r\n$ java -cp . DualBootRepro\r\nLoading derby from file:10.1.2.1/derby.jar\r\n10.1.2.1/derby.jar\r\nBooted database in loader java.net.URLClassLoader@1ac04e8\r\nPASS: Expected exception for dualboot:Another instance of Derby may have already booted the database D:\\marsden\\repro\\dualboot\\mydb.\r\n\r\n\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10364","value":"Data corruption","id":"10364"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37727","summary":"Derby does not prevent dual boot of database from different classloaders on Linux and Mac OS X","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"subtasks":[{"id":"12370624","key":"DERBY-2737","self":"https://issues.apache.org/jira/rest/api/2/issue/12370624","fields":{"summary":"Change documentation on permissions needed to include read/write for  system property derby.storage.jvmInstanceId ","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png","name":"Sub-task","subtask":true}}}],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10422","value":"High Value Fix","id":"10422"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"ava -version\r\njava version \"1.4.2_08\"\r\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_08-b03)\r\nJava HotSpot(TM) Client VM (build 1.4.2_08-b03, mixed mode)\r\n\r\nalso\r\n\r\njava version \"1.5.0_19\"\r\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_19-b02-304)\r\nJava HotSpot(TM) Client VM (build 1.5.0_19-137, mixed mode, sharing)\r\non Mac OS X 10.5.7.","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10051","value":"Urgent","id":"10051"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":103,"total":103,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12357290","id":"12357290","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"DualBootRepro Program to reproduce dual boot from two classloaders in  Linux.\r\n\r\nChange DERBY_LIB_DIR   to derby directory and run without derby jars in our classpath.\r\njava -cp  .  DualBootRepro","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2005-11-11T06:39:26.000+0000","updated":"2005-11-11T06:39:26.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12357292","id":"12357292","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Sysinfo output.\r\n\r\njava -cp ./10.1.2.1/derby.jar org.apache.derby.tools.sysinfo\r\n------------------ Java Information ------------------\r\nJava Version:    1.4.2_08\r\nJava Vendor:     Sun Microsystems Inc.\r\nJava home:       /usr/lib/SunJava2-1.4.2/jre\r\nJava classpath:  ./10.1.2.1/derby.jar\r\nOS name:         Linux\r\nOS architecture: i386\r\nOS version:      2.6.5-7.201-smp\r\n...\r\njava.specification.name: Java Platform API Specification\r\njava.specification.version: 1.4\r\n--------- Derby Information --------\r\nJRE - JDBC: J2SE 1.4.2 - JDBC 3.0\r\n[/.../derby.jar] 10.1.2.1 - (330608)\r\n------------------------------------------------------\r\n----------------- Locale Information -----------------\r\n------------------------------------------------------\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2005-11-11T06:51:20.000+0000","updated":"2005-11-11T06:51:20.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12357312","id":"12357312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"My guess is , currently Derby seems to catch the IO exception and turn it into a readonly db , when file lock  fails with OverlappingFileLockException. By  correctly catching java.nio.channels.OverlappingFileLockException,  we might be able to prevent multi boots with in the same jvm using different class loaders. \r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2005-11-11T09:40:47.000+0000","updated":"2005-11-11T09:40:47.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12363295","id":"12363295","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Hi Kathy , \r\n\r\nI  am attempting to fix this bug, just realized I may  not  be able to add the  repro in jira into the functional tests., repro is expecting   derby classes should not be in there in the   classpath,  I was wondering by chance did u write a custom class loader test for Derby  ?   I could not find one in the functional tests. \r\n\r\nThanks\r\n-suresh\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-01-20T05:23:55.000+0000","updated":"2006-01-20T05:23:55.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12363313","id":"12363313","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is an updated repro with a classloader that  should not require the classpath remove other derby jars","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-01-20T07:05:29.000+0000","updated":"2006-01-20T07:05:29.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12363492","id":"12363492","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"After doing bit of testing realized  checking for  OverlappingFileLockException does not work.  This exception is reliable only   if   the same file channel instance  is used.,  With multiple class loaders  \r\nI don't know  how it is possible to have a sigle  file channel object.   \r\n\r\nOn Linux  ,  one can acquire the lock on the same region  using  diferent file channels on the same file. \r\n\r\nRealated info from the java docs:\r\njava.nio.channel.FileLock \r\n,On some systems, closing a channel releases all locks held by the Java virtual machine on the underlying file regardless of whether the locks were acquired via that channel or via another channel open on the same file. It is strongly recommended that, within a program, a unique channel be used to acquire all locks on any given file.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-01-21T11:07:28.000+0000","updated":"2006-01-21T11:07:28.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12363520","id":"12363520","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Database corruption can result anytime 2 different systems boot the same Derby database.  DB corruption can happen\r\neven if the booting systems perform no updates if the there is recovery to do during boot, in that case 2 separate recovery systems will be opertating in an uncoordinated manner on the same log file, and applying uncoordinated changes to the data files.  Without multiple class loaders or  with multiple JVM's derby uses file locking to prevent this.\r\nIt looks like file locking from the same jvm and 2 class loaders does not work, does anyone have any idea how to \r\nimplement a locking scheme that will work from the same jvm , with 2 class loaders.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2006-01-22T02:18:21.000+0000","updated":"2006-01-22T02:18:21.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12423387","id":"12423387","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Marking this issue Critical  as it is a corruption issue that has in the past and surely will in the future affect users and cause unrecoverable corruption in production environments.  The corruption is triggered by a usage error, but unrecoverable database corruption is a high price to pay for deciding to connect with IJ while your APP Server, Eclipse or other environment  has  loaded Derby with a classloader.\r\n\r\n\r\nAlso marking this issue as 10.2 as a high value fix.  I think there may be technical issues that make it difficult to address in the 10.2 time frame, so if someone with expertise in the area thinks it is not possible to address in that timeframe, please move it to an appropriate release, maybe 10.2.2.  It is not a regression so as serious as it is I don't see it as an absolute showstopper for the release.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2006-07-25T17:08:04.000+0000","updated":"2006-07-25T17:08:04.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12423920","id":"12423920","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Bumping urgency.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2006-07-27T20:57:46.000+0000","updated":"2006-07-27T20:57:46.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12424848","id":"12424848","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":"Hi,\r\n\r\nWe could solve this problem by setting a System property before booting a database and checking for the property during subsequent boots. When the database is shutdown we set the property to false. For example when we boot a database named mydb then we set the property derby.dblock.mydb = true. Now during subsequent boots we could check for this system variable and if it is set to true throw an exception. During the shutdown of the database we set this variable to false. I tried an attempt along this line in the attached patch. \r\n\r\nI HAVE NOT run the patch with security manager enabled. The sample repro attached with this issue passes with this fix. \r\n\r\nPls note that the patch is not for a commit but is just to represent what I have in mind as a solution, in the form of code. \r\n\r\nthanx\r\nNarayanan","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2006-08-01T12:45:42.000+0000","updated":"2006-08-01T12:45:42.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12424948","id":"12424948","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Using system properties will require that every user running with the security manager grant a new permission in their policy file to allow setting these system properties. I thought an earlier discussion on the list had recommended not to use system properties this way.\r\n\r\nOne issue with system properties is that how do atomically set and get the property, I think that is needed to perform locking?\r\nIn your current patch, there is a window between where you get and set the property where another thread in a anoter class loader could\r\ncome in and \"lock\" the database, resulting in two active derby instances connecting to the same database.\r\n\r\nI also don't understand why on getting the system property you are catching NullPointerException and IllegalArgumentException, how would these\r\nbe thrown by System.getProperty()?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-08-01T17:40:37.000+0000","updated":"2006-08-01T17:40:37.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12424951","id":"12424951","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"LUCENE-305 and LUCENE-635 may be worth looking at, lucene is re-factoring their locking (similar requirements to Derby) and maybe they have a solution for the intra-jvm lock. Otherwise has anyone done a google search on the issue?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2006-08-01T17:46:49.000+0000","updated":"2006-08-01T17:46:49.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12425154","id":"12425154","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":"Hi,\r\n\r\nTHESE ATTACHMENTS ARE JUST AN ATTEMPT IN THE SIMULATION OF THE COMMENTS ABOVE. THEY ARE NOT FOR A COMMIT. PLS FOLLOW BELOW COMMENTS FOR DETAILS.\r\n\r\nThanx for going through the patch and giving comments\r\n\r\n>Using system properties will require that every user  running with the security \r\n  manager grant a new  permission in their policy file to allow setting these system \r\n  properties.\r\n\r\n   I Agree, My apologies for not having gone through the earlier thread on System \r\n   Properties\r\n\r\n> One issue with system properties is that how do atomically set and get the \r\n    property, I think that is needed to perform locking? In your current patch, there is a \r\n    window between where you get and set the property where  another thread in a \r\n    anoter class loader could come in and \"lock\" the database, resulting in two active \r\n    derby instances connecting to the same database. \r\n\r\n   Again a very valid point. I wanted to try to simulate this. So converted the whole   \r\n   repro into a crude multi -threaded  application. But found found it difficult to \r\n   simulate it on  my machine since one of the threads always managed  to set this \r\n   property before  the other. So modified my fix by creating a sort of sync point after \r\n   the getProperties.  Just to show that two seperate threads could actually reach \r\n   there.\r\n\r\n  This could actually occur without this modification\r\n\r\n  1) When one of the threads gets preempted after doing a getProperties and then \r\n       the other does a  getProperties. And then they proceed to completion. \r\n\r\n      Also this might just be one of the cases when this could have occurred.\r\n\r\n> I also don't understand why on getting the system property you are catching \r\n   NullPointerException and  IllegalArgumentException, how would these be thrown \r\n   by System.getProperty()?\r\n   \r\n   NullPointerException - System.getProperty(null);\r\n\r\n   IllegalArgumentException - System.getProperty(\"\");\r\n\r\n   I found it interesting to simulate the condition where the above fix might fail. \r\n   Thought I could share the same with the community. So attaching the relevant files \r\n   I used for generating this condition. \r\n\r\nthanx once again for the patient comments\r\nNarayanan","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2006-08-02T06:31:22.000+0000","updated":"2006-08-02T06:31:22.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12425259","id":"12425259","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Where can Derby store VM-global state? It has been pointed out that System properties are an awkward kind of VM-global state for the following reasons:\r\n\r\n1) SecurityManager problems\r\n2) Race conditions\r\n\r\nWhat other VM-global state can Derby access? One Derby object that's global across the VM is the Derby driver registered with the DriverManager.\r\n\r\n1) Could we use the registered Derby driver to anchor VM-global state?\r\n2) Are there other VM-global Derby objects which we could use?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2006-08-02T15:20:08.000+0000","updated":"2006-08-02T15:20:08.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12425512","id":"12425512","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"It appears that fixing this bug will require us to agree on some mechanism for caching VM-global Derby state. This seems to be an architectural decision which requires careful thought and experiment. I think we should defer this to a future release. I am moving this to 10.3 because thatt's the next release available in the dropdown. I agree with Kathey that this is a good candidate for a bug fix release in the 10.2 lineage.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2006-08-03T12:42:29.000+0000","updated":"2006-08-03T12:42:29.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12425590","id":"12425590","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks for creating the new 10.2.2.0 option, Andrew! I've reassigned this issue to that release.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2006-08-03T18:58:30.000+0000","updated":"2006-08-03T18:58:30.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12426168","id":"12426168","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"body":"Hi,\r\nI am not working actively on this issue. Hence unassigning myself from this issue and moving on to other issues I am working on.\r\n\r\nthanx\r\nNarayanan\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=narayanan","name":"narayanan","emailAddress":"v dot narayanan at sun dot com-disabled","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"V.Narayanan","active":true},"created":"2006-08-07T08:32:41.000+0000","updated":"2006-08-07T08:32:41.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12456126","id":"12456126","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Move to 10.2.3.0.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2006-12-06T17:31:43.000+0000","updated":"2006-12-06T17:31:43.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12467564","id":"12467564","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fuzzylogic","name":"fuzzylogic","emailAddress":"mcintyre dot a at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andrew McIntyre","active":true},"body":"Unsetting Fix Version for unassigned issues.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fuzzylogic","name":"fuzzylogic","emailAddress":"mcintyre dot a at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andrew McIntyre","active":true},"created":"2007-01-25T20:36:44.544+0000","updated":"2007-01-25T20:36:44.544+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12482927","id":"12482927","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"I took a quick  looks at fixes for  LUCENE-305 and LUCENE-635  , which are fixed now.   I did not see any code that is attempting to solve  locking  within a jvm  across class loaders boundaries.   May be I am missing something ! \r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-03-21T21:47:09.778+0000","updated":"2007-03-21T21:47:09.778+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12483798","id":"12483798","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"There  does not seem to be any  way to get process id info that can be used to fix this problem. Existing JVM enhancement requests  filed  to get process id info:\r\n \r\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4250622\r\nhttp://bugs.sun.com/bugdatabase/view_bug.do;jsessionid=7c75c6fc92c662c739fb11f620a4:YfiG?bug_id=4244896\r\n\r\nIt was interesting to  reade these reports, other developers are finding it hard to generate unique id across jvms!\r\n \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-03-23T23:55:06.604+0000","updated":"2007-03-23T23:55:06.604+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12484513","id":"12484513","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Here is a description of a possible solution - any feedback is appreciated:\r\n\r\nI would like to see some solution to DERBY-700 go into the 10.3 release, as it is too easy currently for users to access their same database from 2 different classloaders in the same JVM and corrupt their database.\r\n\r\nLet me try to explain the problem again.  Derby protects multiple thread\r\naccess to databases using in memory locking.  Any situation where 2 instances of Derby can access the same on disk database but not coordinate through the same in-memory locking scheme creates a situation\r\nthat can lead to log/data corruption.\r\n\r\nDerby coordinates access to an ondisk database using a 2 level per db\r\nlocking scheme.  The following is high level and probably misses some\r\ndetail.\r\n\r\n1) first it obtains what I refer to as an OS file lock, this is not a java defined mechanism. It depends on an OS specific behavior that it\r\nis not possible to delete a file on some OS's if the file is still open\r\n(the most common OS where this is true are I believe all window's\r\nOS's 98, NT, 2000, xp, ...).\r\n    A)  If lock file does not exist we open it and leave it open --> lock granted\r\n    B) If lock file does exist we try to delete it, if we can then\r\n       we go back to A.  If we can't we assume file is locked and\r\n       give up.\r\n\r\n2) The second level is that we use java base file locking.  This only\r\n   became available in 1.4.2 and later jvm's.  This does standard locking and automatically takes care of releasing lock if JVM goes\r\naway.\r\n\r\nWe kept both steps, even though it seems that step 2 is sufficient to\r\nprovide backward compatible protection.   So anyone running on a JVM\r\nprior to 1.4.2 on a windows platform would still be protected.  The\r\npre-derby code base also had to worry about protecting access against\r\nversions of the code that did not have step 2 implemented.\r\n\r\nThe problem is that in cases where derby is run in 2 class loaders in\r\nthe same jvm the step 2 file locking does not work.  It is meant only\r\nto protect threads in different JVMS, so it provides no help in preventing access from 2 different class loaders in the same JVM.  It\r\nturns out that step 1 on windows system solves the locking problem\r\non windows systems for multiple class loaders also.\r\n\r\nSo a solution should provide 2 things:\r\n1) prevent access from another classloader in the same JVM\r\n2) not allow false positives.  So for instance a standard \"lock file\" could be used on unix systems, creating it and when one boots check\r\nfor existence of the lock file and give up if it exists.  The problem\r\nis that it is very easy to cause a JVM to exit without properly cleaning\r\nthe lock file and thus one would get into situation where user may have\r\nto clean lock files by hand.\r\n\r\nHere is my current proposal, but I really don't like it -- I am hoping someone out there can come up with something better.\r\n\r\no keep the step 1 and step 2 locking as described above.  It solves cross JVM locking completely.\r\no create a step 3 locking step, the only purpose is to recognize situations step 1 and 2 can't.\r\no use simple file system lock file to implement step 3 locking:\r\n    A) on db boot if no lock file exists, create it and put a timestamp in the file.  This db boot is responsible for updating that timestamp\r\nevery N seconds, for this we need to come up with a guaranteed executing background thread - there are known problems with current background thread, and long checkpoints for instance.  On shutdown of db we delete lock file.\r\n    B) on db boot if lock file exists we open it, and get the timestamp and compare it with the current timestamp.  If the difference is greater\r\nthan N we assume the lock file has been left around incorrectly and we\r\ndelete the file and go to A (or just open it and update it with our\r\ncurrent timestamp).  It probably is worth logging this event in derby.log.\r\n\r\nOne nice thing about the above solution is that I think it also solves\r\nour problem with muliple machines accessing the same disk (as long as\r\ntheir timestamps are the same or close).  I think we can pick a large N\r\nas this should be an error case (ie. the purpose of N is to catch the\r\ncase where a classloader went away without allowing us to clean up - I don't know classloader stuff to know how likely this is), but it is probably worth making it\r\nconfigurable so we could adjust in the field if necessary.\r\n\r\nI really don't like forcing Derby to run a job every N seconds.  It could be hard to explain to users why derby is doing work every N\r\nseconds even when nothing else is happening.  I worked on a different\r\nproduct a long time ago that required us to maintain our own timer for use in scheduling waits and users noticed and complained such that we\r\nhad to add a backoff mechanism based on the amount of work being done\r\njust so the process would not show up at a steady 1% (or whatever) on\r\nthere process status monitors.  Now that timer was a lot shorter than\r\nseconds so it may not be an issue.\r\n\r\nSome extensions I considered:\r\n1) come up with a unique ID that is specific to a JVM and can be queried by any thread in any classloader in the JVM.  If we had that then we could write that value into the step 3 lock file and we know that if we\r\nopened the file and saw a different ID, the lock file was invalid.  If\r\nwe did this then we narrow the chance of a false positive but we eliminate the chance to catch cross machine access.\r\n\r\n2) Have the opener db log some unique id specific to it in addition to the timestamp, maybe this is just the first timestamp of the open.  Then it could at least tell the next time if another\r\nclass loader had incorrectly started, and throw/log some error so we\r\ncould catch this problem.\r\n\r\n3) maybe the value of N should be logged in the file, I think it has to\r\n   be if we allow it to be configurable.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2007-03-27T17:35:46.010+0000","updated":"2007-03-27T17:35:46.010+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12484550","id":"12484550","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"While reading comments for this issue yet again, noticed Rick mentioned long\r\ntime ago , it might be possible to make Derby jdbc driver hold a state that \r\nis global to jvm, not specific to a class loader.  Is that how it really works\r\neven if the user loads the driver using class loaders ? \r\n\r\nBasically , is it possible to make  org.apache.derby.jdbc.EmbeddedDriver.java \r\nstatically initialize an JVMID(a UUID) that can be accessed from any class loader ?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-03-27T19:11:51.303+0000","updated":"2007-03-27T19:11:51.303+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12484562","id":"12484562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"With respect to a global state in the jdbc driver when 2 class loaders are involved, how would that work with 2 different class loaders trying to run 2 different versions of derby - say 10.3 and 10.4.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2007-03-27T19:36:20.539+0000","updated":"2007-03-27T19:36:20.539+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12484565","id":"12484565","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"if you alluding to this comment:\r\n\r\n rick> One Derby object that's global across the VM is the Derby driver registered with the DriverManager.\r\n\r\nthen I think that is false. Derby will have multiple drivers registered, one per classloader that booted derby.\r\n(see comments for DERBY-1228 or java.sql.DriverManager documentation)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-03-27T19:50:33.878+0000","updated":"2007-03-27T19:50:33.878+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12484586","id":"12484586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Thanks  for confirming , Dan.   I was referring to the commnet you noted.  Looks like there is  NO way to maintain an in-memory state that is  global to JVM  across class loader , other than using  a system property.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-03-27T20:54:09.136+0000","updated":"2007-03-27T20:54:09.136+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12484998","id":"12484998","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Thanks a lot for summarizing the problems and possible solutions \r\nfor this issue, Mike. I think the timer base solution you mentioned\r\nmight work, but I am not comfortable with a timer based solution. As you\r\nmentioned, users might complain about the background writes, and also \r\nI think  configuring N to the right value to differentiate false \r\nnegatives/positives boots going to be hard. It will depend on the load \r\nand the machine configuration (no of cpus ) ..etc.\r\n\r\nI was trying to find alternative solutions, without much success. Only\r\nsolution I could come up with involves using a system property. I \r\nunderstand, earlier we discussed using the system properties and it was \r\ndecided as not a such a good idea. But considering there are NO other \r\nbetter solutions found for this problem, so far. I was think having one \r\nproperty to maintain a JVMID may not be so bad, user just need to give \r\nsecurity permission to set one property, i.e  if what I \r\ndescribe below actually works!\r\n\r\nI would really appreciate  any  suggestions/feedback  for this solution . \r\n\r\nMy understanding is a solution to this problem need to solve primarily \r\nfollowing three issues:\r\n\r\n1) Maintaining a state that a database is already booted, if the database\r\n   if booted successfully. \r\n2) Change the state to NOT_BOOTED, if it is not booted any more because of  a\r\n    a) Shutdown of the database\r\n    b) Class loader that booted the db is garbage collected.\r\n    c) JVM exited. \r\n \r\n3) synchronization across class loaders. \r\n\r\nPseudo code below that attempts to solve this problems by making the \r\nfollowing Assumptions :\r\n\r\n 1) It is ok to use ONE  system property  \"derby.storage.jvmid\" to identify \r\n     a jvm instance id. \r\n 2) It is ok to use interned strings to synchronize across class loader. \r\n 3) It is ok to call getCanonicalPath(), i think this may require permission \r\n    for \"user.dir\" property if it is not already required. Other solution\r\n    may be to assign an ID string on create of the DB and user that for \r\n    DB level synchronization. \r\n 4) It is ok to rely on the class finalizer to cleanup db lock state, \r\n    when the database  is NOT any more because the loader that booted \r\n    the database is garbage  collected. \r\n\r\n\r\n/*\r\nPseudo code to lock the DB to prevent multiple instance of a database running \r\nconcurrently through class loaders in a single instance of jvm or\r\nmultiple instance of jvm.   \r\n\r\nNote: Following code class is in a separate class just to understand it \r\nas separate issue , this code should probably go into the \r\ndataFactory class where current db-locking is done. \r\n*/\r\nClass DbLock {\r\n\r\n    private static final String DERYB_JVM_ID  = \"derby.storage.jvmid\";\r\n    private String dbCannonicalPath;   // canonical of the db being booted.\r\n    private FileLock fileLock  = null;\r\n    private boolean dbLocked = false;\r\n\r\n    DbLock (String dbCannonicalPath) {\r\n        this.dbCannonicalPath = dbCannonicalPath;\r\n    }\r\n\r\n    /* \r\n     * get a unique JVM ID \r\n     */\r\n    private getJvmId () {\r\n        // synchronize across class loaders.\r\n        synchronize(DERYB_JVM_ID) {\r\n\r\n            jvmid = System.getProperty(DERYB_JVM_ID);\r\n            // if jvm id is not already exist, generate one \r\n            // and save it into the \"derby.storage.jvmid\" system\r\n            // property.\r\n            if (jvmid == null) {\r\n                //generate a new UUID based on the time and IP ..etc. \r\n                jvmid = generateJvmId() \r\n                    System.setProperty(\"derby.storage.jvmid\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     *  Lock the db,  so that other class loader or\r\n     *  another jvm won't be able to boot the same database.\r\n     */\r\n    public lock_db_onboot(String dbCannonicalPath)  {\r\n\r\n         // Get a file Lock on boot() ; // this already works \r\n         fileLock = getFileLock(\"dbex.lck\");\r\n         if (lock == null) {\r\n             // if we don't get lock means , some other jvm already \r\n             // booted it throws  ALREADY_BOOTED error.\r\n             throw ALREADY_BOOTED;\r\n         } else {\r\n\r\n             // file lock can be acquired even if the database is already \r\n             // booted by a different class loader. Check if another class \r\n             // loader has booted  the DB.  This is done by checking the \r\n             // JVMID written in the dbex.lck  file. If the JVMID is same \r\n             // as what is stored in the system property,\r\n             // then database is already booted , throw the error. \r\n             currentJvmId =  getJvmId();\r\n             synchronize(dbCannonicalPath) {\r\n                 onDisk_JVM_ID = readIdFromDisk() ; // read ID from the dbex.lck file.\r\n                 if (OnDisk_JVM_ID == current_jvm_id ) \r\n                     throw (\"DATABASE IS ALREADY BOOTED\");  \r\n                 else{\r\n                     dbLocked = true;\r\n                     writeId(currentJvmId);  //update the dbex.lck file) . \r\n                 }\r\n             }\r\n         }\r\n    }\r\n\r\n\r\n\r\n    /*\r\n     * Called on shutdown/garbage collection. \r\n     */ \r\n    unlock_db() {\r\n        if (dbLocked) {\r\n            Strinng Ondisk_jvm_id =  \"-1\";  //jvm id should never have been a -1.\r\n            synchronize(dbCannonicalPath) {\r\n                writeIdToDisk(Ondisk_jvm_id);  //update the dbex.lck file) . \r\n            }\r\n            releaseFileLock(fileLock);\r\n            dbLocked =  false;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     * if the db is not shutdown, this method should release \r\n     * the  db lock related resources during this class finalization.\r\n     */\r\n    protected void finalize() throws Throwable \r\n    {\r\n        unlock_db();\r\n    }\r\n}\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-03-28T21:30:17.421+0000","updated":"2007-03-28T21:30:17.421+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12496538","id":"12496538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Test to parallely boot the database using multiple threads in different class loaders might fail\r\nwith NPE if DERBY-2649 is not fixed. Tempory workaround is to check for null in DirFile.java:deleteAll(). \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-05-17T11:29:14.460+0000","updated":"2007-05-17T11:29:14.460+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12496541","id":"12496541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Attached is a patch with partial implementation of  the intra-jvm db \r\nlock mechanism to prevent users from running multiple instances of the same\r\ndatabase using different class loaders in the same jvm. Existing \r\nsolution already prevents users from running multiple instances across jvms.\r\n\r\nAlthough I have not assigned this issue to myself, have been working on this\r\nissue on/off for some time. But I don't have free cycles to work on this bug for \r\nthe upcoming release. I am posting the patch with whatever work I have done\r\nsofar. If some one can enhance the attached patch and fix this issue, \r\nthat will be great.\r\n\r\nIntra-jvm db lock is provided by using global derby specific jvm instance id.\r\nOn a first boot of any derby database in a jvm, an UUID is generated and \r\nstored in a system property (\"derby.storage.jvmInstanceID\"). This id is written \r\nto the dbex.lck file when the database is booted. If the ID in the dbex.lck file \r\nand the current jvm id stored in the system property\r\n\"derby.storage.jvmInstanceID\" are same then the database is already booted, and \r\nan exception will be thrown and database will not be booted. On a database\r\nshutdown , an Invalid JVM id is written to the dbex.lck file, so that if the \r\ndatabase booted again ID's will not be equal, which means database is not\r\nalready booted, the database will be booted successfully. I am using the \r\nexisting UUID factory in the derby to generate the derby jvm id.\r\n\r\nSynchronization is done by using the interned strings. Synchronization \r\nacross the JVM is done on \"derby.storage.jvmInstanceID\" string. And \r\nSynchronization for a database is done on the database directory. This \r\nmay need to be changed to a database name, because it may not be possible \r\nto get the canonical path always and it is necessary to synchronize on \r\na  string, that is unique to a database in a jvm. \r\n \r\n\r\nIn my earlier proposed solution I mentioned about releasing the db \r\nlocks using finalizer. After doing some testing , I realized there is \r\nno need to address unlocking the database on garbage collection, \r\nusing the finalizer. My understanding is unless users shutdown \r\nthe database rawStoreDaemon and antiGC thread will hold on to the \r\nresources and the classes will not be unloaded. So the only way users\r\ncan boot an already booted database but not in use using another class \r\nloader instance in the same jvm is by doing a shutdown from the class \r\nloader that booted the database. If some thinks this is not \r\ntrue,  please correct me. \r\n\r\nTo do :\r\n\r\n1) cleanup error handling on IOExceptions and add new message for the \r\n   intra-jvm db lock. \r\n\r\n2) Currently dataDirectory path string is is used for  synchronization to \r\n   prevent multiple boots of a database. This may need to be changed to \r\n   the db name.\r\n\r\n3) Make the classLoaderBootTest.java run under security manager. \r\n\r\n4)  Add test cases for booting different databases parallelly on different \r\n    threads with different class loaders. May not be really required , because\r\n    even booting a single database through different threads shoud test \r\n    the same thing. But it may be better to add a test case, just to be safe!\r\n \r\n\r\n5) Run the test with large number of threads.\r\n\r\n6) Anything else I have forgotten !\r\n  \r\n \r\nThanks \r\n-suresh\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-05-17T11:54:44.443+0000","updated":"2007-05-17T11:54:44.443+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12498037","id":"12498037","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Suresh for the patch!  I was wondering, why do we need  setContextClassLoader privileges for derby.jar with the change?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-05-22T22:22:17.799+0000","updated":"2007-05-22T22:22:17.799+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12498050","id":"12498050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"[ Show » ] Kathey Marsden [22/May/07 03:22 PM] Thanks Suresh for the patch! I was wondering, why do we need \r\nsetContextClassLoader privileges for derby.jar with the change? \r\n\r\nI must have added that permission while debugging to run the test under security manager. \r\nOnly security permission that is required for derby.jar  is read/write  of derby.storage.jvmInstanceID \r\nproperty.\r\n\r\nThanks for for volunteering to fix the bug, Kathey.\r\n.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-05-22T23:00:04.873+0000","updated":"2007-05-22T23:00:04.873+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12499134","id":"12499134","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Suresh said\r\n\r\n>2) Currently dataDirectory path string is is used for synchronization to\r\n>   prevent multiple boots of a database. This may need to be changed to\r\n>   the db name.\r\n\r\nWhy does this need to be changed?  If we switched to databaseName might there be potential for duplicate database names?  The dataDirectory  path seems logical to me.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-05-25T16:11:41.641+0000","updated":"2007-05-25T16:11:41.641+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12499137","id":"12499137","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"The issue with the path is that the canonical path would be needed which requires permission to read system property user.dir, which might not be granted.\r\nThe base name of the path (\"database name\") is easy to obtain and works just as well. The synchronization on this object is very short lived, thus it does not stop two databases with the same name but different paths from booting.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-05-25T16:18:39.869+0000","updated":"2007-05-25T16:18:39.869+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12499894","id":"12499894","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"This patch is not yet ready for commit.  The multithreaded test testBootingDatabaseInMultipleThread fails intermittently allowing the database to be booted  twice.  I am looking to see where there may be a synchronization issue.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-05-29T19:16:00.151+0000","updated":"2007-05-29T19:16:00.151+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12499906","id":"12499906","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"When the multithreaded failure occurs there is an NPE accessing the lockfile.  Attaching the derby.log.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-05-29T20:04:48.651+0000","updated":"2007-05-29T20:04:48.651+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12500202","id":"12500202","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is a patch that fixes the NPE, but there are still issues with the multithreaded test.  Sometimes with 9 or more threads in startConcurrentDatabaseBoots we get dual boot without any message to the derby.log.   I think there is one of two issues here:\r\n\r\n1) There is no synchronization across classloaders, so even though we synchronize on the databaseName() it is not useful when two threads from different ClassLoaders come into the synchronized code.\r\n\r\n2) Since getting the exFileLock is not within the synchronized code.  It is possible that the state of the dbex.lck file on disk changes before the boot.\r\n\r\nI am not sure how to resolve these issues, especially 1.  I'd appreciate any advice on the issue.\r\n\r\nThanks\r\n\r\nKathey\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-05-30T17:51:20.698+0000","updated":"2007-05-30T17:51:20.698+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12501283","id":"12501283","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Originally I thought I would make read/write access to the property mandatory but since policy files typically have to be changed out at the deployed site,  I think I will make it so it just prints a warning if access is not granted for the property.\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-04T17:23:06.310+0000","updated":"2007-06-04T17:23:06.310+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12502063","id":"12502063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"keep in mind that if we make setting/reading the property optional it presents a very mixed set of possiblities.  We need to at least document and maybe refer to them in the error message.  Each derby.jar in each different class loader may have a different property set so one set may be able to read but not write, another can't read or write, and another can read and write.  Some app may get different locking behaviors if they can read by not write based on whether they are the first one in or not ( they sometimes may get error message and sometimes not based on what someone else has done).\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2007-06-06T19:45:57.861+0000","updated":"2007-06-06T19:45:57.861+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12502563","id":"12502563","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is the latest patch for this issue.  I think we are getting close, but I have reached a sticking point that I can't seem to get past.  \r\n\r\nIf I run with classes or even with jars from within Eclipse, it all runs fine and even 100 threads pass with no problem.  But for some unknown reason, when I run with jars from the commandline, it allows dual boot.  \r\n\r\nThe primary change from the last patch is that I had to synchronize the entire call to privGetJBMSLockOnDB() to avoid intermittent dual boot failures in the multiThreaded test.\r\n\r\nI also added a warning instead of failure if the user did not have permission to access the system property.\r\n\r\nAnyway, if someone is so inclined it would be great to have another pair of eyes on this to figure out what the problem is running with jars.\r\nI ran derbyall and suites.All. All passed with classes, but with jars ClassLoaderBootTest fails miserably.\r\n\r\nKathey\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-07T23:04:37.521+0000","updated":"2007-06-07T23:04:37.521+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12502848","id":"12502848","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Run without security manager the test passes with jars.  So I will try to figure out what permission is missing/needed with jars.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-08T15:44:20.117+0000","updated":"2007-06-08T15:44:20.117+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12503950","id":"12503950","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I have been unable to figure out exactly what the permission issue is when running with security manager and jars.  I did find that it was corrected by giving AllPermissions to derbyTesting.jar.  I am thinking therfore that the issue is with the test and not the change itself.  I would like to go ahead and checkin the change, disabling security manager for the jars and file another issue to correct that problem.   Reviews welcome and let me  know if anyone has objections to going ahead and checking in the change.  Substantive changes from the initial patch are:\r\n- Fix intermittent NPE \r\n- Fix problem with dual boot with many threads, by expanding the synchronization to include the full privJBMSLockOnDB\r\n- Log  warning not fail if System Property permission is not granted instead of failing.\r\n\r\nKathey\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-12T18:16:38.585+0000","updated":"2007-06-12T18:16:38.585+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12503967","id":"12503967","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"From a very quick look at the code two things jumped out at me:\r\n\r\n1) Why does the test need a Derby specific class loader? The upgrade tests don't and there are performing the same style of operation.\r\n\r\n2) The new method StorageFile.getLockedFile() is part of the api so its definition needs to be clear.\r\n\r\n  2a) In the interface it says it returns the file for the lock file, but I don't think lock file is defined anywhere in the interface description.\r\n  2b) The interface doesn't indicate it can return null, but one implementation of it does.\r\n  2c) Why is this method on StorageFile, it's not an attribute of a specific file, at least I don;t think it is. Is there a lock file per open file?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-12T19:05:36.497+0000","updated":"2007-06-12T19:05:36.497+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504352","id":"12504352","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Dan for the comment.\r\n\r\ngetExclusiveLock()  and getLockedFile() are only substatively relevant to DirFile4 and for that file yes, I think there is a lock file per open file.   I will change the definition to say that getLockedFile()  will return a RandomAcess file to the lock file obtained by getExcluciveLock()  if an exclusive lock was successfully obtained with getExclusiveLock() otherwise it will return null.\r\n\r\nDoes that sound right?\r\n\r\nI'll look at the test.  Maybe I will fix it post checkin if I am not able to get it fixed up today.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-13T17:49:19.259+0000","updated":"2007-06-13T17:49:19.259+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504386","id":"12504386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Applications will need to set a new permission in their policy file.  So this will affect existing applications and release note is needed.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-13T19:34:29.521+0000","updated":"2007-06-13T19:34:29.521+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504389","id":"12504389","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"release note","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-13T19:47:25.064+0000","updated":"2007-06-13T19:47:25.064+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504446","id":"12504446","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"> I think there is a lock file per open file. I will change the definition to say that getLockedFile() will return a RandomAcess file to the lock file obtained by getExcluciveLock() if an exclusive lock was successfully obtained with getExclusiveLock() otherwise it will return null. \r\n\r\nSorry, still somewhat lost. Why is a call to get a random access file on StorageFile needed since it already has such a method?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-13T21:49:01.096+0000","updated":"2007-06-13T21:49:01.096+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504471","id":"12504471","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"-1 on this patch (now applied as 547042 & 547046):\r\n\r\n The additional method on StorageFile is not well defined.\r\n\r\n  StorageFile.getExclusiveFileLock() indicates it gets an exclusive lock on the name represented by StorageFile.\r\n\r\n The new method StorageFile.getLockedFile() seems to imply that if a StorageFile is locked, then there is a new\r\n  different file created to perform the lock, thus one can modify the contents of the two files independently,\r\n  using the existing StorageFile.getRandomAccessFile() and now the new StorageFile.getLockedFile().\r\n  (Otherwise why have the new method, one can already get a random access to a StorageFile??).\r\n\r\n  This seems problematic for a few reasons:\r\n    - seems inefficient, creating a new file to lock another\r\n    - seems to change the contract of the existing method getExclusiveFileLock() (no mention of requiring a separate file)\r\n    - possibly hard to implement for an arbitary IO implementation.\r\n\r\n   Maybe though I'm misunderstanding what is going on, the javadoc comment for getLockedFile() does seem to have\r\na couple of typos in it (e.g. \"exclusing e lock\"). If there's some good explanation for what is going on and the relationship\r\nbetween StorageFile.getLockedFile() and StorageFile.getRandomAccessFile() can be well defined then I can frop my veto.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-13T23:02:31.667+0000","updated":"2007-06-13T23:02:31.667+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504721","id":"12504721","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Note I'm reviewing the patch called; derby-700_06_07_07_diff.txt \r\nComments on 6/12 seem to indicate a new patch for review but nothing seems to have been attached that day, I think those comments are about the previous version.\r\n\r\nSome comments on the patch:\r\n\r\n- In getIntraJvmDbLock() there is this comment:\r\n   +        // synchronizing across the same database, by using interned \r\n   +        // version of the database name\r\n\r\n  but I can't see any synchronization.  It seems the synchronization has moved to wrap the entire call to privGetJBMSLockOnDB().\r\n  Since this synchronization is key it would be good to get the comments clear so that future readers can understand how this works.\r\n  Also I think putting the synchronization in the privGetJBMSLockOnDB() method would be much clearer than hiding it in the run() method.\r\n  I see the comment above indicating the synchronization was expanded to be the full privGetJBMSLockOnDB() method, but there is\r\n  no reason given. Can you share your thoughts on why this is required?\r\n\r\n- the synchronization for getting the intra jvm lock and releasing it are using different objects. Don't they need to use the same object?\r\n  If not it should be clearly commented how the synchronization is working.\r\n\r\n- In getIntraJvmDbLock() and releaseIntraJvmDbLock() the StorageAccessFile lckFileRaf is never closed, I think it needs to be or have comments indicating why it is not closed. Maybe it's related to the issue of the new method added to StorageFile??\r\n\r\n- In releaseIntraJvmDbLock() I was a little unclear by the invalid uuid concept. Is it an invalid uuid such that recreateUUID will throw an exception in getIntraJvmDbLock() or is it a valid representation of a uuid that can never be created by Derby?\r\n\r\n- Using dataDirectory.intern() to synchronize across class loaders in  releaseIntraJvmDbLock() could probably use more comments, basically describing what guarantees that all derby systems have the same path for the data directory for a given database?\r\n\r\nThanks for working on this, it will help stop users corrupting their own databases.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-14T13:25:26.343+0000","updated":"2007-06-14T13:25:26.343+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504735","id":"12504735","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Couple of minor additonal comments:\r\n\r\n - The code would be a little simpler if getJvmId() just returned a String instead of a UUID. Then there's no need to convert\r\n    the value read back from disk to a uuid. String's compare just as well as UUIDs for this purpose.\r\n\r\n- The reading of the on-disk identifier has this code:\r\n\r\n+            try \r\n+            {\r\n+                if (exFileLock.length() != 0)\r\n+                    onDiskJvmId = uuidFactory.recreateUUID(lckFileRaf.readUTF());\r\n+            }   \r\n+            catch (Exception e)\r\n+            {\r\n+                // The previous owner of the lock may have died before we\r\n+                // finish writing its UUID down. Assume uuid file is invalid\r\n+                // Set the id on the disk to null value.\r\n+                onDiskJvmId = null;\r\n+            }\r\n\r\n\r\n  - Why is the file length of zero special cased?\r\n\r\n  - I think the comment could be improved to\r\n\r\n+                // The previous owner of the lock may have died before we\r\n+                // finish writing its UUID down. Assume uuid file is invalid\r\n+                // and thus the database is not in use (locked).\r\n\r\n  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-14T13:40:28.743+0000","updated":"2007-06-14T13:40:28.743+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504896","id":"12504896","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Dan I would like to understand your concerns with respect to the locking interfaces on StorageFile.    We are only going to call locking on the lock files, not on other RandomAccessFiles.  The current code is using the exising RandomAccessFile support\r\nto do this - do you think we should be creating a different type of file rather than putting the interfaces on StorageFile?\r\n\r\nI agree the comments could be improved, and I guess since we are so close to a release it is better to get it right before checkin.  I was ok before with checking it in as it was and then fixing in subsequent checkin (I was planning on helping with this once code got in, instead of a patch).  \r\n\r\nAt this point it looks like this won't make it into first release candidate, but I plan on helping to get this to a good state  for a subsequent release candidate or at least get it into the branch for anyone who wants it if we don't have another release candidate.  I would not hold up release candidate for this.  I think it is reasonable to get the documentation for the requested permission into the release even if we can't get the code in this week, is that a problem?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2007-06-14T20:14:46.157+0000","updated":"2007-06-14T20:14:46.157+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504902","id":"12504902","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Simple question is why is a new method needed on StorageFile. Since one can already get an object to perform random access i/o on a StorageFile, why is a new method needed to perform the same functionality.\r\n\r\nEither it is because for some reason the api requires the lock files hold different contents to the file being locked. I don't think this is the case.\r\n\r\nOr it is because it's not needed. I think this is the case, but there must have been some reason for adding it. I'm just asking what is the reason for adding such a method.\r\n\r\nI think we are creating a StorageFile to represent \"dbex.lck\" (whatever the name is) and then locking that file. That's all good, but why can we not modify that file using the existing methods on StorageFactory?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-14T20:38:36.176+0000","updated":"2007-06-14T20:38:36.176+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12504943","id":"12504943","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"I agree with Dan,  getLockedFile() is confusing and should not be added \r\nto the storage factory interfaces , if it can be avoided or  have better \r\ncomments.\r\n \r\nJust thought I will take a moment and explain, why in the first place \r\nI added this method, I hope it will help in finding an alternative solution \r\nor make the interface better. \r\n\r\nI was testing and developing  my solution on Windows. When I \r\nfirst implemented without adding the getLockedFile() method, by\r\njust getting the RandomAccessFile using StorageFile.getRandomAccessFile(), \r\nafter it is locked. I was hitting the error , java.io.IOException: \r\n\"\r\nThe process cannot access the file because another process has locked a \r\nportion of the file. When it write UUID to the dbex.lck file. \r\n\"\r\n\r\nAfter bit of debugging realized , I need access to the same \r\nRandomAccesFile, that is used to the get the lock. So I simply\r\nadded the getLockedFile, which just return the same RandomAccessFile, \r\nthat is used to get the file lock.  \r\n\r\n\r\npublic class writeLock {\r\n\tpublic static void main(String[] args) throws Exception \r\n\t{\r\n        File lf = new File(\"dbex.lck\");\r\n        RandomAccessFile raf1 = new RandomAccessFile(lf, \"rw\");\r\n        FileChannel fc = raf1.getChannel();\r\n        FileLock lock = fc.tryLock();\r\n\r\n        // attempt to write to locked file using another\r\n        //\r\n        RandomAccessFile raf2 =  new RandomAccessFile(lf , \"rw\");\r\n        // the following write is failing on windows.\r\n        raf2.writeChars(\"Derby is great \");\r\n    }\r\n}\r\n\r\nFor example , in the above code. Last write will fail with the error:\r\nException in thread \"main\" java.io.IOException: The process cannot access the \r\nfile because another process has locked a portion of the file. \r\n\r\nI did not verify, if this is the case in the non-window environment too. This\r\nfix is mainly  for non-window environment, so If on other platforms this is \r\nnot issue then  the getLockedFile() can be replaced with the \r\nStorageFile.getRandomAccesFile(). My concern is, How to confirm all \r\nnon-window environments will not give the above error. \r\n\r\nFirst I thought of   putting the new intraJVM lock code in the storage\r\nfactory, where getExclusiveFileLock() is implemented, For me \r\nIt looked worse alternative too  getLockedFile() method, because then \r\ngetExlusiveFileLock() method semantics gets more confusing. \r\n\r\nAnother solution I was thinking that may work without adding the \r\n*getLockedFile() is  to use the range lock. like FileLock lock = \r\nfc.tryLock(0, 10 ,false), and write to the file after the 10th byte. \r\nThis may need a new method getExclusiveLock() , which takes range.\r\n\r\nMay be simple solution is to add a new call, getExclusiveFileLock() \r\nmethod that takes RandomAcceesFile as the argument.\r\n\r\nTo start with the reason we are in this mess is the getExclusiveLock() \r\nimplementation is not matching the way java interfaces work. Ideally \r\nstore code should hold on to the RandomAccessFile used for the lock,\r\nnot the storage factory implementraion. Ideally StorageRandomAccessFile \r\nshould give handle to the StorageFileChannel, which has the tryLock() \r\nmethod, that returns FileLock.  \r\n\r\n\r\nThanks\r\n-suresh\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2007-06-14T22:11:00.380+0000","updated":"2007-06-14T22:11:00.380+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12505310","id":"12505310","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Dan, based on what Suresh said, does the solution to add a new call, getExclusiveFileLock()\r\nmethod that takes RandomAcceesFile as the argument seem like a reasonable solution to get rid of getLockedFile or should we just document getLockedFile better, or something else ...?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-15T17:04:42.431+0000","updated":"2007-06-15T17:04:42.431+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12505330","id":"12505330","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Thanks Suresh, that was very useful. The piece of missing information for me was that on windows one can only have one open descriptor against a locked file (from Suresh's description).\r\n\r\nSo really this method was added because the existing (pre-patch)  *implementation* of StorageFile does *not* honour the contract of StorageFile. This is because with this implementation (on some platforms) if StorageFile.getExclusiveFileLock() is called then StorageFile.getRandomAccessFile() does *not* return an object that can be used to modify the file.\r\n\r\nIn fact looking at the DirFile implementation it seems the file locking implementation is not what a reader of the IO api (the javadoc for StorageFile) might expect. I read the StorageFile javadoc and expect that getExclusiveFileLock() puts a lock on the file, I can then use it as a regular file and then release the lock. Then another thread/jvm could perform the same action and we would have normal file locking sematics. That's why the change confused me, because I was expecting certain behaviour based upon the contract of StorageFile.\r\n\r\nBut the DirFile/DirFile4 implementations are not that and are not even identical to each other (in terms of visible behaviour).\r\n\r\n  -  DirFile Calling getExclusiveFileLock() deletes the file if it exists and then creates it\r\n   - DirFile4 Creates the file and writes four bytes into it.\r\n\r\n  - Once a storage file is locked, it can not be used as a regular file\r\n  - releasing the lock deletes the file(!!)\r\n\r\nI can see why all of this is done, it's for a specific purpose for locking Derby databases, but I don't think anyone would expect either\r\nof those implementations from reading the api. \r\n\r\nThus I think first the StorageFile javadoc should be changed to describe the behaviour implemented (since it's all that is required by Derby today).\r\nI think the generalities of it are:\r\n    - Any StorageFile that has getExclusiveFileLock() called on it is not intended to be read from or written to. It's sole purpose is to provide\r\n      a locked entity to avoid multiple instances of Derby accessing the same database.\r\n    - getExclusiveFileLock() may delete or overwrite any existing file\r\n    - releaseExclusiveFileLock() may delete the file\r\n\r\nThen I wonder if this new locking mechanism for intra-jvm locks should be contained within the DirFile4 StorageFile implementation.\r\nThe code is completly reliant on that implementation, so why not enclose it? Then there would be no need to change the StorageFactory interface (after from the comments clarifying behaviour).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-15T17:53:53.298+0000","updated":"2007-06-15T17:53:53.298+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12505499","id":"12505499","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Scrubbing release note so that it can be digested by the SAX parser in the release note generator. Naked <br> tags replaced with <br/>.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2007-06-16T17:36:57.279+0000","updated":"2007-06-16T17:36:57.279+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12505957","id":"12505957","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I am working to move the intraJVM lock into StorageFile, getExclusiveLock()/ releaseExclusiveLock, but I wanted to comment on why I expanded the synchronization to include all of privGetJBMSLockOnDB as I think that will still be required.\r\n\r\nI found running the test with multiple threads that I would get occasional dual boot without any error message or warning with the original patch.  I expanded the synchronization and found that it corrected the problem.  I think there seems to be a window where two threads can get in and create or delete the lock file at the same time, e.g. \r\n              if (fileLock.exists())\r\n                {\r\n                ...\r\n                 ----> Another thread gets in and deletes the file here\r\n\r\nI am not totally sure that this is the hole and since this logic would remain in BaseDataFileFactory we would still need to synchronize on the interned databaseName there.   I am sure however that it works with the expanded synchronization but does not without it.  \r\n\r\n\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-18T21:10:29.704+0000","updated":"2007-06-18T21:10:29.704+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12505976","id":"12505976","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"If I try to keep the interface the same and incorporate the intrajvm lock into getExclusiveLock() I  will lose granularity in the error message.  With the previous patch, we had a separate intrajvm dual boot messages as well as a warning if the property was not writable.  Should I add two new return possibilities from getExclusiveLock to handle these cases?\r\n\r\nKathey\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-18T23:03:07.299+0000","updated":"2007-06-18T23:03:07.299+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12505980","id":"12505980","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Could the problem (needing to expand) with the synchronization be related to question I raised earlier?\r\n\r\n>> - the synchronization for getting the intra jvm lock and releasing it are using different objects. Don't they need to use the same object?\r\n>>   If not it should be clearly commented how the synchronization is working.\r\n\r\nIn the comment above, I'm not sure which piece of code you are referring to here?\r\n\r\n              if (fileLock.exists())\r\n                {\r\n                ...\r\n                 ----> Another thread gets in and deletes the file here ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-18T23:53:59.195+0000","updated":"2007-06-18T23:53:59.195+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12506228","id":"12506228","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Dan asked:\r\n>Could the problem (needing to expand) with the synchronization be related to question I raised earlier?\r\n\r\n>> - the synchronization for getting the intra jvm lock and releasing it are using different objects. Don't they need to use the same object?\r\n\r\nNo even with that corrected the test still fails with only putting synchronization on getIntraJVMDBLock()\r\n\r\nIn the comment above, I'm not sure which piece of code you are referring to here?\r\n\r\nThis is from privGetJBMSLockOnDB()","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-19T16:08:52.366+0000","updated":"2007-06-19T16:08:52.366+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12506290","id":"12506290","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Mike asked me to post the patch that has changes from Dan's first round of review comments but does not have the move of getIntraJVMDbLock to DirFile4.  This is not for commit\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-06-19T20:50:20.247+0000","updated":"2007-06-19T20:50:20.247+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12509163","id":"12509163","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"With the changes made for DERBY-2737 it might be wise to get the template server policy file to include the permission on the property derby.storage.jvmInstanceId even if this fix doesn't make it into the first 10.3 release. At least then any user's policy file might have a better chance of having the permission.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-29T17:37:09.036+0000","updated":"2007-06-29T17:37:09.036+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12509170","id":"12509170","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Expanding the synchronization \"because it works\" concerns me greatly as an engineering approach to addressing a synchronization issue.\r\n\r\nThe purpose of the synchronization was intended to protect a small window while a unique identifier was being written into a file (exFileLock in privGetJBMSLockOnDB) used for lock control.\r\n\r\nExpanding this synchronization is now also protecting the writing of a *different* file (fileLock in privGetJBMSLockOnDB), but why is that needed?\r\nEspecially when the system has to handle multiple jvm's writing to that same file, when object synchronization doesn't help.\r\n\r\nIt maybe that the current locking across doesn't really work and there are windows where multiple jvms booting the same database at the same time would succeed when they should fail. E.g. the locking works correctly when two jvms boot the same database one after the other (ie the second would fail) but not when they concurrently boot the same db. Maybe your test is exposing that and so the synchronization is required, but then it doesn't address the cross jvm issue. \r\n\r\nThe locking of database boot is already complicated and adding the new (required) mechanism for cross-class loader complicates it further.\r\nIt would be good to have a clear description of how the various schemes work and interact with each other. WIth that, one could then more easily determine what synchronization is required *and why*.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-06-29T18:02:11.210+0000","updated":"2007-06-29T18:02:11.210+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12510527","id":"12510527","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I am unchecking the 10.3 fixin. It doesn't look like this is going to make it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2007-07-05T23:52:18.234+0000","updated":"2007-07-05T23:52:18.234+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12510834","id":"12510834","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"This is an issue for every release/branch so far","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-07-07T01:32:20.233+0000","updated":"2007-07-07T01:32:20.233+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12534959","id":"12534959","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Unassigning myself from this issue for now. I am not actively working on it and am not sure how to resolve the synchronization issue I was seeing when running the test with many threads.  Hopefully someone else will be able to find a solution which does not expand the synchronization so much.  \r\n\r\n\r\nKathey\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-10-15T20:30:31.379+0000","updated":"2007-10-15T20:30:31.379+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12688145","id":"12688145","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I have been thinking about this issue and wonder:\r\nIf we put the name of the database in the name of the derby.rawStoreDaemon thread and then check for the existence of that thread before booting the database and fail if it exists, would that be a reasonable solution?\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-03-22T16:40:29.720+0000","updated":"2009-03-22T16:40:29.720+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12706621","id":"12706621","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I did some testing with the thread name idea (just in a separate stand-alone program) and found that it would probably be workable. Performance wasn't bad. It seemed to take only 16 milliseconds on my machine to iterate through 1000 thread names and synchronizing on an interned string seemed to work across ClassLoaders but  ...\r\n\r\n1) It would require RuntimePermissions getStackTrace and modifyThreadGroup to derby.jar, which seem like pretty powerful additions to our permissions requirements.\r\n\r\n2) I was looking back at Suresh's original implmentation (using the system property) and found that solution actually still holds promise.  There was just an issue with synchronization which needs to be resolved. This solution wouldn't collide with any effort to consolidate the daemon threads and we already have this permission requirement documented, so I think this is a cleaner solution that should be revisited.  \r\n\r\nI'll take a look again at the old patch and try to figure out why the synchronization expansion was required and how to avoid it.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-05-06T22:07:12.525+0000","updated":"2009-05-06T22:07:12.525+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12737645","id":"12737645","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Amended the title, description, and environment fields. This bug also appears on the Apple Java 5 VM on Mac OS X 10.5.7. It appears that this bug is not limited to Linux.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-07-31T18:30:44.832+0000","updated":"2009-07-31T18:30:44.832+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740196","id":"12740196","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"It appears to me that a workaround for this bug is to upgrade to Java 6. I am attaching a slightly revised version of the repro, DualBootRepro.java (this revision contains all of the helper classes needed to create the failure scenario). I see failures on the following platforms:\r\n\r\nApple Java 5 on Mac OS X\r\nSun Java 5 on Ubuntu Linux\r\nIBM Java 5 on Ubuntu Linux\r\n\r\nHappily, however, the second boot fails and raises java.nio.channels.OverlappingFileLockException on the following platforms:\r\n\r\nApple Java 6 beta on Mac OS X\r\nSun Java 6 on Ubuntu Linux\r\nIBM Java 6 on Ubuntu Linux\r\n\r\nAdmittedly, that's a graceless failure. However, I think it should prevent the database from being corrupted and it's worth recommending an upgrade to Java 6 for users who encounter this bug.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-06T18:51:58.295+0000","updated":"2009-08-06T18:57:44.580+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740540","id":"12740540","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thank you Rick for looking at this issue.  I think it sorely needs a new pair of eyes. I know I have seen dual boot on SuSE Linux with IBM 1.6, but have not tried the recent fix packs.  I have seen the OverlappingFileLockException  on IBM 1.6 with z/OS, but thought it was a JVM bug working in our favor.  Has there been recent spec clarification that exclusive java.nio.FileLocks should prevent cross classloader access?  If we determine that the OverlappingFileLockException is the correct JVM behavior, then I think we can catch that exception and throw a dual boot message and then file JVM bugs where we don't see the OverlappingFileLockException.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-07T13:09:17.263+0000","updated":"2009-08-07T13:09:17.263+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740552","id":"12740552","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Hi Kathey. I'm not aware of a spec clarification but I will ask around. I agree that we still need a solution for people whose VMs don't raise OverlappingFileLockException in this situation. Just thought that we might be able to spare some users a data corruption by recommending that they experiment with Java 6.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-07T13:45:33.792+0000","updated":"2009-08-07T14:14:44.768+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740588","id":"12740588","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"I have confirmed the following with Alan Bateman, the spec lead for NIO2:\r\n\r\n1) The call we are making (java.nio.channels.FileChannel.tryLock) is supposed to raise java.nio.channels.OverlappingFileLockException if an attempt is made to lock the same section of a file twice in the same VM, regardless of what ClassLoaders the calls come from. So the results I reported are expected.\r\n\r\n2) However, in Java 5 java.nio.channels.OverlappingFileLockException is NOT raised in this situation. This is a Java 5 bug. The bug was fixed in Java 6.\r\n\r\n3) Alan is not aware of any changes made by IBM to the nio code in this area. He is curious about the claim that java.nio.channels.OverlappingFileLockException is not raised by IBM Java 6 on SuSE Linux.\r\n\r\nCould someone run the repro on IBM Java 6 on SuSE Linux in order to resolve this confusion?\r\n\r\nOne more wrinkle: When (2) was fixed, a compatibility flag was introduced so that people could continue to enjoy the old behavior, that is, the behavior we don't want. You will get the bad Java 5 behavior if you set the following system property to anything other than false:\r\n\r\n   sun.nio.ch.disableSystemWideOverlappingFileLockCheck\t\r\n\r\n\r\nThanks,\r\n-Rick","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-07T15:35:14.110+0000","updated":"2009-08-07T15:41:28.590+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740623","id":"12740623","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"This is indeed excellent news.\r\n\r\nI tried on SuSE  with:\r\njava version \"1.6.0\"\r\nJava(TM) SE Runtime Environment (build pxi3260sr4-20090216_01(SR4))\r\nIBM J9 VM (build 2.4, J2RE 1.6.0 IBM J9 2.4 Linux x86-32 jvmxi3260-20090215_29883 (JIT enabled, AOT enabled)\r\nJ9VM - 20090215_029883_lHdSMr\r\nJIT  - r9_20090213_2028\r\nGC   - 20090213_AA)\r\nJCL  - 20090214_01\r\n\r\nand indeed got the OverlappingFileLockException and tried with the property you mentioned and saw dual boot.  When I get back from vacation, I will review my case records and revisit the dual boot case we saw with 1.6 and see if it is something else.\r\n\r\nI think the important thing is to have a solution moving forward, so think we should just catch this exception and throw a dual boot message.  While an older jvm solution would be great,  I think most of the legacy applications that have dual boot have learned their lesson the hard way with corruption and no longer do it.  It is in application development that we need to catch this and throw a clear message.   That development usually happens with newer JVM's.\r\n\r\nDo you have a bug number/link  for the  JVM fix?  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-07T16:35:11.511+0000","updated":"2009-08-07T16:35:11.511+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740635","id":"12740635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Hi Kathey. The bug id is 6332756. See http://forums.sun.com/thread.jspa?threadID=5321079","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-07T17:04:12.072+0000","updated":"2009-08-07T17:04:12.072+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740641","id":"12740641","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Thanks Rick for the reference. Was there consideration given to bakcporting the fix to 1.5, perhaps even with a different default for sun.nio.ch.disableSystemWideOverlappingFileLockCheck?\r\n\r\n\r\nThe bug comments say \"Fixing this issue is straight-forward but it introduces a behaviour change\".  At least having the property available in 1.5 to force the check would be helpful to eliminate the possibility of dual boot from corruption cases.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-07T17:29:28.051+0000","updated":"2009-08-07T17:29:28.051+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740660","id":"12740660","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"> Was there consideration given to bakcporting the fix to 1.5, perhaps even with a different default for sun.nio.ch.disableSystemWideOverlappingFileLockCheck? \r\n\r\nI believe so. I think that proposal was rejected because the fix would introduce a compatibility change within a major version. The barrier to compatibility changes seems to be higher within major versions than between them. I suppose we could lobby to have that decision revisited but I doubt we would make much headway. The compatibility policy seems sensible to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-07T18:05:56.791+0000","updated":"2009-08-07T18:05:56.791+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740669","id":"12740669","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"If for 1.5 the property default is the current bad behavior, I think there would be no compatibility concern and it would provide a worthwhile supportability improvement especially if it is a low risk fix overall.   \r\n\r\nFor now though it would be good to focus on getting a better error for Derby users using 1.6.   If we find ourselves using the \"Maybe they dual booted\" excuse in a corruption case we can revisit whether to lobby for the 1.5 option.   Sound ok?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-07T18:25:46.311+0000","updated":"2009-08-07T18:25:46.311+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740673","id":"12740673","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"I think it's a good idea to clean up how we handle java.nio.channels.OverlappingFileLockException . I agree that we can revisit this bug if that solution proves to be inadequate.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-07T18:42:12.231+0000","updated":"2009-08-07T18:42:12.231+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12740691","id":"12740691","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Attaching derby-700-01-aa-catchOverlappingFileLockException.diff. This patch catches the OverlappingFileLockException, releases the channel, and sets the status to indicate that another Derby instance has locked the database. I have not run any tests yet other than verifying that the repro runs correctly on Java 6, but I'm posting this patch to see if the Store experts think this looks right. Once we agree that the code looks good, we can write some additional regression tests for this problem.\r\n\r\nTouches the following file:\r\n\r\nM      java/engine/org/apache/derby/impl/io/DirFile4.java\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-07T19:57:27.878+0000","updated":"2009-08-07T19:57:27.878+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12742604","id":"12742604","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"The new code looks ok to me.  Maybe the comment could say what we expect to throw the\r\nOverlappingFileLockException, I assume it is:\r\ndbLock =lockFileChannel.tryLock();\r\n\r\nIt will be great if we can count on jdk16 to fix this problem completely, finally.  Too bad if we can't\r\nget a fix out of 15 as a lot of my users still use it also.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2009-08-12T22:06:18.535+0000","updated":"2009-08-12T22:06:18.535+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12743395","id":"12743395","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks, Mike. I will add that comment. I will also add a test case. For the record, the regression tests ran cleanly for me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-14T19:53:33.594+0000","updated":"2009-08-14T19:53:33.594+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12743447","id":"12743447","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"There  was a test in the earlier patches that might be of use.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-08-14T21:09:00.333+0000","updated":"2009-08-14T21:09:00.333+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744166","id":"12744166","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Attaching derby-700-01-ab-catchOverlappingFileLockException.diff. This adds the comment which Mike recommended and adds a test culled from one of the previous patches. I will run regression tests again.\r\n\r\nTouches the following files:\r\n\r\nM      java/engine/org/apache/derby/impl/io/DirFile4.java\r\n\r\nGraceful handling of OverlappingFileLockException.\r\n\r\n\r\nM      java/testing/org/apache/derbyTesting/functionTests/tests/store/_Suite.java\r\nA      java/testing/org/apache/derbyTesting/functionTests/tests/store/ClassLoaderBootTest.java\r\nM      java/testing/org/apache/derbyTesting/junit/JDBC.java\r\n\r\nTwo test cases. One runs in all environments and checks that anyone can boot a database that has been shut down already. The other test case verifies that a database can't be booted twice if the VM is at Java 6 or higher.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-17T18:46:34.110+0000","updated":"2009-08-17T18:46:34.110+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744479","id":"12744479","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"The tests ran cleanly for me except for an error in ManagementMBeanTest. I ran the test by itself and it passed cleanly. I doubt that this fix affected that test. Here is the error:\r\n\r\n1) testStartStopManagementFromApplication(org.apache.derbyTesting.functionTests.tests.management.ManagementMBeanTest)junit.framework.AssertionFailedError: expected:<2> but was:<8>\r\n\tat org.apache.derbyTesting.functionTests.tests.management.ManagementMBeanTest.startStopManagement(ManagementMBeanTest.java:86)\r\n\tat org.apache.derbyTesting.functionTests.tests.management.ManagementMBeanTest.testStartStopManagementFromApplication(ManagementMBeanTest.java:56)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:21)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:25)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-18T12:22:54.633+0000","updated":"2009-08-18T12:22:54.633+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744548","id":"12744548","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Committed derby-700-01-ab-catchOverlappingFileLockException.diff at subversion revision 805448.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-18T15:25:50.799+0000","updated":"2009-08-18T15:25:50.799+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744557","id":"12744557","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Ported 805448 from trunk to 10.5 branch at subversion revision 805454.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-18T15:33:23.268+0000","updated":"2009-08-18T15:33:23.268+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744592","id":"12744592","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Ported 805448 from trunk to 10.4 branch at subversion revision 805485.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-18T16:32:06.741+0000","updated":"2009-08-18T16:32:06.741+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744593","id":"12744593","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Ported 805448 from trunk to 10.3 branch at subversion revision 805486.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-18T16:38:01.746+0000","updated":"2009-08-18T16:38:01.746+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744632","id":"12744632","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Ported 805448 from trunk to 10.2 branch at subversion revision 805523.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-18T18:23:25.418+0000","updated":"2009-08-18T18:23:25.418+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744657","id":"12744657","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"At this point I have ported the patch to all branches from 10.2 forward. If someone would like to port the patch to 10.1, please do--my 10.1 build environment no longer works and the effort required to repair it does not seem justified.\r\n\r\nI am inclined to resolve this issue if there are no objections.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-18T19:13:54.604+0000","updated":"2009-08-18T19:13:54.604+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744938","id":"12744938","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"ManagementMBeanTest started failing in the Tinderbox (trunk and 10.4) after the check-in:\r\nhttp://dbtg.foundry.sun.com/derby/test/tinderbox_10.4_16/jvm1.6/testing/Limited/testSummary-805541.html\r\nhttp://dbtg.foundry.sun.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-805576.html\r\n\r\n[update: Ole has now logged this problem as DERBY-4356]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-19T07:20:07.471+0000","updated":"2009-08-19T09:46:30.157+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12744946","id":"12744946","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I noticed this in the new test (ClassLoaderBootTest):\r\n\r\n- it would be good to null out the three ClassLoader fields in tearDown() so that the class loaders and the classes they have loaded can be garbage collected (otherwise they'll stay in memory until the full JUnit run has finished)\r\n\r\n- the decorateSQL() method creates a table which is said to be used to test export, but I don't see any code for testing export\r\n\r\n- the test cases are wrapped in try {...} catch (SQLException se) { dumpSQLException(se); }. Won't this prevent the reporting of the exception in JUnit? Better to let the exceptions be thrown and handled by the framework?\r\n\r\n- the methods getFileWhichLoadedClass(Class) and getURL(File) have no callers","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-08-19T07:54:32.826+0000","updated":"2009-08-19T07:54:32.826+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12745050","id":"12745050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks for those good suggestions, Knut. They are addressed by the patch I am attaching: derby-700-02-aa-testCleanup.diff.\r\n\r\nIn particular, I added a tearDown() method which resets the class loader and releases resources. It looks to me like those extra try/catch blocks were resetting the class loader on the way out--I think tearDown() is a better place for that work.\r\n\r\nI'll run full regression tests against this fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-19T13:29:14.609+0000","updated":"2009-08-19T13:29:14.609+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12745098","id":"12745098","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Committted derby-700-02-aa-testCleanup.diff at subversion revision 805858. Tests ran cleanly for except for the spillover consequences for ManagementMBeanTest--the regression there is unchanged.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-19T16:09:25.875+0000","updated":"2009-08-19T16:09:25.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12745229","id":"12745229","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"I backported the change to DirFile4.java of 805448 to 10.1 with revision 805978.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2009-08-19T22:05:00.828+0000","updated":"2009-08-19T22:05:00.828+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12748427","id":"12748427","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Resolving this issue. It looks like the noise in ManagementMBeanTest has been cleaned up.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-08-27T16:23:24.757+0000","updated":"2009-08-27T16:23:24.757+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12750601","id":"12750601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Rick, I was wondering if you knew the correlation between DERBY-700 and DERBY-4361. testDefault fixture in ErrorStreamTest has been failing consistently after the checkin went in for DERBY-700. If the test orders are changed and ErrorStreamTest is run after the test ClassLoaderBootTest which was added for DERBY-700, testDefault fixture does not fail anymore. I will look further into what the relationship between the 2 jira entries might be but I thought I would check if it rings a bell for you. Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-02T18:35:41.526+0000","updated":"2009-09-02T18:35:41.526+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12758822","id":"12758822","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Adjusting fix version. Fix only works with JDK 1.6 which I think is first supported with 10.3, so even though the Derby part of the fix went back to 10.1, it will only be effective there if the older jvms get fixed.    I will put a request in for the IBM jvm to have the jvm fix backported to at least 1.5.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-09-23T18:40:00.666+0000","updated":"2009-09-23T18:40:00.666+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12759061","id":"12759061","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I think 10.1 is supposed to work with Java 6 as well. Support for JDBC 4.0 wasn't added until 10.2, but as long as your application only calls JDBC 3.0 functionality, you should be able to run it with older Derby versions under Java 6. I frequently run older versions with Java 6, for instance when I search for the version that introduced a certain bug.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-09-24T08:17:47.589+0000","updated":"2009-09-24T08:17:47.589+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12762753","id":"12762753","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attaching a new release note. The old one referred to the original proposed fix which was not adopted.  Please review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2009-10-06T19:32:40.231+0000","updated":"2009-10-06T19:32:40.231+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12762759","id":"12762759","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"body":"Looks good, but there were 2 typos...uploading a corrected version.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=myrna","name":"myrna","emailAddress":"m dot v dot lunteren at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Myrna van Lunteren","active":true},"created":"2009-10-06T19:55:50.752+0000","updated":"2009-10-06T19:55:50.752+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12763113","id":"12763113","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Thanks Kathey and Myrna. The release note looks good and it passes the ReleaseNoteReader's checks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-10-07T16:34:33.586+0000","updated":"2009-10-07T16:34:33.586+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12325539/comment/12843843","id":"12843843","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Updating fix version for 10.1 fix","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2010-03-11T00:17:18.334+0000","updated":"2010-03-11T00:17:18.334+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-700/votes","votes":2,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06tl3:"}}