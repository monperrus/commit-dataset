{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12435640","self":"https://issues.apache.org/jira/rest/api/latest/issue/12435640","key":"DERBY-4375","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/6","id":"6","description":"The problem isn't valid and it can't be fixed.","name":"Invalid"},"customfield_12310220":"2009-09-15 13:53:55.432","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24215","customfield_12310222":"1_*:*_1_*:*_265593165_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-09-17T20:40:23.590+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4375/watchers","watchCount":0,"isWatching":false},"created":"2009-09-14T18:53:50.425+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:52:35.058+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11413","id":"11413","name":"Test"}],"timeoriginalestimate":null,"description":"On weme6.2, 8 test fixtures from InBetweenTest are failing with following error\r\njava.sql.SQLException: The syntax of the string representation of a datetime value is incorrect.\r\n\r\nThe failing test fixtures are \r\n1)testReproductionBeetle5135\r\n2)testBeetle4316\r\n3)testNestedQueries\r\n4)testCheckQueries\r\n5)testBigInList\r\n6)testInBetween\r\n7)testInList\r\n8)testBetween\r\n\r\nThe stack trace for testBetween looks as follows\r\n1) testBetween(org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest)java.sql.SQLException: The syntax of the string representation of a datetime value is incorrect.\r\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest.createTestObjects(InbetweenTest.java:195)\r\n\tat org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest.testBetween(InbetweenTest.java:214)\r\n\tat java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:195)\r\n\tat org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\r\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\r\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\r\n\tat org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\r\nCaused by: ERROR 22007: The syntax of the string representation of a datetime value is incorrect.\r\n\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\r\n\tat org.apache.derby.iapi.types.DateTimeParser.parseInt(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLTimestamp.parseDateOrTimestamp(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLTimestamp.parseTimestamp(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLTimestamp.<init>(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.getTimestamp(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLChar.getTimestamp(Unknown Source)\r\n\tat org.apache.derby.iapi.types.SQLTimestamp.setFrom(Unknown Source)\r\n\tat org.apache.derby.iapi.types.DataType.setValue(Unknown Source)\r\n\tat org.apache.derby.iapi.types.DataType.normalize(Unknown Source)\r\n\tat org.apache.derby.iapi.types.DataTypeDescriptor.normalize(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeColumn(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.InsertResultSet.open(Unknown Source)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)\r\n\t... 39 more\r\n ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10369","value":"Regression Test Failure","id":"10369"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37213","summary":"WEME6.2 : Handful of test fixtures in InbetweenTest are failing with java.sql.SQLException: The syntax of the string representation of a datetime value is incorrect.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"weme 6.2 ","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":12,"total":12,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12755134","id":"12755134","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I wonder if anyone has noticed these kind of failures on Sun's J2ME testing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-14T18:54:18.052+0000","updated":"2009-09-14T18:54:18.052+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12755385","id":"12755385","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The failure seem to have started occuring after the old test inbetween.sql(based on old harness) was converted into a junit test as part of DERBY-4318. The code that is failing is a new piece of test code which I do not think existed in the old test. \r\n        st.executeUpdate(\r\n            \" insert into bt2 values (28, 82, null, '15:47:28', \"\r\n            + \"'\"+Timestamp.valueOf(\"0000-00-00 15:47:28.0\")+\"', null)\");\r\n        \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-15T06:33:34.861+0000","updated":"2009-09-15T06:33:34.861+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12755492","id":"12755492","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I agree, I don't think that statement existed in the old test. The corresponding section\r\nof the old test looked like this:\r\n\r\n-insert into bt2 values (8, -800.0, '1992-03-22', '03:22:28', '2007-01-04 16:17:23.303', '2992-01-02');\r\n-insert into bt2 values (1, 200.0, '1998-03-22', '13:22:28', '2007-01-04 16:17:36.912', '3999-08-08');\r\n-insert into bt2 values (-8, 800, '3999-08-08', '02:28:22', '2007-01-05 16:03:52.364', '1992-01-02');\r\n-insert into bt2 values (18, 180.00, '2007-02-23', '15:47:27', null, null);\r\n-insert into bt2 values (22, 202.010, '2007-02-23', '15:47:27', null, null);\r\n-insert into bt2 values (23, 322.002, null, '15:47:28', null, null);\r\n-insert into bt2 values (28, 82, null, '15:47:28', '2007-02-23 15:47:27.544', null);\r\n\r\nI think that the SQLToJUnit tool did something strange with the 'xxxxxxFILTERED-TIMESTAMPxxxxx'\r\ndata in the 'inbetween.out' file as it was converting it to JUnit, and I didn't catch this during\r\nthe code review (probably because the test passed on all the platforms I was running).\r\n\r\nWhat do you think we should do here? It's certainly a strange timestamp; is the WEME\r\nplatform justified in complaining about it?\r\n\r\nIf you change the timestamp to '2007-02-23 15:47:27.544', (the value from the original test),\r\ndoes the test then pass?\r\n\r\nIf so, that seems like a reasonable fix to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2009-09-15T13:53:55.432+0000","updated":"2009-09-15T13:53:55.432+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12755647","id":"12755647","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I took Bryan's suggestion and changed the test to use Timestamp.valueOf(\"2007-02-23 15:47:27.544\") rather than Timestamp.valueOf(\"0000-00-00 15:47:28.0\"). This makes the test pass on weme. The change went in with revision 815452. \r\n\r\nAlso, I wrote a standalone very simple test case which demonstrates the problem with weme. I am wondering if this reproduces on any other implementation of J2ME. Would appreciate if someone can give it a try.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-15T19:12:59.788+0000","updated":"2009-09-15T19:12:59.788+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12755650","id":"12755650","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"A very simple repro (attaching as mamta.java) which demonstrates the problem with the datetime format with weme. I am wondering if this reproduces on any other implementation of J2ME. Would appreciate if someone can give it a try. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-15T19:15:42.128+0000","updated":"2009-09-15T19:15:42.128+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12756105","id":"12756105","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"BTW, the test is not as standalone as I claimed yesterday. Realized last night that I am actually using the helper class TestUtil for Derby test harness to reproduce the problem. TestUtil gets a JDBC connection which will/will not use DriverManager depending on what implementation of jvm is being used ie it will detect that DriverManager can't be used if working with J2ME.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-16T16:53:35.035+0000","updated":"2009-09-16T16:53:35.035+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12756249","id":"12756249","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I am attaching (timeStampDiffValue.java) which is even simpler version of the problem. This test case does not require any JDBC connection. \r\n\r\nThe problem is that the output of \r\n    \tTimestamp.valueOf(\"0000-00-00 15:47:28.0\")\r\nis different on weme compared to IBM jdk1.6 and Sun jdk1.6. The o/p on IBM 1.6 and Sun 1.6 is same\r\n\r\nOuptut of  System.out.println(Timestamp.valueOf(\"0000-00-00 15:47:28.0\"));\r\na)on weme 6.2 is\r\n2-11-30 15:47:28.0\r\nb)on IBM jdk1.6\r\n0002-11-30 15:47:28.0\r\n3)on Sun jdk16\r\n0002-11-30 15:47:28.0\r\n\r\nThis probably should be raised with weme team but it is interesting to note how (\"0000-00-00 15:47:28.0\") is interpreted as 0002-11-30 15:47:28.0 on IBM and Sun jdk. Does anyone has any clues on how that conversion might be happening?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-16T21:59:24.634+0000","updated":"2009-09-16T21:59:24.634+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12756416","id":"12756416","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The javadoc for java.util.Date says:\r\n\r\n> In all cases, arguments given to methods for these purposes need not\r\n> fall within the indicated ranges; for example, a date may be\r\n> specified as January 32 and is interpreted as meaning February 1.\r\n\r\nThis explains the month and day parts of the date. 0/0 is one month\r\nand one day before 1/1. This should however give year -1, not year\r\n2. I found this explanation in the bug database\r\n(http://bugs.sun.com/view_bug.do?bug_id=6278731), where the evaluation\r\nnote says:\r\n\r\n> GregorianCalendar represents a date with ERA and YEAR. 0 and\r\n> negative year values are converted to (1 - year) with an ERA change\r\n> to support the Julian calendar year numbering.\r\n\r\nSo the year becomes (1 - year) == (1 - -1) = 2.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-09-17T08:29:48.500+0000","updated":"2009-09-17T08:29:48.500+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12756742","id":"12756742","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Knut, thanks for taking the time to explain how 0000-00-00 is converted to 0002-11-30","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-17T19:59:33.596+0000","updated":"2009-09-17T19:59:33.596+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12756767","id":"12756767","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"The problem was with weme jdk. Kathey will file an issue with weme team.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-17T20:40:23.573+0000","updated":"2009-09-17T20:40:23.573+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12757460","id":"12757460","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thank you Knut and Mamta for tracking this down and resolving it.\r\n\r\nI was a little bit puzzled by the \"11-30\" part of the result, since as Knut\r\nobserves, Month=0,Day=0 should be the month and day before 1/1, which\r\nin my mind is December 31, not November 30.\r\n\r\nIndeed, when I wrote this little program:\r\n\r\nCalendar c = Calendar.getInstance();\r\nc.set(0, 0, 0, 12, 13, 14);\r\nSystem.out.println(c.getTime());\r\n\r\nIt prints\r\n\r\nWed Dec 31 12:13:14 PST 0002\r\n\r\nWhich confirms Knut's understanding of the year 2 anomaly, and also computes\r\nDecember 31 for Month=0,day=0, which is what I expected.\r\n\r\nSo I looked a little bit further and I see that when Timestamp.valueOf() parses\r\nits string argument and constructs its timestamp, it internally uses the constructor\r\nhttp://java.sun.com/j2se/1.4.2/docs/api/java/sql/Timestamp.html#Timestamp%28int,%20int,%20int,%20int,%20int,%20int,%20int%29\r\nwhich expects that day_of_month is numbered from 1-31 but month is numbered from 0-11,\r\nso Timestamp.valueOf() subtracts 1 from the month, meaning that\r\n\r\nTimestamp.valueOf(\"0000-00-00 15:47:28.0\")); \r\n\r\nis actually analogous to the Calendar code:\r\n\r\nc = Calendar.getInstance();\r\nc.set(0, -1, 0, 12, 13, 14);\r\nSystem.out.println(c.getTime());\r\n\r\nand *that* code, inded, prints:\r\n\r\nSun Nov 30 12:13:14 PST 0002\r\n\r\nAll of this is a long and roundabout way of saying that I completely agree with everything\r\nMamta and Knut discovered, but wanted to post this anyway just in case anyone else\r\nwas wondering about the December 31 vs November 30 bit like I was. Here's my complete\r\nprogram, for the curious:\r\n\r\nimport java.util.Calendar;\r\nimport java.sql.Timestamp;\r\npublic class Test\r\n{\r\n    public static void main(String []args)\r\n    {\r\n        System.out.println(Timestamp.valueOf(\"0000-00-00 15:47:28.0\"));\r\n\r\n        Calendar c = Calendar.getInstance();\r\n        c.set(0, 0, 0, 12, 13, 14);\r\n        System.out.println(c.getTime());\r\n\r\n        c.set(0, -1, 0, 12, 13, 14);\r\n        System.out.println(c.getTime());\r\n    }\r\n}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2009-09-18T21:44:24.538+0000","updated":"2009-09-18T21:44:24.538+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435640/comment/12757941","id":"12757941","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"This is very interesting, Bryan. I had thought that since Month=0,Day=0 is month and day before 1/1, we will apply the month part first and then the day part to it, in other workd, when we will apply month before 1, we will get Dec 31st and then we will apply day before, it will get us Nov 30th.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2009-09-21T16:20:08.305+0000","updated":"2009-09-21T16:20:08.305+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4375/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06qev:"}}