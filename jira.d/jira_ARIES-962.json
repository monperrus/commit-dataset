{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12615888","self":"https://issues.apache.org/jira/rest/api/latest/issue/12615888","key":"ARIES-962","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310981","id":"12310981","key":"ARIES","name":"Aries","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310981&avatarId=10065","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310981&avatarId=10065","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310981&avatarId=10065","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310981&avatarId=10065"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10520","id":"10520","description":"Apache Aries","name":"Aries"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324245","id":"12324245","name":"blueprint-core-1.1.0","archived":false,"released":true,"releaseDate":"2013-01-29"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-11-27 14:23:43.509","customfield_12312323":null,"customfield_12310420":"257373","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_2579261593_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2012-12-13T10:00:55.099+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ARIES-962/watchers","watchCount":2,"isWatching":false},"created":"2012-11-13T13:33:13.532+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12322492","id":"12322492","name":"blueprint-core-1.0.1","archived":false,"released":true,"releaseDate":"2012-09-25"}],"issuelinks":[{"id":"12361904","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12361904","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12623833","key":"ARIES-989","self":"https://issues.apache.org/jira/rest/api/2/issue/12623833","fields":{"summary":"Deadlock while stopping karaf","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gnt","name":"gnt","emailAddress":"gnodet at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Guillaume Nodet","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-02-13T09:16:48.261+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313048","id":"12313048","name":"Blueprint","description":"OSGi Blueprint Services implementation"}],"timeoriginalestimate":null,"description":"OSGi container (Apache Karaf) hangs while stopping due to the deadlock with next stacktrace:\r\n{quote}\r\nFound one Java-level deadlock:\r\n=============================\r\n\"Blueprint Extender: 1\":\r\n  waiting to lock monitor 0x00007f92a0003d98 (object 0x00000000e0995860, a java.util.ArrayList),\r\n  which is held by \"FelixStartLevel\"\r\n\"FelixStartLevel\":\r\n  waiting to lock monitor 0x00007f92a0003cf0 (object 0x00000000e09960f0, a java.lang.Object),\r\n  which is held by \"Blueprint Extender: 1\"\r\n\r\nJava stack information for the threads listed above:\r\n===================================================\r\n\"Blueprint Extender: 1\":\r\n\tat org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.getBestServiceReference(AbstractServiceReferenceRecipe.java:429)\r\n\t- waiting to lock <0x00000000e0995860> (a java.util.ArrayList)\r\n\tat org.apache.aries.blueprint.container.ReferenceRecipe.retrack(ReferenceRecipe.java:128)\r\n\tat org.apache.aries.blueprint.container.ReferenceRecipe.untrack(ReferenceRecipe.java:151)\r\n\t- locked <0x00000000e09960f0> (a java.lang.Object)\r\n\tat org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.serviceRemoved(AbstractServiceReferenceRecipe.java:346)\r\n\tat org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.access$200(AbstractServiceReferenceRecipe.java:71)\r\n\tat org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe$3.run(AbstractServiceReferenceRecipe.java:316)\r\n\tat org.apache.aries.blueprint.utils.threading.impl.DiscardableRunnable.run(DiscardableRunnable.java:48)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\r\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:206)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\n\"FelixStartLevel\":\r\n\tat org.apache.aries.blueprint.container.ReferenceRecipe.doStop(ReferenceRecipe.java:122)\r\n\t- waiting to lock <0x00000000e09960f0> (a java.lang.Object)\r\n\tat org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.stop(AbstractServiceReferenceRecipe.java:153)\r\n\t- locked <0x00000000e0995860> (a java.util.ArrayList)\r\n\tat org.apache.aries.blueprint.container.BlueprintContainerImpl.untrackServiceReference(BlueprintContainerImpl.java:594)\r\n\tat org.apache.aries.blueprint.container.BlueprintContainerImpl.untrackServiceReferences(BlueprintContainerImpl.java:574)\r\n\tat org.apache.aries.blueprint.container.BlueprintContainerImpl.destroy(BlueprintContainerImpl.java:842)\r\n\tat org.apache.aries.blueprint.container.BlueprintExtender.destroyContext(BlueprintExtender.java:246)\r\n\tat org.apache.aries.blueprint.container.BlueprintExtender.bundleChanged(BlueprintExtender.java:238)\r\n\tat org.apache.aries.blueprint.container.BlueprintExtender$BlueprintBundleTrackerCustomizer.modifiedBundle(BlueprintExtender.java:434)\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:198)\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:128)\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:468)\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:161)\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:117)\r\n\tat org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1103)\r\n\tat org.apache.felix.framework.util.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:695)\r\n\tat org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:483)\r\n\tat org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4244)\r\n\tat org.apache.felix.framework.Felix.stopBundle(Felix.java:2351)\r\n\tat org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1214)\r\n\tat org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:295)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\n\r\nFound 1 deadlock.\r\n{quote}\r\nIt seems like Apache Aries problem.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"114471","summary":"Deadlock while stopping OSGi container","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kapyar","name":"kapyar","emailAddress":"v dot antonovich at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kapyar&avatarId=18859","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kapyar&avatarId=18859","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kapyar&avatarId=18859","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kapyar&avatarId=18859"},"displayName":"Victor Antonovich","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kapyar","name":"kapyar","emailAddress":"v dot antonovich at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kapyar&avatarId=18859","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kapyar&avatarId=18859","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kapyar&avatarId=18859","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kapyar&avatarId=18859"},"displayName":"Victor Antonovich","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Apache Karaf 2.3.0","customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":2,"total":2,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12615888/comment/13504631","id":"13504631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gnt","name":"gnt","emailAddress":"gnodet at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Guillaume Nodet","active":true},"body":"Experimenting with the following patch:\r\n{code}\r\n\r\ndiff --git a/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java b/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java\r\nindex f9a0d3c..64cf93c 100644\r\n--- a/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java\r\n+++ b/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java\r\n@@ -82,6 +82,7 @@ public abstract class AbstractServiceReferenceRecipe extends AbstractRecipe impl\r\n     /** The list of listeners for this reference.  This list will be lazy created */\r\n     protected List<Listener> listeners;\r\n \r\n+    protected final Object monitor = new Object();\r\n     private final List<ServiceReference> references = new ArrayList<ServiceReference>();\r\n     private final AtomicBoolean started = new AtomicBoolean();\r\n     private final AtomicBoolean satisfied = new AtomicBoolean();\r\n@@ -128,7 +129,7 @@ public abstract class AbstractServiceReferenceRecipe extends AbstractRecipe impl\r\n                 satisfied.set(optional);\r\n                 // Synchronized block on references so that service events won't interfere with initial references tracking\r\n                 // though this may not be sufficient because we don't control ordering of those events\r\n-                synchronized (references) {\r\n+                synchronized (monitor) {\r\n                     getBundleContextForServiceLookup().addServiceListener(this, getOsgiFilter());\r\n                     ServiceReference[] references = getBundleContextForServiceLookup().getServiceReferences(null, getOsgiFilter());\r\n                     if (references != null) {\r\n@@ -148,7 +149,7 @@ public abstract class AbstractServiceReferenceRecipe extends AbstractRecipe impl\r\n \r\n     public void stop() {\r\n         if (started.compareAndSet(true, false)) {\r\n-            synchronized (references) {\r\n+            synchronized (monitor) {\r\n                 getBundleContextForServiceLookup().removeServiceListener(this);\r\n                 doStop();\r\n                 for (Iterator<ServiceReference> it = references.iterator(); it.hasNext();) {\r\n@@ -324,7 +325,7 @@ public abstract class AbstractServiceReferenceRecipe extends AbstractRecipe impl\r\n     private void serviceAdded(ServiceReference ref) {\r\n         LOGGER.debug(\"Tracking reference {} for OSGi service {}\", ref, getOsgiFilter());\r\n         if (isStarted()) {\r\n-            synchronized (references) {\r\n+            synchronized (monitor) {\r\n                 if (references.contains(ref)) {\r\n                     return;\r\n                 }\r\n@@ -338,7 +339,7 @@ public abstract class AbstractServiceReferenceRecipe extends AbstractRecipe impl\r\n     private void serviceModified(ServiceReference ref) {\r\n         // ref must be in references and must be satisfied\r\n         if (isStarted()) {\r\n-            synchronized (references) {\r\n+            synchronized (monitor) {\r\n                 if (references.contains(ref)) {\r\n                     track(ref);\r\n                 }\r\n@@ -351,7 +352,7 @@ public abstract class AbstractServiceReferenceRecipe extends AbstractRecipe impl\r\n             LOGGER.debug(\"Untracking reference {} for OSGi service {}\", ref, getOsgiFilter());\r\n             boolean removed;\r\n             boolean satisfied;\r\n-            synchronized (references) {\r\n+            synchronized (monitor) {\r\n                 removed = references.remove(ref);\r\n                 satisfied = optional || !references.isEmpty();\r\n             }\r\n@@ -433,13 +434,13 @@ public abstract class AbstractServiceReferenceRecipe extends AbstractRecipe impl\r\n     }\r\n     \r\n     public List<ServiceReference> getServiceReferences() {\r\n-        synchronized (references) {\r\n+        synchronized (monitor) {\r\n             return new ArrayList<ServiceReference>(references);\r\n         }\r\n     }\r\n \r\n     public ServiceReference getBestServiceReference() {\r\n-        synchronized (references) {\r\n+        synchronized (monitor) {\r\n             int length = references.size();\r\n             if (length == 0) { /* if no service is being tracked */\r\n                 return null;\r\ndiff --git a/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java b/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java\r\nindex f19d9ea..f1d3c29 100644\r\n--- a/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java\r\n+++ b/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java\r\n@@ -50,8 +50,7 @@ public class ReferenceListRecipe extends AbstractServiceReferenceRecipe {\r\n     private final List<ManagedCollection> collections = new ArrayList<ManagedCollection>();\r\n     private final DynamicCollection<ServiceDispatcher> storage = new DynamicCollection<ServiceDispatcher>();\r\n     private final List<ServiceDispatcher> unboundDispatchers = new ArrayList<ServiceDispatcher>();\r\n-    private final Object monitor = new Object();\r\n-    \r\n+\r\n     public ReferenceListRecipe(String name,\r\n                          ExtendedBlueprintContainer blueprintContainer,\r\n                          ReferenceListMetadata metadata,\r\ndiff --git a/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceRecipe.java b/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceRecipe.java\r\nindex 1c81586..0a1b2b2 100644\r\n--- a/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceRecipe.java\r\n+++ b/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceRecipe.java\r\n@@ -61,7 +61,6 @@ public class ReferenceRecipe extends AbstractServiceReferenceRecipe {\r\n     private volatile ServiceReference trackedServiceReference;\r\n     private volatile Object trackedService;\r\n     private Object defaultBean;\r\n-    private final Object monitor = new Object();\r\n \r\n     private final Collection<Class<?>> proxyChildBeanClasses;\r\n     private final Collection<WeakReference<Voidable>> proxiedChildren;\r\n{code}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gnt","name":"gnt","emailAddress":"gnodet at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Guillaume Nodet","active":true},"created":"2012-11-27T14:23:43.509+0000","updated":"2012-11-27T14:23:43.509+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12615888/comment/13530841","id":"13530841","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gnt","name":"gnt","emailAddress":"gnodet at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Guillaume Nodet","active":true},"body":"Fixed in http://svn.apache.org/viewvc?rev=1421113&view=rev\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gnt","name":"gnt","emailAddress":"gnodet at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Guillaume Nodet","active":true},"created":"2012-12-13T10:00:55.118+0000","updated":"2012-12-13T10:00:55.118+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ARIES-962/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0jy6v:"}}