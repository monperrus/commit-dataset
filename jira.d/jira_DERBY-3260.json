{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12384127","self":"https://issues.apache.org/jira/rest/api/latest/issue/12384127","key":"DERBY-3260","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-12-10 18:51:05.248","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23528","customfield_12310222":"3_*:*_1_*:*_185983975_*|*_1_*:*_1_*:*_3917160813_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-01-23T13:22:59.581+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3260/watchers","watchCount":1,"isWatching":false},"created":"2007-12-07T01:37:14.793+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.png","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/10991","id":"10991","description":"snapshot","name":"10.0.2.1","archived":false,"released":true,"releaseDate":"2004-12-06"},{"self":"https://issues.apache.org/jira/rest/api/2/version/10993","id":"10993","description":"","name":"10.1.1.0","archived":false,"released":true,"releaseDate":"2005-08-03"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12310615","id":"12310615","description":"","name":"10.1.2.1","archived":false,"released":true,"releaseDate":"2005-11-18"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12311953","id":"12311953","description":"","name":"10.1.3.1","archived":false,"released":true,"releaseDate":"2006-06-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/11187","id":"11187","description":"","name":"10.2.1.6","archived":false,"released":true,"releaseDate":"2006-10-02"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:51:12.261+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"I have a stress test using Derby 10.3.1.4 which is executing the same PreparedStatement using multiple threads concurrently and I consistently get the following NPE after several hours of running:\n\n2007-12-07 00:48:10.914 GMT Thread[pool-5-thread-25,5,main] (XID = 1219661), (SESSIONID = 377), (DATABASE = /usr/ironhide/var/db/opera/derby), (DRDAID = null), Failed Statement is: select rdbmsvaria0_.GUID_AND_INDEX as GUID1_3_0_, rdbmsvaria0_.VALUE2 as VALUE2_3_0_, rdbmsvaria0_.HOLDER_GUID as HOLDER3_3_0_, rdbmsvaria0_.VALUE_TYPE as VALUE4_3_0_, rdbmsvaria0_.VALUE_GUID as VALUE5_3_0_, rdbmsvaria0_.DELETED as DELETED3_0_ from VARIABLE rdbmsvaria0_ where rdbmsvaria0_.GUID_AND_INDEX=? with 1 parameters begin parameter #1: 9C202AB9E8356288A9320C9C383A4D2F-11 :end parameter\njava.lang.NullPointerException\n        at org.apache.derby.impl.sql.GenericActivationHolder.execute(GenericActivationHolder.java:271)\n        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:368)\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(EmbedPreparedStatement.java:275)\n        at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:186)\n        at org.hibernate.loader.Loader.getResultSet(Loader.java:1787)\n        at org.hibernate.loader.Loader.doQuery(Loader.java:674)\n        at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:236)\n        at org.hibernate.loader.Loader.loadEntity(Loader.java:1860)\n        at org.hibernate.loader.entity.AbstractEntityLoader.load(AbstractEntityLoader.java:48)\n        at org.hibernate.loader.entity.AbstractEntityLoader.load(AbstractEntityLoader.java:42)\n        at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3044)\n        at org.hibernate.event.def.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:395)\n        at org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:375)\n        at org.hibernate.event.def.DefaultLoadEventListener.load(DefaultLoadEventListener.java:139)\n        at org.hibernate.event.def.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:179)\n        at org.hibernate.event.def.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:103)\n        at org.hibernate.impl.SessionImpl.fireLoad(SessionImpl.java:878)\n        at org.hibernate.impl.SessionImpl.get(SessionImpl.java:815)\n        at org.hibernate.impl.SessionImpl.get(SessionImpl.java:808)\n        at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:301)\n        at $Proxy41.get(Unknown Source)\n        at com.approuter.maestro.opera.rdbms.RdbmsContextHolder.getRdbmsVariable(RdbmsContextHolder.java:108)\n        at com.approuter.maestro.opera.rdbms.RdbmsContextHolder.getVariable(RdbmsContextHolder.java:94)\n        at com.approuter.maestro.vm.Frame.getParameter(Frame.java:218)\n        at com.approuter.maestro.vm.Task.getParameter(Task.java:1267)\n        at com.approuter.maestro.vm.CallContextImpl.setOutputParameter(CallContextImpl.java:195)\n        at com.approuter.maestro.vm.CallContextImpl.getOutputParameterWriter(CallContextImpl.java:264)\n        at com.approuter.maestro.sdk.mpi.DynamicExecutableActivity$3$1.getWriter(DynamicExecutableActivity.java:249)\n        at com.approuter.module.xml.XmlSerializeTextActivity$XmlSerializeTextActivityInstance.serialize(XmlSerializeTextActivity.java:43)\n        at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at com.approuter.maestro.sdk.mpi.DynamicExecutableActivity.execute(DynamicExecutableActivity.java:332)\n        at com.approuter.maestro.activities.Invoke.call(Invoke.java:199)\n        at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at com.approuter.maestro.activities.Instruction.call(Instruction.java:22)\n        at com.approuter.maestro.vm.Program.call(Program.java:456)\n        at com.approuter.maestro.vm.Task.run(Task.java:580)\n        at com.approuter.maestro.vm.Task.run(Task.java:531)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:207)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\n        at java.lang.Thread.run(Thread.java:619)\nCleanup action completed\n\nHere is the relevant code from GenericActivationHolder.java\n\n        // synchronized (ps)\n        {\n            /* Has the activation class changed? */\n            if (gc != ps.getActivationClass())\n            {\n\n                // ensure the statement is valid by rePreparing it.\n                ps.rePrepare(getLanguageConnectionContext());  // <-- line 260\n\n                /*\n                ** If we get here, it means the PreparedStatement has been\n                ** recompiled.  Get a new Activation and check whether the\n                ** parameters are compatible.  If so, transfer the parameters\n                ** from the old Activation to the new one, and make that the\n                ** current Activation.  If not, throw an exception.\n                */\n                GeneratedClass      newGC = ps.getActivationClass();\n\n                BaseActivation      newAC = (BaseActivation) newGC.newInstance(lcc);  // <-- line 271\n\n                DataTypeDescriptor[]    newParamTypes = ps.getParameterTypes();\n\n\nAs you can see, the activation class returned by the ExecPreparedStatement is null as of line 271, even after having called a rePrepare(...) on the prepared statement  (line 260).  This is most likely due to a race condition.  Also note that the containing block was formerly synchronized, but has since been commented out.  From browsing the source in previous versions, the synchronized statement appears to have been commented out since before 10.0.2.1.  It appears the fix is to reintroduce the synchronized block, or at least make the block inside the if statement synchronized.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"35151","summary":"NullPointerException caused by race condition in GenericActivationHolder","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10050","value":"Blocker","id":"10050"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":13,"total":13,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12550146","id":"12550146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"body":"I patched a custom build with the following change to the execute() method in GenericActivationHolder\r\nand my stress test ran for over 24 hours without encountering an NPE, whereas before the change it\r\nwould get an NPE within about 9 hours.\r\n\r\nThe change is simply to synchronize on the prepared statement within the if statement. \r\n\r\n    public ResultSet execute() throws StandardException\r\n    {\r\n        /*\r\n        ** Synchronize to avoid problems if another thread is preparing\r\n        ** the statement at the same time we're trying to execute it.\r\n        */\r\n        // synchronized (ps)\r\n        {\r\n            /* Has the activation class changed? */\r\n            if (gc != ps.getActivationClass())\r\n            {\r\n              synchronized (ps)                 // <-- ADDED THIS LINE\r\n              {\r\n                // ensure the statement is valid by rePreparing it.\r\n                ps.rePrepare(getLanguageConnectionContext());\r\n\r\n                /*\r\n                ** If we get here, it means the PreparedStatement has been\r\n                ** recompiled.  Get a new Activation and check whether the\r\n                ** parameters are compatible.  If so, transfer the parameters\r\n                ** from the old Activation to the new one, and make that the\r\n                ** current Activation.  If not, throw an exception.\r\n                */\r\n                GeneratedClass      newGC = ps.getActivationClass();\r\n\r\n                BaseActivation      newAC = (BaseActivation) newGC.newInstance(lcc);\r\n\r\n                DataTypeDescriptor[]    newParamTypes = ps.getParameterTypes();\r\n\r\n                /*\r\n                ** Link the new activation to the prepared statement.\r\n                */\r\n                newAC.setupActivation(ps, ac.getScrollable());\r\n\r\n                newAC.setParameters(ac.getParameterValueSet(), paramTypes);\r\n\r\n\r\n                /*\r\n                ** IMPORTANT\r\n                **\r\n                ** Copy any essential state from the old activation\r\n                ** to the new activation. This must match the state\r\n                ** setup in EmbedStatement.\r\n                ** singleExecution, cursorName, holdability, maxRows.\r\n                */\r\n\r\n                if (ac.isSingleExecution())\r\n                    newAC.setSingleExecution();\r\n\r\n                newAC.setCursorName(ac.getCursorName());\r\n\r\n                newAC.setResultSetHoldability(ac.getResultSetHoldability());\r\n                if (ac.getAutoGeneratedKeysResultsetMode()) //Need to do copy only if auto generated mode is on\r\n                    newAC.setAutoGeneratedKeysResultsetInfo(ac.getAutoGeneratedKeysColumnIndexes(),\r\n                    ac.getAutoGeneratedKeysColumnNames());\r\n                newAC.setMaxRows(ac.getMaxRows());\r\n\r\n                // break the link with the prepared statement\r\n                ac.setupActivation(null, false);\r\n                ac.close();\r\n\r\n                /* Remember the new class information */\r\n                ac = newAC;\r\n                gc = newGC;\r\n                paramTypes = newParamTypes;\r\n              }  // <-- ADDED THIS LINE\r\n            }\r\n        }\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"created":"2007-12-10T18:36:52.353+0000","updated":"2007-12-10T18:36:52.353+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12550151","id":"12550151","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Just curious - do you see any performance drop from the added synchronization block, and if so how large?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-12-10T18:51:05.248+0000","updated":"2007-12-10T18:51:05.248+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12550154","id":"12550154","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"body":"I analyzed the numbers and there was no performance drop.  This is most likely because the synchronized block inside the if statement is not happening that often.\r\nIt would probably be different if the synchronized statement occurred outside of the if statement, as before.  I'm guessing the previous synchronized statement\r\nwas commented out for performance reasons.  Unfortunately, it allows race conditions to occur now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"created":"2007-12-10T19:08:37.145+0000","updated":"2007-12-10T19:08:37.145+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12550160","id":"12550160","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The discussion on DERBY-3024 may have some comments relevant to this issue. Do you have a repro that you can share with us? Does your stress test only execute a single statement, or is there some other background load (e.g., inserts, deletes, ddl)? I think it would be good if we could understand exactly what triggers the NPE. Then it's easier to see if this is the correct way to fix it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2007-12-10T19:31:51.369+0000","updated":"2007-12-10T19:31:51.369+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12550166","id":"12550166","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"body":"Unfortunately, I don't have a test case to share with you.  Yes, there is quite a bit of other activity (inserts, deletes, selects, etc).\r\n\r\nHowever, looking at the code it is easy to see how such a race condition might occur.  My observations:\r\n\r\n1)  The code is failing because ps.getActivationClass returns null after a ps.rePrepare\r\n2)  The only place that calls setActivationClass(null) on a ps is GenericStatement.prepMinion\r\n3)  GenericStatement.prepMinion is called from GenericStatement.prepare, which is called from GenericPreparedStatement.rePrepare, so it looks like it may be a race condition between two concurrent calls to GenericPreparedStatement.rePrepare.\r\n4)  If you look at other code in GenericPreparedStatement, you see the following, which indicates that it may be a good idea to synchronized on the ps when calling ps.rePrepare and then ps.getActivationClass immediately after.\r\n\r\n    public Activation getActivation(LanguageConnectionContext lcc,\r\n                                    boolean scrollable)\r\n        throws StandardException\r\n    {\r\n        Activation ac;\r\n        synchronized (this) {\r\n            GeneratedClass gc = getActivationClass();\r\n\r\n            if (gc == null) {\r\n                rePrepare(lcc);\r\n                gc = getActivationClass();\r\n            }\r\n\r\n            ac = new GenericActivationHolder(lcc, gc, this, scrollable);\r\n\r\n            inUseCount++;\r\n        }\r\n        // DERBY-2689. Close unused activations-- this method should be called\r\n        // when I'm not holding a lock on a prepared statement to avoid\r\n        // deadlock.\r\n        lcc.closeUnusedActivations();\r\n\r\n        return ac;\r\n    }\r\n\r\n5)  I'm not an expert on this code so the above is just conjecture :)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"created":"2007-12-10T19:56:21.048+0000","updated":"2007-12-10T19:56:21.048+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12551525","id":"12551525","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"body":"Robert,\r\n\r\nCould you please post a proper patch with your proposed changes for others to test and review as well?\r\nIt would also be good to assign this issue to yourself to indicate that you are working on it.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thomanie","name":"thomanie","emailAddress":"thomas dot nielsen at sun dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Nielsen","active":true},"created":"2007-12-13T14:54:57.087+0000","updated":"2007-12-13T14:54:57.087+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12551630","id":"12551630","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"body":"I've attached a patch file.  I'm not working on this any longer -- I've suggested the fix (just two lines) and my company has successfully run hundreds of tests with it.  I would suggest someone else verify my analysis of the race condition and then commit the change.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ryokota","name":"ryokota","emailAddress":"rayokota at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Yokota","active":true},"created":"2007-12-13T22:35:55.120+0000","updated":"2007-12-13T22:35:55.120+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12555295","id":"12555295","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The fix looks correct to me. We could probably make the synchronized block even smaller, since the last part of it only modifies the state of the activation, which is not shared between statements.\r\n\r\nIt would be interesting, though, if someone could shed some light on why the synchronization was commented out in the first place. This piece of code hasn't been changed since the code was donated to Apache, so the commit log doesn't tell us anything about it.\r\n\r\nThe synchronization statement that is commented out, enclosed the entire if statement, whereas the suggested fix only synchronizes the body of the if statement. I'm not sure, but I think this is fine, since the only risk is that we miss that someone else has recompiled/invalidated the plan, for which there are plenty of tests when we start executing the plan.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-02T12:49:16.086+0000","updated":"2008-01-02T12:49:16.086+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12559472","id":"12559472","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I think this patch (d3260.diff) which narrows down the synchronization block so that it only encloses the calls to rePrepare() and getActivationClass(), is sufficient to fix the NPE, but I can't tell for sure due to the lack of a reproducible test case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-16T12:25:40.577+0000","updated":"2008-01-16T12:25:40.577+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12559967","id":"12559967","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"My take on this is that if your patch passes the tests (and there are no other ill effects), we should just commit it and then close the issue.\r\nShould it re-surface we can always reopen, or create another issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-17T15:58:08.204+0000","updated":"2008-01-17T15:58:08.204+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12559968","id":"12559968","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"Since he created the latest patch","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-17T15:58:52.744+0000","updated":"2008-01-17T15:58:52.744+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12560973","id":"12560973","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Committed revision 613815.\r\n\r\nWill wait a few days before I back-port the fix to 10.3.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-21T09:49:22.231+0000","updated":"2008-01-21T09:49:22.231+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384127/comment/12561666","id":"12561666","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Merged to 10.3 (revision 614530)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2008-01-23T13:22:59.509+0000","updated":"2008-01-23T13:22:59.509+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3260/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06don:"}}