{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12349375","self":"https://issues.apache.org/jira/rest/api/latest/issue/12349375","key":"LUCENE-669","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12310854","id":"12310854","description":"","name":"2.1","archived":false,"released":true,"releaseDate":"2007-02-17"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2006-11-10 16:07:07.0","customfield_12312323":null,"customfield_12310420":"13083","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_7230131000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_7754526897","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2006-11-30T00:08:28.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-669/watchers","watchCount":0,"isWatching":false},"created":"2006-09-07T07:46:17.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.png","name":"Trivial","id":"5"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2007-02-27T18:10:34.889+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310236","id":"12310236","name":"core/store","description":"issues with store code (e.g. Directory)"}],"timeoriginalestimate":null,"description":"Hi all,\n\nI found a small problem in FSDirectory: The finalize()-methods of FSDirectory.FSIndexInput and FSDirectory.FSIndexOutput try to close the underlying file. This is not a problem unless the file has been closed before by calling the close() method. If it has been closed before, the finalize method throws an IOException saying that the file is already closed. Usually this IOException would go unnoticed, because the GarbageCollector, which calls finalize(), just eats it. However, if I use the Eclipse debugger the execution of my code will always be suspended when this exception is thrown.\n\nEven though this exception probably won't cause problems during normal execution of Lucene, the code becomes cleaner if we apply this small patch. Might this IOException also have a performance impact, if it is thrown very frequently?\n\nI attached the patch which applies cleanly on the current svn HEAD. All testcases pass and I verfied with the Eclipse debugger that the IOException is not longer thrown.","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10120","value":"Patch Available","id":"10120"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"27379","summary":"finalize()-methods of FSDirectory.FSIndexInput and FSDirectory.FSIndexOutput try to close already closed file","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=buschmic","name":"buschmic","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=buschmic","name":"buschmic","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":14,"total":14,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12448786","id":"12448786","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"This patch looks good to me.  It still applies cleanly to the current [Nov 10 2006] svn head, and I think there's very little risk.  I think it makes sense to guard against double-closing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2006-11-10T16:07:07.000+0000","updated":"2006-11-10T16:07:07.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12448894","id":"12448894","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=otis","name":"otis","emailAddress":"otis at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=otis&avatarId=15859","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=otis&avatarId=15859","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=otis&avatarId=15859","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=otis&avatarId=15859"},"displayName":"Otis Gospodnetic","active":true},"body":"Looks fine to me.\r\n\r\nMaybe change this a bit:\r\n   public void close() throws IOException {\r\n-    if (!isClone)\r\n-      file.close();\r\n+    if (!isClone) {\r\n+      if (file != null) {\r\n+        file.close();\r\n+        file = null;\r\n+      }\r\n+    }\r\n   }\r\n\r\nThat if (file != null) block could be replaced with closeFile() call, I think.\r\n\r\nAlso, what was closing the file when you run this in Eclipse?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=otis","name":"otis","emailAddress":"otis at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=otis&avatarId=15859","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=otis&avatarId=15859","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=otis&avatarId=15859","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=otis&avatarId=15859"},"displayName":"Otis Gospodnetic","active":true},"created":"2006-11-10T23:31:29.000+0000","updated":"2006-11-10T23:31:29.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12448908","id":"12448908","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"body":"The method closeFile() belongs to FSDirectory.FSIndexOutput, so I can't call it in FSDirectory.FSIndexInput.close(). (This is hard to see if you just look at the patch file). \r\n\r\nI added the method closeFile() to FSDirectory.FSIndexOutput, because the behaviour of finalize() and close() is slightly different: finalize() simply closes the file, whereas close() calls super.close() first and closes the file then. I didn't want to change this behavior, thus I can't just call close() from finalize().\r\n\r\nBut now I am actually wondering if this behavior is correct. super.close() triggers a flush of the buffer. So in the current Lucene code, FSDirectory.FSIndexOutput.close() triggers a flush, but FSDirectory.FSIndexOutput.finalize() doesn't. Shouldn't we call flush also inside finalize() surrounded by try/catch?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"created":"2006-11-11T00:35:16.000+0000","updated":"2006-11-11T00:35:16.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12452630","id":"12452630","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"body":"Since the new testcase TestStressIndexing has been added as part of the lockless commits I see this test failing regularly. In ten runs it failed four times with the following exception:\r\n\r\n    [junit] Testsuite: org.apache.lucene.index.TestStressIndexing\r\n    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 33.338 sec\r\n    [junit] ------------- Standard Output ---------------\r\n    [junit] java.io.IOException: The handle is invalid.\r\n    [junit] ------------- ---------------- ---------------\r\n    [junit] ------------- Standard Error -----------------\r\n    [junit] java.io.IOException: The handle is invalid.\r\n    [junit] at java.io.RandomAccessFile.close0(Native Method)\r\n    [junit] at java.io.RandomAccessFile.close(RandomAccessFile.java:573)\r\n    [junit] at org.apache.lucene.store.FSIndexInput.close(FSDirectory.java:537)\r\n    [junit] at org.apache.lucene.index.CompoundFileReader.close(CompoundFileReader.java:111)\r\n    [junit] at org.apache.lucene.index.SegmentReader.doClose(SegmentReader.java:252)\r\n    [junit] at org.apache.lucene.index.IndexReader.close(IndexReader.java:637)\r\n    [junit] at org.apache.lucene.index.MultiReader.doClose(MultiReader.java:235)\r\n    [junit] at org.apache.lucene.index.IndexReader.close(IndexReader.java:637)\r\n    [junit] at org.apache.lucene.search.IndexSearcher.close(IndexSearcher.java:74)\r\n    [junit] at org.apache.lucene.index.TestStressIndexing$SearcherThread.run(TestStressIndexing.java:101)\r\n    [junit] ------------- ---------------- ---------------\r\n    [junit] Testcase: testStressIndexAndSearching(org.apache.lucene.index.TestStressIndexing):\tFAILED\r\n    [junit] hit unexpected exception in search2\r\n    [junit] junit.framework.AssertionFailedError: hit unexpected exception in search2\r\n    [junit] at org.apache.lucene.index.TestStressIndexing.runStressTest(TestStressIndexing.java:140)\r\n    [junit] at org.apache.lucene.index.TestStressIndexing.testStressIndexAndSearching(TestStressIndexing.java:161)\r\n    [junit] Test org.apache.lucene.index.TestStressIndexing FAILED\r\n\t\r\nIt appears to be the same problem for which I opened this issue. After applying the patch I did not see the test failing anymore (I ran it about 20 times...)\r\n\r\nI attach a new version of this patch. Now FSDirectory.FSIndexOutput.finalize() simply calls close() which triggers a flush of the buffer. I don't see a reason not do that. Anybody does?\r\n\r\nAll unit tests pass with the new patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"created":"2006-11-26T06:56:59.000+0000","updated":"2006-11-26T06:56:59.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12453434","id":"12453434","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Hmmm.  Michael, how does the exception in this unit test tie into this issue?  Ie, I thought this issue was that only finalize would be doing a double-close?  I'm confused how the two are connected (it's awesome that your patch fixes this, but I'd like to understand why!).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2006-11-26T11:40:13.000+0000","updated":"2006-11-26T11:40:13.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12453819","id":"12453819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"body":"Mike,\r\n\r\nyou are right, it is very weird that 1) this problem happens and 2) my patch fixes it. It took me quite a while to figure out what the real problem is but I think I have at least a guess now. \r\n\r\nThe problem again only happens on an IBM JVM. It happens rarely with your unmodified TestStressIndexing. If I change this testcase so that is does not perform the stress test on a RAMDirectory but only on a FSDirectory it happens almost always. This is VERY weird, because I did not change the stress test at all... I just commented the lines\r\n\r\n//    // First in a RAM directory:\r\n//    Directory directory = new RAMDirectory();\r\n//    runStressTest(directory);\r\n//    directory.close();\r\n\r\nand suddenly every test fails with the IOException \"The handle is invalid\". So that makes me think it has something to do with garbage collection and the finalize() methods.\r\n\r\nNow if I just comment out the finalize() method of FSDirectory.FSIndexOutput the test passes. This is even stranger, because the IOException occurred in FSDirectory.FSIndexInput.close(), not in FSIndexOutput, so in a different class which uses hence a different file descriptor.\r\n\r\nSo I checked how java.io.FileDescriptor is implemented: It simply wraps an int value. I can't see how these int values are computed, because the open() method of RandomAccessFile is native. \r\n\r\nSo I believe the following happens:\r\n(1) FSIndexOutput uses a FileDescriptor with value x\r\n(2) FSIndexOutput.close() is called, so the underlying file is being closed\r\n(3) A new FSIndexInput instance is created by a searcher thread. This opens a RandomAccessFile. Because FileDescriptor x is not in use anymore, x is used as the value for the new FileDescriptor.\r\n(4) Now garbage collection kicks in. It removes the old instance of FSIndexOutput for which close() has been called already. So the garbage collector calls finalize() which calls RandomAccessFile.close() again which still uses the descriptor with value x. So this call of close() actually closes the file used by the IndexInput instance created in (3).\r\n(5) FSIndexInput.close() is called and tries to close the file which has been closed already in (4) and thus the IOException occurs.\r\n\r\nSo it seems to me that the IBM JVM makes file descriptor values available after a file has been closed, whereas Sun waits until the FileDescriptor instance is destroyed. This might be a bug in the JVM, but since this patch is very simple we could just use it to be on the safe side.\r\n\r\nDo you think this makes sense? Or does anybody have a better idea why commenting out the finalize() method in FSIndexOutput prevents FSIndexInput.close() from throwing the IOException? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"created":"2006-11-28T08:25:46.000+0000","updated":"2006-11-28T08:25:46.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12454037","id":"12454037","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Michael, which OS are you seeing the exception on?  I'm trying to repro on Linux w/ IBM's JVM 1.5.0 with no success.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2006-11-28T17:38:26.000+0000","updated":"2006-11-28T17:38:26.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12454076","id":"12454076","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"body":"I'm seeing the problem on Windows XP SP2, IBM JVM 1.5 SR3. I'm running the tests in eclipse.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"created":"2006-11-28T19:00:24.000+0000","updated":"2006-11-28T19:00:24.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12454098","id":"12454098","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"OK I will try to repro.\r\n\r\nIn the meantime, I like your theory above!  It seems very plausible that the 2nd close (during finalize) could [incorrectly] close what was in fact a newly opened descriptor (in use elsewhere).  This also means this bug is more serious that I had thought (I thought it would just throw exceptions up to the GC).\r\n\r\nOne way to be sure this theory is true is to instrument the finalize() to see that indeed it called close for the second time, and, the close succeeded (instead of throwing the original exception you saw).  Ie, if this event occurs and then corresponds to the above exception in the TestStressIndexing unit test, then we've got this explained, and, it's quite serious since in production this could in theory result in errant IOExceptions like the one above.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2006-11-28T20:11:03.000+0000","updated":"2006-11-28T20:11:03.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12454236","id":"12454236","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"body":"Mike,\r\n\r\nI tried to add some debug to FSIndexOutput and made another observation which makes this issue even odder! I added a boolean variable to FSIndexOutput with the name isOpen. I don't do anything with this variable, I just change the close() method from:\r\n\r\n  public void close() throws IOException {\r\n    super.close();\r\n    file.close();\r\n  }\r\n\r\nto \r\n\r\n  public void close() throws IOException {\r\n    super.close();\r\n    file.close();\r\n    isOpen = false;\r\n  }\r\n\r\nand suddenly the problem disappears! Now I change close() to\r\n\r\n  public void close() throws IOException {\r\n    super.close();\r\n    isOpen = false;\r\n    file.close();\r\n  }\r\n\r\nand the IOException occurs again. Notice that I don't use isOpen anywhere else in the code. So it seems that the problem only occurs if file.close() is the last instruction in close(). I bet this is a JVM bug, maybe the compiler makes some kind of optimization (maybe early freeing up the resources of the method's context that are on the stack while the last instruction of the method is being executed). So I'm not completely sure what the real problem is, but I'm pretty sure it is a JVM bug.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"created":"2006-11-29T06:09:09.000+0000","updated":"2006-11-29T06:09:09.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12454488","id":"12454488","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Ugh!  This bug is clearly a heisenbug.\r\n\r\nOK, I can also reproduce this on Windows when I use the IBM 1.5.0 JRE.\r\nI can't repro with the Sun 1.5.0_07 JRE.\r\n\r\nWhen I apply your patch, the IOException goes away.\r\n\r\nFurthermore, my best efforts to get a standalone test to show the\r\nerror have failed.  I don't understand what precise tickling is\r\nrequired to get the IOException to happen.\r\n\r\nFinally, I found this spooky very recent thread on java-user that\r\nlooks very much like this error (and was never resolved):\r\n\r\n    http://www.gossamer-threads.com/lists/lucene/java-user/40357\r\n\r\nI think in this case it was on Sun's JRE.  So I tried the test using\r\n\"java -server\" but it didn't fail.  Sigh.\r\n\r\nMy conclusion is: double-closing a RandomAccessFile is dangerous!  And\r\nquite possibly can cause problems for \"real\" use cases (ie, not just\r\nwhen testing under Eclipse).\r\n\r\nI will commit this patch.\r\n\r\nI made a couple of tiny changes: changed the name to \"isOpen\" and\r\nmoved up the \"isOpen = true\" to be right after the file is actually\r\nopened.\r\n\r\nI also like the change to flush the buffer on finalize (if the file is\r\nstill open).\r\n\r\nThanks Michael!\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2006-11-29T23:28:42.000+0000","updated":"2006-11-29T23:28:42.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12454505","id":"12454505","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"body":"Wow that was a tough one!\r\n\r\nThanks for trying so hard to reproduce it, Mike. And thanks for committing, the small changes you made to my patch sound good to me!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelbusch","name":"michaelbusch","emailAddress":"buschmic at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Busch","active":true},"created":"2006-11-30T00:46:18.000+0000","updated":"2006-11-30T00:46:18.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12470628","id":"12470628","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnewson","name":"rnewson","emailAddress":"rnewson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rnewson&avatarId=20246","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rnewson&avatarId=20246","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rnewson&avatarId=20246","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rnewson&avatarId=20246"},"displayName":"Robert Newson","active":true},"body":"\r\nThe close() method in RandomAccessFile is defined not to throw IOException if it's merely closed twice. The bug here is with the IBM JDK and not Lucene. \r\n\r\nThis stanza;\r\n\r\nfinal RandomAccessFile raf = new RandomAccessFile(\"/tmp/raf\", \"rw\");\r\n\t\tfor (int i = 0; i < 1000; i++) {\r\n\t\t\traf.close();\r\n\t\t}\r\n\r\nshould run fine everywhere, according to Javadocs;\r\n\r\nfile:///home/rnewson/Documents/jdk-1.5/api/java/io/Closeable.html#close()\r\n\"Closes this stream and releases any system resources associated with it. If the stream is already closed then invoking this method has no effect.\"\r\n\r\nThis behavior was clarified with the introduction of the Closeable interface in 1.5, so perhaps IBM are not to blame for this. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rnewson","name":"rnewson","emailAddress":"rnewson at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rnewson&avatarId=20246","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rnewson&avatarId=20246","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rnewson&avatarId=20246","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rnewson&avatarId=20246"},"displayName":"Robert Newson","active":true},"created":"2007-02-06T16:23:13.895+0000","updated":"2007-02-06T16:23:13.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12349375/comment/12476266","id":"12476266","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Closing all issues that were resolved for 2.1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2007-02-27T18:10:34.888+0000","updated":"2007-02-27T18:10:34.888+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-669/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i051qn:"}}