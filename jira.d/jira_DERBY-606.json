{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12317695","self":"https://issues.apache.org/jira/rest/api/latest/issue/12317695","key":"DERBY-606","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2006-08-28 17:52:19.0","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"22041","customfield_12310222":"3_*:*_1_*:*_4409494329_*|*_1_*:*_1_*:*_34832204000_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_33266003756","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-01-04T12:36:35.329+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-606/watchers","watchCount":1,"isWatching":false},"created":"2005-10-07T08:08:17.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"11.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/10993","id":"10993","description":"","name":"10.1.1.0","archived":false,"released":true,"releaseDate":"2005-08-03"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2008-01-24T13:09:59.054+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11412","id":"11412","name":"Store"}],"timeoriginalestimate":null,"description":"SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE fails with one of the following error messages when applied to a very large table (>2GB):\n\nLog operation null encounters error writing itself out to the log stream, this could be caused by an errant log operation or internal log buffer full due to excessively large log operation. SQLSTATE: XJ001: Java exception: ': java.io.IOException'.\n\nor\n\nThe exception 'java.lang.ArrayIndexOutOfBoundsException' was thrown while evaluating an expression. SQLSTATE: XJ001: Java exception: ': java.lang.ArrayIndexOutOfBoundsException'.\n\nIn either case, no entry is written to the console log or to derby.log.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"39605","summary":"SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE fails on (very) large tables","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jeff%40redcondor.com","name":"jeff@redcondor.com","emailAddress":"jeff at redcondor dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeffrey Aguilera","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jeff%40redcondor.com","name":"jeff@redcondor.com","emailAddress":"jeff at redcondor dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeffrey Aguilera","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Java 1.5.0_04 on Windows Server 2003 Web Edition","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":28,"total":28,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12431025","id":"12431025","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"body":"I can reproduce this failure in one of my  test scenarios on a very large table:\r\nij> call syscs_util.syscs_inplace_compress_table('APP','STOCK',1,1,1);\r\nERROR XSLB1: Log operation null encounters error writing itself out to the log stream, this could be caused by an errant log operation or internal log buffer full due to excessively large log operation.\r\nERROR XJ001: Java exception: ': java.io.IOException'.\r\n\r\nstock has 60million rows. \r\n\r\nschema for stock table.\r\nij> create table stock (\r\n        s_i_id          int NOT NULL,\r\n        s_w_id          smallint NOT NULL,\r\n        s_quantity      int NOT NULL,\r\n        s_dist_01       char(24) NOT NULL,\r\n        s_dist_02       char(24) NOT NULL,\r\n        s_dist_03       char(24) NOT NULL,\r\n        s_dist_04       char(24) NOT NULL,\r\n        s_dist_05       char(24) NOT NULL,\r\n        s_dist_06       char(24) NOT NULL,\r\n        s_dist_07       char(24) NOT NULL,\r\n        s_dist_08       char(24) NOT NULL,\r\n        s_dist_09       char(24) NOT NULL,\r\n        s_dist_10       char(24) NOT NULL,\r\n\r\n        s_ytd           decimal(8) NOT NULL,\r\n        s_order_cnt     int NOT NULL,\r\n        s_remote_cnt    int NOT NULL,\r\n        s_data          varchar(50) NOT NULL\r\n);\r\n\r\nThere is no error messages in derby.log.  I'll try to rerun the test and run with ij.execptionTrace=true to get the entire trace. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"created":"2006-08-28T17:52:19.000+0000","updated":"2006-08-28T17:52:19.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12431280","id":"12431280","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"body":"Here is the stacktrace:\r\nij version 10.2\r\nij> connect 'jdbc:derby:dbtpcc';\r\nij> call syscs_util.syscs_inplace_compress_table('APP','STOCK',1,1,1);\r\nERROR XSLB1: Log operation null encounters error writing itself out to the log stream, this could be caused by an errant log operation or internal log buffer full due to excessively large log operation.\r\nERROR XSLB1: Log operation null encounters error writing itself out to the log stream, this could be caused by an errant log operation or internal log buffer full due to excessively large log operation.\r\n\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.logAndDo(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.xact.Xact.logAndDo(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.LoggableAllocActions.actionCompressSpaceOperation(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.AllocExtent.compress(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.AllocPage.compress(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.FileContainer.compressContainer(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.BaseContainer.compressContainer(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.BaseContainerHandle.compressContainer(Unknown Source)\r\n\tat org.apache.derby.impl.store.access.heap.Heap.compressConglomerate(Unknown Source)\r\n\tat org.apache.derby.impl.store.access.RAMTransaction.compressConglomerate(Unknown Source)\r\n\tat org.apache.derby.iapi.db.OnlineCompress.truncateEnd(Unknown Source)\r\n\tat org.apache.derby.iapi.db.OnlineCompress.compressTable(Unknown Source)\r\n\tat org.apache.derby.catalog.SystemProcedures.SYSCS_INPLACE_COMPRESS_TABLE(Unknown Source)\r\n\tat org.apache.derby.exe.ac601a400fx010dx55efx588dx0000001d75e80.g0(Unknown Source)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\r\n\tat java.lang.reflect.Method.invoke(Method.java:391)\r\n\tat org.apache.derby.impl.services.reflect.ReflectMethod.invoke(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.CallStatementResultSet.open(Unknown Source)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.Main.go(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.Main14.main(Unknown Source)\r\n\tat org.apache.derby.tools.ij.main(Unknown Source)\r\nERROR XJ001: Java exception: ': java.io.IOException'.\r\njava.io.IOException\r\n\tat org.apache.derby.iapi.services.io.CompressedNumber.writeInt(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.CompressSpacePageOperation.writeExternal(Unknown Source)\r\n\tat org.apache.derby.iapi.services.io.FormatIdOutputStream.writeObject(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.log.LogRecord.writeExternal(Unknown Source)\r\n\tat org.apache.derby.iapi.services.io.FormatIdOutputStream.writeObject(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.log.FileLogger.logAndDo(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.xact.Xact.logAndDo(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.LoggableAllocActions.actionCompressSpaceOperation(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.AllocExtent.compress(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.AllocPage.compress(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.FileContainer.compressContainer(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.BaseContainer.compressContainer(Unknown Source)\r\n\tat org.apache.derby.impl.store.raw.data.BaseContainerHandle.compressContainer(Unknown Source)\r\n\tat org.apache.derby.impl.store.access.heap.Heap.compressConglomerate(Unknown Source)\r\n\tat org.apache.derby.impl.store.access.RAMTransaction.compressConglomerate(Unknown Source)\r\n\tat org.apache.derby.iapi.db.OnlineCompress.truncateEnd(Unknown Source)\r\n\tat org.apache.derby.iapi.db.OnlineCompress.compressTable(Unknown Source)\r\n\tat org.apache.derby.catalog.SystemProcedures.SYSCS_INPLACE_COMPRESS_TABLE(Unknown Source)\r\n\tat org.apache.derby.exe.ac601a400fx010dx55efx588dx0000001d75e80.g0(Unknown Source)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\r\n\tat java.lang.reflect.Method.invoke(Method.java:391)\r\n\tat org.apache.derby.impl.services.reflect.ReflectMethod.invoke(Unknown Source)\r\n\tat org.apache.derby.impl.sql.execute.CallStatementResultSet.open(Unknown Source)\r\n\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)\r\n\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.Main.go(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)\r\n\tat org.apache.derby.impl.tools.ij.Main14.main(Unknown Source)\r\n\tat org.apache.derby.tools.ij.main(Unknown Source)\r\nij> exit;\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=skambha","name":"skambha","emailAddress":"ksunithaghm at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunitha Kambhampati","active":true},"created":"2006-08-29T16:01:45.000+0000","updated":"2006-08-29T16:01:45.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12440827","id":"12440827","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"I was able to reproduce this error.\r\nI am working with 30 million rows of schema mentioned in the previous comments. Total size of the DB is about 12 GB.\r\n\r\nI am also able to reproduce this issue by just setting the truncate bit ('APP', 'TEST', 0, 0, 1). here, I am not sure if this has any dependency on the previous runs of Defragment operation, as I am working with the same DB setup. But, just setting the truncate bit is convinient and faster to debug the scenario.\r\n\r\nOn further investigation, It was found that while Allocated Extent associated with last allocated page is being compressed, All the pages are found to be free, thus new_highest_page is set to '-1'. Now, when the CompressSpaceOperation is being logged CompressedNumber.writeInt method is called with value -1. This method is written to throw exception if the value is less than Zero, hence the IOException occurs.\r\n\r\nIn my opinion, Having a scenario with new_highest_page set to -1 is valid and in such a case there should not be any issue logging such operation. But, I am no expert in the Store module and would like to  know If this assumption is wrong or if I am missing something. If I am on the right track then the fix would be to update CompressedNumber.writeInt method to handle *valid negative values.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-10-09T08:34:40.000+0000","updated":"2006-10-09T08:34:40.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12448803","id":"12448803","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Attaching a repro for this issue.\r\n\r\nThe idea for reproduction is to create a table with large number of records and delete most of them so that atleast the last AllocExtent  is empty and then attempt to do a inplace_compress. This demonstrates the scenario of compressing AllocExtent with new_highest_page = -1.\r\n\r\nI would like to add this testcase to the existing suite. Any thoughts on which suite would be the most appropriate for such case and if there is any existing test which I can extend to include this case instead ??","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-11-10T17:10:49.000+0000","updated":"2006-11-10T17:10:49.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12448813","id":"12448813","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Do you know how you are going to fix this issue, definitely consider upgrade implications of any change made.\r\n\r\nI think any change to allow CompressedNumber to write a negative number is likely not going to be backward\r\ncompatible - now maybe that does not matter as any attempt to write a negative number with it, is already a bug.\r\nThe bit patterns for the compressed number representation are pretty carefully chosen assuming non-negative\r\nnumbers.  This code is used extensively in every row/column on disk in the database, so requiring a hard \r\nupgrade of the format is a large issue.\r\n\r\na few easier paths:\r\n1) rewrite the log format for the record to not compress the numbers.  The space doesn't really matter as it doesn't happen very much.  As this would be a new log format it should be handled under hard upgrade.  The bug would\r\nnot be fixed under soft upgrade.  Probably should throw an error earlier if you see a negative number under\r\nsoft upgrade.  If we could set back time on the db this would seem the natural fix.  Or maybe if you are soft \r\nupgrade you change the -1 to be the last page in the conglomerate, which would mean in this special case\r\nthe code would think there was a free page when we know there aren't any, but this is only a hint anyway.  \r\nIf you go this route look at the upgrade tests and add a case for both soft and hard upgrade in 10.3.\r\n\r\n2) change the conglomerate code to not generate negative numbers, maybe use something like maxint or maxlong.  This will of course require looking at all the code that currently checks for -1.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2006-11-10T18:08:57.000+0000","updated":"2006-11-10T18:08:57.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12449683","id":"12449683","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Thanks mike for looking into this and also for the valuable suggestions. They were really helpful to put me in the right direction while I am working on this fix. and sorry, I could not write sooner.\r\n\r\nI realized that changing CompressedNumber to write negative values will not be appropriate, after looking at the bit patterns. That is for 2 reasons. 1, Need for hard upgrade and 2, the only possible negative value written by CompressedNumber is newHighestPage. So, It is not worth the effort of making it write negative\r\nvalues.\r\n\r\nSince this is a special case which is true only for CompressSpaceOperation, I was wondering if this can be handled by write/readExternal methods of CompressSpaceOperation itself. When log record is written for this case, a positive value is passed to the log and when it is read back, it is identified to be the correct value. Choosing this positive value would be very critical, I was thinking of Integer.MAX_VALUE. Please let me know if there are any sideaffects of this approach.\r\nThis can be considered for handling the soft upgrade mode case as well.\r\n\r\nI am also looking into your suggestions. Is it accepted to change the Log format of record only for one particular operation by not compressing the numbers or did you mean to not compress the numbers for all the operations ??\r\n\r\nI can extend the upgradetests based on the approach we agree upon. although, I havent had a chance to look at those tests yet.\r\nI would appreciate any more comments on this. Thanks.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-11-14T15:19:27.000+0000","updated":"2006-11-14T15:19:27.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12449751","id":"12449751","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"o my suggestion was to only change what this log record wrote, not all log records that used compressed number.  If you are going to change the format of what is written, then it seems simpler to just write the number uncompressed than to add an extra decoding.\r\nNote \"change\" the format is not really allowed.  What you need to do is support the old log record\r\nand add a new log record which has the changed format.  For soft upgrade you need to always read/write\r\nthe old log record.  For hard upgrade you need to write new format and be able to read both old and new log\r\nrecord, once you have hard upgraded you don't have to worry about older versions of the software encountering\r\nthis unknown new log record.\r\no note if you choose a fix which in any way alters what is written, I think you basically have to add a new log record\r\nin case of hard upgrade (and bug will continue to exist in soft upgrade).  \r\nYou can save copying code by having the new log record extend the existing one and just update the \r\ngetTypeFormatId(), readExternal(), writeExternal() routines.  This way soft upgrade can still read/write the old\r\nrecord.  Need some code to write the new vs. the old one in case of hard upgrade.  \r\no if you decide you want to look at runtime fix vs. log record fix let me know and maybe I can give some pointers.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2006-11-14T19:45:20.000+0000","updated":"2006-11-14T19:45:20.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12449853","id":"12449853","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Can this problem be soved by writing a different log records for this special case ?   If the rest of system is working fine with the current assumption that negative numbers are not be written to the log. \r\n\r\n\r\n-suresh\r\n\r\n\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-11-14T23:01:41.000+0000","updated":"2006-11-14T23:01:41.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12450071","id":"12450071","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Thanks Mike and Suresh.\r\n\r\nYes. It makes sense to only change the log record format for this special case.\r\n\r\nLooking at possible runtime fix, I feel, this approach would create some Major-Minor version checks in write/readExternal methods which would not be ideal. Approach of Extending the class would make the changes much simpler.\r\n\r\nSo, currently this is what I have in mind. CompressSpacePageOperation will be extended to form a new class CompressSpacePageOperation10_3. This class over override readExternal, writeExternal and getTypeFormatId methods. read/writeExternal methods would write the new_highest_page field without compression and the other fields are compressed and written to the Log. A new ID StoreFormatIds.LOGOP_COMPRESS10_3_SPACE is created.\r\n\r\nNow, when LOggableAllocActions creates CompressSpacePageOperation, a new check will be added to identify whether this is a soft or hard upgrade. The only way to do this is by calling LogToFile.checkVersion(Major, Minor). Based on the flag returned either the old CompressSpacePageOperation or the new one will be called. LogFactory is not accessible at this level in the code and hence calling checkVersion is not possible. Xact has no interface to get XContext so there isnt any way to reach LogFactory. I need some inputs here.\r\n------\r\nWhile investigating, I also realized that even if you write the record with newHighestPage set to -1, the log is written successfully but the transaction does not commit because AllocPage.compressSpace has an assertion (only in DEBUG mode btw) which checks if the newHighestPage is not positive. Thus an Exception is thrown. I think this assertion check is invalid. Also it causes inconsistency in the behavior between sane-insane builds as it only happens when SanityManager.DEBUG is true. Will it be okay to remove this assertion ?\r\n\r\n-----\r\nLastly, If the compress space operation involving data pages spanned across multiple AllocExtents (which is the current case), the compress operation happens only on the last page. Ideally, it should clean up the last AllocPage (with referred datapages) and also clean up data pages which might be empty in the previous AllocationExtent. I realized this when I saw a very small decrease in physical size when I ran the reproducible testcase. Can someone please confirm this ?? So, I can file a JIRA for this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-11-15T15:39:41.000+0000","updated":"2006-11-15T15:39:41.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12450263","id":"12450263","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"I agree with you , it might be trickey to  check  db versions especially on  a readExpternal() call.   It would be nice to avoid creating another class.  Hopefully some one on the list some has  ideas to do that. \r\n\r\nIf you would like to proceed with a new class approach.  It would be better to make the new class handle \r\nthe old behavior . i.e   create a new class  CompressSpacePageOperation_V10_2  that extends the    CompressSpacePageOperation  and  change the format id for  the  CompressSpacePageOperation  class to  a new one.   This way it is easier to read the code,  and remove the _v0 class later   when upgrade  is not supported from old version. \r\n\r\nLooks like  assertion check is incorrect  in the case you mentioned,   please  fix it.   I would  not call the assertion code under debug is  in-consistent  with insane-builds unless  behaviour is different.  In debug builds it  is  normal to do some extra checks ,  they are useful   to get some information   when stress tests fail after  a few days run. \r\n \r\nactionCompressSpaceOperation() in   LoggableAllocaction  has  RawTransaction   as argument. \r\nIt would be ok  to  expose the checkVersion method from logFactory  to RawTransaction,  Concrete implementation of     RawTransaction   abstract  class ,   raw/xact/Xact.java  already  has the logFactory information. \r\n\r\nI would expect   compress operation to  work even if there are  multiple  alloc pages, .may  be there is bug some where ; please file a JIRA. \r\n\r\nThanks \r\n-suresh\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-11-16T02:52:43.000+0000","updated":"2006-11-16T02:52:43.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12450437","id":"12450437","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Thanks Suresh for your comments.\r\n\r\nI got a little further with the additional Class approach and as you mentioned I had to create another child of CompressSpacePageOperation that will behave just like the original one was until now. But, The new class will still use the typeFormatId of the base class.\r\nI also added another method in RawTransaction that returns LogFactory and with this the DB versio checks are made in LoggableAllocActions, thanks for this suggestion. I hope this will be useful in the future as well. The assertion is still kept, but modified to handle -1 value.\r\n\r\nhaving said that, I will be glad to consider any other approach than creating these child classes. But, the approach of doing db versions checks in read/write methods, I believe, isnt a good option.\r\n\r\nI shall move onto extending OnlineCompressTest to cover this case.\r\nI am currently running derbyall with my patch and shall attach it soon.\r\n\r\n\r\nThanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-11-16T16:00:58.000+0000","updated":"2006-11-16T16:00:58.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12450734","id":"12450734","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"I am attaching a preliminary patch. This does not include changes to upgradeTest and also the repro is not added to the testsuite yet. But, This is a initial proposal for the fix for the bug and the fix in itself is complete.\r\n\r\nI have ran derbyall and junit tests and have not seen any relevant new failures.\r\n\r\nAs mentioned in my earlier comments, this fix adds two new classes and some code changes to support that. Also, it adds a new interface in RawTrans to expose to LogFactory. \r\nI would appreciate review comments on this.\r\n\r\nThanks\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-11-17T13:23:20.000+0000","updated":"2006-11-17T13:23:20.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12450785","id":"12450785","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"I looked at the OnlineCompressTest and realized that to reproduce this case, the simplest way is to increase the number of rows added to the table in one of the existing testcases. However, I see a following comment in the testcase,\r\n\r\n<snip>\r\n     * 4000 rows  - reasonable number of pages to test out, still 1 alloc page\r\n     *\r\n     * note that row numbers greater than 4000 may lead to lock escalation\r\n     * issues, if queries like \"delete from x\" are used to delete all the \r\n     * rows.\r\n</snip>\r\n\r\nThis is very relevant to the testcase which I would like to add and so, would like to know the Lock Escalation issue here. Has anyone seen this kind of issue before ? any pointers ??\r\n\r\nThe repro attached to the bug has almost similar testcase, I have not seen any problems with that so far. So, it might be that the Lock Escalation issue has already been fixed. (I did not find any related JIRA for this though). Can someone please confirm this ?? I can update the comments if that problem has been fixed.\r\n\r\nThanks\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-11-17T16:42:51.000+0000","updated":"2006-11-17T16:42:51.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12454241","id":"12454241","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Attaching next version of patch. This patch now includes changes to the OnlineCompressTest and UpgradeTest.\r\n\r\nI have created Upgrade_10_2_10_3, but it is not currently included in the upgrade.runall, because the 10.2 binaries are not available in the trunk for upgrade testing.\r\n\r\nThe patch has grown more than what I had imagined. I would really appreciate review comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-11-29T07:18:18.000+0000","updated":"2006-11-29T07:18:18.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12454250","id":"12454250","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fuzzylogic","name":"fuzzylogic","emailAddress":"mcintyre dot a at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andrew McIntyre","active":true},"body":"The 10.2.1.6 jars are checked into the repository and available at http://svn.apache.org/repos/asf/db/derby/jars/10.2.1.6/. To add them to a trunk checkout, execute the following from the top of a checkout of the trunk:\r\n\r\nsvn pe svn:externals tools/testing\r\n\r\nand then add a line for the 10.2 jars, e.g.:\r\n\r\nderby/10.2 https://svn.apache.org/repos/asf/db/derby/jars/10.2.1.6\r\n\r\nThe next time you do an svn update, the 10.2.1.6 jars will be checked out to tools/testing/derby/10.2\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fuzzylogic","name":"fuzzylogic","emailAddress":"mcintyre dot a at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Andrew McIntyre","active":true},"created":"2006-11-29T08:08:11.000+0000","updated":"2006-11-29T08:08:11.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12454827","id":"12454827","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Thanks for working on this issue. Patch looks good , i have only few minor comments. \r\n\r\n1) Two new classes CompressSpacePageOperation10_2.java and\r\nCompressSpacePageOperation10_3.java may not be required. I think CompressSpacePageOperation.java  \r\ncan be modified to handle the new 10.3/10.2 behavior and create one new class\r\nCompressSpacePageOperation10_2  that extends the CompressSpacePageOperation\r\nand sets the old format id.\r\n\r\n\r\n2) CompressSpacePageOperation10_2.java Copyright has a wrong class name.\r\n\r\nIndex: java/engine/org/apache/derby/impl/store/raw/data/CompressSpacePageOperation10_2.java\r\n\r\n+   Derby - Class org.apache.derby.impl.store.raw.data.ChainAllocPageOperation\r\n\r\n\r\n3) Minor comment error in \r\n   Index: java/engine/org/apache/derby/iapi/store/raw/RawStoreFactory.java\r\n \r\n+\t/** Derby Store Minor Version (2) **/\r\n+\tpublic static final int DERBY_STORE_MINOR_VERSION_3    = 3;\r\n\r\n\r\nversion number in the comment , should be 3. \r\n\r\n4) Great work with tests.  One minor nit : \r\nWhen I looked first time , following change in the OnlineCompressTest.java, \r\ngot me confused. \r\n\r\n \r\n+        int[] test_cases = {104000};\r\n \r\n+        for (int i = 0; i < test_cases.length; i++)\r\n+        {\r\n+            // first create new table and run the tests.\r\n+            createAndLoadLargeTable(conn, true, table_name, test_cases[i], 0);\r\n+\r\n\r\n\r\nI am sure you must have added it to try different no of rows to reproduce the\r\nproblem. Now that you know the no of of rows required to reproduce\r\nthe problem. It might be better to change the code to noRows= 104000  \r\ninstead of test_cases; just to make it more clear.\r\n\r\n\r\n5) tests/upgradeTests/Upgrade_10_2_10_3.java  has to be disabled due to\r\n   DERBY-1135 bug ,  please see build.xml in this directory. \r\n\r\n   There is another Jira entry\r\n   (http://issues.apache.org/jira/browse/DERBY-1689)  to add upgrade tests\r\n   for 10.2 to 102.  If you would like to address the 10.2 to 10.3 upgrade\r\n   support in a  separate patch, that is fine with me. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-12-01T08:06:03.000+0000","updated":"2006-12-01T08:06:03.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12454834","id":"12454834","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Attaching next version of the patch!\r\n\r\nThis version now will work well with 10.2 binaries integrated in the trunk.\r\n\r\nAnother modification is that, the 10.1 -10.3 upgrade is now taken out. I believe it was a temporary workaround when we transitioned to 10.3. So, the only upgradeTest that should be run is Upgrade10.2_10.3 and ofcourse this test also has cases for previous upgrades as it uses the same framework and the new case is added to the existing framework.\r\n\r\nI am going to file a bug for cleaning up the 10.1 related files.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-12-01T08:34:35.000+0000","updated":"2006-12-01T08:34:35.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12454932","id":"12454932","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Thanks a lot suresh,\r\n\r\nI think I misunderstood the proposal you gave initially about CompressSpacePageOperation10_2 class. This new solution of having only 1 class extending the old one to support old behavior seems to be the right thing to do. I have done so, but  the main class will need to have one extra check which I could not avoid. Let me know if you have any workaround to this small nit in the new approach.\r\n\r\nI have also addressed your comments in this new set of patches. I have created 2 patches, one which includes implementation and test changes and another one specifically for upgradeTest changes. Thanks for this tip.\r\n\r\nI would really appreciate review comments on this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-12-01T15:26:00.000+0000","updated":"2006-12-01T15:26:00.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12455046","id":"12455046","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Thanks for considering my suggestions.  Extra check(if( !(this instanceof\r\nCompressSpacePageOperation10_2) ) in the  CompressSpacePageOperation.java \r\nis ok. You need some kind of check in  to correctly call the \r\nwriteExternal/readExternal. Only othe alternative I can think of is to \r\ncheck for formatId instead of using the \"instanceof\". \r\n\r\n\r\nWhile reviewing the latest patches(derby606_impl-v4.diff and derby606_upgrade-v4.diff ), \r\nnoticed you are disabling IN_PLACE_COMPRESS  on soft-upgrade to 10.3, in my \r\nview that is incorrect. If I understand correctly this bug happens only on \r\nlarge data size and does not leave the database in the corrupt state. \r\n\r\nI believe right thing to do is to use the old log record on soft-upgrade to\r\n10.3 and allow compress. If you would like to be real nice to the users \r\nthen you can catch the bugs case and throw an error message, but I think it is\r\nnot required; users hitting the bug case first time on a a soft-upgrade is \r\nalmost zero probability. \r\n  \r\nIndex: java/engine/org/apache/derby/impl/store/raw/data/LoggableAllocActions.java\r\n\r\n+\tif( t.getLogFactory().checkVersion(RawStoreFactory.DERBY_STORE_MAJOR_VERSION_10,\r\n+\t\t\t\t\tRawStoreFactory.DERBY_STORE_MINOR_VERSION_3,\r\n+\t\t\t\t\t\"CompressSpace operation on an existing database\") )\r\n\r\nAbove call throws an exception if version is not at the correct level, in this\r\ncase if not at  10.3. I think if you pass \"null\" for feature name , it will\r\njust return true/false. \r\n\r\n\r\nPlease also fix the upgrade tests also, if you decide to allow compress on soft-upgrade. \r\n\r\nI am sorry for missing this in my previous review. \r\n\r\n\r\nThere is one major problem with the latest patch, it can make database \r\nnon-recoverable on upgrade from 10.2.\r\n\r\n1) Formatid are incorrect for CompressSpacePageOperation10_2 and    CompressSpacePageOperation. \r\n   CompressSpacePageOperation should have the new format id and  the\r\n   CompressSpacePageOperation10_2 should have the OLD one. \r\n\r\nRelated changes :\r\n\r\nIndex: java/engine/org/apache/derby/impl/store/raw/data/CompressSpacePageOperation10_2.java\r\n+\r\n+\t/**\r\n+\t\tReturn my format identifier.\r\n+\t*/\r\n+\tpublic int getTypeFormatId() {\r\n+\t\treturn super.getTypeFormatId();\r\n+\t}\r\n\r\nI am sure , you wanted it to return StoredFormatIds.LOGOP_COMPRESS10_2_SPACE;  \r\n\r\nand  also :\r\nIndex: java/engine/org/apache/derby/iapi/services/io/RegisteredFormatIds.java\r\n+\t/* 465 */   \"org.apache.derby.impl.store.raw.data.CompressSpacePageOperation10_2\",\r\n\r\nThat shoud have been\r\n\"org.apache.derby.impl.store.raw.data.CompressSpacePageOperation\" and you\r\nshould change existing entry for compress to \"CompressSpacePageOperation10_2\".\r\n\r\nand the format id numbers should get changed  also :\r\nIndex: java/engine/org/apache/derby/iapi/services/io/StoredFormatIds.java\r\n         public static final int LOGOP_COMPRESS_SPACE =\r\n                 (MIN_ID_2 + 454);\r\n \r\n+\t/* org.apache.derby.impl.store.raw.data.CompressSpacePageOperation10_2 */\r\n+        public static final int LOGOP_COMPRESS10_2_SPACE =\r\n+                (MIN_ID_2 + 465);\r\n+\r\n\r\n\r\n\r\n2) In the upgrade test , why you need to insert  104000 rows ? I think you \r\ncan produce the compress log record with less number of records and reduce\r\nthe test time.  \r\n\r\n+\t\t\ttry {\r\n+\t\t\t\tcheckDataToCase606(conn, 0, 104000, true);\r\n+\t\t\t} catch(SQLException sqle) {\r\n+\t\t\t\tpassed = isExpectedException(sqle, \"XSLB1\");\r\n+\t\t\t}\r\n\r\n\r\n\r\nThanks\r\n-suresh","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-12-01T23:33:03.000+0000","updated":"2006-12-01T23:33:03.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12455260","id":"12455260","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Thanks Suresh for catching that!\r\n\r\nI have created new patches based on your feedback and they are attached.\r\n\r\nRegarding the UpgradeTest  with 10400 rows, I believe it is good to test the soft and hard upgrade when the edge case is hit. Hence I use the case almost as is from OnlineCompressTest.\r\n\r\nThis case is not only about large size table data but it happens when data stored  (in multiple allocation pages) is deleted to an extent where the last allocation page is completely empty. In this case, when the compress is called, the operation does not complete successfully because the log record is not written due to the fact that newHighestPage is negative.\r\n\r\nTo simulate this, I created a table with data (for a particualr db schema) that will just grow beyond the size that can be managed by 1 alloc page. Then deleted enough data to make sure the last allocpage is empty. The combination of 10400 + the db schema is optimized for minimum time. I could not get the other 2 db schemas in OnlineCompressTest to work for this case, for a shorter duration.\r\n\r\nThis is a large patch and Comments on this new patch are most welcome.\r\n\r\n-Mayuresh\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-12-04T09:23:40.000+0000","updated":"2006-12-04T09:23:40.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12456260","id":"12456260","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"derby606_impl-v5.diff :\r\n\r\nThis patch looks good to be committed. Did you run the regression tests ?\r\nFor some reason I can not apply this patch to my code-line.  \r\nCould you please recreate the patch and post it. \r\n\r\n\r\n$ patch -i c:/temp/derby606_impl-v5.diff\r\npatching file `java/engine/org/apache/derby/impl/store/raw/xact/Xact.java'\r\npatching file `java/engine/org/apache/derby/impl/store/raw/data/CompressSpacePag\r\neOperation10_2.java'\r\npatch: **** malformed patch at line 120: Index: java/engine/org/apache/derby/imp\r\nl/store/raw/data/LoggableAllocActions.java\r\n\r\n\r\n1) One minor thing I noticed is you did not update the MAX_ID_2 in the\r\nfollowing file :\r\n\r\nIndex: java/engine/org/apache/derby/iapi/services/io/StoredFormatIds.java\r\n\r\npublic static final int MAX_ID_2 =\r\n                (MIN_ID_2 + 464);\r\n\r\n\r\nFile  derby606_upgrade-v5.diff :\r\n--------------------------------\r\n\r\nAs Bryan and others pointed out Derby supports upgrade from 10.1 to 10.3\r\nalso. This patch seems to incorrectly remove 10.1 to 10.3 upgrade test.\r\n\r\nAfter your latest change to allow Compress on softupgrade , following error\r\ncheck  is not valid any more:\r\n\r\n+\t\t\ttry {\r\n+\t\t\t\tcheckDataToCase606(conn, 0, 104000, true);\r\n+\t\t\t} catch(SQLException sqle) {\r\n+\t\t\t\tpassed = isExpectedException(sqle, \"XSLB1\");\r\n\r\nNow the above check  is going to fail on softupgrade because of the derby-606 bug. \r\n\r\nAs I understand changes to upgrade is going to test :\r\n\r\n1) Compress Log Record writes on compress operation.\r\n2) On hard upgrade , derby-606 problem does not occur. \r\n\r\nFollowing cases is not tested : \r\n1) Replay of the old compress log record  on softupgrade/hardupgrade (\r\nreadExternal() execution), because database is shutdown after each upgrade test\r\nphase. This might be tricky to do because you need to simulate crash-recovery, \r\nyou can work on it separately if you are interested. Let's try to get the \r\ncurrent patches committed.     \r\n\r\n\r\nThanks\r\n-suresh","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-12-06T23:30:36.000+0000","updated":"2006-12-06T23:30:36.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12456356","id":"12456356","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"new patch for the implementation is attached.\r\n\r\nI had some problems with svn:eol settings and they have been fixed now and the patch has been updated and also tested.\r\nI have also modified the StoredFormatIds to correct the max_id now. Thanks Suresh for catching that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-12-07T11:22:34.000+0000","updated":"2006-12-07T11:22:34.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12456497","id":"12456497","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"> As Bryan and others pointed out Derby supports upgrade from 10.1 to 10.3\r\n> also. This patch seems to incorrectly remove 10.1 to 10.3 upgrade test.\r\n\r\nI considered this. The current framework for upgrade testing needs some modification to support upgrade from more than 1 prev releases. build.xml should create <test>_app.properties file for each such test in the upgradeSuite. Also, upgrade from 10.0 to 10.3 should be considered.  I looked into 10.2 and 10.1 workspaces and they contain only one test. One good thing is that, as mentioned in my other comments, UpgradeTester still includes all the testcases for upgrade from 10.0 and 10.1, so this work can be used to make upgradetest support upgrade from 10.0 and 10.1 to 10.3.\r\n\r\nIn my opinion, all This is probably out of scope for this bug. I feel, A follow up patch tracked by different JIRA entry can handle this effort. It might be useful to comment out the lines instead of removing, I shall do that. Please let me know what do you think.\r\n\r\n------------------\r\n\r\nAttached is another patch for upgrade tests. I simplified the 606 case to call compress for common scenario where old log record is used, instead of exercising the bug case. This case in Upgrade testing framework will also work with old/new releases and not just the combination of 10.2-10.3.\r\n\r\n\r\nThanks for your help !!\r\n-- Mayuresh\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-12-07T17:52:39.000+0000","updated":"2006-12-07T17:52:39.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12456705","id":"12456705","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"Suresh pointed out that 10.1 to 10.3 upgrade test will be more appropriate at this time. I think that is wise also because it will still exercise a relevant upgrade for this bug.\r\n\r\nSo, in the new attached patch, I have cleaned up 10.2-10.3 test related code and the patch looks neat now. It  only has a added testcase to UpgradeTester with corresponding changes to the out file.\r\n\r\nplease note that, we are not including 10.2-10.3 upgrade tests here, so the patch does not include additional trunk settings to checkout 10.2 binaries. This will be added as a part of fix to 1689, I feel.\r\n\r\nthanks\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2006-12-08T05:52:40.000+0000","updated":"2006-12-08T05:52:40.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12456988","id":"12456988","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"body":"Committed     derby606_impl-v6.diff and derby606_upgrade-v7.diff   to trunk,  revision 484797.  Thanks Mayuresh. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tsuresh","name":"tsuresh","emailAddress":"suresh dot thalamati at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suresh Thalamati","active":true},"created":"2006-12-08T21:51:35.000+0000","updated":"2006-12-08T21:51:35.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12461933","id":"12461933","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Cleared patch available flag.\r\nCan anyone help me to confirm and update the status of this issue?\r\nIt is still reported as in progress and unresolved, which indicate there are more patches to come.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2007-01-03T10:32:43.424+0000","updated":"2007-01-03T10:32:43.424+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12462202","id":"12462202","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"body":"patch has been committed by Suresh on 12/09. No more pending patches, and No backports required.\r\nChanging the status to Resolved.\r\n\r\nThanks Kristian for pointing this out.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mayureshnirhali","name":"mayureshnirhali","emailAddress":"Mayuresh dot Nirhali at Sun dot COM","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mayuresh Nirhali","active":true},"created":"2007-01-04T12:36:35.245+0000","updated":"2007-01-04T12:36:35.245+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12317695/comment/12562046","id":"12562046","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"body":"This issue is resolved and has not been updated in the last 12 months (since 24/Jan/07). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dyret","name":"dyret","emailAddress":"Dyre dot Tjeldvoll at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dyre Tjeldvoll","active":true},"created":"2008-01-24T13:09:59.051+0000","updated":"2008-01-24T13:09:59.051+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-606/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0756f:"}}