{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12673175","self":"https://issues.apache.org/jira/rest/api/latest/issue/12673175","key":"LUCENE-5272","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324999","id":"12324999","description":"Major release after 4.5","name":"4.6","archived":false,"released":true,"releaseDate":"2013-11-24"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321663","id":"12321663","description":"Current trunk","name":"Trunk","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-10-13 13:31:44.029","customfield_12312323":null,"customfield_12310420":"352798","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_402483749_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2013-10-14T21:11:23.969+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-5272/watchers","watchCount":2,"isWatching":false},"created":"2013-10-10T05:23:20.263+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-10-15T12:57:13.673+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310232","id":"12310232","name":"core/index","description":"issues with indexing code"}],"timeoriginalestimate":null,"description":"It's a simple bug, reproduced by this simple test:\r\n\r\n{code}\r\n  public void testEnsureCapacity() {\r\n    OpenBitSet bits = new OpenBitSet(1);\r\n    bits.fastSet(0);\r\n    bits.ensureCapacity(5); // make room for more bits\r\n    bits.fastSet(2);\r\n  }\r\n{code}\r\n\r\nThe problem is that {{numBits}} which is used only for assrets isn't modified by ensureCapacity and so the next fastSet trips the assert. I guess we should also fix ensureCapacityWords and test it too.\r\n\r\nI may not be able to fix this until Sunday though, so if anyone wants to fix it before (maybe it can make it into 4.5.1), feel free.","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10120","value":"Patch Available","id":"10120"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"353085","summary":"OpenBitSet.ensureCapacity does not modify numBits","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":13,"total":13,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13792338","id":"13792338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"After fixing the bug, I realized that the API of OBS is somewhat broken:\r\n\r\n* setBits lets you set a {{long[] bits}}, but doesn't modify neither numBits nor wlen.\r\n** Nothing uses this method, so I'll nuke it. There's a ctor for that, so I don't see the advantage.\r\n\r\n* setNumWords has the same issues\r\n** Nuke it too, one can call {{new OpenBitSet(other.getBits(), newNumWords)}}.\r\n\r\n* get and fastGet don't work the same. If you create OBS(3) and call get/fastGet(5) the result is different:\r\n** fastGet trips the assertion\r\n** get returns false\r\nI'm not sure if get is wrong since if OBS allows growing, it's technically correct to return false. But then, should it change numBits (because now the app effectively 'grew' the array)? If it doesn't, then stupid code like {{get(5); fastSet(5);}} fails because numBits isn't modified...\r\nI don't know if we should fix it because then get() becomes an API which modifies the OBS instance (which is unexpected).\r\n\r\nMaybe we should get rid of numBits in OBS entirely? If someone called ensureCapacity(5) and does set/fastSet(17), maybe it's ok if we sometimes succeed in both? set() will grow the bits if needed, fastSet will trip an AIOOBE which is OK I think .. if you want to use fastSet, make sure you call ensureCapacity before.\r\n\r\nIn the meanwhile, I've discovered I can grow a FixedBitSet very easily by allocating a new FBS instance, and FBS doesn't suffer from these inconsistencies, so maybe I'll just use it for now to make progress, but would still like to resolve the issues raised here.\r\n\r\nOne possible solution is to offer a convenient ctor to FBS, like FixedBitSet(FixedBitSet other, int numBits) which will arraycopy the bits from other. The only thing we add here is the FBS object allocation, vs OBS which only grows the internal array, but I think that's not critical. If we do that, then we can get rid of OBS entirely I think ... or remove all the fastXXX methods and make it more like GrowableBitSet.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-10-11T05:00:25.843+0000","updated":"2013-10-11T05:00:25.843+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13792342","id":"13792342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Progress thus far: fixes ensureCapacity(Words) to set numBits correctly and adds a testcase. If we choose to get rid of numBits entirely, then it can be even more simplified.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-10-11T05:03:52.948+0000","updated":"2013-10-11T05:03:52.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13793637","id":"13793637","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"I was about to post an updated patch when I realized that now {{OBS.length()}} is broken. It currently returns {{bits.length << 6}}, which is completely unrelated to neither {{wlen}} nor {{numBits}}. Bits.length() javadocs say: \"Returns the number of bits in this set\", what should we return?\r\n\r\n* If we want to adhere to the jdocs, we should return {{numBits}}, but then numBits cannot be an assertion-only member.\r\n* If we want to return {{wlen << 6}}, then we should nuke {{numBits}} because otherwise you will call {{length()}} to receive e.g 64 but when you will call {{fastSet(52)}} you may trip the assertion error.\r\n* If we return bits.length, then we can nuke both wlen and numBits.\r\n\r\nActually, OpenBitSetIterator is also broken, because it iterates up to wlen, again with no relation to numBits. And of course it's now unrelated to bits.length too, so e.g. if you call OBS.length() and compares that with the number of nextDoc() calls the iterator returns (say when all bits are 'set'), the numbers are not equal...\r\n\r\nWhy do we need these two fields? As far as I can tell, wlen is only < bits.length when someone shares a long[] but limit its size. Do we really care about this case? I can understand the reason to keep {{numBits}} because e.g. you want to adhere to Bits spec:\r\n\r\n* Return numBits from length()\r\n* Bits.get(int) document that you should not call it with out of bounds indexes\r\n* Iterator should iterate up to the last set/cleared bit\r\n\r\nBut it has to be a first-class member, not an assert-only one.\r\n\r\nAnother quirkiness, what should the app expect to happen if it calls {{obs.get(170)}} (and say bits.length=1)? It currently receives false and not e.g. AIOOBE. But this could falsly lead to calling fastSet(170) thinking that the bitset is at the right size. I'm not saying this is a super-duper usecase we should handle, since if an app calls fastSet, it should also call fastGet, but I think it will be good if we are consistent about when you get false and when you hit out-of-bounds.\r\n\r\nThe out-of-bounds here are also related to 'wlen', as the method checks if the bit is within bits.length range, not wlen range. This is another bug I think since if you share a bits[] which has say bit 170 set, but you limit it to 2 words, calling OBS.get(170) will false return true?\r\n\r\nI think this class could use some serious overhauling and re-thinking. I find it very confusing as it is written now. We should decide what are the contracts of each method, and then implement it as such.\r\n\r\nAnd though unrelated to the bugs reported in this issue, perhaps someone can explain why we need both the 'int' and 'long' method variants? Can't we have only the long indexes?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-10-13T12:46:47.692+0000","updated":"2013-10-13T12:46:47.692+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13793654","id":"13793654","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=paul.elschot%40xs4all.nl","name":"paul.elschot@xs4all.nl","emailAddress":"paul dot j dot elschot at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=paul.elschot%40xs4all.nl&avatarId=23180","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paul.elschot%40xs4all.nl&avatarId=23180"},"displayName":"Paul Elschot","active":true},"body":"\r\nI'm adding  a method to OpenBitSetIterator to support advanceToJustBefore for a new DocBlockIterator, see LUCENE-5092.\r\n\r\nBasically this does an advance followed by a prevSetBit, and when the advance is getting too far out, it is important to know precisely where the end of the bit set is.\r\n\r\nAlso I found that in order to be able to use prevSetBit from OBS I had to add this static method there:\r\n{code}\r\n  public static int prevSetBitStatic(int index, long[] bits, int wlen) {\r\n  }\r\n{code}\r\n\r\nwhich is ugly. It would be better to have the OBS as an  attribute in the OBSIterator so the existing prevSetBit method can be called directly.\r\n\r\nSo I am in favour of an overhaul, remove (deprecate?) everything that is not currently used, and make OBS an attribute in OBSIterator instead of the long[] and its length.\r\n\r\n\r\nFor the end of the bit set, bits.length seems to be the simplest thing that could possibly work, so it is worth at try.\r\n\r\nFor the 'int' and 'long' variants, maybe we can do without the 'int' variants now that 64 bit processors have become common.\r\n\r\nAnother candidate for a minor clean up is EliasFanoEncoder.numLongsForBits which is a long implementation of OBS.bits2words.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=paul.elschot%40xs4all.nl","name":"paul.elschot@xs4all.nl","emailAddress":"paul dot j dot elschot at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=paul.elschot%40xs4all.nl&avatarId=23180","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paul.elschot%40xs4all.nl&avatarId=23180","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paul.elschot%40xs4all.nl&avatarId=23180"},"displayName":"Paul Elschot","active":true},"created":"2013-10-13T13:31:44.029+0000","updated":"2013-10-13T13:31:44.029+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13793686","id":"13793686","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"I don't think we need to deprecate anything as there's no way anyone relies on these methods and his app works (setNumWords, length etc.). I am also thinking of a new GrowableBitSet which relaxes all bounds checks and puts the responsibility on the app to call grow()/ensureCapacity(). This will also get rid of the duplicate methods (set/fastSet, get/fastSet etc.).\r\n\r\nUnfortunately we cannot modify OBS to relax bound checks because that's a serious backwards break. But perhaps we can completely deprecate it in favor of the new bitset.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-10-13T15:45:33.584+0000","updated":"2013-10-13T15:45:33.584+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13793775","id":"13793775","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"I didn't fix all the issues that I raised because I'm not sure what's the best course of action here. Clearly, no one relies on these buggy methods so maybe we should just fix ensureCapacity for now and worry about OBS's contract another day.\r\n\r\nIf there are no objections, and the patch also seems correct, I will commit those changes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-10-13T20:40:48.382+0000","updated":"2013-10-13T20:40:48.382+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13794483","id":"13794483","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1532093 from [~shaie] in branch 'dev/trunk'\r\n[ https://svn.apache.org/r1532093 ]\r\n\r\nLUCENE-5272: OpenBitSet.ensureCapacity does not modify numBits","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-14T21:04:28.063+0000","updated":"2013-10-14T21:04:28.063+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13794489","id":"13794489","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1532099 from [~shaie] in branch 'dev/branches/branch_4x'\r\n[ https://svn.apache.org/r1532099 ]\r\n\r\nLUCENE-5272: OpenBitSet.ensureCapacity does not modify numBits","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-14T21:10:37.730+0000","updated":"2013-10-14T21:10:37.730+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13794490","id":"13794490","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"body":"Committed to trunk and 4x.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shaie","name":"shaie","emailAddress":"serera at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Shai Erera","active":true},"created":"2013-10-14T21:11:23.995+0000","updated":"2013-10-14T21:11:23.995+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13794777","id":"13794777","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1532161 from [~rcmuir] in branch 'dev/trunk'\r\n[ https://svn.apache.org/r1532161 ]\r\n\r\nLUCENE-5272: fix test bugs","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-15T01:52:25.268+0000","updated":"2013-10-15T01:52:25.268+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13794779","id":"13794779","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1532162 from [~rcmuir] in branch 'dev/branches/branch_4x'\r\n[ https://svn.apache.org/r1532162 ]\r\n\r\nLUCENE-5272: fix test bugs","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-15T01:52:52.190+0000","updated":"2013-10-15T01:52:52.190+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13795155","id":"13795155","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1532321 from [~rcmuir] in branch 'dev/branches/branch_4x'\r\n[ https://svn.apache.org/r1532321 ]\r\n\r\nLUCENE-5272: fix more test bugs","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-15T12:56:04.072+0000","updated":"2013-10-15T12:56:04.072+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12673175/comment/13795157","id":"13795157","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1532322 from [~rcmuir] in branch 'dev/trunk'\r\n[ https://svn.apache.org/r1532322 ]\r\n\r\nLUCENE-5272: fix more test bugs","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2013-10-15T12:57:13.673+0000","updated":"2013-10-15T12:57:13.673+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-5272/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1otqn:"}}