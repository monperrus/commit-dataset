{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12384686","self":"https://issues.apache.org/jira/rest/api/latest/issue/12384686","key":"DERBY-3279","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-12-14 21:38:57.932","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23543","customfield_12310222":"1_*:*_1_*:*_4743702760_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2008-02-07T19:03:15.213+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3279/watchers","watchCount":1,"isWatching":false},"created":"2007-12-14T21:21:32.453+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312590","id":"12312590","description":"","name":"10.3.1.4","archived":false,"released":true,"releaseDate":"2007-08-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12319207","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12319207","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"27899","key":"DERBY-47","self":"https://issues.apache.org/jira/rest/api/2/issue/27899","fields":{"summary":"Some possible improvements to IN optimization","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:51:13.588+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"Running the following produces the error seen in Derby 10.3.X but not in 10.2.X nor in 10.1.X.\nDon't know if this related to DERBY-3231.\n\nFirst query is incorrectly sorted whereas the second one is okay when there is an index on the table. \nIf the table is not indexed, the sort works correctly in DESC order.\n------\ncreate table CHEESE (\n  CHEESE_CODE       VARCHAR(5),\n  CHEESE_NAME       VARCHAR(20),\n  CHEESE_COST       DECIMAL(7,4)\n);\n\ncreate index cheese_index on CHEESE (CHEESE_CODE DESC, CHEESE_NAME DESC, CHEESE_COST DESC);\n\nINSERT INTO CHEESE (\n  CHEESE_CODE,\n  CHEESE_NAME,\n  CHEESE_COST)\nVALUES ('00000', 'GOUDA', 001.1234),\n       ('00000', 'EDAM', 002.1111),\n       ('54321', 'EDAM', 008.5646),\n       ('12345', 'GORGONZOLA', 888.2309),\n       ('AAAAA', 'EDAM', 999.8888),\n       ('54321', 'MUENSTER', 077.9545);\n\nSELECT * FROM CHEESE \nWHERE (CHEESE_CODE='00000' OR CHEESE_CODE='54321') AND CHEESE_NAME='EDAM'\nORDER BY CHEESE_CODE DESC, CHEESE_NAME DESC, CHEESE_COST DESC;\n\nSELECT * FROM CHEESE \nWHERE (CHEESE_CODE='AAAAA' OR CHEESE_CODE='54321') AND CHEESE_NAME='EDAM'\nORDER BY CHEESE_CODE DESC, CHEESE_NAME DESC, CHEESE_COST DESC;","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37357","summary":"Derby 10.3.X ignores ORDER BY DESC when target column has an index and is used in an OR clause or an IN list.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Rational Application Developer 7.0.0.2 (Eclipse 3.2.2), J2RE 1.5.0 IBM J9 2.3 Windows XP","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10051","value":"Urgent","id":"10051"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":26,"total":26,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12551947","id":"12551947","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"body":"Here's what I get for trunk, both of them look incorrect since the ORDEY BY has DESC?\r\n\r\nij> SELECT * FROM CHEESE\r\nWHERE (CHEESE_CODE='00000' OR CHEESE_CODE='54321') AND CHEESE_NAME='EDAM'\r\n> > ORDER BY CHEESE_CODE DESC, CHEESE_NAME DESC, CHEESE_COST DESC;\r\nCHEE&|CHEESE_NAME         |CHEESE_C&\r\n------------------------------------\r\n00000|EDAM                |2.1111\r\n54321|EDAM                |8.5646\r\n\r\n2 rows selected\r\nij> SELECT * FROM CHEESE\r\nWHERE (CHEESE_CODE='AAAAA' OR CHEESE_CODE='54321') AND CHEESE_NAME='EDAM'\r\n> > ORDER BY CHEESE_CODE DESC, CHEESE_NAME DESC, CHEESE_COST DESC;\r\nCHEE&|CHEESE_NAME         |CHEESE_C&\r\n------------------------------------\r\n54321|EDAM                |8.5646\r\nAAAAA|EDAM                |999.8888\r\n\r\n2 rows selected","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djd","name":"djd","emailAddress":"djd at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel John Debrunner","active":true},"created":"2007-12-14T21:38:57.932+0000","updated":"2007-12-14T21:46:59.927+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12551948","id":"12551948","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"Ajay, I am curious if the database in Derby 10.3 was created with territory based collation enabled? In other words, when the database was created, did you use a JDBC url property like collation=TERRITORY_BASED?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2007-12-14T21:39:59.872+0000","updated":"2007-12-14T21:39:59.872+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12551958","id":"12551958","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"This is a regression caused by revision 516454 of DERBY-681, but appears to be different than DERBY-3231 as it reproduces on the trunk as well after the fix for DERBY-3231.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-12-14T22:10:53.515+0000","updated":"2007-12-14T22:10:53.515+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12551961","id":"12551961","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I tested with revision 516453 and the sort ordered properly, but not with revision 516454 (DERBY-681)\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-12-14T22:14:40.892+0000","updated":"2007-12-14T22:14:40.892+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12551962","id":"12551962","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Actually, though I hate to say it, I think it's a regression caused by DERBY-47.  When I run with 516454 (i.e. after DERBY-681 was committed I see the correct results:\r\n\r\nij(CONNECTION1)> SELECT * FROM CHEESE\r\nWHERE (CHEESE_CODE='00000' OR CHEESE_CODE='54321') AND CHEESE_NAME='EDAM'\r\nORDER BY CHEESE_CODE DESC, CHEESE_NAME DESC, CHEESE_COST DESC;\r\nCHEE&|CHEESE_NAME         |CHEESE_C&\r\n------------------------------------\r\n54321|EDAM                |8.5646\r\n00000|EDAM                |2.1111\r\n\r\n2 rows selected\r\nij(CONNECTION1)> SELECT * FROM CHEESE\r\nWHERE (CHEESE_CODE='AAAAA' OR CHEESE_CODE='54321') AND CHEESE_NAME='EDAM'\r\nORDER BY CHEESE_CODE DESC, CHEESE_NAME DESC, CHEESE_COST DESC;\r\nCHEE&|CHEESE_NAME         |CHEESE_C&\r\n------------------------------------\r\nAAAAA|EDAM                |999.8888\r\n54321|EDAM                |8.5646\r\n\r\n2 rows selected\r\nij(CONNECTION1)> SELECT * FROM CHEESE\r\nWHERE (CHEESE_CODE='00000' OR CHEESE_CODE='54321') AND CHEESE_NAME='EDAM'\r\nORDER BY CHEESE_CODE ASC, CHEESE_NAME DESC, CHEESE_COST ASC;\r\nCHEE&|CHEESE_NAME         |CHEESE_C&\r\n------------------------------------\r\n00000|EDAM                |2.1111\r\n54321|EDAM                |8.5646\r\n\r\n2 rows selected\r\nij(CONNECTION1)> SELECT * FROM CHEESE\r\nWHERE (CHEESE_CODE='AAAAA' OR CHEESE_CODE='54321') AND CHEESE_NAME='EDAM'\r\nORDER BY CHEESE_CODE ASC, CHEESE_NAME DESC, CHEESE_COST ASC;\r\nCHEE&|CHEESE_NAME         |CHEESE_C&\r\n------------------------------------\r\n54321|EDAM                |8.5646\r\nAAAAA|EDAM                |999.8888\r\n\r\n2 rows selected\r\n\r\nBut I run after the final commit for DERBY-47, the results are the same regardless of whether we sort ASC ro DESC on CHEESE_CODE (i.e. sort is ignored).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-12-14T22:17:26.977+0000","updated":"2007-12-14T22:18:07.058+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12551968","id":"12551968","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Yes, my bad. I come back from getting my coffee and there  it is on the screen in the correct order. Sorry for the noise.  Without the coffee I am quite sure it sorted the other way #:) Guess I need both coffee and vacation.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-12-14T22:37:39.894+0000","updated":"2007-12-14T22:37:39.894+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12552306","id":"12552306","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"In the absence of IN list \"multi-probing\", the way Derby implements an IN list is:\r\n\r\n  while (more rows in the underlying result set)\r\n  {\r\n      get next row from the result set\r\n      search IN list values to see if target column of row exists in the IN list\r\n      if target column of the row exists in the IN list, return the row\r\n  }\r\n\r\nSince the loop is based on scanning the underlying result set for rows, any rows which we return will be returned in the order they are received from the underlying result set.  So if, for example, the underlying result is an index scan, and if the index is defined as DESCENDING, the rows will come back in descending order.\r\n\r\nWith multi-probing enabled, which only happens after DERBY-47 and only happens for index scans (which is why the ordering is correct if the index is removed, per Ajay's description), the processing is (loosely):\r\n\r\n  while (more values in the IN list)\r\n  {\r\n      get next IN list value\r\n      probe underlying index for a row whose target column matches the current IN list value\r\n      if index probe returned a row, return that row\r\n  }\r\n\r\nNotice how, here, the loop is driven by the order of the values in the *IN list*, instead of by the order of the rows as they are returned from the index scan.  So even if the index is defined as \"DESC\", the final ordering of the rows will match the ordering of the IN values.\r\n\r\nThat said, in order to ensure proper handling of duplicate IN list values, the current multi-probe logic in Derby always sorts IN list values in ASCENDING order.  So unless an explicit SortResultSet is generated for execution time, the rows for an IN-list multi-probe will always be in ASCENDING order.\r\n\r\nThe final relevant piece of information is that the optimizer is smart enough to remove unnecessary sorts when a) there is an ORDER BY on some index column IC, b) the final access plan uses that index, and c) the ASC/DESC option of the ORDER BY matches the ASC/DESC option of the index column IC.  For the example queries, we have \"ORDER BY CHEESE_CODE DESC\", and we have an index definition which includes \"CHEESE_CODE DESC\".  So the optimizer thinks the sort is unnecessary and removes it.  Hence this Jira.\r\n\r\nThere are two fixes that come to mind right away:\r\n\r\n  1. Make the optimizer recognize that the sort cannot be removed if we're multi-probing, or\r\n  2. Make MultiProbeTableScanResultSet sort the IN list values in ascending OR descending order depending on the ORDER BY clause (instead of always sorting in ASCENDING).\r\n\r\nI think option #2 is the best option here.  I have a fix in progress and will post when it is postable...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-12-17T00:52:57.246+0000","updated":"2007-12-17T00:52:57.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12553493","id":"12553493","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"body":"AB, thank you for that explanation.  I look forward to the fix.\r\n\r\nAjay","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"created":"2007-12-19T21:03:51.912+0000","updated":"2007-12-19T21:03:51.912+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12561729","id":"12561729","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"body":"AB, just wondering if you can provide me with an update on the fix you have available.\r\n\r\nThanks,\r\n\r\nAjay","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"created":"2008-01-23T16:18:21.562+0000","updated":"2008-01-23T16:18:21.562+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12561732","id":"12561732","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Hi Ajay,\r\n\r\nSorry for the delay, I've had other things on my plate.  But as it turns out, I was working with this yesterday and just a few minutes ago I kicked off the nightly regression tests with what I _think_ is an acceptable patch for this issue.  I still need to clean up the changes/comments a bit, but if the tests all pass I hope to post something by the end of the day today (PST).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-23T16:39:24.659+0000","updated":"2008-01-23T16:39:24.659+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12561832","id":"12561832","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Attaching a first attempt at resolving this issue.\r\n\r\nThe problem as described above only occurs in situations where preprocessing/optimization eliminates a sort.  There is already a method called \"adjustForSortElimination()\" defined in ResultSetNode, so this patch creates an alternate signature that takes an OrderByList as an argument.  Then, in the case where sort elimination occurs, we will search a table's predicates to see if any of them is a multi-probing predicate.  If so, we check to see if the ORDER BY that was eliminated required a DESCENDING sort on the multi-probe column, and we adjust for that (if needed) by sorting the IN list values into descending order at execution time.  See code comments for details.\r\n\r\nI ran derbyall and suites.All with this patch applied and saw no failures.  Review comments are appreciated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-23T22:05:12.759+0000","updated":"2008-01-23T22:05:12.759+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12561833","id":"12561833","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Changing summary to more closely describe  the problem.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-23T22:07:06.860+0000","updated":"2008-01-23T22:07:06.860+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12561935","id":"12561935","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hopefully this isn't possible, but I thought I'd ask:\r\n\r\nWhat if there was a multi-column index, for example,\r\nCREATE INDEX NAME_IDX ON EMPLOYEE(LAST_NAME,FIRST_NAME),\r\nand I had a query that was something like:\r\n\r\n  SELECT LAST_NAME,FIRST_NAME FROM EMPLOYEE\r\n  WHERE LAST_NAME IN ('REAGAN', 'CLINTON', 'BUSH')\r\n  AND FIRST_NAME IN ('RONALD', 'WILLIAM', 'GEORGE')\r\n  ORDER BY LAST_NAME ASC, FIRST_NAME DESC\r\n\r\nIn such a case, if we decided to do in-list multi-probing\r\nagainst the NAME_IDX, would we have an ambiguity about\r\nwhether we wanted to sort the (LAST_NAME,FIRST_NAME)\r\nvalues in ASC or DESC order?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-01-24T04:30:46.362+0000","updated":"2008-01-24T04:30:46.362+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12562125","id":"12562125","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> What if there was a multi-column index [...] if we decided to do in-list multi-probing\r\n> against the NAME_IDX, would we have an ambiguity about whether we wanted to\r\n> sort the (LAST_NAME,FIRST_NAME) values in ASC or DESC order?\r\n\r\nGreat question, Bryan.  Thanks for bringing it up!\r\n\r\nI think the answer is, in fact, that \"this isn't possible\".  A given multi-probing result set only ever works with a single column--even if that column is part of a multi-column index.  See the following comments from TableScanResultSet:\r\n\r\n         * Note that it *is* possible for a start/stop key to contain more\r\n         * than one column (ex. if we're scanning a multi-column index). In\r\n         * that case we plug probeValue into the first column of the start\r\n         * and/or stop key and leave the rest of the key as it is.  As an\r\n         * example, assume we have the following predicates:\r\n         *\r\n         *    ... where d in (1, 20000) and b > 200 and b <= 500\r\n         *\r\n         * And assume further that we have an index defined on (d, b).\r\n         * In this case it's possible that we have TWO start predicates\r\n         * and TWO stop predicates: the IN list will give us \"d = probeVal\",\r\n         * which is a start predicate and a stop predicate; then \"b > 200\"\r\n         * may give us a second start predicate, while \"b <= 500\" may give\r\n         * us a second stop predicate.  So in this situation we want our\r\n         * start key to be:\r\n         *\r\n         *    (probeValue, 200)\r\n         *\r\n         * and our stop key to be:\r\n         *\r\n         *    (probeValue, 500).\r\n         *\r\n         * This will effectively limit the scan so that it only returns\r\n         * rows whose \"D\" column equals probeValue and whose \"B\" column\r\n         * falls in the range of 200 thru 500.\r\n         *\r\n         * Note: Derby currently only allows a single start/stop predicate\r\n         * per column. See PredicateList.orderUsefulPredicates().\r\n\r\nIt's also worth noting that Derby will only do multi-probing IF the column in question is the FIRST column in the index.  This comes from the comments in PredicateList.orderUsefulPredicates():\r\n\r\n               else if (pred.isInListProbePredicate()\r\n                        && (indexPosition > 0))\r\n                {\r\n                    /* If the predicate is an IN-list probe predicate\r\n                     * then we only consider it to be useful if the\r\n                     * referenced column is the *first* one in the\r\n                     * index (i.e. if (indexPosition == 0)).  Otherwise\r\n                     * the predicate would be treated as a qualifier\r\n                     * for store, which could lead to incorrect\r\n                     * results.\r\n                     */\r\n                    indexCol = null;\r\n                }\r\n\r\nSo in the example you gave above, we would (should) never do multi-probing for FIRST_NAME.  We would either do multi-probing based on LAST_NAME, in which case the sort would have to be ASC, or we would do no multi-probing at all.  The FIRST_NAME IN list would be treated as a \"normal\" (non-probing) IN list operator.\r\n\r\nAt least, that's the theory.  If you'd like me to add a test case for that, just to be sure, let me know and I can certainly do so.\r\n\r\nIf this still isnt' clear, please feel free to ask again. And thanks, as always, for your great comments!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-24T16:47:13.011+0000","updated":"2008-01-24T16:47:13.011+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12562334","id":"12562334","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Very good. I anticipated that answer, but it was quite helpful \r\nto read your clear and detailed answer. Thanks!\r\n\r\nI read through the patch and didn't notice any other issues that \r\nconcerned me. I think you should move ahead with this approach.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2008-01-25T01:46:24.629+0000","updated":"2008-01-25T01:46:24.629+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12563358","id":"12563358","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you, as always, for your review Bryan.  I committed the _v1 patch with svn # 616126:\r\n\r\n  URL: http://svn.apache.org/viewvc?rev=616126&view=rev\r\n\r\nUnchecking the patch available flag and marking Fix In as 10.4.  As per usual, if the tinderbox results run cleanly over the next few days, I'll look at porting this back to 10.3.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-29T01:02:51.564+0000","updated":"2008-01-29T01:02:51.564+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12563676","id":"12563676","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"body":"AB, thank you for the patch file.  I patched the source from 10.3.2.1 with the file and re-ran my queries above.\r\nAll seems well.  However when I ran the queries in the attached file, I saw some incorrect sorting.  The queries are similar to the original posting save for the fact that CHEESE_COST is neither in the index nor in the ORDER BY clause.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"created":"2008-01-29T21:22:46.008+0000","updated":"2008-01-29T21:26:22.428+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12563678","id":"12563678","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"body":"cheese2.sql has test queries for patch d3279_v1.patch","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"created":"2008-01-29T21:24:13.664+0000","updated":"2008-01-29T21:25:09.442+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12563692","id":"12563692","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thanks for running the tests, Ajay.\r\n\r\nThe removal of CHEESE_COST from the index means that the index now has a subset of the columns from the base table.  That in turn means that we have to generate an IndexToBaseRowNode above the base table (which we won't do if the index and the base table have the same columns).  In my first patch I overlooked this fact and thus did not propagate the call to \"adjustForSortElimination()\" down to the base table beneath IndexToBaseRowNode.\r\n\r\nTo fix this I just had to add an appropriate call to IndexToBaseRowNode:\r\n\r\n+       /**\r\n+        * @see ResultSetNode#adjustForSortElimination\r\n+        */\r\n+       void adjustForSortElimination(RequiredRowOrdering rowOrdering)\r\n+               throws StandardException\r\n+       {\r\n+               source.adjustForSortElimination(rowOrdering);\r\n+       }\r\n\r\nand the queries in cheese2.sql now sort correctly.  I want to look a bit more to see if there are any other cases where intermediary nodes are added above FromBaseTable and thus need a similar change, and then I will post a follow-up patch with the corresponding changes.\r\n\r\nThanks again for running more tests and reporting back!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-29T22:15:10.248+0000","updated":"2008-01-29T22:15:10.248+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12564180","id":"12564180","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Attaching a follow-up patch, d3279_ix2brnode_v1.patch, that fixes the case for IndexToBaseRowNodes which appear above the base table.  I didn't see any other cases where similar changes were necessary (or rather, all other cases were handled by the _v1 patch).\r\n\r\nThis patch also adds some more test cases to InListMultiProbeTest, esp. to 1) test the case where the index has fewer columns than the base table, and 2) test queries that have multiple IN lists in them.  I decided to add the latter set of tests since Bryan asked about a similar query in an earlier comment, and since cheese2.sql also includes a couple of queries with multiple IN lists in the where clause (indirectly).\r\n\r\nI ran derbyall and suites.All with ibm142 and saw no failures.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-01-30T21:38:20.779+0000","updated":"2008-01-30T21:38:20.779+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12564818","id":"12564818","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Committed d3279_ix2brnode_v1.patch to trunk with svn # 617548:\r\n\r\n  URL: http://svn.apache.org/viewvc?rev=617548&view=rev\r\n\r\nAjay, if you can do more testing of your queries with this change applied, that would be helpful--and thanks for your patience in the meantime.  Otherwise, assuming all goes well with tinderbox runs for the next few days, I'll plan to port the changes to 10.3 sometime late next week...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-01T16:30:14.595+0000","updated":"2008-02-01T16:30:14.595+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12565400","id":"12565400","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"body":"AB, I will try to perform more testing this week and let you know how things work out.\r\n\r\nThanks again.\r\n\r\nAjay","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"created":"2008-02-04T15:44:42.007+0000","updated":"2008-02-04T15:44:42.007+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12565968","id":"12565968","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"I ran the following \"svn merge\" commands to port this change back to 10.3:\r\n\r\n svn merge -r 616125:616126 https://svn.apache.org/repos/asf/db/derby/code/trunk\r\n svn merge -r 617547:617548 https://svn.apache.org/repos/asf/db/derby/code/trunk\r\n\r\nThe second command saw a conflict due to svn # 614745, which went into trunk but not into 10.3.  So I had to do a manual resolution of the conflict--which simply amounted to adjusting for 2 lines in junit/JDBC.java.\r\n\r\nI'm attaching d3279_10_3_merge.patch, which encapsulates the \"svn merge\" commands plus the conflict resolution.  I ran the 10.3 \"derbyall\" and \"suites.All\" regression tests and saw no failures.\r\n\r\nI'll wait a day or two to see if Ajay's testing illuminates any other problems; if not, then I'll go ahead and commit the merge patch to the 10.3 branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-06T00:09:14.292+0000","updated":"2008-02-06T00:09:14.292+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12566724","id":"12566724","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"body":"AB, I've not had the opportunity to test the v2 patch but my colleague has.  His testing has not revealed further issues.  I would say that we can put this bug to bed.\r\n\r\nThanks for your help,\r\n\r\nAjay","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhala","name":"abhala","emailAddress":"abhala at adelphia dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ajay Bhala","active":true},"created":"2008-02-07T18:23:12.011+0000","updated":"2008-02-07T18:23:12.011+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12566744","id":"12566744","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thanks for the feedback, Ajay.  I committed the changes to 10.3 with svn # 619568:\r\n\r\n  URL: http://svn.apache.org/viewvc?rev=619568&view=rev\r\n\r\n> I would say that we can put this bug to bed.\r\n\r\nSince it's in 10.3 now, I'm marking the issue as resolved.  If all is okay, can you go ahead and close it when you have the chance?  Thanks again for your patience on this one...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-02-07T19:03:14.955+0000","updated":"2008-02-07T19:03:14.955+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12384686/comment/12584393","id":"12584393","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"I don't know if fixes for wrong results *regressions* really need a release note or not--esp. if it 's just an ordering issue--but I'm attaching one here anyway.  I am *not* checking the \"Existing Application Impact\" box as I don't know what the rules are for regressions.  If it is agreed that release notes are good for regression fixes, as well, then someone can check the appropriate box to have the release note picked up by the generator tool.  Note: the html file will have to be \"scrubbed\" in order to play nicely with the release note tool.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2008-04-02T03:37:47.867+0000","updated":"2008-04-02T03:37:47.867+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3279/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06rav:"}}