{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12460311","self":"https://issues.apache.org/jira/rest/api/latest/issue/12460311","key":"LUCENE-2348","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310110","id":"12310110","key":"LUCENE","name":"Lucene - Core","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2010-06-01 19:36:12.337","customfield_12312323":null,"customfield_12310420":"11448","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-2348/watchers","watchCount":3,"isWatching":false},"created":"2010-03-26T04:55:31.475+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314342","id":"12314342","description":"Bugfixes for 2.9.1","name":"2.9.2","archived":false,"released":true,"releaseDate":"2010-02-26"}],"issuelinks":[{"id":"12332609","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12332609","type":{"id":"12310040","name":"Required","inward":"is required by","outward":"requires","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310040"},"outwardIssue":{"id":"12467521","key":"LUCENE-2506","self":"https://issues.apache.org/jira/rest/api/2/issue/12467521","fields":{"summary":"A Stateful Filter That Works Across Index Segments","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-11-25T20:23:53.218+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312028","id":"12312028","name":"modules/other","description":"issues related to any module that does not have it's own JIRA component. Usage of this component is discouraged - please create (or ask on dev@) for a proper module"}],"timeoriginalestimate":null,"description":"DuplicateFilter currently works by building a single doc ID set, without taking into account that getDocIdSet() will be called once per segment and only with each segment's local reader.\r\n","customfield_10010":null,"timetracking":{},"customfield_12310120":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10121","value":"New","id":"10121"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"25660","summary":"DuplicateFilter incorrectly handles multiple calls to getDocIdSet for segment readers","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":26,"total":26,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12850006","id":"12850006","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"Changing to contrib, only just realised it was in that location...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-03-26T05:05:38.032+0000","updated":"2010-03-26T05:05:38.032+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12874185","id":"12874185","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"I don't understand the problem here... looking at 2.9.x's DuplicateFilter, it looks like every call to .getDocIdSet will create a new OpenBitSet, per reader?  Can you post a testcase showing the issue?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2010-06-01T19:36:12.337+0000","updated":"2010-06-01T19:36:12.337+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12874186","id":"12874186","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Clearing fix version.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2010-06-01T19:36:34.814+0000","updated":"2010-06-01T19:36:34.814+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12874370","id":"12874370","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"What you describe is precisely the problem.  It will deduplicate only over each segment, not over the text index as one would expect given the name of the class.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-06-02T01:46:28.167+0000","updated":"2010-06-02T01:46:28.167+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12874373","id":"12874373","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"I attempted to make a test but it fails with matching 0 instead of matching 2 like I would have expected.  Here is the code:\r\n\r\n{code:java}\r\n    @Test\r\n    public void testDuplicateFilterAcrossSegments() throws Exception\r\n    {\r\n        RAMDirectory index1Dir = new RAMDirectory();\r\n        addDoc(index1Dir);\r\n\r\n        RAMDirectory index2Dir = new RAMDirectory();\r\n        addDoc(index2Dir);\r\n\r\n        IndexReader reader1 = IndexReader.open(index1Dir, true);\r\n        IndexReader reader2 = IndexReader.open(index2Dir, true);\r\n\r\n        IndexReader multi = new MultiReader(new IndexReader[] { reader1, reader2 });\r\n        IndexSearcher searcher = new IndexSearcher(multi);\r\n\r\n        TopDocs docs;\r\n\r\n        docs = searcher.search(new MatchAllDocsQuery(), null, 10);\r\n        assertEquals(\"Should only be two hits without the filter (just checking)\", 2, docs.totalHits);\r\n\r\n        docs = searcher.search(new MatchAllDocsQuery(), new DuplicateFilter(\"id\"), 10);\r\n        assertEquals(\"Should only be one hit because the second was a duplicate\", 1, docs.totalHits);\r\n    }\r\n\r\n    private void addDoc(Directory dir) throws IOException\r\n    {\r\n        IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\r\n        try\r\n        {\r\n            Document doc = new Document();\r\n            doc.add(new Field(\"id\", \"1\", Field.Store.YES, Field.Index.NO));\r\n            writer.addDocument(doc);\r\n            writer.commit();\r\n        }\r\n        finally\r\n        {\r\n            writer.close();\r\n        }\r\n    }\r\n{code}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-06-02T01:53:54.555+0000","updated":"2010-06-02T01:53:54.555+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12874529","id":"12874529","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. What you describe is precisely the problem. It will deduplicate only over each segment, not over the text index as one would expect given the name of the class.\r\n\r\nDuh, right!  You want dedup to apply to the entire index....\r\n\r\nUgh, so this has been broken since the cutover to per-segment searching (2.9.x).\r\n\r\nThis is tricky to fix.  Somehow DuplicateFilter needs to get ahold of the top reader.  It then must run its dup detection against the TermEnum from that top reader, but then when requested per sub-reader, it must return a slice into the bits for the top reader.\r\n\r\nThere's no way, now, given a sub-reader to figure out which parent reader it belongs to... so I think we'd have to change DuplicateFilter to take in the top reader to its ctor?  (But this is sort of messy -- no other core/contrib filters have this \"state\" -- they are normally free to be reused across readers).\r\n\r\nThe only other [big] change I can think of is if we could change the Filter API to be more like Scorer, which does first receive the top reader (since it needs to init measures like idf across all segments), and then separately steps through each sub-reader.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2010-06-02T10:43:37.502+0000","updated":"2010-06-02T10:43:37.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12874841","id":"12874841","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"That change broke nearly all our own filters.  We have a lot of filters which get their data from a database where the IDs are across the top-level reader's doc IDs.  The DuplicateFilter in contrib was noticed because I was reading about how the Filter API had changed, but when I went to find an example of a filter which (in theory :)) would have worked the same way so that I could borrow its solution, I found it was also making the same assumptions we were.\r\n\r\nOur workaround was the same as described, passing the top-level reader into the constructor and then computing the doc ID set for that, and splitting it up and doing the maths to create the sub-sets for each segment reader.\r\n\r\nThe downside is that now you can only use this Filter instance with this reader, whereas the original DuplicateFilter would have worked on multiple top-level readers happily.\r\n\r\nHaving the top reader passed in before each sub-reader sounds like a good idea.  It might make it possible for the same filter instance to support multiple top-level readers as well.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-06-02T22:53:10.859+0000","updated":"2010-06-02T22:53:10.859+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12881010","id":"12881010","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karthick","name":"karthick","emailAddress":"karthick dot sankarachary at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthick Sankarachary","active":true},"body":"Hi, All,\r\n\r\nHaving run into this very issue in our platform, I decided to take a stab at addressing it by defining what is essentially a stateful type of filter (for details, please see LUCENE-2506). In my mind, the stateful filter affords an easy and intuitive way for filters such as the DuplicateFilter, to work seamlessly across (the potentially many) segments of the index. \r\n\r\nIn a nutshell, I tweaked the DuplicateFilter so that it accepts a given term if and only if it does not already exist in its \"memory\". For details, please see the DedupingTermsEnum#accept method in the revised DuplicateFilter class attached here.  \r\n\r\nNote that I took the liberty of incorporating the test case shown above into DuplicateFilterTest, which is included in the patch. Finally, just to clarify, the patch for LUCENE-2506 must be applied prior to the one attached herein, given that the latter relies on the former. \r\n\r\nRegards,\r\nKarthick Sankarachary","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karthick","name":"karthick","emailAddress":"karthick dot sankarachary at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthick Sankarachary","active":true},"created":"2010-06-22T01:55:10.248+0000","updated":"2010-06-23T00:30:09.414+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12881500","id":"12881500","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"That does solve the specific issue I reported (against this specific filter)... I wonder if I need to open a new ticket now for our real problem, because there are two things not solved by that approach:\r\n\r\n1. If your filterable data is in another store (e.g. a database), then you would still need either some way to get to the top level reader or a way to know what its offset is, but there is no way to get that information from the reader which was passed in.\r\n\r\n2. If you want to return the *newest* item instead of the *oldest* item, it will be too late if getStatefulDocIdSet for an earlier call has already returned the older one.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-06-23T00:51:13.753+0000","updated":"2010-06-23T01:01:05.960+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12881502","id":"12881502","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karthick","name":"karthick","emailAddress":"karthick dot sankarachary at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthick Sankarachary","active":true},"body":"{quote}1. If your filterable data is in another store (e.g. a database), then you would still need either some way to get to the top level reader or a way to know what its offset is, but there is no way to get that information from the reader which was passed in.{quote}\r\n\r\nIn theory, one could try to obtain the top-level reader from a segment reader as follows: IndexReader.open(((SegmentReader) reader).directory()), where reader is what is provided to the filter. However, this approach breaks down if the top-level reader spans multiple directory, as is the case with MultiReaders.  Besides, the top-level reader that you obtain this way might be a little bit \"ahead\" of the segment reader's actual parent, given that it was created more recently. Given all that, I've introduced a StatefulFilter#setTopLevelReader method that can be used by the user to explicitly set the top-level reader. If the user chooses not to define the top-level reader, then the StatefulFilter will make a best-effort to guess what the top-level reader should be.\r\n\r\n{quote}2. If you want to return the newest item instead of the oldest item, it will be too late if getStatefulDocIdSet for an earlier call has already returned the older one.{quote}\r\n\r\nActually, if you create a DuplicateFilter with keepMode set to KM_USE_FIRST_OCCURRENCE, then it will return the document from the first matching segment, and ignore the ones in subsequent segments (due to its stateful behavior). However, the initial approach will break in the event keepMode is set to KM_USE_LAST_OCCURRENCE. To handle that case, we have the DedupingTermsEnum that the  DuplicateFilter defines, return a zero docFreq() in case the last term does not belong to the current segment being filtered. Specifically, the pre-condition for returning a non-zero docFreq is that the \"top-level\" and total of all the \"segment-level\" docFreq of the term are the same. In addition,the filter now automatically cleans up after itself (by detecting if the current segment is the last one or not). \r\n\r\nAlso, please note that I changed the DuplicateFilter's default keepMode to KM_USE_FIRST_OCCURRENCE, given that it will potentially, no definitely, save on IO.\r\n \r\nThe revised patches for LUCENE-2348 and LUCENE-2506 have been attached, and successfully tested for all of the cases described above (on top of the existing ones). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karthick","name":"karthick","emailAddress":"karthick dot sankarachary at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthick Sankarachary","active":true},"created":"2010-06-23T01:10:42.926+0000","updated":"2010-06-25T20:26:20.420+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12882720","id":"12882720","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karthick","name":"karthick","emailAddress":"karthick dot sankarachary at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthick Sankarachary","active":true},"body":"Trejkaz,\r\n\r\nCan you please take a look at the revised patch and the above comment to see if it address all of your concerns?\r\n\r\nMichael,\r\n\r\nGiven that you have some context around this issue already, can you also review the attached patch in conjunction with that for LUCENE-2506, and let me know what you think?\r\n\r\nRegards,\r\nKarthick ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karthick","name":"karthick","emailAddress":"karthick dot sankarachary at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthick Sankarachary","active":true},"created":"2010-06-25T21:26:35.735+0000","updated":"2010-06-25T21:26:35.735+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12933222","id":"12933222","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"Finally got around to checking this out today, and it looks good to me.  Unfortunate how Lucene has changed so much lately that we can't backport this. :)  But will just await a release where it appears.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-11-17T22:53:37.577+0000","updated":"2010-11-17T22:53:37.577+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12933498","id":"12933498","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Unfortunately I think LUCENE-2506 is too heavyweight, in general (eg it seems to have an unbounded cache of seg -> term -> docFreq).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2010-11-18T17:46:52.600+0000","updated":"2010-11-18T17:46:52.600+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12933659","id":"12933659","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"Another way of solving this particular issue would be if segment readers knew which top-level reader they came from.  Then when we get an unknown one called on our filter, we have a way to crawl to the top and build up the mappings on our side.\r\n\r\nIf a segment reader can exist under more than one parent at the same time, though, it would cause issues for a solution like that.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-11-19T03:28:09.502+0000","updated":"2010-11-19T03:28:09.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12933715","id":"12933715","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Here's my proposed patch for this issue.\r\n\r\nIn truth I don't think this functionality makes much sense as a filter, but I think\r\nwe should simply solve it in this way.\r\n\r\nIf the end result is to collapse duplicates in search results, we should seriously\r\nconsider pointing people at field collapsing or maybe doing this in a collector.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2010-11-19T08:02:50.795+0000","updated":"2010-11-19T08:02:50.795+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12934214","id":"12934214","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"Field collapsing has different semantics which don't match those of DuplicateFilter.  It's useful if you want to collapse two hits down to one hit, but it doesn't work if you are using DuplicateFilter to filter out previous copies of a document (whether you are working around the issue of Lucene shifting doc IDs when deleting, or simply want to keep the history in case you need it later.)  In this situation you want all but one filtered out, whether the one that matches the query matches the filter or not.  Initially this might not seem like removing duplicates, but it really is, since you're just removing duplicates based on the \"id\" field.\r\n\r\nSimilarly, I'm not sure how using a collector would help.  There is even a note in HitCollector saying not to look at the document during collection because it will reduce performance by an order of magnitude or more.  If you have to look at a field, then you have to look at the document.  FieldCache was introduced to try and avoid this, but in practice, it doesn't work once you have tens of millions of documents in your index, unless you have an extraordinary amount of RAM allocated to the JVM (and not every application is a server application!)  Even supposing you were willing to take the performance hit, or had a system where you had enough RAM to store the field cache, the collector only receives the ID of the document that hit, it doesn't provide any of the context you need to see which other documents had the same value in the field.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-11-21T01:34:52.290+0000","updated":"2010-11-21T01:34:52.290+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12935731","id":"12935731","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"Trejkaz, i think you are confused.\r\n\r\nThis is only a special case of TopFieldCollector, your notes about Hits/Hitcollector are irrelevant.\r\n\r\nThe situation here is it should never have been a filter in the first place, this is a bad design.\r\nSo I plan to commit this patch in a few days, as well as marking @deprecated.\r\n\r\nIf someone wants to later provide a 'replacement' thats fine, but this is contrib, and its not necessary\r\nfor us provide one to deprecate problems like this!\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2010-11-25T11:59:17.690+0000","updated":"2010-11-25T11:59:17.690+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12935748","id":"12935748","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"I don't really want to argue good or bad design, because the fact is that it worked, and then Lucene core broke the functionality, and now you are claiming that some kinds of filter shouldn't be done as a filter anymore (what should they be done as, then?  I've already said that the other suggestions won't work in any fashion.)\r\n\r\nBut fine.\r\n\r\nThis wasn't the only filter in our system affected by this issue.  As long as LUCENE-2506 is put through, though, the rest of our filters which are _not_ \"bad design\" will still be able to work in the future without hacks on our end to make them work.\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-11-25T13:07:42.999+0000","updated":"2010-11-25T13:07:42.999+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12935753","id":"12935753","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"Actually I think Filter is the natural fit for this functionality. \r\n\r\nYou should be able to compute it once, cache it, pass it along with\r\nyour Query during searching, etc.\r\n\r\nDoing this during collection is of course possible, but not ideal\r\nsince you waste CPU on the query finding a hit only to then filter it\r\nout.  (In fact Filter used to be applied this way!).  Plus you must\r\nhave the dedup values RAM resident.  Especially w/ optos like\r\nLUCENE-1536 on the horizon, doing this during collection will be even\r\nslower.\r\n\r\nThat said, yes, it's trickier to implement, with the cutover to\r\nper-segment search, since it needs the full reader up front in order\r\nto decide how docs in each segment will be filtered.\r\n\r\nBut I don't consider this a show stopper -- it'd be simple to change\r\nDuplicateFilter to receive the top IR up front, and pre-compute and\r\ncache the bit set for all segments.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2010-11-25T13:38:07.678+0000","updated":"2010-11-25T13:38:07.678+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12935765","id":"12935765","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"That is exactly the workaround we performed for our own filters, including our private copy of a filter which works like DuplicateFilter.  All the ones which need the context now take the reader up-front.  The problem now, is that we have to use a different filter instance on each reader.  Previously we were caching them globally, and somewhere in the system we are evidently still caching them globally, because one time in a million we find the wrong filter being used on the wrong reader.  I am now thinking of making another kind of context-sensitive filter, which can somehow omnisciently know about all readers open in the entire JVM (e.g. we hook the place where we open the top-level reader, and push the information about its structure into some global watch.)\r\n\r\nI think Robert's comments possibly stem from the misconception that the duplicate filter somehow works like field collapsing.  I wrote a test just to illustrate how it actually behaves, just to make sure I wasn't confused myself (since he seemed to think I was...)\r\n\r\n{code}\r\npublic class TestDuplicateFilter {\r\n\r\n    IndexReader reader;\r\n    IndexSearcher searcher;\r\n\r\n    @Before\r\n    public void setUpSampleData() throws Exception {\r\n        RAMDirectory dir = new RAMDirectory();\r\n        IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\r\n        Document doc;\r\n        doc = new Document();\r\n        doc.add(new Field(\"id\", \"1\", Field.Store.YES, Field.Index.ANALYZED));\r\n        doc.add(new Field(\"text\", \"a\", Field.Store.YES, Field.Index.ANALYZED));\r\n        writer.addDocument(doc);\r\n        doc = new Document();\r\n        doc.add(new Field(\"id\", \"1\", Field.Store.YES, Field.Index.ANALYZED));\r\n        doc.add(new Field(\"text\", \"b\", Field.Store.YES, Field.Index.ANALYZED));\r\n        writer.addDocument(doc);\r\n        doc = new Document();\r\n        doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\r\n        doc.add(new Field(\"text\", \"c\", Field.Store.YES, Field.Index.ANALYZED));\r\n        writer.addDocument(doc);\r\n        writer.close();\r\n\r\n        reader = IndexReader.open(dir, true);\r\n        searcher = new IndexSearcher(reader);\r\n    }\r\n\r\n    @Test\r\n    public void testHitOnOriginal() throws Exception {\r\n        Filter filter = new DuplicateFilter(\"id\", DuplicateFilter.KM_USE_FIRST_OCCURRENCE, DuplicateFilter.PM_FULL_VALIDATION);\r\n        TopDocs docs = searcher.search(new TermQuery(new Term(\"text\", \"a\")), filter, 3);\r\n        assertEquals(\"Expected one hit - matched the original\", 1, docs.totalHits);\r\n        assertEquals(\"Wrong doc hit\", 0, docs.scoreDocs[0].doc);\r\n    }\r\n\r\n    @Test\r\n    public void testHitOnCopy() throws Exception {\r\n        Filter filter = new DuplicateFilter(\"id\", DuplicateFilter.KM_USE_FIRST_OCCURRENCE, DuplicateFilter.PM_FULL_VALIDATION);\r\n        TopDocs docs = searcher.search(new TermQuery(new Term(\"text\", \"b\")), filter, 3);\r\n        // Field collapsing would return one hit here, which would be undesirable:\r\n        assertEquals(\"Expected no hits - matched the copy\", 0, docs.totalHits);\r\n    }\r\n}\r\n{code}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-11-25T13:58:30.893+0000","updated":"2010-11-25T13:58:30.893+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12935835","id":"12935835","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"body":"{quote}\r\nI think Robert's comments possibly stem from the misconception that the duplicate filter somehow works like field collapsing. I wrote a test just to illustrate how it actually behaves, just to make sure I wasn't confused myself (since he seemed to think I was...)\r\n{quote}\r\n\r\nNo, I understand exactly how this filter works. which is why my patch, that uses SlowMultiReaderWrapper and forces the index to appear as if it were a single segment, fixes the issue. \r\n\r\n{quote}\r\nActually I think Filter is the natural fit for this functionality.\r\n...\r\nBut I don't consider this a show stopper - it'd be simple to change\r\nDuplicateFilter to receive the top IR up front, and pre-compute and\r\ncache the bit set for all segments.\r\n{quote}\r\n\r\nSo now you contradict yourself. the only way is like you said, in the ctor, \r\nin other words, its forcefully cached. This is *unnatural* !\r\n\r\nWe should deprecate this functionality.\r\n\r\nIf someone wants to make a \"DuplicateBitSetBuilder\" that is a factory for creating a BitSet,\r\nto me that is more natural and obvious as to what is going on.\r\n\r\nif its not doing the work in getdocidset, it shouldn't extend Filter!\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rcmuir","name":"rcmuir","emailAddress":"rcmuir at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rcmuir&avatarId=10150","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rcmuir&avatarId=10150","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rcmuir&avatarId=10150","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rcmuir&avatarId=10150"},"displayName":"Robert Muir","active":true},"created":"2010-11-25T18:37:32.016+0000","updated":"2010-11-25T18:37:32.016+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12935894","id":"12935894","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"It used to do the work in getDocIdSet() - it wasn't us who broke that, it was Lucene core!\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2010-11-25T22:23:45.734+0000","updated":"2010-11-25T22:23:45.734+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/12935970","id":"12935970","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"body":"bq. if its not doing the work in getdocidset, it shouldn't extend Filter!\r\n\r\nI don't think we can or should dictate that.\r\n\r\nI think it's fair game for a Filter to compute/cache whatever it\r\nwants.  The only requirement for Filter is that it implement\r\ngetDocIdSet.  Where it does its work, what it's storing in its\r\ninstance, etc., is up to it.\r\n\r\nSure, we strive for a strong separation of \"computing the bits\" vs\r\n\"caching them\", but for some cases that ideal is not feasible.\r\n\r\nIn fact in this case the filter is so costly to build that no\r\nrealistic app can possibly rely on the filter without first wrapping\r\nit in CachingWrapperFilter.  So I see no harm in conflating caching\r\nwith this.  We could rename it to CachingDuplicateFilter.  In fact we\r\ncould factor out the FilterCache utility class now inside\r\nCachingWrapperFilter and make it easily reused by other filters like\r\nthis one that need to compute & cache right off.\r\n\r\nThis would also be cleaner if we change the filter API so getDocIdSet\r\nreceives the top reader and docBase in addition to the sub; this way a\r\nCachingDuplicateFilter instance could be reused across reopened top\r\nreaders.\r\n\r\n{quote}\r\nIf someone wants to make a \"DuplicateBitSetBuilder\" that is a factory for creating a BitSet,\r\nto me that is more natural and obvious as to what is going on.\r\n{quote}\r\n\r\nThat sounds good... but how would it work?  Ie how would an app tie\r\nthat into a Filter?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikemccand","name":"mikemccand","emailAddress":"lucene at mikemccandless dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael McCandless","active":true},"created":"2010-11-26T10:53:19.831+0000","updated":"2010-11-26T10:53:19.831+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/13212391","id":"13212391","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"body":"The IndexReaderContext API in Lucene trunk looks like a reasonable solution to this problem. It is now possible to figure out the docBase relative to the top-level reader, which allows putting the work back into getDocIdSet.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=trejkaz","name":"trejkaz","emailAddress":"trejkaz at trypticon dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Trejkaz","active":true},"created":"2012-02-21T05:55:03.281+0000","updated":"2012-02-21T05:55:03.281+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/13212423","id":"13212423","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"The new AtomicReaderContexts passed to getDocIdSet are exactly made for this problem.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2012-02-21T07:31:52.695+0000","updated":"2012-02-21T07:31:52.695+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12460311/comment/14225148","id":"14225148","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s4ke","name":"s4ke","emailAddress":"martinbraun123 at aol dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Martin Braun","active":true},"body":"any update on this? Or should I use lucene grouping for this?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s4ke","name":"s4ke","emailAddress":"martinbraun123 at aol dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Martin Braun","active":true},"created":"2014-11-25T20:23:53.218+0000","updated":"2014-11-25T20:23:53.218+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LUCENE-2348/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i04r4n:"}}