{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12527019","self":"https://issues.apache.org/jira/rest/api/latest/issue/12527019","key":"SOLR-2829","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310230","id":"12310230","key":"SOLR","name":"Solr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310230&avatarId=22151","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310230&avatarId=22151","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310230&avatarId=22151","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310230&avatarId=22151"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317876","id":"12317876","description":"Major release after 3.4","name":"3.5","archived":false,"released":true,"releaseDate":"2011-11-27"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314992","id":"12314992","description":"Alpha release of 4.x series","name":"4.0-ALPHA","archived":false,"released":true,"releaseDate":"2012-07-03"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2011-10-17 20:56:27.046","customfield_12312323":null,"customfield_12310420":"85381","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_2012989733_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-11-05T20:46:23.498+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-2829/watchers","watchCount":1,"isWatching":false},"created":"2011-10-13T13:36:33.860+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.png","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"7.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316683","id":"12316683","description":"Major release after 3.3","name":"3.4","archived":false,"released":true,"releaseDate":"2011-09-15"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314992","id":"12314992","description":"Alpha release of 4.x series","name":"4.0-ALPHA","archived":false,"released":true,"releaseDate":"2012-07-03"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-11-27T12:36:01.905+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310674","id":"12310674","name":"search","description":"Query the search collection"}],"timeoriginalestimate":null,"description":"I don't know how generic this is, whether it's just a\r\nproblem with fqs when combined with spatial or whether\r\nit has wider applicability , but here's what I know so far.\r\n\r\nMarc Tinnemeyer in a post titled:\r\n\r\n\"Regarding geodist and multiple location fields\"\r\noutlines this. I checked this on 3.4 and trunk and it's\r\nweird in both cases.\r\n\r\nHOLD THE PRESSES:\r\nAfter looking at this a bit more, it looks like a caching\r\nissue, NOT a geodist issue. When I bounce Solr\r\nbetween changing the sfield from \"home\" to \"work\",\r\nit seems to work as expected.\r\n\r\nHmmmm, very strange. If I comment out BOTH\r\nthe filterCache and queryResultCache then it works\r\nfine. Switching from \"home\" to \"work\" in the query\r\nfinds/fails to find the document.\r\nBut commenting out only one of those caches\r\ndoesn't fix the problem.\r\n\r\non trunk I used this query; just flipping \"home\" to \"work\" and back:\r\nhttp://localhost:8983/solr/select?q=id:1&fq={!geofilt sfield=home\r\npt=52.67,7.30 d=5}\r\n\r\n\r\nThe info below is what I used to test.\r\n\r\nFrom Marc's posts:\r\n\r\n<field name=\"home\" type=\"location\" indexed=\"true\" stored=\"true\"/>\r\n<field name=\"work\" type=\"location\" indexed=\"true\" stored=\"true\"/>\r\n<field name=\"elsewhere\" type=\"location\" indexed=\"true\" stored=\"true\"/>\r\n\r\nAt first I thought so too. Here is a simple document.\r\n\r\n<add>\r\n      <doc>\r\n              <field name=\"id\">1</field>\r\n              <field name=\"name\">first</field>\r\n              <field name=\"work\">48.60,11.61</field>\r\n              <field name=\"home\">52.67,7.30</field>\r\n      </doc>\r\n</add>\r\n\r\nand here is the result that shouldn't be:\r\n\r\n<response>\r\n...\r\n<str name=\"q\">*:*</str>\r\n<str name=\"fq\">{!geofilt sfield=work pt=52.67,7.30 d=5}</str>\r\n...\r\n</lst>\r\n</lst>\r\n<result name=\"response\" numFound=\"1\" start=\"0\">\r\n<doc>\r\n<str name=\"home\">52.67,7.30</str>\r\n<str name=\"id\">1</str>\r\n<str name=\"name\">first</str>\r\n<str name=\"work\">48.60,11.61</str>\r\n</doc>\r\n</result>\r\n</response>\r\n\r\n****Yonik's comment******\r\n\r\nIt's going to be a bug in an equals() implementation somewhere in the query.\r\nThe top level equals will be SpatialDistanceQuery.equals() (from\r\nLatLonField.java)\r\n\r\nOn trunk, I already see a bug introduced when the new lucene field\r\ncache stuff was done.\r\nDoubleValueSource now just inherits it's equals method from\r\nNumericFieldCacheSource... and that equals() method only tests if the\r\nCachedArrayCreator.getClass() is the same!  That's definitely wrong.\r\n\r\nI don't know why 3x would also have this behavior (unless there's more\r\nthan one bug!)\r\nAnyway, first step is to modify the spatial tests to catch the bug...\r\nfrom there it should be pretty easy to debug.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"18401","summary":"Filter queries have false-positive matches. Exposed by user's list titled \"Regarding geodist and multiple location fields\"","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"N/A","customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":19,"total":19,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13126604","id":"13126604","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"body":"Right, just adding this:\r\n\r\n&& this.origField.equals(other.origField)\r\n\r\nto LatLonType.equals fixes the problem, but I really can't pursue it further just now; I don't have time to really look at whether this is the right place to put this, nor whether this should be here, nor whether it matches FQs it shouldn't. A quick glance at the test code doesn't show anything happening for testing equals on a LatLon type, but I'm not looking very carefully this morning....","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"created":"2011-10-13T14:17:07.773+0000","updated":"2011-10-13T14:17:07.773+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13129185","id":"13129185","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=emmanuel.espina","name":"emmanuel.espina","emailAddress":"espinaemmanuel at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Emmanuel Espina","active":true},"body":"I modified the tests to reproduce the issue in the mailing list.\r\nThe suggestion Erick made about adding this.origField.equals(other.origField) solves the problem. That line is included in the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=emmanuel.espina","name":"emmanuel.espina","emailAddress":"espinaemmanuel at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Emmanuel Espina","active":true},"created":"2011-10-17T20:56:27.046+0000","updated":"2011-10-17T20:56:27.046+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13135979","id":"13135979","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Although adding the field will solve this specific problem, there is still the underlying bug this uncovered.  The value sources should not have compared as equal.\r\n\r\n{code}\r\n&& this.lonSource.equals(other.lonSource)\r\n&& this.latSource.equals(other.latSource)\r\n{code}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2011-10-26T13:41:39.260+0000","updated":"2011-10-26T13:41:39.260+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13141780","id":"13141780","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"I don't really understand yonik's comment at all, but the patch looks good to me (especially since it includes a test!)\r\n\r\nI did tweak it a bit to ensure that SpatialDistanceQuery calls super.equals(o) for safety.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2011-11-01T23:55:02.660+0000","updated":"2011-11-01T23:55:02.660+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13141795","id":"13141795","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"bq. I don't really understand yonik's comment at all\r\n\r\nthe equals() method in question includes the following:\r\n{code}\r\n&& this.lonSource.equals(other.lonSource)\r\n&& this.latSource.equals(other.latSource)\r\n{code}\r\n\r\nlatSource and lonSource are ValueSources derived from the field.  They should not compare equal when derived from a different field.  Hence there is a value source / function query issue here somewhere (the real bug).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2011-11-02T00:17:23.988+0000","updated":"2011-11-02T00:17:23.988+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13141796","id":"13141796","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"bq. I don't really understand yonik's comment at all\r\n\r\nthe equals() method in question includes the following:\r\n{code}\r\n&& this.lonSource.equals(other.lonSource)\r\n&& this.latSource.equals(other.latSource)\r\n{code}\r\n\r\nlatSource and lonSource are ValueSources derived from the field.  They should not compare equal when derived from a different field.  Hence there is a value source / function query issue here somewhere (the real bug).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2011-11-02T00:17:31.293+0000","updated":"2011-11-02T00:17:31.293+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13141812","id":"13141812","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"ah .. ok.   i see what you mean now.\r\n\r\npretty sure the bug is that NumericFieldCacheSource.equals is explicitly checking that the class of the (CachedArrayCreator)creator's are equal, w/o every actually checking that this.creator.equals(that.creator).\r\n\r\n(CachedArrayCreator extends EntityCreator implemsnt equals() based on getCacheKey, and CachedArrayCreator uses it's class, the array type, and the field name in it's EntryKey)\r\n\r\nthat NumericFieldCacheSource.equals is so sketchy looking it almost seems like someone was deliberately choosing to only do a class equality check instead of deep equality checking - but i can't fathom why.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2011-11-02T00:52:59.741+0000","updated":"2011-11-02T00:52:59.741+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13141826","id":"13141826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"bq. pretty sure the bug is that NumericFieldCacheSource.equals is explicitly checking that the class of the (CachedArrayCreator)creator's are equal, w/o every actually checking that this.creator.equals(that.creator).\r\n\r\nThat was my first thought (for trunk at least) - but I missed the \"super.equals(other)\" part... and the parent class does have \"this.field.equals(other.field)\".  But given that we have a testcase that reproduces the bug, a simple debugging session should quickly show what's up.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2011-11-02T01:09:59.475+0000","updated":"2011-11-02T01:09:59.475+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13141859","id":"13141859","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"Oh man ... it's a fucking precendence problem.\r\n\r\n\"&&\" binds more tightly then \"?:\" ... so NumericFieldCacheSource.equals() method has been returning false anytime the objects are actually equal, and true anytime the creators classes are equal.\r\n\r\nwonder how badly that's been fucking up cache hit rates.\r\n\r\nupdated patch makes the test work by fixing NumericFieldCacheSource w/o an explicit field check in LatLonType, but i still think we need to fix all these equals -- right now they read about as cleaning as smeared shit:\r\n\r\n* every class should call super.equals _first_\r\n* base classes should be checking '{{this.getClass == o.getClass()}}' (not just '{{o instanceof FieldCacheSource}}') so that subclasses don't have to duplicate class checking\r\n* classes with complex members (like NumericFieldCacheSource's CachedArrayCreator<T> creator) should delegate to the member's .equals method, not check the member's properties directly.\r\n\r\n(unless you know of some reason why NumericFieldCacheSource should only care about equality on this.creator.getClass() instead of this.creator ?)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2011-11-02T02:48:32.234+0000","updated":"2011-11-02T02:48:32.234+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13141887","id":"13141887","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"bq. \"&&\" binds more tightly then \"?:\"\r\n\r\n{code}\r\n    return super.equals(other)\r\n            && this.creator == null ? other.creator == null :\r\n            this.creator.getClass() == other.creator.getClass();\r\n{code}\r\n\r\nOuch!  Given that \"creator\" is never null (for trie fields at least) this always boils down to just comparing the creator class.\r\nWhat normally saves us is that the hash code will normally slot to a different bucket, and the fact that we start off with a relatively large number of buckets (size=512, which means 1024 buckets when accounting for load factor and rounding up to the next power of two).\r\n\r\nThis is a bad bug since it can stay hidden and strike randomly.\r\n\r\nbq. (unless you know of some reason why NumericFieldCacheSource should only care about equality on this.creator.getClass() instead of this.creator ?)\r\n\r\nI never fully grokked the creator stuff... and I understand the trunk fieldcache code is slated to be replaced by the 3x fieldcache code, so I wouldn't worry about cleaning anything up (other than making it work).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2011-11-02T03:40:09.111+0000","updated":"2011-11-02T03:40:09.111+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13142080","id":"13142080","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"body":"Well, now that others have done the hard part, any objections if I commit it? This seems serious enough it shouldn't get lost in the shuffle. And I'm assuming it should be both a trunk and 3x change, right?\r\n\r\nShould I create another JIRA reflecting Hoss's comments today (2-Nov) on cleaning up generally that refers back to this issue while I'm at it?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"created":"2011-11-02T12:03:33.624+0000","updated":"2011-11-02T12:03:33.624+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13142370","id":"13142370","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"Erick: your call.  personally i would just fix the equals of any class we're touching (the only reason i didn't in the patch was because it almost seemed intentional -- if it was let the change break something and someone can justify it then)\r\n\r\nthe one other thing i would suggest is adding some explicit tests of FunctionQuery.equals() so we have a more direct test of the underlying problem then just expecting to *not* get a cache hit (as the patch stands now: someone could change the schema to eliminate the cache, then someone else could re-introduce the equals bug, and we'd never know)\r\n\r\nthere's a QueryUtils class in the lucene test-framework that has helper method for checking that Query.equals and Query.hashCode make sense, i would add some explicit tests that look something like...\r\n\r\n{code}\r\n  QParser func = ...;\r\n  check(func.parse(\"geodist(work,...)\"));\r\n  checkEqual(func.parse(\"geodist(work,...)\"), \r\n             func.parse(\"geodist(work...)\");\r\n  checkUnEqual(func.parse(\"geodist(home,...)\"), \r\n               func.parse(\"geodist(work...)\");\r\n  ...\r\n  check(func.parse(\"product(pow(a_d,b_l),c_i,d_f)\"));\r\n  checkEqual(func.parse(\"product(pow(a_d,b_l),c_i,d_f)\"),\r\n             func.parse(\"product(pow(a_d,b_l),c_i,d_f)\"));\r\n  checkUnEqual(func.parse(\"product(pow(a_d,b_l),c_i,d_f)\"),\r\n               func.parse(\"product(pow(a_i,b_l),c_i,d_f)\"));\r\n  ...\r\n{code}\r\n\r\n...for a few different types of function queries (using different field cache source types: double, float, int, tint, etc...)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2011-11-02T18:16:52.944+0000","updated":"2011-11-02T18:16:52.944+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13144096","id":"13144096","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"body":"Patch for the 3x code line, if I don't get any objections, I'll merge it with trunk and commit over the weekend.\r\n\r\nAll tests pass.\r\n\r\nThe code changes aren't as interesting as the tests, anyone want to recommend improvements? I verified that the tests catch short, float, long, byte and double if the parens aren't added. Had to add a few types to the default schema.xml.\r\n\r\nI realize that the tests specific to LatLon are redundant, they're caught by the double test. But I don't see any harm leaving them in.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"created":"2011-11-04T16:06:02.247+0000","updated":"2011-11-04T16:06:02.247+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13144453","id":"13144453","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"body":"Patch against trunk rather than 3x. I think I have all the pieces together, I can merge trunk/3x and reconcile differences this weekend I hope.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"created":"2011-11-04T23:24:11.256+0000","updated":"2011-11-04T23:24:11.256+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13144498","id":"13144498","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"Erick: +1 to the patch (although \"temp\" is probably not the best name for an iterator of of a \"templates\" array)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2011-11-05T01:00:24.129+0000","updated":"2011-11-05T01:00:24.129+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13144800","id":"13144800","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"body":"Final patch. Renamed variable as per Hoss. I hate it when he's right.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"created":"2011-11-05T19:18:57.418+0000","updated":"2011-11-05T19:18:57.418+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13144825","id":"13144825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"body":"Added fix version of 4.0","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"created":"2011-11-05T20:45:59.841+0000","updated":"2011-11-05T20:45:59.841+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13144838","id":"13144838","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"body":"Attached the 3x patch, reconciling these is kinda unpleasant.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=erickerickson","name":"erickerickson","emailAddress":"erickerickson at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Erick Erickson","active":true},"created":"2011-11-05T21:31:34.640+0000","updated":"2011-11-05T21:31:34.640+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12527019/comment/13157830","id":"13157830","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"body":"Bulk close after 3.5 is released","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thetaphi","name":"thetaphi","emailAddress":"uwe at thetaphi dot de","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thetaphi&avatarId=18956","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thetaphi&avatarId=18956","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thetaphi&avatarId=18956","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thetaphi&avatarId=18956"},"displayName":"Uwe Schindler","active":true},"created":"2011-11-27T12:36:01.892+0000","updated":"2011-11-27T12:36:01.892+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-2829/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i03ibj:"}}