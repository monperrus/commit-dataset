{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12425561","self":"https://issues.apache.org/jira/rest/api/latest/issue/12425561","key":"DERBY-4232","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314116","id":"12314116","description":"10.5.2 Release July 30 2009 (794445) Now deprecated","name":"10.5.2.0","archived":false,"released":true,"releaseDate":"2009-07-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2009-05-15 07:31:54.326","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"24119","customfield_12310222":"3_*:*_1_*:*_347983190_*|*_1_*:*_1_*:*_3480610931_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2009-06-28T14:49:56.642+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4232/watchers","watchCount":0,"isWatching":false},"created":"2009-05-15T07:20:02.521+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313345","id":"12313345","description":"","name":"10.4.2.0","archived":false,"released":true,"releaseDate":"2008-09-05"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:52:25.649+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11407","id":"11407","name":"JDBC"},{"self":"https://issues.apache.org/jira/rest/api/2/component/11690","id":"11690","name":"Network Client"}],"timeoriginalestimate":null,"description":"Got below error message when running an XA prolgram with derby. \r\norg.apache.derby.client.am.XaException: XAER_PROTO : Error executing a XAResource.start(), server returned XAER_PROTO.\r\n\tat org.apache.derby.client.net.NetXAResource.throwXAException(Unknown Source)\r\n\tat org.apache.derby.client.net.NetXAResource.start(Unknown Source)\r\n\tat TestDerbyXA.process(TestDerbyXA.java:186)\r\n\tat TestDerbyXA.main(TestDerbyXA.java:43)\r\nCaused by: org.apache.derby.client.am.SqlException: Error executing a XAResource.start(), server returned XAER_PROTO.\r\n\tat org.apache.derby.client.net.NetXAResource.xaRetValErrorAccumSQL(Unknown Source)\r\n\t... 3 more\r\n\r\nBelow is the example program I used. Note: The program will succeed if comment out line 147 - setTransactionTimeout. Does that means call XAResource.setTransactionTimeout() caused the failure?\r\nI use Apache Derby Network Server - 10.4.2.0 - (689064). The same program works fine with another version Apache Derby Network Server - 10.2.2.0 - (485682). It looks like there is a regression between the two versions.\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\n\r\nimport javax.sql.XAConnection;\r\nimport javax.transaction.xa.XAException;\r\nimport javax.transaction.xa.XAResource;\r\nimport javax.transaction.xa.Xid;\r\n\r\nimport org.apache.derby.jdbc.ClientXADataSource;\r\n\r\npublic class TestDerbyXA {\r\n\r\n\tClientXADataSource xaDSLocal = null;\r\n\r\n\tClientXADataSource xaDSRemote = null;\r\n\r\n\tpublic TestDerbyXA() {\r\n\t\t// Create two XA data sources.\r\n\t\txaDSLocal = new ClientXADataSource();\r\n\t\txaDSLocal.setServerName(\"localhost\");\r\n\t\txaDSLocal.setPortNumber(1527);\r\n\t\txaDSLocal.setDatabaseName(\"testdb\");\r\n\t\txaDSLocal.setUser(\"app\");\r\n\t\txaDSLocal.setPassword(\"derby\");\r\n\r\n\t\txaDSRemote = new ClientXADataSource();\r\n\t\txaDSRemote.setServerName(\"localhost\");\r\n\t\txaDSRemote.setPortNumber(1527);\r\n\t\txaDSRemote.setDatabaseName(\"testdb\");\r\n\t\txaDSRemote.setUser(\"app\");\r\n\t\txaDSRemote.setPassword(\"derby\");\r\n\t\t// xaDSRemote = xaDSLocal;\r\n\t}\r\n\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t\tTestDerbyXA testObj = new TestDerbyXA();\r\n\t\ttestObj.dropTable(\"tablea\");\r\n\t\ttestObj.createTable(\"CREATE TABLE tablea (col1 INT, col2 VARCHAR(32))\");\r\n\t\ttestObj.dropTable(\"tableb\");\r\n\t\ttestObj.createTable(\"CREATE TABLE tableb (col1 INT, col2 VARCHAR(32))\");\r\n\t\ttestObj.process();\r\n\t}\r\n\r\n\tpublic void dropTable(String tableName) throws Exception {\r\n\t\tConnection conn = null;\r\n\t\tStatement stmt = null;\r\n\r\n\t\ttry {\r\n\t\t\tconn = xaDSLocal.getConnection();\r\n\t\t\tstmt = conn.createStatement();\r\n\t\t\tstmt.executeUpdate(\"DROP TABLE \" + tableName);\r\n\t\t\tSystem.out.println(\"Drop table \" + tableName + \" succeed.\");\r\n\t\t} catch (SQLException sqle) {\r\n\t\t\tSystem.out.println(\"Drop table \" + tableName + \" failed.\");\r\n\t\t\tsqle.printStackTrace();\r\n\t\t} finally {\r\n\t\t\t// ============ Close JDBC objects, including the connection =======\r\n\t\t\tif (stmt != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tstmt.close();\r\n\t\t\t\t\tstmt = null;\r\n\t\t\t\t} catch (SQLException e) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (conn != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconn.close();\r\n\t\t\t\t\tconn = null;\r\n\t\t\t\t} catch (SQLException e) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void createTable(String DDL) throws Exception {\r\n\t\tConnection conn = null;\r\n\t\tStatement stmt = null;\r\n\r\n\t\ttry {\r\n\t\t\tconn = xaDSLocal.getConnection();\r\n\t\t\tstmt = conn.createStatement();\r\n\t\t\tstmt.executeUpdate(DDL);\r\n\t\t\tSystem.out.println(DDL + \" succeed.\");\r\n\t\t} catch (SQLException sqle) {\r\n\t\t\tSystem.out.println(DDL + \" failed.\");\r\n\t\t\tsqle.printStackTrace();\r\n\t\t} finally {\r\n\t\t\t// ============ Close JDBC objects, including the connection =======\r\n\t\t\tif (stmt != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tstmt.close();\r\n\t\t\t\t\tstmt = null;\r\n\t\t\t\t} catch (SQLException e) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (conn != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconn.close();\r\n\t\t\t\t\tconn = null;\r\n\t\t\t\t} catch (SQLException e) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void process() throws Exception {\r\n\t\tConnection connLocal = null;\r\n\t\tConnection connRemote = null;\r\n\t\tint rows = 0;\r\n\t\tPreparedStatement pstmtLocal = null;\r\n\t\tPreparedStatement pstmtRemote = null;\r\n\t\tXAConnection xaConnLocal = null;\r\n\t\tXAConnection xaConnRemote = null;\r\n\t\tXAResource xarLocal = null;\r\n\t\tXAResource xarRemote = null;\r\n\t\tXid xidLocal = null;\r\n\t\tXid xidRemote = null;\r\n\t\ttry {\r\n\t\t\txaConnLocal = xaDSLocal.getXAConnection();\r\n\t\t\txaConnRemote = xaDSRemote.getXAConnection();\r\n\t\t\tconnLocal = xaConnLocal.getConnection();\r\n\t\t\tconnRemote = xaConnRemote.getConnection();\r\n\t\t\txarLocal = xaConnLocal.getXAResource();\r\n\t\t\txarRemote = xaConnRemote.getXAResource();\r\n\r\n\t\t\t// Create the Xids\r\n\r\n\t\t\t// Create the global ID\r\n\t\t\tbyte[] globalTransactionId1 = new byte[64];\r\n\t\t\tglobalTransactionId1[0] = (byte) 1;\r\n\t\t\tbyte[] globalTransactionId2 = new byte[64];\r\n\t\t\tglobalTransactionId2[0] = (byte) 2;\r\n\r\n\t\t\t// Create the local branch ID\r\n\t\t\tbyte[] branchQualifierLocal = new byte[64];\r\n\t\t\tbranchQualifierLocal[0] = (byte) 1;\r\n\t\t\txidLocal = new XidImpl(globalTransactionId1, branchQualifierLocal, 0x1234);\r\n\r\n\t\t\t// Create the remote branch ID\r\n\t\t\tbyte[] branchQualifierRemote = new byte[64];\r\n\t\t\tbranchQualifierRemote[0] = (byte) 2;\r\n\t\t\txidRemote = new XidImpl(globalTransactionId2, branchQualifierRemote, 0x1234);\r\n\r\n\t\t\t// Database operations on the local branch, suspend local branch\r\n\t\t\txarLocal.setTransactionTimeout(500);  //!!! The failure will disappear if comment out this line.\r\n\t\t\tconnLocal.setAutoCommit(false);\r\n\t\t\txarLocal.start(xidLocal, XAResource.TMNOFLAGS);\r\n\r\n\t\t\tpstmtLocal = connLocal\r\n\t\t\t\t\t.prepareStatement(\"INSERT INTO tablea (col1, col2) VALUES (?, ?)\");\r\n\t\t\tpstmtLocal.setInt(1, 1);\r\n\t\t\tpstmtLocal.setString(2, \"insert first rec to tablea\");\r\n\t\t\trows = pstmtLocal.executeUpdate();\r\n\t\t\tSystem.out.println(rows + \" rows inserted to tablea\");\r\n\t\t\tpstmtLocal.close();\r\n\t\t\tpstmtLocal = null;\r\n\r\n\t\t\txarLocal.end(xidLocal, XAResource.TMSUCCESS);\r\n\t\t\tconnLocal.setAutoCommit(true);\r\n\r\n\t\t\t// Database operation on the remote branch, commit remote branch\r\n\t\t\txarRemote.setTransactionTimeout(500);\r\n\t\t\tconnRemote.setAutoCommit(false);\r\n\t\t\txarRemote.start(xidRemote, XAResource.TMNOFLAGS);\r\n\r\n\t\t\tpstmtRemote = connRemote\r\n\t\t\t\t\t.prepareStatement(\"INSERT INTO tableb (col1, col2) VALUES (?, ?)\");\r\n\t\t\tpstmtRemote.setInt(1, 2);\r\n\t\t\tpstmtRemote.setString(2, \"insert second rec to tableb\");\r\n\t\t\trows = pstmtRemote.executeUpdate();\r\n\t\t\tSystem.out.println(rows + \" rows inserted to tableb\");\r\n\t\t\tpstmtRemote.close();\r\n\t\t\tpstmtRemote = null;\r\n\r\n\t\t\txarRemote.end(xidRemote, XAResource.TMSUCCESS);\r\n\t\t\tconnRemote.setAutoCommit(true);\r\n\r\n\t\t\tSystem.out.println(\"commit remote branch\");\r\n\t\t\txarRemote.commit(xidRemote, true);\r\n\r\n\t\t\t// Resume the local branch and do some database operation, commit local branch\r\n\t\t\txarLocal.setTransactionTimeout(500);\r\n\t\t\tconnLocal.setAutoCommit(false);\r\n\t\t\txarLocal.start(xidLocal, XAResource.TMJOIN);\r\n\r\n\t\t\tpstmtLocal = connLocal\r\n\t\t\t\t\t.prepareStatement(\"INSERT INTO tablea (col1, col2) VALUES (?, ?)\");\r\n\t\t\tpstmtLocal.setInt(1, 3);\r\n\t\t\tpstmtLocal.setString(2, \"insert third rec to tablea\");\r\n\t\t\trows = pstmtLocal.executeUpdate();\r\n\t\t\tSystem.out.println(rows + \" rows inserted to tablea\");\r\n\t\t\tpstmtLocal.close();\r\n\t\t\tpstmtLocal = null;\r\n\r\n\t\t\txarLocal.end(xidLocal, XAResource.TMSUCCESS);\r\n\t\t\tconnLocal.setAutoCommit(true);\r\n\r\n\t\t\tSystem.out.println(\"commit local branch\");\r\n\t\t\txarLocal.commit(xidLocal, true);\r\n\r\n\t\t\t// Close the resources\r\n\t\t\tconnLocal.close();\r\n\t\t\tconnLocal = null;\r\n\t\t\tconnRemote.close();\r\n\t\t\tconnRemote = null;\r\n\t\t\txaConnLocal.close();\r\n\t\t\txaConnLocal = null;\r\n\t\t\txaConnRemote.close();\r\n\t\t\txaConnRemote = null;\r\n\t\t} catch (SQLException e) {\r\n\t\t\tSystem.err.println(\"SQL Error: \" + e.getMessage());\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (XAException e) {\r\n\t\t\tSystem.err.println(\"XA Error: \" + e.getMessage());\r\n\t\t\te.printStackTrace();\r\n\t\t} finally {\r\n\t\t\tif (pstmtLocal != null)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tpstmtLocal.close();\r\n\t\t\t\t\tpstmtLocal = null;\r\n\t\t\t\t} catch (SQLException ignore) {\r\n\t\t\t\t}\r\n\t\t\tif (pstmtRemote != null)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tpstmtRemote.close();\r\n\t\t\t\t\tpstmtRemote = null;\r\n\t\t\t\t} catch (SQLException ignore) {\r\n\t\t\t\t}\r\n\t\t\tif (connLocal != null)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconnLocal.close();\r\n\t\t\t\t\tconnLocal = null;\r\n\t\t\t\t} catch (SQLException ignore) {\r\n\t\t\t\t}\r\n\t\t\tif (connRemote != null)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconnRemote.close();\r\n\t\t\t\t\tconnRemote = null;\r\n\t\t\t\t} catch (SQLException ignore) {\r\n\t\t\t\t}\r\n\t\t\tif (xaConnLocal != null)\r\n\t\t\t\ttry {\r\n\t\t\t\t\txaConnLocal.close();\r\n\t\t\t\t\txaConnLocal = null;\r\n\t\t\t\t} catch (SQLException ignore) {\r\n\t\t\t\t}\r\n\t\t\tif (xaConnRemote != null)\r\n\t\t\t\ttry {\r\n\t\t\t\t\txaConnRemote.close();\r\n\t\t\t\t\txaConnRemote = null;\r\n\t\t\t\t} catch (SQLException ignore) {\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37235","summary":"XAResource.setTransactionTimeout() makes XAResource.start() fail with the client driver","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=simon.meng","name":"simon.meng","emailAddress":"simon dot meng at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Simon Meng","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=simon.meng","name":"simon.meng","emailAddress":"simon dot meng at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Simon Meng","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":8,"total":8,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425561/comment/12709744","id":"12709744","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"I haven't looked at the posted code yet, but I just thought I'd mention that setTransactionTimeout() was a no-op in Derby 10.2 and earlier, which probably explains why reverting to 10.2.2.0 has the same effect as commenting out the call.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-05-15T07:31:54.326+0000","updated":"2009-05-15T07:31:54.326+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425561/comment/12710407","id":"12710407","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"What makes this fail, is the following code in DRDAXAProtocol.startXATransaction() on the server:\r\n\r\n\t\t\t} else if (xaTimeout != -1 && xaflags != XAResource.TMNOFLAGS) {\r\n\t\t\t\t// According the DRDA spec if the value of timeout was specified\r\n\t\t\t\t// a TMNOFLAGS have to be used\r\n\t\t\t\tthrow new XAException(XAException.XAER_PROTO);\r\n\r\nIt is the SYNCCTL section in volume 3 of the DRDA spec that says that the timeout property should not be present when XAFLAGS is not TMNOFLAGS. I don't know if this means that XAResource.start(TMJOIN) should fail if a timeout is set, or if it simply means that the client shouldn't send the timeout value if the flag is TMJOIN or TMRESUME.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-05-18T17:13:46.940+0000","updated":"2009-05-18T17:13:46.940+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425561/comment/12723542","id":"12723542","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Attached is a patch which adds regression test cases for the bug. The test cases pass with the embedded driver and fail (XAER_PROTO) with the network client.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-06-24T12:15:06.867+0000","updated":"2009-06-24T12:15:06.867+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425561/comment/12723562","id":"12723562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"The patch d4232-1a.diff appears to fix the issue. It simply skips sending the timeout property if something we have other flags than TMNOFLAGS. Currently, the client code will only reread the timeout value when start(xid,TMNOFLAGS) is called, but the last timeout value read is still sent to the server regardless of the flags. I think this is unintentional, and that the meaning was to suppress the sending of the value as well. If start(xid,TMNOFLAGS) hasn't been called on the XAResource before we call start() with TMJOIN, the timeout value will be ignored with the current code too, and we don't get the XAER_PROTO exception.\r\n\r\n(This means that we will ignore changes in the timeout value when calling start() with flags!=TMNOFLAGS, which I wouldn't think is according to the XA specification. However, this is an existing problem in the cases where we don't get a protocol error, so a new bug should be filed if someone wants that addressed. My current understanding is that communicating the changed timeout value to the server in the non-TMNOFLAGS case would require an extension to the DRDA protocol.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-06-24T13:38:49.144+0000","updated":"2009-06-24T13:38:49.144+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425561/comment/12723601","id":"12723601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"All the regression tests ran cleanly with d4232-1a.diff + test.diff.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-06-24T15:30:23.337+0000","updated":"2009-06-24T15:30:23.337+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425561/comment/12724128","id":"12724128","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"I verified that the new test cases fail without the fix, and work with the fix.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-06-25T15:33:44.125+0000","updated":"2009-06-25T15:33:44.125+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425561/comment/12724503","id":"12724503","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Thanks for testing the patch, Dag. Committed to trunk with revision 788674. I'll leave the issue open until the fix has been back-ported to 10.5.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-06-26T12:29:32.010+0000","updated":"2009-06-26T12:29:32.010+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12425561/comment/12724959","id":"12724959","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Merged to 10.5 and committed revision 789105.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-06-28T14:49:56.490+0000","updated":"2009-06-28T14:49:56.490+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-4232/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06qjr:"}}