{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12394964","self":"https://issues.apache.org/jira/rest/api/latest/issue/12394964","key":"DERBY-3650","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2008-04-29 08:40:06.513","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23770","customfield_12310222":"1_*:*_1_*:*_62141126135_*|*_5_*:*_2_*:*_25093735995_*|*_4_*:*_1_*:*_1289936993","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2011-02-17T21:49:11.233+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3650/watchers","watchCount":2,"isWatching":false},"created":"2008-04-29T07:35:52.126+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":["derby_backport_reject_10_5"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"14.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313142","id":"12313142","description":"","name":"10.3.3.0","archived":false,"released":true,"releaseDate":"2008-05-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314117","id":"12314117","description":"Next release after 10.5.2.0 release candidate #1","name":"10.5.3.0","archived":false,"released":true,"releaseDate":"2009-08-21"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313727","id":"12313727","description":"Feature release","name":"10.6.1.0","archived":false,"released":true,"releaseDate":"2010-05-18"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12325524","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12325524","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12356471","key":"DERBY-2111","self":"https://issues.apache.org/jira/rest/api/2/issue/12356471","fields":{"summary":"EOFException when using stream as parameter for multi-row update statement in embedded driver","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"New"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12320277","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12320277","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12372921","key":"DERBY-2892","self":"https://issues.apache.org/jira/rest/api/2/issue/12372921","fields":{"summary":"Closing a resultset after retrieving a large > 32665 bytes value with Network Server does not release locks","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.png","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12328875","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12328875","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12446023","key":"DERBY-4520","self":"https://issues.apache.org/jira/rest/api/2/issue/12446023","fields":{"summary":"Refactor and extend data type cloning facilities","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-06-17T09:19:44.647+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11690","id":"11690","name":"Network Client"},{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"},{"self":"https://issues.apache.org/jira/rest/api/2/component/11412","id":"11412","name":"Store"}],"timeoriginalestimate":null,"description":"Derby + Hibernate JPA 3.2.1 problem on entity with Blob/Clob\r\n\r\nHi,\r\n\r\nI'm using Derby in Client - Server mode with Hibernate JPA EJB 3.0.\r\nWhen a query on an entity containing a Clob and some joins on other entites is executed, an exception with the following message is thrown:\r\n  XJ073: The data in this BLOB or CLOB is no longer available.  The BLOB/CLOB's transaction may be committed, or its connection is closed.\r\n\r\nThis problem occurs when the property \"hibernate.max_fetch_depth\" is greater than 0.\r\nWhen hibernate.max_fetch_depth=0, the query works.\r\n\r\nIf Derby is configured in embedded mode, the query works independently of the value of hibernate.max_fetch_depth.\r\n\r\nOn the Hibernate's documentation, the advised value of hibernate.max_fetch_depth is 3.\r\nCould you explain me if I made something wrong ?\r\n\r\nThank you.\r\nStephane","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"36721","summary":"internal multiple references from different rows to a single BLOB/CLOB stream leads to various errors when second reference used.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"subtasks":[],"customfield_12310090":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10426","value":"Known fix","id":"10426"},{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10424","value":"Repro attached","id":"10424"}],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Mac OSX 10.4\r\nJDK 1.5.0_13\r\nHibernate EntityManager 3.2.1\r\n","customfield_12311020":null,"customfield_12310050":{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10052","value":"Normal","id":"10052"},"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":50,"total":50,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12592978","id":"12592978","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Any chance you can provide a repro for this?\r\n\r\nBasically, a LOB is released when the method 'free' is explicitly called on the LOB (requires Java SE 6.0), if a column is not accessed before moving off a row (i.e. you have a row with a Clob, but never access it with  getClob) or if the transaction is committed / rolled back.\r\n\r\nTo determine if the LOB is released incorrectly, it would help a lot to have a working repro. This would also help determine if the problem is in another area of the code.\r\nThe first thing to verify, is that you are running with auto commit disabled.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-29T08:40:06.513+0000","updated":"2008-04-29T08:40:06.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593036","id":"12593036","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"body":"I've attached a test case.\r\n\r\nYou should modify the value of the variable \"childrenCout\" into the method \"insertData\".\r\nIf the value is about 10, the error not appear.\r\nIf the value is about 100 or 1000, the exception describe below is thrown.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"created":"2008-04-29T15:09:49.841+0000","updated":"2008-04-29T15:12:46.001+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593316","id":"12593316","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thank you for providing the repro.\r\n\r\nAnd what is the magic command to run the repro?\r\nI'm able to build it, but haven't figured out how to run it in a simple way...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-30T13:07:41.180+0000","updated":"2008-04-30T13:07:41.180+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593326","id":"12593326","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"body":"Hi,\r\n\r\nPlease, import the project into Eclipse.\r\nYou could generate the eclipse project with the maven command \"mvn eclipse:eclipse\".\r\n\r\nNext, run the JUnit test called TestBlob.\r\n\r\nOR\r\n\r\nrun the command \"mvn test -DtestClassesDirectory=.\\target\\classes\"\r\nunder the directory \"...\\mvn test -DtestClassesDirectory=.\\target\\classes\"","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"created":"2008-04-30T13:31:22.004+0000","updated":"2008-04-30T14:18:01.902+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593332","id":"12593332","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"What makes you think I'm using Eclipse? :)\r\n\r\nI managed to get the repro running in NetBeans by generating a freeform project with Maven and then creating a \"Run class/file\" target.\r\nThe repro demonstrates the problem, and I guess the first thing to do is to figure out if the repro or Hibernate is doing something wrong or if Derby has a bug.\r\n\r\nBTW; I'll be away for two weeks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-30T14:08:06.629+0000","updated":"2008-04-30T14:08:06.629+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593336","id":"12593336","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"body":"On my previous comment, I've added the Maven command to run the test without Eclipse :)\r\n\r\nI will perhaps post the same test case on the Hibernate Forum...\r\n\r\nThanks,\r\n  Stephane","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"created":"2008-04-30T14:21:18.884+0000","updated":"2008-04-30T14:21:18.884+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593397","id":"12593397","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"My early suspicions pointed at the new release mechanism to avoid LOB locators piling up in the server, eventually leading to an OOME before the problem was fix.\r\nFollowing this trail led me to the cause of the bug. \r\n\r\nWhen a new Clob is created,  a store stream that has already been closed is passed in to the EmbedClob constructor.\r\nThe stream has been closed by EmbedClob.free (the Clob being represented as a StoreStreamClob). Derby fails at EmbedClob:153, more specifically in OverflowInputStream:155. Here it detects that there is no active transaction, which indicates a commit or rollback has taken place. However, I think that is a red herring.\r\n\r\nFurther investigation made it clear that in the case of the data generation script in the original repro, you need childrenCout to be 19 (or higher) to provoke the error.\r\nMaking the original join query less verbose, gives:\r\nSELECT\r\n    Nm_Data\r\nFROM\r\n    Tbl_T4 inner join Tbl_T2 on Tbl_T4.Id_T2=Tbl_T2.Id\r\n                        left outer join Tbl_T1 on Tbl_T2.Id_T1=Tbl_T1.Id\r\nWHERE Tbl_T4.Id_T3=?\r\n\r\nIf you allow the LOB release mechanism to release a Clob, the bug occurs because all rows in the result set points to the same Clob data.\r\nI made a smaller repro, you have to run the original one first to create the data or download the zipped db. Feel free to improve it, I was a bit short on time to extract the data generation and add proper comments...\r\n\r\nThe question is, where and how should this problem be fixed?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-04-30T18:25:25.678+0000","updated":"2008-04-30T18:25:25.678+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593413","id":"12593413","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is Derby3650EmbeddedRepro that shows the same problem with embedded if the clob is explicitly freed.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-04-30T19:18:00.384+0000","updated":"2008-04-30T19:18:00.384+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593431","id":"12593431","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I tried making a standalone repro by having a clob table with one row and returning it as two rows in the result set, with\r\nSELECT * FROM TAB UNION ALL SELECT * FROM TAB\r\n\r\nbut that case seemed to work ok. There must be something different going on with the query in the repro.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-04-30T20:15:17.404+0000","updated":"2008-04-30T20:15:17.404+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593581","id":"12593581","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is a full repro of the issue with embedded (explicit free) without the testdb.  We just had to do a left outer join that returned the same clob twice.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-01T17:08:18.396+0000","updated":"2008-05-01T17:08:18.396+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593618","id":"12593618","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Here is the UnionAll case that works fine.  I want to understand why in this case we are able to return the same clob twice without problem but with the left outer join we have trouble.  Does it materialize the clob in the  union all case or is there something else going on?  I am not quite sure where in the code to look but am looking ...   Any advice is appreciated.\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-01T19:49:01.911+0000","updated":"2008-05-01T19:49:01.911+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593790","id":"12593790","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I can't tell you where the decision is made, but I observe that in the two repros (UnionAll and Derby3650FullRepro) the behavior is different.\r\nIn the former one, the Clobs are created with different instances of FormatIdInputStream, whereas in the latter the same instance of FormatIdInputStream is passed to both Clobs.\r\n\r\nMaybe the next step would be to figure out why this difference occur.\r\nI thought I saw a JIRA on this alredady, but note that you also get the same error by simply selecting the same LOB column twice.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-05-02T14:27:41.962+0000","updated":"2008-05-02T14:27:41.962+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12593874","id":"12593874","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"For lack of a better idea where to look, I started looking at the FormatIdStream allocations for the Clob.  I saw that there was only one allocation for Derby3650FullRepro.java which happened on openCore() and two for UnionAll.java which happened on each of the next() calls.  Not sure if this is relevant but am attaching the traces in case someone is interested.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-02T20:27:55.211+0000","updated":"2008-05-02T20:27:55.211+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12595004","id":"12595004","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"body":"I spent some time on this jira entry. In the test cases attached by Kathey,  Derby3650FullRepro.java  and UnionAll.java, there are 2 tables TAB and TAB2. There is one row in table TAB which has the CLOB column and 2 rows in table TAB2. It appears that for loj case, we are looking at TAB only once to get the CLOB and using that same row from TAB twice for the 2 rows returned from TAB2 but in case of union, it looks like we get the row from TAB twice once for each row in TAB2. I am not sure why there is a difference in how and when the row is fetched from TAB but may be explore that difference further more. May be in loj case, we should not free the CLOB so it can be reused. Not exactly sure but I thought I would share what I found.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mamtas","name":"mamtas","emailAddress":"msatoor at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mamta A. Satoor","active":true},"created":"2008-05-07T18:58:29.189+0000","updated":"2008-05-07T18:58:29.189+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12595256","id":"12595256","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I think I understand what is going on here.  In the join case we are doing a nested loop join, joining the left result set, (1 row with clob) with the right result set (2 rows), so essentially we do\r\nfor each row in left result set\r\n    for each row in right result set\r\n             form tuple.\r\n\r\nSo we need to access the 1 row in the left result set twice, so freeing the clob  after the first row is returned is no good. Somehow, freeing the clob needs to be deferred in this case.  \r\n\r\nNote the same symptom occurs if we commit instead of calling clob.free() because commit also frees the clobs.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-08T14:20:32.632+0000","updated":"2008-05-08T14:20:32.632+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12595680","id":"12595680","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I am really quite stuck on this issue.  Somehow we will need to defer the freeing of the lob until the result set is closed when it is used in a join if free or commit are called.  I tried simply nulling out the InternalClob in EmbedClob and adding a finalize method to StoreStreamClob to close the stream, thinking that in this way we could perhaps rely on garbage collection to close the stream after it is no longer referenced, but even with a forced gc() after closing the result set,  I saw failures in ClobTest.testLockingAfterFree, which indicates that there is still a reference to the stream until the end of the transaction.\r\n\r\nPerhaps this method would still work if I could figure out where the reference to the stream is and I could null that out too on free().  Then we could force a gc() on result set close.  Perhaps I am off track all together.  Does anyone know where else the stream is referenced or have any other ideas on this issue?\r\n\r\nThanks\r\n\r\nKathey\r\n\r\n\r\n\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-09T17:50:59.369+0000","updated":"2008-05-09T17:50:59.369+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12596815","id":"12596815","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attaching one more case, Derby3650FullClientRepro which shows the regression from 10.2 to 10.3 caused by the fix for DERBY-2892.  For client even without the free we fail,, because there is a free under the covers. This case passes with 10.2 or with soft upgrade to higher versions but fails with a new database for 10.3.3.0\r\njava DerbyFullClientRepro\r\n--- rs.next iteration 1\r\n        Clob id : 1\r\n--- rs.next iteration 2\r\n        Clob id : 1\r\nException in thread \"main\" java.sql.SQLException: The exception 'java.sql.SQLException: Java exception: 'Reached end-of-\r\nstream prematurely, with 2 byte(s) to go: java.io.EOFException'.' was thrown while evaluating an expression.\r\n        at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:96)\r\n        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:362)\r\n        at org.apache.derby.client.am.Clob.getCharacterStream(Clob.java:349)\r\n        at Derby3650FullClientRepro.main(Derby3650FullClientRepro.java:25)\r\nCaused by: org.apache.derby.client.am.SqlException: The exception 'java.sql.SQLException: Java exception: 'Reached end-o\r\nf-stream prematurely, with 2 byte(s) to go: java.io.EOFException'.' was thrown while evaluating an expression.\r\n        at org.apache.derby.client.am.Statement.completeExecute(Statement.java:1601)\r\n        at org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreply(NetStatementReply.java:322)\r\n        at org.apache.derby.client.net.NetStatementReply.readExecuteCall(NetStatementReply.java:106)\r\n        at org.apache.derby.client.net.StatementReply.readExecuteCall(StatementReply.java:75)\r\n        at org.apache.derby.client.net.NetStatement.readExecuteCall_(NetStatement.java:179)\r\n        at org.apache.derby.client.am.Statement.readExecuteCall(Statement.java:1567)\r\n        at org.apache.derby.client.am.PreparedStatement.flowExecute(PreparedStatement.java:2139)\r\n        at org.apache.derby.client.am.PreparedStatement.executeX(PreparedStatement.java:1582)\r\n        at org.apache.derby.client.am.CallableLocatorProcedures.clobGetLength(CallableLocatorProcedures.java:859)\r\n        at org.apache.derby.client.am.Clob.getLocatorLength(Clob.java:1050)\r\n        at org.apache.derby.client.am.Lob.sqlLength(Lob.java:116)\r\n        at org.apache.derby.client.am.Lob.checkForLocatorValidity(Lob.java:386)\r\n        at org.apache.derby.client.am.UpdateSensitiveClobLocatorReader.<init>(UpdateSensitiveClobLocatorReader.java:74)\r\n        at org.apache.derby.client.am.Clob.getCharacterStreamX(Clob.java:362)\r\n        at org.apache.derby.client.am.Clob.getCharacterStream(Clob.java:340)\r\n        ... 1 more\r\nCaused by: org.apache.derby.client.am.SqlException: Java exception: 'Reached end-of-stream prematurely, with 2 byte(s) t\r\no go: java.io.EOFException'.\r\n        ... 16 more\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-14T16:21:57.808+0000","updated":"2008-05-14T16:21:57.808+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12596823","id":"12596823","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I spoke briefly on IRC with Kristian regarding this bug and he suggested perhaps the right solution is for each lob to have its own \"store stream.\"  I don't know even if this would be a store change or a language change. Anyway, input from either area is welcome.  Even though the underlying embedded problem has been around, I think the client regression  is a likely hit by  users upgrading to 10.3.30 or 10.4, so it would be good to get it addressed as soon as possible, especially since we are encouraging aggressive upgrade.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-14T16:55:04.995+0000","updated":"2008-05-14T16:55:04.995+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12596824","id":"12596824","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"The client regression is related to the DERBY-2892 fix, although the underlying embedded  problem has been there since free was introduced.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-14T16:56:44.144+0000","updated":"2008-05-14T16:56:44.144+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12596958","id":"12596958","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I am not sure of the solution, but thought I would share my understanding\r\nof the stream and clob datatype support from store up through language\r\non the embedded side of the system - hoping to spark a discussion.\r\nThe more of these bugs that come up\r\nmakes me think that a number of things are working by accident and that\r\nwe just keep patching up the latest thing that crops up which then pushes\r\nsomething else up later.  The main area of concern are cases where we\r\ncopy and or share references to a single column that may contain a stream.\r\n\r\nFor this discussion I am going to concentrate on an embedded client not\r\nusing locators.\r\n\r\nThe base use case is that language requests a column from store, which\r\nreads the data into a datatype.  In this case the datatype of interest\r\nis SQLClob, but the discussion is similar internally to all the types\r\nthat could support a stream representation (SQLChar, SQLVarchar, SQLClob,\r\nSQLBlob, ...).  All these datatypes, internal to the datatype, can either\r\nhold the data completely in memory at the point of exit from the store\r\nroutines or in the form of a stream which can be held unread until finally\r\ngetting to user.\r\n\r\nThe initial decision of whether the state should be a stream or in memory\r\nis first decided by the store layer.  Basically if the entire column data\r\nresides on one page then the data is read into an array.  If the column\r\nspans multiple pages then a stream is returned which knows how to traverse\r\nthe pages of the store to return the stream.  Subsequently the datatype\r\nitself can decide to materialize the stream into memory, but code avoids this\r\nas it may mean instantiating a 2GB blob in memory.\r\n\r\nThe functionality of the stream is somewhat limited.  It is assumed single\r\nuser and can only be read from front to back.  It does support a reset\r\nfunctionality which can rewind the stream back to the beginning.  The\r\nstream keeps a buffer of the current page worth of data that has been\r\nread.\r\n\r\nA number of issues stem from the system copying\r\nreferences to streams rather than somehow making independent copies of\r\nthe streams.  For instance:\r\nDERBY-3650 - during a 1 to many join, multiple rows end up with references to\r\n             a single stream.\r\nDERBY-3646 - select of same clob twice in row leads to 2 references to same\r\n             column.\r\n\r\n\r\no If we want to continue the current usage then how are we going to manage\r\n  multiple references to a single stream across rows?  The new free code\r\n  adds problems here.  We have defined a lot of the other problems away\r\n  with documenting we don't support stream references across rows.\r\no If we want to continue the current usage of sharing reference across columns\r\n  what kind of concurrent stream access should we support (see the list of\r\n  options in 3646)\r\n\r\n\r\nI don't know how hard it is but should we just stop language from sharing\r\nreferences to streams?  The existing usage works very well for all the other\r\ndatatypes including the stream types when they are not streams.\r\n\r\nShould we somehow make the datatype/stream smarter to somehow handle the\r\nmultiple reference?\r\n\r\nShould we recognize the multiple reference and just give up and materialize\r\nthe clob?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-05-14T22:04:53.822+0000","updated":"2008-05-14T22:04:53.822+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12597047","id":"12597047","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"body":"Hi all,\r\n\r\nI do not understand all the concepts behind the notion of stream.\r\nI understand that the problem is sharing a stream reading and should not be that the flow is closed if other clients read.\r\n\r\nThis could help you ?\r\nhttp://java.sun.com/javaee/5/docs/api/javax/mail/internet/SharedInputStream.html\r\nor\r\nhttp://commons.apache.org/vfs/apidocs/index.html?org/apache/commons/vfs/util/SharedRandomContentInputStream.html\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"created":"2008-05-15T08:00:43.114+0000","updated":"2008-05-15T08:00:43.114+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12597318","id":"12597318","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Attached is a patch to add tests for this issue. The tests currently fail but I want to check them in (disabled) so they are available for reference.\r\n\r\nOne thing I noticed in writing the test is that for embedded, while the one to many join works ok when using getBlob()  or getClob(), it does not work if we just use ResultSet.getBinaryStream() or ResultSet.getCharacterStream(),\r\nreenforcing Mike's statement that the fact that it works is probably by accident and not by design.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-16T00:12:57.236+0000","updated":"2008-05-16T00:12:57.236+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12597531","id":"12597531","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Committed  tests with revision 657124.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2008-05-16T16:23:41.780+0000","updated":"2008-05-16T16:23:41.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12599705","id":"12599705","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"This issue is still on my radar, but I find it had to start working on a fix...\r\nDoes anyone have more information that could be used to determine where the fix should be made?\r\nDoes the store support having two streams serving the same data in a single row? (i.e. select myblob as stream1, myblob as stream2)\r\n\r\nMy next step would be to work through one of the repros attached and see if there are any obvious poins of incorrect behavior.\r\nSince I have some other issues in the pipeline, I do not know when I can get around to do this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-05-25T18:47:51.330+0000","updated":"2008-05-25T18:47:51.330+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12600114","id":"12600114","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I see that the same DataValueDescriptor (dvd) object is used for both rows when running the full repro for embedded. The object probably comes from the base result set (the single clob value).\r\nNow, I see in OverflowInputStream.close that it also closes the associated container handler. This is again called by Clob.free.\r\n\r\nA simple way to make the repro pass is to make sure the stream is materialized when the object is accessed the first time. However, I think this solution is too naive and it will use too much memory (the user might never actually request the value).\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-05-27T12:39:53.351+0000","updated":"2008-05-27T12:39:53.351+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12600262","id":"12600262","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"Changing the problem description to reflect the research so far on the issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-05-27T20:00:40.378+0000","updated":"2008-05-27T20:00:40.378+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12600271","id":"12600271","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"During a join we may stream N rows out from 1 left row and N right rows.  When w\r\ne do this we use multiple references\r\nto the same underlining column, so N rows may point to 1 DataValueDescriptor (DV\r\nD).  I believe this mostly works but is a problem if the DVD is represented by a\r\n stream rather than some sort of fixed\r\ndatatype like an SQLInteger.\r\n\r\nIn the case of DERBY-3650 a free is being called after one of the rows\r\nis finished processing, causing problems when the subsequent row needs\r\naccess to the stream.\r\n\r\nThe approach I am going to look at is to force the join case, where streams\r\nare involved to generate a real copy of the stream rather than 2 references\r\nto the same stream.  I plan on leaving all other copies as reference copies\r\nso that performance and memory usage of the whole system is not affected\r\ntoo much.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-05-27T20:45:43.191+0000","updated":"2008-05-27T20:45:43.191+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12606677","id":"12606677","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Any progress on this issue?\r\nAnything the community can do to help drive it forwards?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-06-20T08:58:47.079+0000","updated":"2008-06-20T08:58:47.079+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12608178","id":"12608178","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"i am working on this following the approach I described earlier.  I got distracted by some other issues, but should be able to focus on this again.  This area of the code is not my expertise, so I will definitely post a patch for comment when I am closer.  Any comments/reviews at that time are appreciated.  Should have something within a week.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-06-25T20:34:40.305+0000","updated":"2008-06-25T20:34:40.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12609789","id":"12609789","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"The derby-3650-preliminary_diff.txt diff shows the direction I am trying to fix this bug.  It is not ready for commit yet.\r\nStill needs tests to run, some more comments, maybe some more tests.  I need to verify that this change has not made DERBY-3749 worse.  Also need to see if the NestedLoopJoinResultSet.java changes need to be applied to any other nodes, hash joins seem to be taken care of.  Looks like NestedLoopLeftOuterJoinResultSet.java\r\ncould use the change, would like a test case that gets into that code first.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-07-02T04:14:10.150+0000","updated":"2008-07-02T04:14:10.150+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12609931","id":"12609931","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Good work on the patch Mike, we need to get this bug fixed...\r\nI applied the patch and ran the updated test.\r\nI also ran the regression tests and got one failure (see below).\r\nLooks to me like the general approach is working and is a feasible solution\r\nto me.\r\n\r\nI have the following comments on the preliminary patch, where the\r\nwhitespace and formatting only changes are mentioned because they cause\r\nthe diff to be larger than necessary:\r\n\r\n[NestedLoopJoinResultSet]\r\n  1) Whitespace only change.\r\n  2) Formatting only change (first 'mergedRow ='). Intentional?\r\n[MemByteHolder]\r\n  3) Mix of tabs and spaces in new code.\r\n[OverflowInputStream]\r\n  4) SanityManager is imported, but never used.\r\n  5) Formatting only changes.\r\n  6) Strange indentation causing unnecessary diff (tab-space-tab):\r\n     'columnOverflowPage.restorePortion...'\r\n  7) Formatting only change.\r\n[ByteHolder]\r\n  8) Mix of tabs and spaces for indentation.\r\n[StoredPage]\r\n  9) Separate commit for the typo?\r\n     File is untouched by the functional changes.\r\n[CloneableStream]\r\n 10) Wrong class name in header.\r\n 11) Some tabs in the file.\r\n[SQLChar]\r\n 12) One tab: 'if (stream != null)'\r\n[SQLBinary]\r\n 13) One tab: 'if (stream != null)'\r\n[Derby3650Test]\r\n 14) I would prefer to remove the 'runDerby3749tests' variable after\r\n     that bug has been fixed.\r\n 15) Would it make sense to fill the LOBs with a pattern, instead of\r\n     using a fixed value?\r\n     One could use LoopingAlphabet[Stream|Reader] for this, also in the\r\n     verification procedures (create a new stream to compare with).\r\n     I'm thinking about detecting offset errors.\r\n 16) Incorrect name for the setup method, which configured auto commit:\r\n     'setup' -> 'setUp'\r\n\r\n\r\nI experimented a little with the patch, and was able to solve the\r\nproblem we have when selecting the same column twice, i.e.\r\n   \"select c as c1, c as c2 from testMultipleClob\"\r\nI did this by always creating a clone.\r\nI didn't quite understand what would happen to the original stream, but\r\nusing 'finalize()' I was able to observe that it was garbage collected.\r\nNo call to 'closeStream' was made though.\r\n\r\nIs it an acceptable performance hit to clone streams unconditionally for\r\nLOBs, or should we try to come up with some kind of bookkeeping?\r\n(i.e. reference counting)\r\nI'm thinking in the context of the JDBC layer, but the same question\r\nmight apply to lower layers.\r\n\r\n\r\nAlso, I see that a new container handle is created in 'initStream'. Am I\r\ncorrect saying that you have to do 'aClone.initStream()' after calling\r\n'theStream.cloneStream()' and *before* closing 'theStream'?\r\n\r\n\r\nThe test 'tests.lang.LangScript#aggregate' failed with a NPE. The reason\r\nwas because a null DVD was encountered and '<null>.copyForRead()' was\r\ncalled. Checking for null fixed the problem and the test succeeded.\r\nCan we get a null inside the for loop in 'if (! notExistsRightSide)\" as\r\nwell?\r\n\r\nI also found a small issue with LOBs related to mappings and reference\r\nbook keeping while reviewing the patch, and I'll create a Jira for that\r\ntomorrow.\r\n\r\nI have not yet had time to look at your questions/comments from your previous post.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2008-07-02T14:22:23.232+0000","updated":"2008-07-02T14:22:23.232+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12610130","id":"12610130","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"> I experimented a little with the patch, and was able to solve the\r\n> problem we have when selecting the same column twice, i.e.\r\n> \"select c as c1, c as c2 from testMultipleClob\"\r\n> I did this by always creating a clone.\r\n> I didn't quite understand what would happen to the original stream, but\r\n> using 'finalize()' I was able to observe that it was garbage collected.\r\n> No call to 'closeStream' was made though.\r\nAt least at store level all the streams get cleaned up at commit or abort\r\nif at no other time.  They are all based off of open BaseContainerHandles\r\nand all those that are open at commit or abort get cleaned up.\r\n>\r\n> Is it an acceptable performance hit to clone streams unconditionally for\r\n> LOBs, or should we try to come up with some kind of bookkeeping?\r\n> (i.e. reference counting)\r\n> I'm thinking in the context of the JDBC layer, but the same question\r\n> might apply to lower layers.\r\nI am already uncomfortable with the unnecessary level of cloning/object\r\ncreation this change creates for lobs that are part of a join.  So I think\r\nwe should look to minimize it.  So I don't think it appropriate to throw in\r\na clone every time we see a stream.\r\n\r\nI would like to figure out a way in a 1-1 join to not have to clone anything\r\nand just let the original stream proprogate up.  Maybe some sort of reference\r\ncounting is the solution.\r\n>\r\n>\r\n> Also, I see that a new container handle is created in 'initStream'. Am I\r\n> correct saying that you have to do 'aClone.initStream()' after calling\r\n> 'theStream.cloneStream()' and *before* closing 'theStream'?\r\n\r\nI think understanding this is key to fixing this problem correctly.  After\r\nreading the code today I think what you describe is the expected behavior,\r\nbut is not very well documented.  I think the rule currently is something\r\nlike:\r\n    before using any Resetable interface on a stream one must call initStream().\r\n\r\nI think there might be cleaner solutions to the various clob/blob issues if\r\nthis rule could be expanded to something like no jdbc interaction with a\r\nblob/clob in stream form can happen unless initStream() has been called.\r\n>\r\n>\r\n> The test 'tests.lang.LangScript#aggregate' failed with a NPE. The reason\r\n> was because a null DVD was encountered and '<null>.copyForRead()' was\r\n> called. Checking for null fixed the problem and the test succeeded.\r\n> Can we get a null inside the for loop in 'if (! notExistsRightSide)\" as\r\n> well?\r\n>\r\nthanks for tracking down the bug before I could run tests.  I have fixed\r\nthe null pointer problems in the next patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-07-03T05:23:19.398+0000","updated":"2008-07-03T05:23:19.398+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12610132","id":"12610132","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"still not ready for commit, incorporates comments, improved testing, and fixes left outer join issue also.  Also\r\nfixes null pointer bug found by aggregate tests.  Will be running set of tests on this tonight.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2008-07-03T05:33:37.264+0000","updated":"2008-07-03T05:33:37.264+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12634156","id":"12634156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"body":"Hi all,\r\n\r\nDo you have some news about this bug ?\r\n\r\nThank you.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=golgoth14","name":"golgoth14","emailAddress":"golgoth14 at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Golgoth 14","active":true},"created":"2008-09-24T14:38:56.457+0000","updated":"2008-09-24T14:38:56.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12668090","id":"12668090","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"body":"Hey Mike,\r\n\r\nAre you planning to commit a fix (or partial fix) for 10.5?\r\n\r\nThanks,\r\n-Rick","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhillegas","name":"rhillegas","emailAddress":"rhillegas at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rick Hillegas","active":true},"created":"2009-01-28T17:48:08.136+0000","updated":"2009-01-28T17:48:08.136+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12728053","id":"12728053","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"Triaged for 10.5.2.\r\n\r\n- Checked \"Repro attached\"\r\n\r\n- Checked \"Known fix\" since a (not commit-ready) patch proposal is attached\r\n\r\n- Added components SQL and Store since they are touched by the suggested fix\r\n\r\n- Marked as unassigned since there has been no activity in over a year\r\n\r\n- Left the Regression flag on since the network client problems were not seen in earlier versions. The underlying embedded issue can be seen all the way back to 10.0.2.1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2009-07-07T12:10:31.589+0000","updated":"2009-07-07T12:10:31.589+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12786962","id":"12786962","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Working on other issues involving reuse of streaming DVDs, it has occurred to me that I can reuse the stream cloning code found in 'derby-3650-preliminary_2_diff.txt'.\r\nI plan to split the original patch into two parts, but first I'd like some feedback on a few questions. General information about how things are working / supposed to work is also appreciated :)\r\n\r\nI ended up writing down my questions and observations as HTML, as I needed a table. See the attached file \"cloning-methods.html\".\r\nFeel free to upload a new version of the HTML file if you find errors in it or want to add more information, or just add a comment in Jira.\r\n\r\nThanks,","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2009-12-07T15:59:44.035+0000","updated":"2009-12-07T15:59:44.035+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12788280","id":"12788280","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Ok, bear with me if I misunderstand issues here, still trying to grok\r\nthis, but I'll weigh in just to get some discussion going.\r\n\r\nI looked at the clone methods, and it seems to me that originally\r\nthere was getClone, and that cloneObject was introduced later to avoid\r\nalways materializing large objects into many copies. The naming is not\r\ngood, the names imply the same behavior, I think. cloneObject is\r\nshallow in the sense that it does not clone the *value*, nor does it\r\nclone the *stream state*, if any. (Btw, the implementation of\r\nSQLChar#cloneObject could be simplified to look the same as\r\nSQLBinary#cloneObject).\r\n\r\nNow, if I understand correctly, the new method, CopyForRead is slightly\r\n*less shallow*, in that you now also copy the stream state.\r\n\r\nFor non-stream data types, cloneObject defaults to getClone (deep\r\ncopy).\r\n\r\nI would suggest we change the names here to clarify code and APIs, the\r\nbetter to reflect the shallowness of the cloning.\r\n\r\n        cloneDeep (old getClone; clones even *value*, share nothing)\r\n        cloneHalfDeep (new CopyForRead, clones even stream state,\r\n                            but not value, which is still shared)\r\n        cloneShallow (old cloneObject, clones just \"holder\", shares\r\n                      stream/stream state)\r\n\r\nIf the code really needs cloneShallow also, after cloneHalfDeep is\r\nadded, I don't know, if not, I'd call cloneHalfDeep cloneShallow\r\ninstead ;)\r\n\r\nNow, for modification, what to use? I guess that depends on what\r\nsemantics are desired/at what level in the code you are..? Maybe we\r\ncould just do COW semantics?  I.e. use cloneHalfDeep until update is\r\nattempted and only then do a full deep clone? (by overloading stream\r\nclass perhaps) Then the updating of the deep copy could proceed until\r\nthe column is actually updated without affecting the other aliases?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2009-12-09T20:04:29.597+0000","updated":"2009-12-09T20:13:20.990+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12802275","id":"12802275","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I have been investigating this a bit further, and I'll try to share some of my findings.\r\nMy experiments consisted of the following high-level changes:\r\n a) add mechanism to clone store streams\r\n b) remove CloneableObject interface (and the method cloneObject)\r\n c) make DataValueDescriptor.getClone smarter (or more complex...)\r\n d) enable streaming support in the sorter\r\n e) add a special-case clone method for obtaining a materialized clone\r\n\r\n\r\na) add mechanism to clone store streams\r\nHere I reused Mike's patch for DERBY-3650. I haven't found any problems with this yet, but haven't investigated very well.\r\nI'm wondering if we can optimize the cloning a little bit by deferring the initial buffer fill? This is to avoid reading bytes we might never pass on to the user. I tried once and got a few test failures (probably because the exception was thrown in a different place, for instance that it is now thrown during the first InputStream.read instead of some other method).\r\nSee (d) for an additional problem associated with this change.\r\n\r\nb) remove CloneableObject interface (and the method cloneObject)\r\nThis change in itself didn't cause any trouble when combined with (a) and (c). When combined with (d) an ASSERT was thrown, but I haven't yet investigated if it is a real problem or not.\r\n\r\nc) make DataValueDescriptor.getClone smarter (or more complex...)\r\nHere I made getClone return the most appropriate clone based on the state of the DVD:\r\n - simple types: normal clone (i.e. new SQLInteger(this.value) or new SQLClob(this.getString())\r\n - source is a cloneable stream: clone the stream\r\n - source is a non-cloneable stream: materialize and return normal clone\r\n\r\nAgain, I have to investigate more, but there seems to be a need for a \"transfer the state of that DVD to a new DVD\"-method. This is different from a clone in the sense that the original DVD will be reused for another row and have its value overwritten. In this case there is no need to actually clone the source stream, we can just reuse the stream reference. This is what cloneObject does.\r\n\r\nd) enable streaming support in the sorter\r\nWhen I did this, I found a bug where Derby enters an infinite loop while reading a stream: DERBY-4520\r\nAnother problem that surfaced is that the sorter closes the source result set immediately, before the values are actually processed / sorted. This caused the cloned streams to fail when processing them, because the associated container handle got closed. I tried naively to not close the source rs, but this caused some problems when running suites.All (asserts, lock timeouts). Maybe the sorter can be changed to make sure the source rs is closed at another point, but this seems like a potentially dangerous approach.\r\nInstead I added a new method, described in (e).\r\n\r\nFor clarity, Derby isn't currently able to efficiently execute something like \"select ... order by length(clob_column)\". There are user workarounds for this problem, so I'm not sure fixing it should have a high priority at this point. Also, the LOB values cannot be used in an order by. I don't know which types of operations you can do in an order by, and whether it is possible to perform these immediately instead of first reading the source rs into a temporary holder and then applying the function later.\r\n\r\ne) add a special-case clone method for obtaining a materialized clone\r\nAdded to make (d) work in an easy way. suites.All passed when using this in a single place (the sorter), but there might be other usages for it as well.\r\nBy default the method will simply forward to getClone, but for SQLChar and SQLBinary it will materialize the stream if required.\r\n\r\n\r\nWith all the changes combined (prototype quality, I must recheck to make sure I didn't cheat too much), only lang.StreamsTest failed (on line 243) failed. The difference was that with the changes the value was materialized, whereas with clean trunk the stream was passed directly into store. The root cause is that I removed the \"transfer value\" functionality of cloneObject, and produced a real clone instead. The reason my smarter getClone method failed to produce a clone with a stream as source was that the source stream wasn't a store stream and thus the only way to safely clone it is to materialize it.\r\n\r\nFor Derby to function and keep its current performance, I see the need for the following functionality:\r\n 1) value clones (capable of cloning source streams when possible)\r\n 2) forcing materialization\r\n 3) copying state from one DVD to a new DVD\r\n\r\nI don't think all three can be combined into one method, because it is impossible for this method to know the context in which the \"clone\" will be used.\r\nIt is important to keep in mind that for many of the data types there is no difference between items 1,2, and 3.\r\n\r\nNow, how does my changes differ from the original copyForRead method added by Mike?\r\nDVD.copyForRead can simply return a reference to itself ('this'). Doing this is the cheapest way to copy a DVD, but it is also the way which puts the most restrictions on how it can be used. Since there will be multiple references to the same DVD, a single update or state change will affect all the code referring to that DVD.\r\nThis can be exploited for better performance in some cases, but I'm not sure if we should leave the decision to the calling code (using the public interface of DVD), or if we should either create a new method (like copyForRead) or add arguments to the getClone method.\r\nForcing materialization can also be done explicitly by the calling code, but it wouldn't look too nice:\r\nif (dvd instanceof StreamStorable) {\r\n    // Assuming calling this when there is no stream is working, otherwise one have to do another check is stream != null\r\n    dvd.loadStream();\r\n}\r\nclone = dvd.getClone();\r\n\r\nOpinions?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-01-19T14:28:10.198+0000","updated":"2010-01-20T16:52:12.135+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12802826","id":"12802826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"I have created DERBY-4520 to track the clone-work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-01-20T13:18:46.929+0000","updated":"2010-01-20T13:18:46.929+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12804787","id":"12804787","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"body":"I don't remember what came up when I was first working on this, and have not done anything on it other than post the patch a long time ago.  I wasn't really happy with the complexity, and was hoping to come up with something better but never did.  \r\n\r\nI don't plan on doing anything else with this patch but am happy if someone else wants to run with it.  \r\n\r\nWhat I would really like to do is change the underlying implementation of streams coming out of the store so that they can easily be cloned completely and not have their state shared.   Basically store should return an object that\r\njust has an id that can be used to open a new stream that is independent of \r\nother using that id to open the stream.   I think this could solve a number of \r\nproblems with current undefined behavior of sessions accessing the same\r\nclob multiple times.\r\n\r\nI think this would build fine on top of the clone changes that Kristian is working on in DERBY-4520.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikem","name":"mikem","emailAddress":"mikem_app at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mike Matrigali","active":true},"created":"2010-01-25T23:29:45.543+0000","updated":"2010-01-25T23:29:45.543+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12838338","id":"12838338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Attached patch 'derby-3650-preliminary_2_reworked.diff'.\r\nI updated it with regard to the latest changes done on trunk. The rest of the original patch has now been committed under other issues (the test was committed a long time ago).\r\nI'm running the regression tests to see what the current state of the patch is, and will post the results tomorrow.\r\n\r\nWould be nice if someone had another look at the patch.\r\nNote that even with the patch committed there are use cases where Derby will fail. This is most likely due to DERBY-1511 (DERBY-3749 is marked as a duplicate).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-02-25T13:23:29.778+0000","updated":"2010-02-25T13:23:29.778+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12838345","id":"12838345","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Mike wrote:\r\n-----\r\nI think this would build fine on top of the clone changes that Kristian is working on in DERBY-4520. \r\n-----\r\n\r\nYou're probably right, but I think it's time to start ripping something out soon :)\r\n\r\nAt least for my own work I feel very much that I have been building my way around various obstacles. This has caused the complexity to increase, and I hope that by taking a step back much of it can be reduced.\r\nThe good thing is that most of the added complexity has been added for BLOB and CLOB. That said, I'm not happy about the state of SQLChar. Maybe it is just because I associate it too much with the SQL data type CHAR, but in theory the code dealing with CHAR (and VARCHAR) should be a lot simpler than the code dealing with CLOB.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-02-25T13:50:09.747+0000","updated":"2010-02-25T13:50:09.747+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12838805","id":"12838805","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"The regression tests (suites.All, derbyall) with 'derby-3650-preliminary_2_reworked.diff' applied ran without failures.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-02-26T10:27:27.077+0000","updated":"2010-02-26T10:27:27.077+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12851368","id":"12851368","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"The patch looks good to me. Nit: the patch for NestedLoopResultSet has a formatting diff of old code which doesn't seem to change anything except layout (line 43).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2010-03-30T12:14:28.545+0000","updated":"2010-03-30T12:14:28.545+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12858294","id":"12858294","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Thanks for the review, Dag.\r\nAttached derby-3650-preliminary_2_reworked-1b.diff, in which I removed the unnecessary formatting change.\r\n\r\nCommitted to trunk with revision 935336.\r\nNote that this fix won't be back-ported, because the underlying clone functionality is hard to back-port (major changes).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-04-18T12:59:25.126+0000","updated":"2010-04-18T12:59:25.126+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12858295","id":"12858295","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"body":"Unless problems arise, I don't expect to do more work on this issue. Resolving as fixed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kristwaa","name":"kristwaa","emailAddress":"kristwaa at apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kristwaa&avatarId=14736","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kristwaa&avatarId=14736","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kristwaa&avatarId=14736","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kristwaa&avatarId=14736"},"displayName":"Kristian Waagan","active":true},"created":"2010-04-18T13:01:18.216+0000","updated":"2010-04-18T13:01:18.216+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12989870","id":"12989870","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Reopen for backport.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-02-02T23:30:14.202+0000","updated":"2011-02-02T23:30:14.202+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/12996106","id":"12996106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"reclosing. This will come off the backport list.  Comments say:\r\nNote that this fix won't be back-ported, because the underlying clone functionality is hard to back-port (major changes). \r\n\r\nI added the derby_backport_reject_10_5 label.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2011-02-17T21:49:11.243+0000","updated":"2011-02-17T21:49:11.243+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12394964/comment/13685343","id":"13685343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"body":"[bulk update] Close all resolved issues that haven't been updated for more than one year.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=knutanders","name":"knutanders","emailAddress":"knut dot hatlen at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Knut Anders Hatlen","active":true},"created":"2013-06-17T09:19:44.631+0000","updated":"2013-06-17T09:19:44.631+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3650/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06ndj:"}}