{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12687774","self":"https://issues.apache.org/jira/rest/api/latest/issue/12687774","key":"SOLR-5618","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310230","id":"12310230","key":"SOLR","name":"Solr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310230&avatarId=22151","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310230&avatarId=22151","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310230&avatarId=22151","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310230&avatarId=22151"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10150","id":"10150","description":"Lucene-related projects","name":"Lucene"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12325762","id":"12325762","description":"Bugfix release after 4.6","name":"4.6.1","archived":false,"released":true,"releaseDate":"2014-01-28"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12325573","id":"12325573","description":"Major release after 4.6","name":"4.7","archived":false,"released":true,"releaseDate":"2014-02-26"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321664","id":"12321664","description":"Current trunk","name":"Trunk","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-01-09 01:28:27.782","customfield_12312323":null,"customfield_12310420":"366774","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_177032593_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2014-01-10T01:36:06.639+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-5618/watchers","watchCount":2,"isWatching":false},"created":"2014-01-08T00:25:34.083+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12312330":null,"customfield_12311120":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324743","id":"12324743","description":"Major release after 4.4","name":"4.5","archived":false,"released":true,"releaseDate":"2013-10-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12325264","id":"12325264","description":"Bugfix release after 4.5","name":"4.5.1","archived":false,"released":true,"releaseDate":"2013-10-24"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12325000","id":"12325000","description":"Major release after 4.5","name":"4.6","archived":false,"released":true,"releaseDate":"2013-11-24"}],"issuelinks":[{"id":"12380839","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12380839","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"inwardIssue":{"id":"12659089","key":"SOLR-5057","self":"https://issues.apache.org/jira/rest/api/2/issue/12659089","fields":{"summary":"queryResultCache should not related with the order of fq's list","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-03-16T13:04:07.470+0000","customfield_12312335":null,"customfield_12312336":null,"customfield_12311720":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[],"timeoriginalestimate":null,"description":"SOLR-5057 introduced a bug in queryResultCaching such that the following circumstances can result in a false cache hit...\r\n\r\n* identical main query in both requests\r\n* identical number of filter queries in both requests\r\n* filter query from one request exists multiple times in other request\r\n* sum of hashCodes for all filter queries is equal in both request\r\n\r\nDetails of how this problem was initially uncovered listed below...\r\n\r\n----\r\n\r\nuwe's jenkins found this in java8...\r\n\r\nhttp://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Linux/9004/consoleText\r\n\r\n{noformat}\r\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestFiltering -Dtests.method=testRandomFiltering -Dtests.seed=C22042E80957AE3E -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=ar_LY -Dtests.timezone=Asia/Katmandu -Dtests.file.encoding=UTF-8\r\n   [junit4] FAILURE 16.9s J1 | TestFiltering.testRandomFiltering <<<\r\n   [junit4]    > Throwable #1: java.lang.AssertionError: FAILURE: iiter=11 qiter=336 request=[q, {!frange v=val_i l=0 u=1 cost=139 tag=t}, fq, {!frange v=val_i l=0 u=1}, fq, {! cost=92}-_query_:\"{!frange v=val_i l=1 u=1}\", fq, {!frange v=val_i l=0 u=1 cache=true tag=t}, fq, {! cache=true tag=t}-_query_:\"{!frange v=val_i l=1 u=1}\"]\r\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([C22042E80957AE3E:DD43E12DEC70EE37]:0)\r\n   [junit4]    > \tat org.apache.solr.search.TestFiltering.testRandomFiltering(TestFiltering.java:327)\r\n{noformat}\r\n\r\nThe seed fails consistently for me on trunk using java7, and on 4x using both java7 and java6 - details to follow in comment.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"367085","summary":"false query result cache hits possible when duplicate filter queries exist in one query -- discovered via: Reproducible failure from TestFiltering.testRandomFiltering","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":14,"total":14,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13864911","id":"13864911","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"Relevant log snipper from jenkins...\r\n\r\n{noformat}\r\n   [junit4]   2> 558586 T3202 C2360 oasc.SolrCore.execute [collection1] webapp=null path=null params={q={!frange+v%3Dval_i+l%3D0+u%3D1+cost%3D139+tag%3Dt}&fq={!frange+v%3Dval_i+l%3D0+u%3D1}&fq={!+cost%3D92}-_query_:\"{!frange+v%3Dval_i+l%3D1+u%3D1}\"&fq={!frange+v%3Dval_i+l%3D0+u%3D1+cache%3Dtrue+tag%3Dt}&fq={!+cache%3Dtrue+tag%3Dt}-_query_:\"{!frange+v%3Dval_i+l%3D1+u%3D1}\"} hits=0 status=0 QTime=1 \r\n   [junit4]   2> 558586 T3202 oas.SolrTestCaseJ4.assertJQ ERROR query failed JSON validation. error=mismatch: '1'!='0' @ response/numFound\r\n   [junit4]   2> \t expected =/response/numFound==1\r\n   [junit4]   2> \t response = {\r\n   [junit4]   2> \t  \"responseHeader\":{\r\n   [junit4]   2> \t    \"status\":0,\r\n   [junit4]   2> \t    \"QTime\":1},\r\n   [junit4]   2> \t  \"response\":{\"numFound\":0,\"start\":0,\"docs\":[]\r\n   [junit4]   2> \t  }}\r\n   [junit4]   2> \t\r\n   [junit4]   2> \t request = q={!frange+v%3Dval_i+l%3D0+u%3D1+cost%3D139+tag%3Dt}&fq={!frange+v%3Dval_i+l%3D0+u%3D1}&fq={!+cost%3D92}-_query_:\"{!frange+v%3Dval_i+l%3D1+u%3D1}\"&fq={!frange+v%3Dval_i+l%3D0+u%3D1+cache%3Dtrue+tag%3Dt}&fq={!+cache%3Dtrue+tag%3Dt}-_query_:\"{!frange+v%3Dval_i+l%3D1+u%3D1}\"\r\n   [junit4]   2> 558587 T3202 oasc.SolrException.log ERROR java.lang.RuntimeException: mismatch: '1'!='0' @ response/numFound\r\n   [junit4]   2> \t\tat org.apache.solr.SolrTestCaseJ4.assertJQ(SolrTestCaseJ4.java:732)\r\n   [junit4]   2> \t\tat org.apache.solr.SolrTestCaseJ4.assertJQ(SolrTestCaseJ4.java:679)\r\n   [junit4]   2> \t\tat org.apache.solr.search.TestFiltering.testRandomFiltering(TestFiltering.java:316)\r\n...\r\n   [junit4]   2> 558588 T3202 oass.TestFiltering.testRandomFiltering ERROR FAILURE: iiter=11 qiter=336 request=[q, {!frange v=val_i l=0 u=1 cost=139 tag=t}, fq, {!frange v=val_i l=0 u=1}, fq, {! cost=92}-_query_:\"{!frange v=val_i l=1 u=1}\", fq, {!frange v=val_i l=0 u=1 cache=true tag=t}, fq, {! cache=true tag=t}-_query_:\"{!frange v=val_i l=1 u=1}\"]\r\n   [junit4]   2> 558588 T3202 oas.SolrTestCaseJ4.tearDown ###Ending testRandomFiltering\r\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestFiltering -Dtests.method=testRandomFiltering -Dtests.seed=C22042E80957AE3E -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=ar_LY -Dtests.timezone=Asia/Katmandu -Dtests.file.encoding=UTF-8\r\n   [junit4] FAILURE 16.9s J1 | TestFiltering.testRandomFiltering <<<\r\n   [junit4]    > Throwable #1: java.lang.AssertionError: FAILURE: iiter=11 qiter=336 request=[q, {!frange v=val_i l=0 u=1 cost=139 tag=t}, fq, {!frange v=val_i l=0 u=1}, fq, {! cost=92}-_query_:\"{!frange v=val_i l=1 u=1}\", fq, {!frange v=val_i l=0 u=1 cache=true tag=t}, fq, {! cache=true tag=t}-_query_:\"{!frange v=val_i l=1 u=1}\"]\r\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([C22042E80957AE3E:DD43E12DEC70EE37]:0)\r\n   [junit4]    > \tat org.apache.solr.search.TestFiltering.testRandomFiltering(TestFiltering.java:327)\r\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:744)\r\n{noformat}\r\n{noformat}\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2014-01-08T00:28:34.275+0000","updated":"2014-01-08T00:28:34.275+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13864983","id":"13864983","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"This smells like a caching related bug ... but i have no idea why/where.\r\n\r\nThe test does multiple iterations where in each iteration it builds an index of a random number of documents, each containing an incremented value for \"id\" and \"val_i\" -- the number of documents can range from 1 to 21, with the id and val_i fields starting at \"0\".  Then it generates a bunch of random requests consisting of random q and fq params.\r\n\r\nThis is what the failing request looks like...\r\n\r\n{noformat}\r\nq  = {!frange v=val_i l=0 u=1 cost=139 tag=t}\r\nfq = {!frange v=val_i l=0 u=1}\r\nfq = {! cost=92}-_query_:\"{!frange v=val_i l=1 u=1}\" \r\nfq = {!frange v=val_i l=0 u=1 cache=true tag=t}\r\nfq = {! cache=true tag=t}-_query_:\"{!frange v=val_i l=1 u=1}\"\r\n{noformat}\r\n\r\nSo basically: it will only ever match docs which have val_i==0 -- which given how the index is built means it should always match exactly 1 document: the 0th doc -- but in the failure message we can see that it doens't match any docs.\r\n\r\n(FWIW: adding some debugging indicates that in the iteration where this fails, the index only has 2 documents in it -- doc#0 and doc#1)\r\n\r\nIn this patch i'm attaching, I hacked the test to explicitly attempt the above query in every iteration, regardless of the num docs in the index, immediately after building the index -- and that new assertion never fails.  but then after it passes, it continues on with the existing logic, to generating a bunch of random requests and executing them -- and when it randomly generates the same query as above (that already succeeded in matching 1 doc against the current index) that query then fails to match any docs.\r\n\r\nwhich smells to me like some sort of filter caching glitch .. right?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2014-01-08T02:06:48.440+0000","updated":"2014-01-08T02:06:48.440+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13865713","id":"13865713","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"I've recreated the failure conditions in a non-randomized test.\r\n\r\nSee \"testHossssSanity\" in the updated patch for the details, but the bottom line is after building up two sets of SolrParams (match_1 and match_0), we have a situation where the following test code fails on the last line (match_1 gets a numFound==0)...\r\n\r\n{code}\r\n    // 1 then 0\r\n    assertJQ(req(match_1), \"/response/numFound==1\");\r\n    assertJQ(req(match_0), \"/response/numFound==0\");\r\n\r\n    // clear caches\r\n    assertU(commit());\r\n\r\n    // 0 then 1\r\n    assertJQ(req(match_0), \"/response/numFound==0\");\r\n    assertJQ(req(match_1), \"/response/numFound==1\");\r\n{code}\r\n\r\n...which definitely smells like a caching bug.\r\n\r\nPerhaps this is a Query.equals() problem with one of the query classes used in the test?  I'll investigate a bit more later today -- starting with trying to simplify the params to the barest case that still fails.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2014-01-08T18:18:32.223+0000","updated":"2014-01-08T18:18:32.223+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13866096","id":"13866096","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"Attaching the simplest possible test case i found that fails.  these are the two queries, as mentioned before executing \"match_1\" before \"match_0\" and they both return the correct number of results, but if you executed \"match_0\" first then \"match_1\" doesn't match any documents...\r\n\r\n{code}\r\n    SolrParams match_0 \r\n      = params(\"q\",  \"{!frange v=val_i l=0 u=1}\",\r\n               \"fq\", \"{!frange v=val_i l=1 u=1}\",\r\n               \"fq\", \"{!frange v=val_i l=0 u=1}\",\r\n               \"fq\", \"-_query_:\\\"{!frange v=val_i l=1 u=1}\\\"\",\r\n               \"fq\", \"-_query_:\\\"{!frange v=val_i l=0 u=1}\\\"\");\r\n    \r\n    SolrParams match_1\r\n      = params(\"q\",  \"{!frange v=val_i l=0 u=1}\",\r\n               \"fq\", \"{!frange v=val_i l=0 u=1}\",\r\n               \"fq\", \"{!frange v=val_i l=0 u=1}\",\r\n               \"fq\", \"-_query_:\\\"{!frange v=val_i l=1 u=1}\\\"\",\r\n               \"fq\", \"-_query_:\\\"{!frange v=val_i l=1 u=1}\\\"\");\r\n{code}\r\n\r\n2 important things i noticed while testing:\r\n\r\n* if i removed duplicate & redundent {{fq=\\{!frange v=val_i l=0 u=1\\}}} (redundent because it's identical to the q param) then the test started to pass\r\n* if i change the _order_ of the fq's, then the test started to pass\r\n\r\nThat reminded me of SOLR-5057 which was included in 4.5.0.  I tried applying this patch to trunk, 4x, 4.6.0, 4.5.0, and 4.4.0 -- all of them failed except 4.4, leading me to the working hypothesis that the changes in SOLR-5057 caused this problem.\r\n\r\nWhen i reverted [r1516299|https://svn.apache.org/r1516299] on my trunk checkout, both my new test and the original failing test (with the above mentioned reproduce line) started to pass.\r\n\r\n----\r\n\r\nSo it seems pretty clear to me that something related to SOLR-5057 is causing false cache hits -- what isn't entirely clear to me yet is if the functionality added in [r1516299|https://svn.apache.org/r1516299] is fundamentally flawed (and should be reverted), or if it's just exposing some less obvious problem with the hashCode/equals methods of these specific query types.\r\n\r\nI'll keep digging - but if anyone can lend a pair of eyes to the logic in [r1516299|https://svn.apache.org/r1516299] and chime in if you spot any fallacies it would be appreciated. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2014-01-09T00:14:53.732+0000","updated":"2014-01-09T00:14:53.732+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13866158","id":"13866158","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"bq. So it seems pretty clear to me that something related to SOLR-5057 is causing false cache hits – what isn't entirely clear to me yet is if the functionality added in r1516299 is fundamentally flawed (and should be reverted), or if it's just exposing some less obvious problem with the hashCode/equals methods of these specific query types.\r\n\r\nBug is definitely in the QueryResultKey.isEqual & QueryResultKey.unorderedCompare method -- they ensure that fqList1 and fqList2 are the same size, and that every item from fqList1 exists in fqList2, but they don't ensure that there is a 1-to-1 set equivalence between the lists -- So in cases where fqList1 contains some query X duplicated N times, it only ensures that X is in fqList2, but not that it's duplicated N times, so having some other clauses which are not in fqList1 to keep the sizes the same causes false positives.\r\n\r\nTargeted test case attached ... i'll work on a more robust randomized test tomorrow and see if i can figure out an efficinet fix, or if we should just revert r1516299 completely.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2014-01-09T01:13:50.749+0000","updated":"2014-01-09T01:13:50.749+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13866159","id":"13866159","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"Root cause of problem introduced in SOLR-5057","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2014-01-09T01:14:17.511+0000","updated":"2014-01-09T01:14:17.511+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13866172","id":"13866172","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"body":"Ah, tricky.\r\nOne could do for every X in fqList1, find an equiv in fqList2 and then\r\nfor every X in fqList2, find an equiv in fqList1, but it's not particularly efficient.\r\nProbably most efficient for small lists would be to make a copy of one list and then remove equivalent elements as they are found.  Not sure if it's worth it though...\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yseeley%40gmail.com","name":"yseeley@gmail.com","emailAddress":"yseeley at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yonik Seeley","active":true},"created":"2014-01-09T01:28:27.782+0000","updated":"2014-01-09T01:28:27.782+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13867263","id":"13867263","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"body":"bq. Probably most efficient for small lists would be to make a copy of one list and then remove equivalent elements as they are found.\r\n\r\nAttached patch fixes the bug and adds some randomized testng on the QueryResultKey equality comparisons ensuring that both the positive and negative situations are covered.\r\n\r\n(I'm still running full tests, but unless there are any objections i'll probably commit & backport to 4.6.1 ASAP)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hossman","name":"hossman","emailAddress":"hossman_apachejira at fucit dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hossman&avatarId=21247","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hossman&avatarId=21247","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hossman&avatarId=21247","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hossman&avatarId=21247"},"displayName":"Hoss Man","active":true},"created":"2014-01-09T23:19:44.578+0000","updated":"2014-01-09T23:19:44.578+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13867305","id":"13867305","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1556988 from hossman@apache.org in branch 'dev/trunk'\r\n[ https://svn.apache.org/r1556988 ]\r\n\r\nSOLR-5618: Fix false cache hits in queryResultCache when hashCodes are equal and duplicate filter queries exist in one of the requests","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-01-09T23:56:05.006+0000","updated":"2014-01-09T23:56:05.006+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13867325","id":"13867325","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1556996 from hossman@apache.org in branch 'dev/branches/branch_4x'\r\n[ https://svn.apache.org/r1556996 ]\r\n\r\nSOLR-5618: Fix false cache hits in queryResultCache when hashCodes are equal and duplicate filter queries exist in one of the requests (merge r1556988)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-01-10T00:18:35.681+0000","updated":"2014-01-10T00:18:35.681+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13867398","id":"13867398","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1557008 from hossman@apache.org in branch 'dev/branches/lucene_solr_4_6'\r\n[ https://svn.apache.org/r1557008 ]\r\n\r\nSOLR-5618: Fix false cache hits in queryResultCache when hashCodes are equal and duplicate filter queries exist in one of the requests (merge r1556988)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-01-10T01:33:05.592+0000","updated":"2014-01-10T01:33:05.592+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13867507","id":"13867507","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1557031 from hossman@apache.org in branch 'dev/trunk'\r\n[ https://svn.apache.org/r1557031 ]\r\n\r\nSOLR-5618: fix stupid test mistake","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-01-10T05:09:25.855+0000","updated":"2014-01-10T05:09:25.855+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13867509","id":"13867509","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1557033 from hossman@apache.org in branch 'dev/branches/branch_4x'\r\n[ https://svn.apache.org/r1557033 ]\r\n\r\nSOLR-5618: fix stupid test mistake (merge r1557031)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-01-10T05:13:41.600+0000","updated":"2014-01-10T05:13:41.600+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12687774/comment/13867510","id":"13867510","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"body":"Commit 1557034 from hossman@apache.org in branch 'dev/branches/lucene_solr_4_6'\r\n[ https://svn.apache.org/r1557034 ]\r\n\r\nSOLR-5618: fix stupid test mistake (merge r1557031)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","emailAddress":"no-reply at urd dot zones dot apache dot org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true},"created":"2014-01-10T05:14:16.356+0000","updated":"2014-01-10T05:14:16.356+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/SOLR-5618/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1r7zz:"}}