{"expand":"renderedFields,names,schema,transitions,operations,editmeta,changelog","id":"12377120","self":"https://issues.apache.org/jira/rest/api/latest/issue/12377120","key":"DERBY-3033","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/10594","id":"10594","key":"DERBY","name":"Derby","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=10594&avatarId=10122","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=10594&avatarId=10122","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=10594&avatarId=10122","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=10594&avatarId=10122"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10090","id":"10090","description":"DB related projects","name":"DB"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312876","id":"12312876","description":"","name":"10.3.2.1","archived":false,"released":true,"releaseDate":"2007-12-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12313111","id":"12313111","description":"","name":"10.4.1.3","archived":false,"released":true,"releaseDate":"2008-04-24"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12310220":"2007-08-29 21:55:51.916","customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"23387","customfield_12310222":"1_*:*_1_*:*_3219783644_*|*_5_*:*_1_*:*_0","customfield_12312320":null,"customfield_12312321":null,"customfield_12312120":null,"customfield_12312121":null,"resolutiondate":"2007-10-06T02:58:14.885+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3033/watchers","watchCount":0,"isWatching":false},"created":"2007-08-29T20:35:11.241+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12310310":"15.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312027","id":"12312027","description":"","name":"10.2.2.0","archived":false,"released":true,"releaseDate":"2006-12-19"}],"customfield_12311120":null,"customfield_12312330":null,"issuelinks":[{"id":"12333856","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12333856","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12473822","key":"DERBY-4798","self":"https://issues.apache.org/jira/rest/api/2/issue/12473822","fields":{"summary":"NPE in nested outer join","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.png","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}},{"id":"12317803","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12317803","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12379534","key":"DERBY-3097","self":"https://issues.apache.org/jira/rest/api/2/issue/12379534","fields":{"summary":"Unnecessary if statement can be removed from BaseActivation.getColumnFromNow","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/improvement.png","name":"Improvement","subtask":false}}}},{"id":"12317518","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12317518","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12343690","key":"DERBY-1357","self":"https://issues.apache.org/jira/rest/api/2/issue/12343690","fields":{"summary":"Short-circuit logic in optimizer appears to be incorrect...","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.png","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/images/icons/issuetypes/bug.png","name":"Bug","subtask":false}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-01-21T17:50:47.787+0000","customfield_12312335":null,"customfield_12311720":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Complete"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/11408","id":"11408","name":"SQL"}],"timeoriginalestimate":null,"description":"The following error was repeatedly thrown when we tried to run a select query via JDBC. Strangely, the exact same select query did not trigger any error when run from the command line console. After we added an index, the error went away completely. \n\njava.lang.NullPointerException\n at org.apache.derby.impl.sql.execute.NoPutResultSetImpl.skipScan(Unknown Source)\n at org.apache.derby.impl.sql.execute.TableScanResultSet.openCore(Unknown Source)\n at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.openCore(Unknown Source)\n at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source)\n at org.apache.derby.impl.sql.execute.JoinResultSet.openRight(Unknown Source)\n at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(Unknown Source)\n at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source)\n at org.apache.derby.impl.sql.execute.SortResultSet.openCore(Unknown Source)\n at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source)\n at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(Unknown Source)\n at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)\n at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)\n at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source)\n at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(Unknown Source)\n at org.apache.derby.impl.drda.DRDAStatement.execute(Unknown Source)\n at org.apache.derby.impl.drda.DRDAConnThread.processCommands(Unknown Source)\n at org.apache.derby.impl.drda.DRDAConnThread.run(Unknown Source)","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12310200":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10420","value":"Regression","id":"10420"}],"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12310921":null,"customfield_12310920":"37396","summary":"select query results in nullpointer exception in skipScan()","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hqin","name":"hqin","emailAddress":"hqin at nsirad dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haolan Qin","active":true},"subtasks":[],"customfield_12310090":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hqin","name":"hqin","emailAddress":"hqin at nsirad dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haolan Qin","active":true},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"Windows XP, Java 5.0, JDBC, Derby 10.2.2.0","customfield_12311020":null,"customfield_12310050":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"startAt":0,"maxResults":52,"total":52,"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12523711","id":"12523711","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Are you able to provide a program that reproduces the error?\r\nIf not, can you prove any details (table, query) so we can try to reproduce your issue?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2007-08-29T21:55:51.916+0000","updated":"2007-08-29T21:55:51.916+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12523871","id":"12523871","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hqin","name":"hqin","emailAddress":"hqin at nsirad dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haolan Qin","active":true},"body":"1. copy the attached \"viewer\" folder to your derby folder\r\n2. launch derby on port 9002\r\n3. java -cp .;./derbyclient-10.2.2.0.jar SkipScan\r\n\r\nYou will see the exception in the console.\r\n\r\nThe exception will NOT be thrown if you modify the java file to hard-code those numbers (4 and 100) in the query or if you run the query from a sql console window. Also, if you add an index on dicom_send_requests.send_date and run the same program, the exception will not be thrown. \r\n\r\nIf you turn on execution plan logging, you will see that the exception scenario has a different execution plan from all other scenarios.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hqin","name":"hqin","emailAddress":"hqin at nsirad dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haolan Qin","active":true},"created":"2007-08-30T15:57:35.818+0000","updated":"2007-08-30T15:57:35.818+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12523936","id":"12523936","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Thank you, Haolan! I was able to reproduce the error with your repro!\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2007-08-30T21:10:57.189+0000","updated":"2007-08-30T21:10:57.189+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12523951","id":"12523951","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"More data points:\r\n- happens with embedded driver as well\r\n- happens when database is running in soft upgrade to 10.3\r\n- happens in 10.3 after hard upgrade\r\n- happens when using ij/embedded with prepared statement thus:\r\n\r\n  ij> connect 'jdbc:derby:viewer;user=view;password=view';\r\n  ij> set schema viewer;\r\n  ij> prepare foo as 'select study_id, number_of_images from (select distinct st.study_id, \r\n       st.number_of_images, dsr.priority, st.creation_datetime from dicom_send_requests dsr, \r\n       studies st where dsr.send_date is null and   dsr.workstation_id = ? and   \r\n       dsr.study_id = st.study_id and   not exists ( select 1 from dispatcher_locks where \r\n       dispatcher_locks.study_id = st.study_id and   dispatcher_locks.workstation_id = ? and   \r\n       dispatcher_locks.dispatcher_id = ? )) temp';\r\n  ij> execute foo using 'values (4,4,100)';\r\n  ERROR XJ001: Java exception: ': java.lang.NullPointerException'\r\n\r\nWithout prepared statement (direct execution) there is no error. \r\n\r\nI will leave this one the the execution experts ;-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2007-08-30T22:16:34.029+0000","updated":"2007-08-30T22:16:34.029+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12523971","id":"12523971","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Dag, since you have it reproduced, can you re-post the stack trace with the actual line numbers, and maybe also post the line of source code where the NPE actually occurs? Thanks!\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-08-31T00:38:18.956+0000","updated":"2007-08-31T00:38:18.956+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12523978","id":"12523978","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Sure, Bryan! \r\n\r\nAs far as I can the offending line is \r\nis NoPutResultSetImpl.java:392 at head of 10.3 branch,\r\n(svn 571351):\r\n\r\n392:\tif (startPosition.getColumn(position + 1).isNull())\r\n\r\nUploading stack trace \"d3033-sane-ij-session-10.3.1.5.txt\" with \r\nsysinfo and ij session showing the repro with trace w/line numbers.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2007-08-31T01:45:23.010+0000","updated":"2007-08-31T01:45:23.010+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12523980","id":"12523980","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks Dag. This is an interesting line of code, and an interesting stack trace, particularly given the observation that when the original reporter added an index, the problem went away. I'm wondering if this problem is related to DERBY-2916 and DERBY-2775. \r\n\r\nDoes the query in the bug involve an OUTER JOIN? or contain an IS [NOT] NULL condition? And is this condition related to the index that was added which causes the problem to go away?\r\n\r\nAt the point where TableScanResultSet.openCore calls NoPutResultSetImpl.skipScan, there is the following comment:\r\n\r\n// Check whether there are any comparisons with unordered nulls\r\n// on either the start or stop position.  If there are, we can\r\n// (and must) skip the scan, because no rows can qualify\r\n\r\nIt seems like DERBY-2775 may have caused us to take some new paths through the code involving \"ordered null semantics\", and the skipScan method is at the core of that code (see the DERBY-2916 comments for more discussion of this), so I have an intuition that this problem is related to those changes.\r\n\r\nFor now, I'll link this issue to those issues, in the hope that my intuition is well-founded.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-08-31T02:06:12.973+0000","updated":"2007-08-31T02:06:12.973+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12523982","id":"12523982","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Yes, you are correct. The query contains this predicate\r\n\"where dsr.send_date is null and ..\" and column \"send_date\" is\r\nthe column for which the index was added to make the problem go away.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2007-08-31T02:26:48.976+0000","updated":"2007-08-31T02:26:48.976+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12524139","id":"12524139","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I don't have a tool to open the rar file for this issue.  I was wondering if someone could repackage it as a zip or jar file. I'd like to try it on 10.1 to see if it is a regression.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-08-31T17:12:07.164+0000","updated":"2007-08-31T17:15:18.892+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12524536","id":"12524536","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Repacked to test.zip. \r\nI think this is a 10.2 database, so you may need to recreate the database\r\nwith dblook and export import to get a repro for 10.1, not sure.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2007-09-03T15:09:55.913+0000","updated":"2007-09-03T15:09:55.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12524538","id":"12524538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"body":"Deleted first attchement. Reattaching without ASF license since original was without. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagw","name":"dagw","emailAddress":"dag dot wanvik at oracle dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagw&avatarId=16789","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagw&avatarId=16789","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagw&avatarId=16789","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagw&avatarId=16789"},"displayName":"Dag H. Wanvik","active":true},"created":"2007-09-03T15:11:46.808+0000","updated":"2007-09-03T15:11:46.808+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12524730","id":"12524730","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"Looks like this is a regression in 10.2.   The results with 10.1.2.1 are\r\n> java SkipScan\r\ndfdfddd\r\n\r\nI will attach the 10.1 database which I migrated back using ddlutils\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-04T13:56:40.937+0000","updated":"2007-09-04T13:56:40.937+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12524731","id":"12524731","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"v 10.1 database.  Issue does not reproduce with 10.1.2.1\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-04T13:58:20.068+0000","updated":"2007-09-04T13:58:20.068+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12526338","id":"12526338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"This regression occurred with revision 423754 from DERBY-1357.  It could very well be that the optimizer changes made in that issue are fine but pushed this case into a different  plan which exposed the issue.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-11T03:40:11.018+0000","updated":"2007-09-11T16:53:38.723+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12526645","id":"12526645","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"A little more historical information on this issue.  \r\n1) Army suggested I try backing all the way back to revision 81858 before DERBY-805 and apply the DERBY-1357 to make sure there was not a problem in DERBY-805 causing the issue.  I did that and found that the NPE still reproduced, so it looks like DERBY-805 had no effect.\r\n\r\n2) I printed the plans before/after DERBY-1357.  query_plan.old is before 1357 (without the NPE). query_plan.new is after DERBY-1357 with the NPE.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-12T00:10:10.664+0000","updated":"2007-09-12T00:10:10.664+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12526825","id":"12526825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"I was wondering in the skipScan code, should the column values of startPosition ever be null?  In this case column[0] is null, but I was wondering if that is ever expected.\r\n\r\nstartPosition\tIndexRow  (id=136)\t\r\n\tcolumn\tDataValueDescriptor[1]  (id=149)\t\r\n\t\t[0]\tnull\t\r\n\tncols\t1\t\r\n\torderedNulls\tboolean[1]  (id=150)\t\r\n\t\t[0]\tfalse\t\r\n\r\nJust to try to understand the impact I tried this small change, which interestingly caused the test case and suiltes.All to pass, but I don't really understand what it means for the column value to be null.\r\nI am guessing this is not the correct solution but rather there is some sort of problem in generating the column value for startPosition.  Just want to check though in case  there is a circumstance where the column value should be null and this change is ok.\r\n\r\nIndex: java/engine/org/apache/derby/impl/sql/execute/NoPutResultSetImpl.java\r\n===================================================================\r\n--- java/engine/org/apache/derby/impl/sql/execute/NoPutResultSetImpl.java       (revision 574932)\r\n+++ java/engine/org/apache/derby/impl/sql/execute/NoPutResultSetImpl.java       (working copy)\r\n@@ -388,7 +388,8 @@\r\n                        {\r\n                                if (startKeyLonger)\r\n                                        checkNullCols[cncLen++] = position + 1;\r\n-                               if (startPosition.getColumn(position + 1).isNull())\r\n+                DataValueDescriptor d = startPosition.getColumn(position +1);\r\n+                               if (d == null || d.isNull())\r\n                                {\r\n                                        returnValue =  true;\r\n                                        if (! startKeyLonger)\r\n\r\n\r\nThanks for the help. I am certainly out of my element with this code, so appreciate any help or pointers  anyone can offer.\r\n\r\nKathey\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-12T15:44:17.574+0000","updated":"2007-09-12T15:44:17.574+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12526843","id":"12526843","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Hi Kathey,\r\n\r\nMy guess (and it's just a guess) is that, while startPosition itself may be null, it probably is not correct for a non-null startPosition to have startPosition[i] be null for any i.\r\n\r\nFor what it's worth: startPosition in the above code comes from TableScanResultSet.startPosition, which is in turn loaded form TableScanResultSet.startKeyGetter.  The startKeyGetter is, I believe, generated from PredicateList.generateStartKey().  So if you are able to trace through that method to see which predicate is causing the \"null\" to be generated, that might be a good starting point.  Perhaps the short-circuit logic added for DERBY-1357 is somehow leaving one or more predicates in a state that causes incorrect generation of a null (instead of a DataValueDescriptor that is \"isNull()\")?  Again, I'm just guessing--maybe that's helpful, maybe not...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-09-12T16:32:50.318+0000","updated":"2007-09-12T16:32:50.318+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12527266","id":"12527266","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"In BaseActivation I see\r\n\r\nprotected final DataValueDescriptor getColumnFromRow(int rsNumber, int colId)\r\n\t\tthrows StandardException {\r\n\r\n        if( row[rsNumber] == null)\r\n        {\r\n            /* This actually happens. NoPutResultSetImpl.clearOrderableCache attempts to prefetch invariant values\r\n             * into a cache. This fails in some deeply nested joins. See Beetle 4736 and 4880.\r\n             */\r\n            return null;\r\n        }\r\n\t\treturn row[rsNumber].getColumn(colId);\r\n\t}\r\n\r\nI am not sure why prefetching invariant values would cause them to be null, but looks like a good lead.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-13T21:17:08.022+0000","updated":"2007-09-13T21:17:08.022+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12527603","id":"12527603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"body":"FYI: Here is the case from bug 4736 that was giving an  NPE in getColumnFromRow before the fix to check for a null row was added.  I tend to think that fix was wrong, that there is some root cause for the null row which needs to be addressed instead, and hopefully that is the same root cause for the DERBY-3033 test case.  I am off of playing with DERBY-3033 for a while.  Hope someone else can pick this up given what Haolan, Army and I have found so far.\r\n\r\nKathey\r\n\r\n\r\ncreate table a (a1 int not null primary key, a2 int, a3 int, a4 \r\nint, a5 int, a6 int);\r\ncreate table b (b1 int not null primary key, b2 int, b3 int, b4 \r\nint, b5 int, b6 int);\r\ncreate table c (c1 int not null, c2 int, c3 int not null, c4 \r\nint, c5 int, c6 int);\r\ncreate table d (d1 int not null, d2 int, d3 int not null, d4 \r\nint, d5 int, d6 int);\r\n\r\nalter table c add primary key (c1,c3);\r\nalter table d add primary key (d1,d3);\r\n\r\ninsert into a values \r\n(1,1,3,6,NULL,2),(2,3,2,4,2,2),(3,4,2,NULL,NULL,NULL),\r\n                     \r\n(4,NULL,4,2,5,2),(5,2,3,5,7,4),(7,1,4,2,3,4),\r\n                     (8,8,8,8,8,8),(6,7,3,2,3,4);\r\n\r\ninsert into b values \r\n(6,7,2,3,NULL,1),(4,5,9,6,3,2),(1,4,2,NULL,NULL,NULL),\r\n                     \r\n(5,NULL,2,2,5,2),(3,2,3,3,1,4),(7,3,3,3,3,3),(9,3,3,3,3,3);\r\n\r\ninsert into c values \r\n(3,7,7,3,NULL,1),(8,3,9,1,3,2),(1,4,1,NULL,NULL,NULL),\r\n                     \r\n(3,NULL,1,2,4,2),(2,2,5,3,2,4),(1,7,2,3,1,1),(3,8,4,2,4,6);\r\n\r\ninsert into d values \r\n(1,7,2,3,NULL,3),(2,3,9,1,1,2),(2,2,2,NULL,3,2),\r\n                     \r\n(1,NULL,3,2,2,1),(2,2,5,3,2,3),(2,5,6,3,7,2);\r\n\r\n\r\n\r\nselect a1,b1,c1,c3,d1,d3 \r\n  from D join (A left outer join (B join C on b2=c2) on a1=b1) \r\non d3=b3 and d1=a2;\r\n\r\nA1             |B1             |C1             |C3             \r\n|D1             |D3             \r\n----------------------------------------------------------------\r\n-------------------------------\r\n1              |1              |4              |2              \r\n|1              |2              \r\nERROR 38000: The exception 'java.lang.NullPointerException' was \r\nthrown while evaluating an expression.\r\nERROR 38000: The exception 'java.lang.NullPointerException' was \r\nthrown while evaluating an expression.\r\n at \r\ncom.ibm.db2j.protocol.Database.Errors.StandardException.newExcep\r\ntion(StandardException.java:386)\r\n at \r\ncom.ibm.db2j.protocol.Database.Errors.StandardException.unexpect\r\nedUserException(StandardException.java:567)\r\n at \r\ncom.ibm.db2j.impl.BasicServices.ClassManager.Reflect.DirectCall.\r\ninvoke(ReflectGeneratedClass.java:118)\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.GenericQua\r\nlifier.getOrderable(GenericQualifier.java:87)\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.HashScanRe\r\nsultSet.getNextRowCore(HashScanResultSet.java:477)\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.NestedLoop\r\nJoinResultSet.getNextRowCore(NestedLoopJoinResultSet.java:116)\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.ProjectRes\r\ntrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:249)\r\n\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.BasicNoPut\r\nResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:479)\r\n at \r\ncom.ibm.db2j.impl.Connectivity.JDBC.Local.LocalResultSet.movePos\r\nition(LocalResultSet.java:297)\r\n at \r\ncom.ibm.db2j.impl.Connectivity.JDBC.Local.LocalResultSet.next(Lo\r\ncalResultSet.java:251)\r\n at \r\ncom.ibm.db2j.util.JDBCDisplayUtil.indent_DisplayResults(JDBCDisp\r\nlayUtil.java:335)\r\n at \r\ncom.ibm.db2j.util.JDBCDisplayUtil.indent_DisplayResults(JDBCDisp\r\nlayUtil.java:272)\r\n at \r\ncom.ibm.db2j.util.JDBCDisplayUtil.DisplayResults(JDBCDisplayUtil\r\n.java:261)\r\n at \r\ncom.ibm.db2j.tools.ijImpl.utilMain.displayResult(utilMain.java:3\r\n66)\r\n at \r\ncom.ibm.db2j.tools.ijImpl.utilMain.doCatch(utilMain.java:419)\r\n at com.ibm.db2j.tools.ijImpl.utilMain.go(utilMain.java:295)\r\n at com.ibm.db2j.tools.ijImpl.Main.go(Main.java:196)\r\n at com.ibm.db2j.tools.ijImpl.Main.mainCore(Main.java:163)\r\n at com.ibm.db2j.tools.ijImpl40.Main.main(Main.java:49)\r\n at com.ibm.db2j.tools.ij.main(ij.java:57)\r\nERROR XJ001: Java exception: ': \r\njava.lang.NullPointerException'.\r\njava.lang.NullPointerException\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.BaseActiva\r\ntion.getColumnFromRow(BaseActivation.java:1234)\r\n at \r\ndb2j.exe.ac601a400fx00f0xe017x7cc0x007f0000010012c.e8(Unknown \r\nSource)\r\n at \r\ncom.ibm.db2j.impl.BasicServices.ClassManager.Reflect.DirectCall.\r\ninvoke(ReflectGeneratedClass.java:109)\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.GenericQua\r\nlifier.getOrderable(GenericQualifier.java:87)\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.HashScanRe\r\nsultSet.getNextRowCore(HashScanResultSet.java:477)\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.NestedLoop\r\nJoinResultSet.getNextRowCore(NestedLoopJoinResultSet.java:116)\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.ProjectRes\r\ntrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:249)\r\n\r\n at \r\ncom.ibm.db2j.impl.Database.Language.Execution.Generic.BasicNoPut\r\nResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:479)\r\n at \r\ncom.ibm.db2j.impl.Connectivity.JDBC.Local.LocalResultSet.movePos\r\nition(LocalResultSet.java:297)\r\n at \r\ncom.ibm.db2j.impl.Connectivity.JDBC.Local.LocalResultSet.next(Lo\r\ncalResultSet.java:251)\r\n at \r\ncom.ibm.db2j.util.JDBCDisplayUtil.indent_DisplayResults(JDBCDisp\r\nlayUtil.java:335)\r\n at \r\ncom.ibm.db2j.util.JDBCDisplayUtil.indent_DisplayResults(JDBCDisp\r\nlayUtil.java:272)\r\n at \r\ncom.ibm.db2j.util.JDBCDisplayUtil.DisplayResults(JDBCDisplayUtil\r\n.java:261)\r\n at \r\ncom.ibm.db2j.tools.ijImpl.utilMain.displayResult(utilMain.java:3\r\n66)\r\n at \r\ncom.ibm.db2j.tools.ijImpl.utilMain.doCatch(utilMain.java:419)\r\n at com.ibm.db2j.tools.ijImpl.utilMain.go(utilMain.java:295)\r\n at com.ibm.db2j.tools.ijImpl.Main.go(Main.java:196)\r\n at com.ibm.db2j.tools.ijImpl.Main.mainCore(Main.java:163)\r\n at com.ibm.db2j.tools.ijImpl40.Main.main(Main.java:49)\r\n at com.ibm.db2j.tools.ij.main(ij.java:57)\r\nij> ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kmarsden","name":"kmarsden","emailAddress":"kmarsdenderby at sbcglobal dot net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kathey Marsden","active":true},"created":"2007-09-14T18:49:27.886+0000","updated":"2007-09-14T18:49:27.886+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12527659","id":"12527659","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Kathey, thanks for the info about bug 4736.\r\n\r\nI took your pasted code and added 4 drop table statements to the front of it so I could run it repeatedly; it's attached as bug4736.sql.\r\n\r\nI ran that code repeatedly with my debugger set with a breakpoint in BaseActivation.getColumnFromRow() with a breakpoint set when\r\nrow[rsNumber] was null (i.e., inside the \"if\" that you noted).\r\n\r\nUnfortunately, I never hit the breakpoint.\r\n\r\nI also tried removing that \"if\" statement from getColumnFromRow(), to see\r\nif the bug4736.sql would then provoke a NullPointerException, and that\r\ndidn't happen either.\r\n\r\nSo, whatever was going on with that \"if\" test, the bug4736.sql script no longer drives the conditions which cause row[rsNumber] to be null.\r\n\r\nI think you've got a good theory, though, and I'll continue to play with it, to try to understand that \"if\" statement in getColumnFromRow() better.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-14T23:29:27.543+0000","updated":"2007-09-14T23:29:27.543+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528179","id":"12528179","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I removed the mysterious \"if\" statement from BaseActivation.getColumnFromRow(), and ran\r\nall the regression tests. There were two failures, but I'm not sure if they were due to this\r\nchange or not. I'll investigate them further. I did *not* get any NullPointerException messages,\r\nwhich is what I was sort of expecting to see.\r\n\r\nSo if removing the \"if\" statement from BaseActivation.java fixes this problem, it apparently\r\nisn't going to cause a whole lot of other problems.\r\n\r\nI think the next step is to investigate whether removing the \"if\" statement makes the repro script\r\npass. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-17T22:41:19.771+0000","updated":"2007-09-17T22:41:19.771+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528197","id":"12528197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I played around with the skipScan repro case and confirmed Kathey's suspicion about\r\nBaseActivation.getColumnFromRow, as follows:\r\n - with the current trunk, the repro case gives me the expected NPE in skipScan.\r\n - with the \"if\" statement removed from BaseActivation.getColumnFromRow, the\r\n   repro case gives me a NPE which matches the NPE that Kathey posted from the\r\n   old bug 4736. So this reproduction case definitely takes the code through a\r\n  similar code path as that of bug 4736.\r\n\r\nHere's the stack trace I get with the current trunk with the \"if\" removed from getColumnFromRow:\r\n\r\n2007-09-18 00:18:51.793 GMT Thread[DRDAConnThread_2,5,main] (XID = 352997), (SESSIONID = 0), (DATABASE = viewer), (DRDAID = NF000001.B54B-810083792898537651{1}), Failed Statement is: select study_id, number_of_images from (select distinct                  st.study_id,                    st.number_of_images,                    dsr.priority,                   st.creation_datetime       from dicom_send_requests dsr, studies st       where dsr.send_date is null       and   dsr.workstation_id = ?       and   dsr.study_id = st.study_id       and   not exists (               select 1               from dispatcher_locks               where dispatcher_locks.study_id = st.study_id               and   dispatcher_locks.workstation_id = ?               and   dispatcher_locks.dispatcher_id = ?               ) ) temp with 3 parameters begin parameter #1: 4 :end parameter begin parameter #2: 4 :end parameter begin parameter #3: 100 :end parameter\r\nERROR 38000: The exception 'java.lang.NullPointerException' was thrown while evaluating an expression.\r\n        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:294)\r\n        at org.apache.derby.iapi.error.StandardException.unexpectedUserException(StandardException.java:554)\r\n        at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:164)\r\n        at org.apache.derby.impl.sql.execute.TableScanResultSet.openCore(TableScanResultSet.java:258)\r\n        at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.openCore(IndexRowToBaseRowResultSet.java:225)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:168)\r\n        at org.apache.derby.impl.sql.execute.JoinResultSet.openRight(JoinResultSet.java:272)\r\n        at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(JoinResultSet.java:151)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:168)\r\n        at org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:248)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:168)\r\n        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:248)\r\n        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)\r\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1225)\r\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1649)\r\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(EmbedPreparedStatement.java:1304)\r\n        at org.apache.derby.impl.drda.DRDAStatement.execute(DRDAStatement.java:666)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:824)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:275)\r\nCaused by: java.lang.NullPointerException\r\n        at org.apache.derby.impl.sql.execute.BaseActivation.getColumnFromRow(BaseActivation.java:1317)\r\n        at org.apache.derby.exe.ac601a400fx0115x15fbx3163xffff9ef86e6e1.e7(Unknown Source)\r\n        at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:153)\r\n        ... 16 more\r\n============= begin nested exception, level (1) ===========\r\njava.lang.NullPointerException\r\n        at org.apache.derby.impl.sql.execute.BaseActivation.getColumnFromRow(BaseActivation.java:1317)\r\n        at org.apache.derby.exe.ac601a400fx0115x15fbx3163xffff9ef86e6e1.e7(Unknown Source)\r\n        at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:153)\r\n        at org.apache.derby.impl.sql.execute.TableScanResultSet.openCore(TableScanResultSet.java:258)\r\n        at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.openCore(IndexRowToBaseRowResultSet.java:225)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:168)\r\n        at org.apache.derby.impl.sql.execute.JoinResultSet.openRight(JoinResultSet.java:272)\r\n        at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(JoinResultSet.java:151)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:168)\r\n        at org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:248)\r\n        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:168)\r\n        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:248)\r\n        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)\r\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1225)\r\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1649)\r\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(EmbedPreparedStatement.java:1304)\r\n        at org.apache.derby.impl.drda.DRDAStatement.execute(DRDAStatement.java:666)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:824)\r\n        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:275)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-18T00:28:21.693+0000","updated":"2007-09-18T00:28:21.693+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528416","id":"12528416","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> I played around with the skipScan repro case and confirmed Kathey's suspicion\r\n> about BaseActivation.getColumnFromRow\r\n\r\nThank you for your continued investigation of this issue, Bryan.  It's great to have an idea of the codepath in question here.  Have you had the time/inclination to look into the cause of the null value in row[rsNumber]?  I realize that's easy to say and quite hard to do, but I was just wondering if you've looked at it, or if you have the time and plans to do so?\r\n\r\nIn particular, I'm referring to the code comment that Kathey mentioned:\r\n\r\n  \"NoPutResultSetImpl.clearOrderableCache attempts to prefetch invariant values\r\n   into a cache. This fails in some deeply nested joins.\"\r\n\r\nI think the core question here is *why* does \"this fail in some deeply nested joins\"?  That sounds awfully suspicious.  It seems that either a) the \"failure\" is acceptable and the comments need to be updated, in which case Kathey's \"quick fix\" of checking for the null value would be appropriate; or b) the \"failure\" is a bug and in order to solve this issue, that failure should (ideally) be fixed...\r\n\r\nWould you agree?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-09-18T15:31:05.791+0000","updated":"2007-09-18T15:31:05.791+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528498","id":"12528498","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hi Army, thanks for the feedback! I marked the issue as assigned to me, because I'm trying to understand it, but progress is slow.\r\n\r\nI believe that the null value in row[rsNumber] is coming from a request to fetch column 1 of result set 5. Here's the original query for context:\r\n\r\n    select study_id, number_of_images from (select distinct st.study_id,\r\n       st.number_of_images, dsr.priority, st.creation_datetime from dicom_send_requests dsr,\r\n       studies st where dsr.send_date is null and dsr.workstation_id = ? and\r\n       dsr.study_id = st.study_id and not exists ( select 1 from dispatcher_locks where\r\n       dispatcher_locks.study_id = st.study_id and dispatcher_locks.workstation_id = ? and\r\n       dispatcher_locks.dispatcher_id = ? )) temp\r\n\r\nResult set 5, I believe, is the \"select 1 from dispatcher_locks\" nested query, and column 1\r\nof that result set is dispatcher_locks.study_id.\r\n\r\nThe null value occurs at the very beginning of the first time that we are opening a TableScanResultSet. \r\nWe are setting up a NestedLoopJoinResultSet, and the right side of that join is a index-to-base probe,\r\nand so we are trying to set the start position for a particular \"probe\" into the index for a particular \r\nstudy_id value. sameStartStopPosition is true, as the join  on study_id is a simple equality join.\r\n\r\nThe code in question, near the top of TableScanResultSet.openCore(), is:\r\n\r\n\t\tif (startKeyGetter != null)\r\n\t\t{\r\n\t\t\tstartPosition = (ExecIndexRow) startKeyGetter.invoke(activation);\r\n\t\t\tif (sameStartStopPosition)\r\n\t\t\t{\r\n\t\t\t\tstopPosition = startPosition;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (stopKeyGetter != null)\r\n\t\t{\r\n\t\t\tstopPosition = (ExecIndexRow) stopKeyGetter.invoke(activation);\r\n\t\t}\r\n\r\nThe TableScanResultSet instance that we are processing is for an index-to-base probe of\r\nthe dicom_send_requests table via the sendreq_study_id_fk secondary index.\r\n\r\nI'm thinking that, although the external form of the SQL SELECT statement is:\r\n - dicom_send_requests joins to studies on study_id, and\r\n - studies joins to dispatcher_locks on study_id\r\nthe optimizer may have re-arranged this and selected a different join order so that the actual\r\nquery is more like:\r\n - dispatcher_locks joins to dicom_send_requests on study_id, and\r\n - dicom_send_requests joins to studies on study_id\r\n\r\nAnd then, perhaps because the dispatcher_locks query is a \"select 1\" query, the\r\nexecution of the query against dispatcher_locks hasn't fetched any actual data, and so\r\nthe column is coming back null.\r\n\r\nSo far, however, I haven't seen any code path that is going \r\nthrough NoPutResultSetImpl.clearOrderableCache, so I don't any information\r\nto share regarding the code comment that Kathey observed.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-18T18:33:43.737+0000","updated":"2007-09-18T18:33:43.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528516","id":"12528516","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> I haven't seen any code path that is going through\r\n> NoPutResultSetImpl.clearOrderableCache, so I don't\r\n> have any information to share regarding the code\r\n> comment [...]\r\n\r\nIt's possible that the comment is just a red herring--if clearOrderableCache() is not in play, then there's probably no point going further down that road.  The information that you provided above certainly has potential--great investigation.\r\n\r\n> the optimizer may have re-arranged this\r\n\r\nTo add to this: I think that for the optimizer to re-arrange the join order between dispatcher_locks, dicom_send_requests, and studies, all of those result sets must (I *think*?) appear in the same compile-time FromList.  That means that the NOT EXISTS subquery will have to be \"flattened\" into the \"select distinct st.study_id, ...\" query.  So it may be useful to look at SubqueryNode.preprocess() to see a) if the NOT EXISTS subquery is in fact being flattened, and b) if the column references that result from that flattening are set up correctly.\r\n\r\nIf the NOT EXISTS subquery is in fact being flattened, it might be good to stop the debugger just after \"modification of access paths\" has occured on the relevant FromList (the one containing dispatcher_locks, dicom_send_requests, and studies) to see what join order (and join strategies) the optimizer has chosen.  Perhaps that'll provide some insight as to whether or not the optimizer re-arrangement is in play here...?\r\n\r\nOf course I'm just offering top-of-my-head suggestions; feel free to ignore and continue with your current path of investigation, as that certainly seems to be yielding some very useful information...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-09-18T19:10:51.208+0000","updated":"2007-09-18T19:10:51.208+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528564","id":"12528564","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks for the pointer to SubqueryNode.preprocess; we're definitely flattening this query.\r\nThe code goes through the flattenToExistsJoin() path on line 742 of SubqueryNode.java.\r\n\r\nAnd, to substantiate that more, it's clear from close examination of the data structures in\r\nthe debugger that the overall join tree at execution time is:\r\n\r\n  (Studies NestedLoop Dispatcher_locks) NestedLoop dicom_send_requests\r\n\r\nAnd at the point of the crash we've:\r\n - fetched the first row from Studies, \r\n - joined it against Dispatcher_locks (discovering that no matching row exists, so NOT EXISTS is true)\r\n - taken the resulting row and are ready to join it against dicom_send_requests.\r\n\r\nI'm wondering if the result set book-keeping gets messed up during flattening. At the point\r\nthat we call getColumnFromRow() to fetch a value from result set 5, it looks to me like\r\nthe information in row[3] is the correct information that we should be accessing. That is,\r\nwhen I back up the stack to the NestedLoopJoinResultSet frame, and look at the value\r\nof \"leftRow\", which is the row that (I think) should be providing the values that we are about\r\nto use for the start/stop position computations in the index scan positioning, the leftRow\r\ninstance from that join matches up with row[3] in the BaseActivation generated instance.\r\n\r\nSo I'll look at how the result_set numbering is handled during flattening.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-18T21:01:38.013+0000","updated":"2007-09-18T21:01:38.013+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528840","id":"12528840","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I've been trying to understand the structure and content of the generated code for\r\nthe activation, by using derby.debug.true=DumpClassFile and decompiling the\r\nresulting class files.\r\n\r\nI can see the generated startKeyGetter method for the TableScanResultSet\r\nwhich accesses dicom_send_requests via the sendreq_study_id_fk index:\r\n\r\n    public Object e7()\r\n        throws StandardException\r\n    {\r\n        e8.setColumn(1, (NumberDataValue)getColumnFromRow(5, 1));\r\n        return e8;\r\n    }\r\n\r\nAnd I can see the generated code in fillResultSet which is setting up the\r\nTableScanResultSet to make this call:\r\n\r\ngetResultSetFactory().getTableScanResultSet(\r\n                                this, 1457, 21, getMethod(\"e6\"), 9, getMethod(\"e7\"),\r\n                                1, null, -1, true, e9, \"DICOM_SEND_REQUESTS\", null,\r\n                                \"SENDREQ_STUDY_ID_FK\", true, false, -1, -1, 6,\r\n                                false, 0, false, 1.2960000000000003D, 265.16399630200306D),\r\n\r\nAll of the generated code looks reasonable and valid, though I don't have\r\nmuch experience reading the generated code.\r\n\r\nI'm now wondering if this is an order-of-operations thing. During the nested loop\r\njoin, the following event should occur:\r\n - the current row from the outer side of the join should be fetched\r\n - the probe for the inner side of the join should be set up\r\n - the values from the outer side of the join should be passed to the\r\n   index positioning logic on the inner side.\r\n\r\nIt is the \"startKeyGetter\" method that does that last step, but I wonder if it's\r\ntrying to access the start key values before the project/restrict processing has\r\npushed the values of the current row up from the outer side of the join.\r\n\\\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-19T17:47:40.816+0000","updated":"2007-09-19T17:47:40.816+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528885","id":"12528885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I'm sorry, Army, I misled you. The code path *does* go through\r\nNoPutResultSetImpl.clearOrderableCache, my mistake. I just\r\nwasn't stepping enough times in the debugger :)\r\n\r\nThe comment in getColumnFromRow() is starting to make a little bit more sense now.\r\n\r\nIt still seems like it's wrong for the positioned table scan to be\r\nopened without the position value having been set, though, so\r\nI'll keep plugging away reading code... :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-19T20:21:51.400+0000","updated":"2007-09-19T20:21:51.400+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12528929","id":"12528929","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Hmmm... Now I'm back to thinking that the result number management\r\nhas gone astray during the query flattening.\r\n\r\nAttached is generatedActivation.txt, a de-compilation of the\r\ngenerated activation for the query that fails.\r\n\r\nAlso attached is queryPlanRS.txt, which is a poor-man's-graphical \r\nview of the query plan, focusing specifically on the result sets and their\r\nresult set number (in parentheses next to the result set)\r\n\r\nI've also specifically called out the two startKeyGetter()\r\nmethods, \"e2\" and \"e7\".\r\n\r\nE2, which is used for the index probe into DISPATCHER_LOCKS\r\nvia DISPATCHER_LOCKS_SID_FK, accesses the start key value\r\nusing result set #4 (see the E2 code in generatedActivation.txt),\r\nwhich seems correct to me.\r\n\r\nE7, however, which is used for the index probe into DICOM_SEND_REQUESTS\r\nvia SENDREQ_STUDY_ID_FK, accesses the start key value using\r\nresult set #5. But this seems wrong. I believe that result set #3\r\nshould have been used in the code which is generated into\r\nstartKeyGetter method E7.\r\n\r\nI do believe I'm closer, but I'm sure not there yet.\r\n\r\nI wouldn't mind somebody checking this work, if anybody is interested.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-19T22:13:11.300+0000","updated":"2007-09-19T22:13:11.300+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12529267","id":"12529267","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I'm thinking about the interaction between NOT EXISTS query flattening and equijoin transitive closure,\r\nand I'm getting myself all confused. Here's what I've been thinking:\r\n\r\n1) The join predicate which causes startKeyGetter method E7 to be\r\ngenerated is an equijoin between DISPATCHER_LOCKS.STUDY_ID\r\nand DICOM_SEND_REQUESTS.STUDY_ID. \r\n\r\n2) This predicate was NOT expressed in the original query as\r\nan explicit condition in the WHERE clause; rather, it was\r\ngenerated by Derby during PredicateList.joinClauseTransitiveClosure()\r\n\r\n3) Since the result set for DISPATCHER_LOCKS is RS #5, it is \r\ncompletely valid for the E7 method to be fetching the start key value \r\nfrom result set #5.\r\n\r\n4) But there is no row in result set number 5, because the query wants\r\nto know when the DISPATCHER_LOCKS row does *NOT* exist!\r\n\r\n5) That is, we validly flattened the NOT EXISTS subquery into the\r\nparent's two-way query between STUDIES and DICOM_SEND_REQUESTS,\r\nand we remembered enough information about the relationship between\r\nSTUDIES and the correlated NOT EXISTS subquery against\r\nDISPATCHER_LOCKS, so that we know that the NestedLoopJoin\r\nfrom STUDIES to DISPATCHER_LOCKS should return rows from STUDIES\r\nwhere there is *NOT* a matching row in DISPATCHER_LOCKS, but\r\nthen we tried to take the value of the (non-existing) row from\r\nDISPATCHER_LOCKS and use it to do an index-probe into DICOM_SEND_REQUESTS.\r\n\r\nSo now I'm thinking that when we flattened the NOT EXISTS query\r\ninto its parent, we needed to do so in a way that reflected that the\r\ncorrelated join predicate was NOT suitable for use in transitive closure.\r\n\r\nI think it's definitely time for somebody to start checking my work here,\r\nbecause I'm venturing into areas that are quite unfamiliar to me. Can\r\nsomebody who is comfortable with the concepts of\r\n - query flattening\r\n - correlated NOT EXISTS subqueries, and\r\n - transitive closure of equijoins\r\nhave a look at this query and offer an opinion about whether it was valid\r\nfor Derby to flatten and then transitively close the join in this fashion?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-20T21:27:51.237+0000","updated":"2007-09-20T21:27:51.237+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12529294","id":"12529294","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Hi Bryan,\r\n\r\nI did some tracing through the relevant areas of code and it sounds to me like you are very much on track.  I was able verify all of the observations (#1 thru #5) from your previous comment, and I confirmed that the NOT EXISTS predicate gives us a non-existent row with which we then try to join to DICOM_SEND_REQUESTS.\r\n\r\nSo I think your investigation here has been great.  Based on what you have posted so far, I tend to agree that the join transitive closure should not have created the new join predicate.  If you'd like to consider that approach as a solution to this issue, I think it might be a good one.  One other potential consideration is that maybe the NOT EXISTS subquery, which is correlated to the outer query, should not have been flattened in the first place?  I'm not sure what the implications of correlation and subquery flattening is, but that might be something worth looking up in more detail.\r\n\r\nIn any event, thank you very much for all of your time and effort on this one.  I do think you are making great progress here, and it seems like a solution is starting to take shape...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-09-21T00:06:52.313+0000","updated":"2007-09-21T00:06:52.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12529303","id":"12529303","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Army, thanks very much for the timely feedback! I tried a simple\r\nchange to PredicateList.joinClauseTransitiveClosure to omit\r\nNOT EXISTS join predicates from consideration for closure,\r\nand the initial results were promising: no crash, and I think I\r\nam getting the right results.\r\n\r\nAttached is noClosureOfNotExists.diff, which is not for commit,\r\njust to share the work I've done so far.\r\n\r\nI'll continue testing this patch, to see if I can improve my\r\nconfidence that it delivers the right results and doesn't break other processing.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-21T01:48:08.135+0000","updated":"2007-09-21T01:48:08.135+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12529314","id":"12529314","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"noClosureOfNotExists patch achieves a 100% pass rate on \"ant junitreport\".\r\nSo that's a good 1st-order check that it doesn't break anything obvious.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-21T04:38:33.087+0000","updated":"2007-09-21T04:38:33.087+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12529507","id":"12529507","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I no longer think this bug is related to DERBY-2916 or DERBY-2775, so I removed those links.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-21T17:15:34.783+0000","updated":"2007-09-21T17:15:34.783+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12529746","id":"12529746","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is 'repro2.java'.\r\n\r\nI spent a bunch of time trying to write a \"from scratch\" reproduction\r\nprogram to demonstrate the bug, but with no success. In the\r\ndebugger, I can see that the compiler erroneously inserts the\r\ntransitive join closure predicate, but I haven't been able to force\r\nthe optimizer to end up with a query plan where the bad predicate matters.\r\n\r\nI was thinking I might try to use the optimizer overrides feature to\r\nforce the join plan that I want, but I need to go study that feature first.\r\n\r\nIn the meantime, I attached the first version of the repro program\r\nin case somebody else can see how to trick it into reproducing the bug.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-23T15:57:36.083+0000","updated":"2007-09-23T15:57:36.083+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12529906","id":"12529906","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I've succeeded in using the optimizer overrides to force nested loop joins,\r\nand to force the use of the secondary index access paths, but I haven't\r\nyet figured out how to force the join order that I want using the optimizer overrides.\r\n\r\nIt's tricky because the optimizer overrides are specified on the query\r\nbefore it's been flattened, but I want to force a particular join order after flattening.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-24T16:13:42.085+0000","updated":"2007-09-24T16:13:42.085+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12529919","id":"12529919","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> It's tricky because the optimizer overrides are specified on the query\r\n> before it's been flattened, but I want to force a particular join order\r\n> after flattening. \r\n\r\nHmm...not sure if that's possible with current override support or not?\r\n\r\nOne thing that influences join order is the relative size of the tables in question.  I noticed that for the original database, the row counts are:\r\n\r\n  DSR: 3240\r\n  ST: 20\r\n  dispatcher_locks: 0\r\n\r\nwhile in the database for \"repro2\" they are:\r\n\r\n  DSR: 1005\r\n  ST: 10003\r\n  dispatcher_locs: 0\r\n\r\nNotice how DSR is 15x as large as ST in the first case, while ST is 10x as large as DSR in the second case.  Perhaps that has something to do with why the optimizer chooses different join orders for the two repros...?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-09-24T17:12:59.369+0000","updated":"2007-09-24T17:12:59.369+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12530032","id":"12530032","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Thanks for the suggestion, Army. I've been tinkering with the table sizes in the\r\nrepro. However, it doesn't seem to affect the optimizer's behavior. I don't\r\nthink the optimizer is being told the correct information about the table sizes.\r\n\r\nPerhaps there is something I need to do to communicate the table sizes to\r\nthe optimizer, other than simply inserting more rows into the table(s) prior to\r\nrunning the test?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-25T00:56:17.997+0000","updated":"2007-09-25T00:56:17.997+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12530033","id":"12530033","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Maybe this : http://db.apache.org/derby/docs/dev/tuning/ctunstats848901.html\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-25T00:58:03.075+0000","updated":"2007-09-25T00:58:03.075+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12530038","id":"12530038","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I fiddled around with repro2.java, and have attached an updated version.\r\nManipulating the table sizes and table row statistics in various ways\r\ndidn't succeed in convincing the optimizer to choose the join order I wanted.\r\n\r\nI re-wrote the query a different way, and then I seemed to get the join\r\norder I wanted, but my query rewrite resulted in re-casting the query\r\nas 2 select nodes with 2 tables each, rather than a single node with 3\r\ntables, and hence the compiler never peformed transitive closure of\r\nthe predicates, so that query didn't tickle the bug either.\r\n\r\nDrat. I'll sleep on it, and maybe some new ideas will occur.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-25T04:02:30.850+0000","updated":"2007-09-25T04:02:30.850+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12530153","id":"12530153","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"I switched Bryan's repro to use primary and foreign key constraints instead of explicit indexes.  That in turn meant that I had to update the INSERT statements to satisfy the foreign key constraints.\r\n\r\nOnce I did that, I ran the query in \"repro2.java\" with _no_ optimizer overrides and while it did not fail, it *did* show the desired join order, which is a step in the right direction.\r\n\r\nThen I (accidentally) swapped the order of the FROM tables in the top-level query (i.e. I put \"DSR\" first, then \"ST\", instead of the other way around), and when I did that the query failed with an NPE.  Odd?\r\n\r\nThe bad news is that the stack trace for *this* NPE is different from the one reported in this issue.  Nonetheless, it follows the same pattern: i.e. it does not occur in 10.1.3.1, and if I back out the changes for DERBY-1357 it goes away.  So I'm not sure if this is the same issue or not?\r\n\r\nAttaching as \"repro3.java\"...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-09-25T16:52:10.128+0000","updated":"2007-09-25T16:52:10.128+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12530347","id":"12530347","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"This new failure is very interesting! My initial reaction is that it is the same problem,\r\nwith different symptoms. With the new (swapped tables) query:\r\n - we still go through exists flattening\r\n - we still go through transitive closure, and add a (erroneous) equijoin predicate\r\n - just before the crash, we trip the mysterious \"if\" statement in getColumnFromRow()\r\n   and return a null column value \r\n - applying the noClosureOfNotExists.diff patch removes the NPE and makes the\r\n   query run correctly.\r\nI'll keep stepping through the new NPE, as well as your modified query with the\r\nprevious query plan \"shape\", to continue to understand it better.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-26T02:12:59.520+0000","updated":"2007-09-26T02:12:59.520+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12531070","id":"12531070","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I've persuaded myself that Army's repro3 is reproducing the same basic problem,\r\nand so I'm going to move forward with building a complete patch using repro3\r\nas the core regression test.\r\n\r\nI'm considering adding the new regression test to ExistsWithSetOpsTest.java,\r\nwhich isn't a perfect location, but I was looking for an existing JUnit test that\r\ncovered much of the same areas of the code, and that one seemed not too\r\nimplausible. Is there a better location for the new test? Specifically, are there\r\nexisting JUnit tests that specifically cover subquery flattening?\r\n\r\nI'm also intending to open a separate JIRA to continue the investigation of\r\nthe mystery \"if\" statement in BaseActivation.getColumnFromRow. It is my\r\nbelief that that \"if\" statement can (and should) be removed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-28T16:03:01.420+0000","updated":"2007-09-28T16:03:01.420+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12531083","id":"12531083","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for persistence with this issue, Bryan.  I'm glad repro3 appears to have been helpful.\r\n\r\n> Specifically, are there existing JUnit tests that specifically cover subquery flattening? \r\n\r\nI don't see any existing JUnit tests, no.  The \"subqueryFlattening.sql\" test seems like the most relevant place, but as that is not JUnit, I can understand why you would choose to avoid that.\r\n\r\nIf adding a new JUnit test is undesirable and you do decide to extend ExistsWithSetOpsTest, do you also plan to rename that test to make it more appropriate?  It would be nice to choose a name that more generally describes the types of tests in that file.  I think the common ground here is EXISTS with subqueries...though not necessarily \"flattening\" since the queries currently in ExistsWithSetOpsTest do not perform flattening per se, they just \"transform\" the EXISTS subquery into something else...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-09-28T16:45:14.962+0000","updated":"2007-09-28T16:45:14.962+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12531251","id":"12531251","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Attached is 'patchWithRenamedTest.diff', a patch proposal.\r\n\r\nThe 'svn stat' for this patch is:\r\nM      java/engine/org/apache/derby/impl/sql/compile/FromList.java\r\nM      java/engine/org/apache/derby/impl/sql/compile/PredicateList.java\r\nM      java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java\r\nA      java/testing/org/apache/derbyTesting/functionTests/tests/lang/ExistsWithSubqueriesTest.java\r\nD      java/testing/org/apache/derbyTesting/functionTests/tests/lang/ExistsWithSetOpsTest.java\r\n\r\nThe patch contains a regression test for this issue, modeled on \r\nthe repro3.java test case and inserted into the (renamed)\r\nExistsWithSubqueriesTest.java.\r\n\r\nThe core of the patch is the same, which is to notice that a join\r\npredicate mentions a table which has the NOT EXISTS usage,\r\nand to exclude that predicate from transitive join consideration.\r\n\r\nI think this patch is worthy of review; please have a look when you have a chance.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-09-29T15:33:20.645+0000","updated":"2007-09-29T15:33:20.645+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12531546","id":"12531546","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"Thank you for the patch, Bryan.  The diff is small and contained and looks functionally correct to me.  I ran the new regression test without your patch and it failed, and with your patch it succeeds.\r\n\r\nI do think it might be nice to add explanatory comments to the relevant engine code, so that future readers know *why* it is that we are checking for a \"NOT EXISTS\" query.  If you'd rather not add comments to the transitive closure code itself, you could perhaps add comments to the FromList.tableNumberIsNotExists() method explaining the scenario in which it is used.  I think there are ample comments in the new ExistsWithSubqueriesTest file, so maybe you could just copy the important bits into the engine code comments, as well?\r\n\r\nAside from that, and assuming derbyall and suites.All ran cleanly, I'm +1 to the commit of this patch.  Many thanks for picking this one up, and for putting so much time into tracking down the cause/solution!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-10-01T16:02:52.074+0000","updated":"2007-10-01T16:02:52.074+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12531679","id":"12531679","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I agree, comments are definitely important for this change.\r\n\"I meant to add them before but forgot\" :) Thanks for catching this!\r\n\r\nAttached is a revised patch; the only change is improved comments\r\nin FromList and PredicateList.\r\n\r\nI'm intending to run a complete set of tests, verify that javadoc\r\nbuilds cleanly, and then submit this patch. Continued feedback\r\nis very welcome of course.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-02T02:59:14.152+0000","updated":"2007-10-02T02:59:14.152+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12531819","id":"12531819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"derbyall and junit suites.All were 100% clean.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-02T14:55:32.890+0000","updated":"2007-10-02T14:55:32.890+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12532324","id":"12532324","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"generated javadoc looks ok, now that I have my jdk 1.5 build envt set up.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-04T05:17:15.121+0000","updated":"2007-10-04T05:17:15.121+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12532459","id":"12532459","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"Committed the patchWithImprovedComments to the trunk as revision 581943.\r\n\r\nI intend to merge this patch back to the 10.3 line in the next week.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-04T15:14:48.184+0000","updated":"2007-10-04T15:14:48.184+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12532488","id":"12532488","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"body":"> Committed the patchWithImprovedComments to the trunk as revision 581943. \r\n\r\nThanks Bryan!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=army","name":"army","emailAddress":"qozinx at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A B","active":true},"created":"2007-10-04T17:34:08.718+0000","updated":"2007-10-04T17:34:08.718+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12377120/comment/12532814","id":"12532814","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"body":"I merged the trunk patch back to the 10.3 branch without issues, and my build and test runs were clean, so I committed the patch to the 10.3 branch as revision 582439.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bryanpendleton","name":"bryanpendleton","emailAddress":"bpendleton dot derby at gmail dot com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bryan Pendleton","active":true},"created":"2007-10-06T02:58:14.844+0000","updated":"2007-10-06T02:58:14.844+0000"}]},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/DERBY-3033/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i06rjj:"}}