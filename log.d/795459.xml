<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>795459</D:version-name>
<D:comment>DERBY-4244: ALTER TABLE ASSERT in ADD COLUMN with autocommit off

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

An ALTER TABLE ... ADD COLUMN statement which specifies to add a column to
a table may also include any column constraints which apply to that column.
For example, to add a column to a table and at the same time indicate that
the column should be the primary key of the table, this statement is used:

   alter table t0 add column c2 int not null default 0 primary key; 

If the table already contains a primary key, this statement fails, as the
table cannot have more than one primary key. However, the check for the
duplicate primary key was occurring at execution time, *after* the column
had already been added to the table. Then, during that same transaction,
subsequent ALTER TABLE statements affecting that table failed with internal
ASSERT messages because the data dictionary data structures were inconsistent.

This patch adds logic to the compilation processing of the ALTER TABLE
statement to check for a duplicate PRIMARY KEY constraint at compile
time, before the ALTER TABLE statement has begun execution. This way, when
such a duplicate constraint is rejected, the rejection occurs prior to
execution of the table, allowing for more straightforward cleanup.

The patch also re-enables a portion of the AlterTableTest, which had been
disabled due to this problem.
</D:comment>
<D:creator-displayname>bpendleton</D:creator-displayname>
<S:date>2009-07-19T01:29:22.552035Z</S:date>
</S:log-item>
</S:log-report>
