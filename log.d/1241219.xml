<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>1241219</D:version-name>
<D:comment>DERBY-3740 BlobClob4BlobTest.testLockingWithLongRowBlob fails with .AssertionFailedError: FAIL - statement should timeout

backported change #1240521 from trunk to 10.8 branch

The 2 tests that were failing intermittently (testLockingWithLongRowBlob
and testLockingBlob) would both select a target blob known to be returned
as a stream, and assign it to a variable.  The expectation was that until
the end of the routine Derby would maintain a read lock on the blob.  The
problem was that it looks like some JVMs/JITs would recognize that the variable
was never used and call finalize before the test executed the code to
get an expected lock timeout on updating the blob in another connection.
Fixed by adding references to the variable in code executed after the
expected timeout.  Before the fix test was failing about 1/2 time in my
environment, after the fix the test ran 100 times without a failure.

</D:comment>
<D:creator-displayname>mikem</D:creator-displayname>
<S:date>2012-02-06T22:18:34.213509Z</S:date>
</S:log-item>
</S:log-report>
