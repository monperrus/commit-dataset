<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>957287</D:version-name>
<D:comment>DERBY-4679 Several left outer joins causes unstable query with incorrect results

Back-ported two patches from trunk as

svn merge -c 952237 https://svn.apache.org/repos/asf/db/derby/code/trunk
svn merge -c 957260 https://svn.apache.org/repos/asf/db/derby/code/trunk

Patch derby-4679b, which solves the following problem:

When transitive closure generates new criteria into the query, it is
sometimes confused by situations where the same column name appears in
a result column list multiple times due to flattening of sub-queries.

Flattening requires remapping of (table, column) numbers in column
references. In cases where the same column name appears in a result
column list multiple times, this lead to remapping (reassigning) wrong
(table, column) numbers to column references in join predicates
transformed to where clauses as a result of the flattening.

See also DERBY-2526 and DERBY-3023 whose fixes which were partial
solutions to the problem of wrong column number remappings confusing
the transitive closure of search predicates performed by the
preprocessing step of the optimizer.

---

Follow-up patch derby-4679-followup, which makes the original patch
safer by also matching the column name once a candidate result column
has been located using the table number and column number pair to
match an RC. This is to safe-guard against false matches, since
DERBY-4595 shows that the column number can be wrong in certain
situations.


</D:comment>
<D:creator-displayname>dag</D:creator-displayname>
<S:date>2010-06-23T18:13:14.746410Z</S:date>
</S:log-item>
</S:log-report>
