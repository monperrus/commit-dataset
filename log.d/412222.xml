<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>412222</D:version-name>
<D:comment>DERBY-1365: Fixes two minor problems with logic in Optimizer. Here is the note from contributor:

In addition to fixing the two issues described, the patch also resolves another potential problem: there are several places in OptimizerImpl.getNextPermutation() where calls to rewindJoinOrder() are made. These calls typically indicate that the optimizer has decided to abandon or "short circuit" a join order before calculating the full cost. For some of these calls--esp. the ones that can occur in the middle of the join order (as opposed to those which will only occur on a complete join order)--the "rewind" operation needs to make sure to reload the best plans for the optimizables that are pulled as part of the "rewind" process. Otherwise Derby could end up generating a plan for an optimizable even though that plan was part of a join order that was "abandoned" (i.e. rewound in the middle), which is logically incorrect and could lead to sub-optimal performance. I've included changes for this issue as part of d1365_v1.patch.

I ran derbyall on Red Hat Linux with d1365_v1.patch applied and saw no new failures. I would appreciate reviews/comments/commit if anyone has the time... 

Submitted by Army Brown (qozinx@gmail.com)
</D:comment>
<D:creator-displayname>bandaram</D:creator-displayname>
<S:date>2006-06-06T21:49:24.085363Z</S:date>
</S:log-item>
</S:log-report>
