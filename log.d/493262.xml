<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>493262</D:version-name>
<D:comment>DERBY-1917: Clob.position fails with search strings longer than 256 chars

This patch was contributed by V. Narayanan (v.narayanan@sun.com)

The position algorithm proceeds in a chunked fashion, searching for 256
byte chunks of the search string at a time. The chunking algorithm contained
two flaws:

  - tmpPatternS = searchStr.substring(patternIndex, 256);
  + tmpPatternS = searchStr.substring(patternIndex , patternIndex + 256);

searchStr.substring(patternIndex , patternIndex + 256); has to actually
return 256 characters starting from patternIndex. This was resulting in
an empty string being returned when the string length exceeded 256.

  - tmpPatternS = searchStr;
  + tmpPatternS = searchStr.substring(patternIndex , patternLength);

Assume that the string length is 258 then in the first iteration it
returned 256. In the the second it was returning the whole string instead
of the remaining two characters. Doing a tmpPatternS =
searchStr.substring(patternIndex , patternLength); corrected this problem.


</D:comment>
<D:creator-displayname>bpendleton</D:creator-displayname>
<S:date>2007-01-06T00:58:39.152595Z</S:date>
</S:log-item>
</S:log-report>
