<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>1071463</D:version-name>
<D:comment>DERBY-4984 ALTER TABLE DROP COLUMN may leave triggers invalid even if they are not using the column getting dropped.

With this change, now ALTER TABLE DROP COLUMN will be able to detect the triggers defined on the table which use the columns in it's trigger action. Prior to this, Derby only detected the triggers using the column being dropped in the trigger columns list. In 10.7 and higher, Derby could also detect the triggers using the column being dropped in the trigger action through the REFERENCING clause. With this commit, even the older releases of Derby (prior to 10.7) will be able to detect the triggers using the column being dropped in the trigger action through the REFERENCING clause.

Derby will also be able to fix the internal representation of the trigger action sql which has column references through REFERENCING clause. Such references get converted to reference to the column by their column positions. Drop of a column can change the positions of the columns in the table and hence that can invalidate triggers if they are using the incorrect column numbers in the internal trigger action representation. That problem will be taken care of by regenerating the internal representation of trigger action sql and rebinding that internally generated form of trigger action sql.


</D:comment>
<D:creator-displayname>mamta</D:creator-displayname>
<S:date>2011-02-17T00:51:56.071565Z</S:date>
</S:log-item>
</S:log-report>
