<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>1239239</D:version-name>
<D:comment>DERBY-5406 Intermittent failures in CompressTableTest and TruncateTableTest

backported #1175785 #1176256 #1187204 #1189067 #1190220 #1234776 changes from
trunk to 10.8 line.  Here is final comment from last change.


Retry compilation if it fails because a conglomerate has disappeared.
This may happen if DDL, compress, truncate or similar operations happen
while the statement is being compiled. When trying again, the compilation
should find the new conglomerate if one exists, or fail with a proper
error message if the SQL object has been removed.

This is a workaround for a race condition in the dependency management.
When binding a statement, the compiler typically builds descriptor
objects (like a TableDescriptor) from the system tables and then registers
the statement as a dependent on that descriptor. However, another thread
may at the same time be invalidating all dependents of that descriptor.
It is possible that this happens right before the current statement has
been registered as a dependent, and it will never see the invalidation
request. Once it actually tries to access the conglomerate associated with
the descriptor, it will fail with a "conglomerate does not exist" error,
and since the statement did not see the invalidation request, the compiler
doesn't know that it should retry the compilation.

This fix also backs out the changes made in revision 1187204, as they
addressed a subset of the cases handled by this broader fix, and are not
needed any more. 

</D:comment>
<D:creator-displayname>mikem</D:creator-displayname>
<S:date>2012-02-01T18:01:33.400570Z</S:date>
</S:log-item>
</S:log-report>
