<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>1151135</D:version-name>
<D:comment>DERBY-5325 Checkpoint fails with ClosedChannelException in InterruptResilienceTest

Back-ported patch derby-5325a as:

svn merge -c 1148354 https://svn.apache.org/repos/asf/db/derby/code/trunk

Patch derby-5325a:

With NIO, writeRAFHeader has two methods leading to interruptible IO:
 - getEmbryonicPage
 - writeHeader
 
Currently, getEmbryonicPage may throw InterruptDetectedException and
hence, so may writeRAFHeader.

writeHeader may throw ClosedByInterruptException,
AsynchronousCloseException and ClosedChannelException because
writeHeader does not use RAFContainer4#writePage, but rather uses
RAFContainer4#writeAtOffset, which does not currently attempt to
recover after interrupt.

So currently, clients of writeRAFHeader need to be prepared for all of
InterruptDetectedException, ClosedByInterruptException,
AsynchronousCloseException and ClosedChannelException.

writeRAFHeader is used in three locations:

 - RAFContainer#clean
 - RAFContainer#run(CREATE_CONTAINER_ACTION)
 - RAFContainer#run(STUBBIFY_ACTION)

RAFContainer#clean is prepared for InterruptDetectedException
only. The issue shows that ClosedChannelException may also occur, and
it is not prepared for that (this bug).

RAFContainer#run(CREATE_CONTAINER_ACTION) is prepared for
ClosedByInterruptException and AsynchronousCloseException. Since IO
during container creation is single-threaded, this is sufficient: it
should never need to handle
ClosedChannelException/InterruptDetectedException, both of which
signal that another thread saw interrupt on the container channel.

RAFContainer#run(STUBBIFY_ACTION) is part of the removeContainer
operation which should happen after the container is closed, so it
should be single-threaded on the container as well(?). It should
handle ClosedByInterruptException and AsynchronousCloseException and
do retry, but doesn't, currently.

If we let writeAtOffset clean up just like writePage,
RAFContainer4#writeAtOffset (i.e.also writeHeader) would only only
throw InterruptDetectedException, i.e. another thread saw interrupt,
so retry. This would simplify logic in RAFContainer: we could remove
the retry logic from RAFContainer#run(CREATE_CONTAINER_ACTION). This
could also cover retry logic for RAFContainer#run(STUBBIFY_ACTION) wrt
its use of writeRAFHeader.

Next, RAFContainer#clean is already handling
InterruptDetectedException and would with this change no longer see
ClosedByInterruptException, AsynchronousCloseException or
ClosedChannelException. This should solve DERBY-5325 (this bug).

</D:comment>
<D:creator-displayname>dag</D:creator-displayname>
<S:date>2011-07-26T15:27:04.703050Z</S:date>
</S:log-item>
</S:log-report>
