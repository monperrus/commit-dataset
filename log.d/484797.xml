<?xml version="1.0" encoding="utf-8"?>
<S:log-report xmlns:S="svn:" xmlns:D="DAV:">
<S:log-item>
<D:version-name>484797</D:version-name>
<D:comment>DERBY-606 : SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE fails on (very) large tables

Patch Contributed by Mayuresh Nirhali.

Problem was when Allocated Extent associated with last allocated page is being
compressed, All the pages are found to be free, thus new_highest_page is set to
'-1'. Now, when the CompressSpaceOperation is being logged
CompressedNumber.writeInt method is called with value -1. This method is
written to throw exception if the value is less than Zero, hence the 
IOException occurs. 

This patch addresses the problem  by modifying compress 
log record to write the new Highest Page as an uncompressed number, 
if the database is created/hard-upgrade to 10.3. A new Compress Log 
Record Class is created that will read/write new_highest_page in compressed 
format as before 10.3. Old version of compress log Operation is used on 
recovery, if  the log record needs to be replayed on upgrade 
from old-version of the database and also on soft-upgrade to 10.3. 

Test cases for this bug are  added to the existing OnlineCompressTest.java
test and to the upgrade test .


</D:comment>
<D:creator-displayname>suresht</D:creator-displayname>
<S:date>2006-12-08T21:42:14.851328Z</S:date>
</S:log-item>
</S:log-report>
